  Sitecore.Context.Item  A day without Sitecore is like a day without sunshine 
 Menu 
 Skip to content 
 
 Home 
 About 
 Ottawa Sitecore Meetup 
 
 Scheduled Jobs with Sitecore Experience Extractor 
 Posted on  January 6, 2016  by  scottmulligan  --  Leave a comment 
 
 Note  : Experience Extractor requires direct access to Mongo DB and Sitecore's item database, and is currently not compatible with Sitecore xDB Cloud Service. 
 
 In my previous post I gave an  Introduction to Sitecore Experience Extractor . This post builds upon that and introduces the scheduled jobs functionality available in Experience Extractor. 
 Scheduled jobs with Experience Extractor allow you to set up recurring tasks that run a job at a specified time interval. The idea is that the data exported via the scheduled jobs will be consumed by other tools. The scheduled job helps ensure that the consumed data is fresh and up to date. Experience Extractor can export data in a couple different ways so the data can be read by external tools in the form of a CSV formatted file or directly from a database (mssql or msaccess). 
 Setting Up a Scheduled Job 
 After installing the Experience Extractor module, a new "Experience Extractor" node will be created with a "Scheduled jobs" child node in the  Marketing Control Panel . You can add scheduled jobs in this location in the content tree or a different location if needed since the root node can be modified in the  ExperienceExtractor.config  file. 
 
 The job specification to be run should be added to the "  Specification  " field on the scheduled job item. This job specification should be in JSON format and you should test it to make sure it will run correctly without errors. You can test the JSON and find an example via the following URL in your Sitecore solution:  /sitecore/admin/experienceextractor/shell.aspx . 
 The "  Update Interval  " field should be set to the recurring time interval that defines how often the job is run and the data is updated. Note that there is also a "ExperienceExtractor.Scheduling.JobUpdateAgent" setting in the  ExperienceExtractor.config  file that is set to one minute intervals by default. The update interval you enter should be a larger value than this setting. 
 The "  Type  " field gave me a lot of problems since I had no idea what to enter and it would not allow an empty field. After taking a peek at the code, it appears that you need to enter "  direct  " into the "  Type  " field. I believe this is the only option at the moment and could maybe be expanded when Experience Extractor supports Sitecore's xDB Cloud Service (At least that's my best guess). 
 So there you have it - sit back and wait for your scheduled job to be executed and keep an eye on the Sitecore log files to get more information about any errors. 
 If a scheduled job is successful, the "  Last success  " field on the scheduled job item will be populated. If an error occurs during the scheduled job it will likely appear in the log file in the following format (exact error will differ but prepended with "Experience Extractor -"): 
 
ManagedPoolThread #6 11:00:14 ERROR Experience Extractor - Invalid spec for scheduled job Test Scheduled Job. (No job loader factory is registered for '')
 
 One last note - I came across an issue where the MSSQL database defined in the post-processing step will not be automatically created for you if it does not already exist when using a scheduled job. This is strange because a MSSQL database is automatically created if necessary if you run the same job from the user interface in Sitecore or from the  /sitecore/admin/experienceextractor/shell.aspx _ page. Just run the job once from either of those locations before testing the scheduled job. 
 ‹  Introduction to Sitecore Experience Extractor 
 Posted in  Sitecore 
 Leave a Reply  Cancel reply 
 Enter your comment here... 
 Fill in your details below or click an icon to log in: 
 
   
 Email (required) (Address never made public) 
 Name (required) 
 Website 
 ****You are commenting using your WordPress.com account. ( [Log Out](javascript:HighlanderComments.doExternalLogout( 'wordpress' );) /  Change ) 
 ****You are commenting using your Google account. ( [Log Out](javascript:HighlanderComments.doExternalLogout( 'googleplus' );) /  Change ) 
 ****You are commenting using your Twitter account. ( [Log Out](javascript:HighlanderComments.doExternalLogout( 'twitter' );) /  Change ) 
 ****You are commenting using your Facebook account. ( [Log Out](javascript:HighlanderComments.doExternalLogout( 'facebook' );) /  Change ) 
 Cancel 
 Connecting to %s 
 Notify me of new comments via email. 
 Notify me of new posts via email. 
 About Me 
 My name is Scott Mulligan and I am currently working as a software developer for Sitecore out of Ottawa, Canada. 
 Sitecore Technology MVP 
 
 Twitter 
 My Tweets 
 Recent Posts 
 
 Scheduled Jobs with Sitecore Experience Extractor 
 Introduction to Sitecore Experience Extractor 
 Override the SMTP settings in the Sitecore Web.config file 
 How Can My Organization Transition to Sitecore MVC? 
 Teaching Sitecore: Ensure that items have at least one version 
 
 Top Posts 
 
 Sitecore - Image Captions in Rich-text Fields 
 Get All Sitecore Users by Domain 
 A List of Custom Fields for Sitecore 
 Search by Email in the Sitecore User Manager 
 Changing the Sitecore Language Format in the URL 
 
 (C) 2021  Sitecore.Context.Item 
 ↑ 
 Blog at WordPress.com. 
 Add your thoughts here... (optional) Post to 
 Cancel 
 Privacy & Cookies: This site uses cookies. By continuing to use this website, you agree to their use. 
To find out more, including how to control cookies, see here:   Cookie Policy  
