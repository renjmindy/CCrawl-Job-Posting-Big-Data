{
  "customizationConfig" : {
    "additionalShapeConstructors" : null,
    "authPolicyActions" : {
      "actionPrefix" : null,
      "additionalOperations" : null,
      "fileNamePrefix" : null,
      "skip" : true
    },
    "calculateCRC32FromCompressedData" : false,
    "convenienceTypeOverloads" : [ ],
    "customClientConfigFactory" : null,
    "customCodeTemplates" : null,
    "customErrorCodeFieldName" : null,
    "customExceptionUnmarshallerImpl" : null,
    "customFileHeader" : null,
    "customResponseMetadataClassName" : null,
    "customServiceMetadata" : null,
    "customServiceNameForRequest" : null,
    "customSignerProvider" : null,
    "deprecatedSuppressions" : [ "EnumSetterOverload" ],
    "emitLegacyEnumSetterFor" : {
      "CACertificate" : [ "status" ],
      "CACertificateDescription" : [ "status", "autoRegistrationStatus" ],
      "Certificate" : [ "status" ],
      "CertificateDescription" : [ "status" ],
      "DynamoDBAction" : [ "hashKeyType", "rangeKeyType" ],
      "GetLoggingOptionsResponse" : [ "logLevel" ],
      "LoggingOptionsPayload" : [ "logLevel" ],
      "RegisterCertificateRequest" : [ "status" ],
      "S3Action" : [ "cannedAcl" ],
      "SnsAction" : [ "messageFormat" ],
      "UpdateCACertificateRequest" : [ "newStatus", "newAutoRegistrationStatus" ],
      "UpdateCertificateRequest" : [ "newStatus" ]
    },
    "operationModifiers" : null,
    "operationsWithResponseStreamContentLengthValidation" : null,
    "presignersFqcn" : null,
    "renameShapes" : null,
    "requestMetrics" : null,
    "requiredParamValidationEnabled" : false,
    "sdkModeledExceptionBaseClassName" : null,
    "sendEmptyAutoConstructedListAsEmptyList" : null,
    "sendExplicitlyEmptyListsForQuery" : false,
    "serviceClientHoldInputStream" : false,
    "shapeModifiers" : null,
    "shapeSubstitutions" : null,
    "simpleMethods" : null,
    "skipInterfaceAdditions" : false,
    "skipSmokeTests" : false,
    "transformDirectory" : "transform",
    "useAutoConstructList" : false,
    "useAutoConstructMap" : false
  },
  "metadata" : {
    "apiVersion" : "2015-05-28",
    "asyncClient" : "AWSIotAsyncClient",
    "asyncClientBuilderClassName" : "AWSIotAsyncClientBuilder",
    "asyncInterface" : "AWSIotAsync",
    "cborProtocol" : false,
    "checksumFormat" : null,
    "contentType" : "",
    "cucumberModuleInjectorClassName" : "AWSIotModuleInjector",
    "defaultEndpoint" : "https://iot.us-east-1.amazonaws.com",
    "defaultEndpointWithoutHttpProtocol" : "iot.us-east-1.amazonaws.com",
    "defaultRegion" : null,
    "documentation" : "<fullname>AWS IoT</fullname> <p>AWS IoT provides secure, bi-directional communication between Internet-connected things (such as sensors, actuators, embedded devices, or smart appliances) and the AWS cloud. You can discover your custom IoT-Data endpoint to communicate with, configure rules for data processing and integration with other services, organize resources associated with each thing (Thing Registry), configure logging, and create and manage policies and credentials to authenticate things.</p> <p>For more information about how AWS IoT works, see the <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/aws-iot-how-it-works.html\">Developer Guide</a>.</p>",
    "endpointPrefix" : "iot",
    "hasApiWithStreamInput" : false,
    "ionProtocol" : false,
    "jsonProtocol" : true,
    "jsonVersion" : "1.1",
    "packageName" : "com.amazonaws.services.iot",
    "packagePath" : "com/amazonaws/services/iot",
    "protocol" : "rest-json",
    "protocolDefaultExceptionUmarshallerImpl" : null,
    "protocolFactory" : "com.amazonaws.protocol.json.SdkJsonProtocolFactory",
    "requestBaseFqcn" : "com.amazonaws.AmazonWebServiceRequest",
    "requiresApiKey" : false,
    "requiresIamSigners" : false,
    "serviceAbbreviation" : null,
    "serviceFullName" : "AWS IoT",
    "serviceName" : "AWS IoT",
    "signingName" : "execute-api",
    "smokeTestsPackageName" : "com.amazonaws.services.iot.smoketests",
    "syncClient" : "AWSIotClient",
    "syncClientBuilderClassName" : "AWSIotClientBuilder",
    "syncInterface" : "AWSIot",
    "uid" : "iot-2015-05-28",
    "unmarshallerClassSuffix" : "JsonUnmarshaller",
    "unmarshallerContextClassName" : "JsonUnmarshallerContext",
    "xmlProtocol" : false
  },
  "operations" : {
    "AcceptCertificateTransfer" : {
      "asyncCallableType" : "java.util.concurrent.Callable<AcceptCertificateTransferResult>",
      "asyncFutureType" : "java.util.concurrent.Future<AcceptCertificateTransferResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<AcceptCertificateTransferRequest, AcceptCertificateTransferResult>",
      "asyncReturnType" : "AcceptCertificateTransferResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Accepts a pending certificate transfer. The default state of the certificate is INACTIVE.</p> <p>To check for pending certificate transfers, call <a>ListCertificates</a> to enumerate your certificates.</p>",
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "TransferAlreadyCompletedException",
        "documentation" : "<p>You can't revert the certificate transfer because the transfer is already complete.</p>",
        "httpStatusCode" : 410
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "AcceptCertificateTransferRequest",
        "variableName" : "acceptCertificateTransferRequest",
        "variableType" : "AcceptCertificateTransferRequest",
        "documentation" : "<p>The input for the AcceptCertificateTransfer operation.</p>",
        "simpleType" : "AcceptCertificateTransferRequest",
        "variableSetterType" : "AcceptCertificateTransferRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "acceptCertificateTransfer",
      "operationName" : "AcceptCertificateTransfer",
      "returnType" : {
        "returnType" : "AcceptCertificateTransferResult",
        "documentation" : null
      },
      "syncReturnType" : "AcceptCertificateTransferResult"
    },
    "AttachPrincipalPolicy" : {
      "asyncCallableType" : "java.util.concurrent.Callable<AttachPrincipalPolicyResult>",
      "asyncFutureType" : "java.util.concurrent.Future<AttachPrincipalPolicyResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<AttachPrincipalPolicyRequest, AttachPrincipalPolicyResult>",
      "asyncReturnType" : "AttachPrincipalPolicyResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Attaches the specified policy to the specified principal (certificate or other credential).</p>",
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>The number of attached entities exceeds the limit.</p>",
        "httpStatusCode" : 410
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "AttachPrincipalPolicyRequest",
        "variableName" : "attachPrincipalPolicyRequest",
        "variableType" : "AttachPrincipalPolicyRequest",
        "documentation" : "<p>The input for the AttachPrincipalPolicy operation.</p>",
        "simpleType" : "AttachPrincipalPolicyRequest",
        "variableSetterType" : "AttachPrincipalPolicyRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "attachPrincipalPolicy",
      "operationName" : "AttachPrincipalPolicy",
      "returnType" : {
        "returnType" : "AttachPrincipalPolicyResult",
        "documentation" : null
      },
      "syncReturnType" : "AttachPrincipalPolicyResult"
    },
    "AttachThingPrincipal" : {
      "asyncCallableType" : "java.util.concurrent.Callable<AttachThingPrincipalResult>",
      "asyncFutureType" : "java.util.concurrent.Future<AttachThingPrincipalResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<AttachThingPrincipalRequest, AttachThingPrincipalResult>",
      "asyncReturnType" : "AttachThingPrincipalResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Attaches the specified principal to the specified thing.</p>",
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "AttachThingPrincipalRequest",
        "variableName" : "attachThingPrincipalRequest",
        "variableType" : "AttachThingPrincipalRequest",
        "documentation" : "<p>The input for the AttachThingPrincipal operation.</p>",
        "simpleType" : "AttachThingPrincipalRequest",
        "variableSetterType" : "AttachThingPrincipalRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "attachThingPrincipal",
      "operationName" : "AttachThingPrincipal",
      "returnType" : {
        "returnType" : "AttachThingPrincipalResult",
        "documentation" : "<p>The output from the AttachThingPrincipal operation.</p>"
      },
      "syncReturnType" : "AttachThingPrincipalResult"
    },
    "CancelCertificateTransfer" : {
      "asyncCallableType" : "java.util.concurrent.Callable<CancelCertificateTransferResult>",
      "asyncFutureType" : "java.util.concurrent.Future<CancelCertificateTransferResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CancelCertificateTransferRequest, CancelCertificateTransferResult>",
      "asyncReturnType" : "CancelCertificateTransferResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Cancels a pending transfer for the specified certificate.</p> <p> <b>Note</b> Only the transfer source account can use this operation to cancel a transfer. (Transfer destinations can use <a>RejectCertificateTransfer</a> instead.) After transfer, AWS IoT returns the certificate to the source account in the INACTIVE state. After the destination account has accepted the transfer, the transfer cannot be cancelled.</p> <p>After a certificate transfer is cancelled, the status of the certificate changes from PENDING_TRANSFER to INACTIVE.</p>",
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "TransferAlreadyCompletedException",
        "documentation" : "<p>You can't revert the certificate transfer because the transfer is already complete.</p>",
        "httpStatusCode" : 410
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "CancelCertificateTransferRequest",
        "variableName" : "cancelCertificateTransferRequest",
        "variableType" : "CancelCertificateTransferRequest",
        "documentation" : "<p>The input for the CancelCertificateTransfer operation.</p>",
        "simpleType" : "CancelCertificateTransferRequest",
        "variableSetterType" : "CancelCertificateTransferRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "cancelCertificateTransfer",
      "operationName" : "CancelCertificateTransfer",
      "returnType" : {
        "returnType" : "CancelCertificateTransferResult",
        "documentation" : null
      },
      "syncReturnType" : "CancelCertificateTransferResult"
    },
    "CreateCertificateFromCsr" : {
      "asyncCallableType" : "java.util.concurrent.Callable<CreateCertificateFromCsrResult>",
      "asyncFutureType" : "java.util.concurrent.Future<CreateCertificateFromCsrResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CreateCertificateFromCsrRequest, CreateCertificateFromCsrResult>",
      "asyncReturnType" : "CreateCertificateFromCsrResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Creates an X.509 certificate using the specified certificate signing request.</p> <p> <b>Note:</b> The CSR must include a public key that is either an RSA key with a length of at least 2048 bits or an ECC key from NIST P-256 or NIST P-384 curves. </p> <p> <b>Note:</b> Reusing the same certificate signing request (CSR) results in a distinct certificate.</p> <p>You can create multiple certificates in a batch by creating a directory, copying multiple .csr files into that directory, and then specifying that directory on the command line. The following commands show how to create a batch of certificates given a batch of CSRs.</p> <p>Assuming a set of CSRs are located inside of the directory my-csr-directory:</p> <p>On Linux and OS X, the command is:</p> <p>$ ls my-csr-directory/ | xargs -I {} aws iot create-certificate-from-csr --certificate-signing-request file://my-csr-directory/{}</p> <p>This command lists all of the CSRs in my-csr-directory and pipes each CSR file name to the aws iot create-certificate-from-csr AWS CLI command to create a certificate for the corresponding CSR.</p> <p>The aws iot create-certificate-from-csr part of the command can also be run in parallel to speed up the certificate creation process:</p> <p>$ ls my-csr-directory/ | xargs -P 10 -I {} aws iot create-certificate-from-csr --certificate-signing-request file://my-csr-directory/{}</p> <p>On Windows PowerShell, the command to create certificates for all CSRs in my-csr-directory is:</p> <p>&gt; ls -Name my-csr-directory | %{aws iot create-certificate-from-csr --certificate-signing-request file://my-csr-directory/$_}</p> <p>On a Windows command prompt, the command to create certificates for all CSRs in my-csr-directory is:</p> <p>&gt; forfiles /p my-csr-directory /c \"cmd /c aws iot create-certificate-from-csr --certificate-signing-request file://@path\"</p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "CreateCertificateFromCsrRequest",
        "variableName" : "createCertificateFromCsrRequest",
        "variableType" : "CreateCertificateFromCsrRequest",
        "documentation" : "<p>The input for the CreateCertificateFromCsr operation.</p>",
        "simpleType" : "CreateCertificateFromCsrRequest",
        "variableSetterType" : "CreateCertificateFromCsrRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "createCertificateFromCsr",
      "operationName" : "CreateCertificateFromCsr",
      "returnType" : {
        "returnType" : "CreateCertificateFromCsrResult",
        "documentation" : "<p>The output from the CreateCertificateFromCsr operation.</p>"
      },
      "syncReturnType" : "CreateCertificateFromCsrResult"
    },
    "CreateKeysAndCertificate" : {
      "asyncCallableType" : "java.util.concurrent.Callable<CreateKeysAndCertificateResult>",
      "asyncFutureType" : "java.util.concurrent.Future<CreateKeysAndCertificateResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CreateKeysAndCertificateRequest, CreateKeysAndCertificateResult>",
      "asyncReturnType" : "CreateKeysAndCertificateResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Creates a 2048-bit RSA key pair and issues an X.509 certificate using the issued public key.</p> <p> <b>Note</b> This is the only time AWS IoT issues the private key for this certificate, so it is important to keep it in a secure location.</p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "CreateKeysAndCertificateRequest",
        "variableName" : "createKeysAndCertificateRequest",
        "variableType" : "CreateKeysAndCertificateRequest",
        "documentation" : "<p>The input for the CreateKeysAndCertificate operation.</p>",
        "simpleType" : "CreateKeysAndCertificateRequest",
        "variableSetterType" : "CreateKeysAndCertificateRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "createKeysAndCertificate",
      "operationName" : "CreateKeysAndCertificate",
      "returnType" : {
        "returnType" : "CreateKeysAndCertificateResult",
        "documentation" : "<p>The output of the CreateKeysAndCertificate operation.</p>"
      },
      "syncReturnType" : "CreateKeysAndCertificateResult"
    },
    "CreatePolicy" : {
      "asyncCallableType" : "java.util.concurrent.Callable<CreatePolicyResult>",
      "asyncFutureType" : "java.util.concurrent.Future<CreatePolicyResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CreatePolicyRequest, CreatePolicyResult>",
      "asyncReturnType" : "CreatePolicyResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Creates an AWS IoT policy.</p> <p>The created policy is the default version for the policy. This operation creates a policy version with a version identifier of <b>1</b> and sets <b>1</b> as the policy's default version.</p>",
      "exceptions" : [ {
        "exceptionName" : "ResourceAlreadyExistsException",
        "documentation" : "<p>The resource already exists.</p>",
        "httpStatusCode" : 409
      }, {
        "exceptionName" : "MalformedPolicyException",
        "documentation" : "<p>The policy documentation is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "CreatePolicyRequest",
        "variableName" : "createPolicyRequest",
        "variableType" : "CreatePolicyRequest",
        "documentation" : "<p>The input for the CreatePolicy operation.</p>",
        "simpleType" : "CreatePolicyRequest",
        "variableSetterType" : "CreatePolicyRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "createPolicy",
      "operationName" : "CreatePolicy",
      "returnType" : {
        "returnType" : "CreatePolicyResult",
        "documentation" : "<p>The output from the CreatePolicy operation.</p>"
      },
      "syncReturnType" : "CreatePolicyResult"
    },
    "CreatePolicyVersion" : {
      "asyncCallableType" : "java.util.concurrent.Callable<CreatePolicyVersionResult>",
      "asyncFutureType" : "java.util.concurrent.Future<CreatePolicyVersionResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CreatePolicyVersionRequest, CreatePolicyVersionResult>",
      "asyncReturnType" : "CreatePolicyVersionResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Creates a new version of the specified AWS IoT policy. To update a policy, create a new policy version. A managed policy can have up to five versions. If the policy has five versions, you must use <a>DeletePolicyVersion</a> to delete an existing version before you create a new one.</p> <p>Optionally, you can set the new version as the policy's default version. The default version is the operative version (that is, the version that is in effect for the certificates to which the policy is attached).</p>",
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "MalformedPolicyException",
        "documentation" : "<p>The policy documentation is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "VersionsLimitExceededException",
        "documentation" : "<p>The number of policy versions exceeds the limit.</p>",
        "httpStatusCode" : 409
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "CreatePolicyVersionRequest",
        "variableName" : "createPolicyVersionRequest",
        "variableType" : "CreatePolicyVersionRequest",
        "documentation" : "<p>The input for the CreatePolicyVersion operation.</p>",
        "simpleType" : "CreatePolicyVersionRequest",
        "variableSetterType" : "CreatePolicyVersionRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "createPolicyVersion",
      "operationName" : "CreatePolicyVersion",
      "returnType" : {
        "returnType" : "CreatePolicyVersionResult",
        "documentation" : "<p>The output of the CreatePolicyVersion operation.</p>"
      },
      "syncReturnType" : "CreatePolicyVersionResult"
    },
    "CreateThing" : {
      "asyncCallableType" : "java.util.concurrent.Callable<CreateThingResult>",
      "asyncFutureType" : "java.util.concurrent.Future<CreateThingResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CreateThingRequest, CreateThingResult>",
      "asyncReturnType" : "CreateThingResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Creates a thing record in the thing registry.</p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      }, {
        "exceptionName" : "ResourceAlreadyExistsException",
        "documentation" : "<p>The resource already exists.</p>",
        "httpStatusCode" : 409
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>",
        "httpStatusCode" : 404
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "CreateThingRequest",
        "variableName" : "createThingRequest",
        "variableType" : "CreateThingRequest",
        "documentation" : "<p>The input for the CreateThing operation.</p>",
        "simpleType" : "CreateThingRequest",
        "variableSetterType" : "CreateThingRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "createThing",
      "operationName" : "CreateThing",
      "returnType" : {
        "returnType" : "CreateThingResult",
        "documentation" : "<p>The output of the CreateThing operation.</p>"
      },
      "syncReturnType" : "CreateThingResult"
    },
    "CreateThingType" : {
      "asyncCallableType" : "java.util.concurrent.Callable<CreateThingTypeResult>",
      "asyncFutureType" : "java.util.concurrent.Future<CreateThingTypeResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CreateThingTypeRequest, CreateThingTypeResult>",
      "asyncReturnType" : "CreateThingTypeResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Creates a new thing type.</p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      }, {
        "exceptionName" : "ResourceAlreadyExistsException",
        "documentation" : "<p>The resource already exists.</p>",
        "httpStatusCode" : 409
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "CreateThingTypeRequest",
        "variableName" : "createThingTypeRequest",
        "variableType" : "CreateThingTypeRequest",
        "documentation" : "<p>The input for the CreateThingType operation.</p>",
        "simpleType" : "CreateThingTypeRequest",
        "variableSetterType" : "CreateThingTypeRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "createThingType",
      "operationName" : "CreateThingType",
      "returnType" : {
        "returnType" : "CreateThingTypeResult",
        "documentation" : "<p>The output of the CreateThingType operation.</p>"
      },
      "syncReturnType" : "CreateThingTypeResult"
    },
    "CreateTopicRule" : {
      "asyncCallableType" : "java.util.concurrent.Callable<CreateTopicRuleResult>",
      "asyncFutureType" : "java.util.concurrent.Future<CreateTopicRuleResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CreateTopicRuleRequest, CreateTopicRuleResult>",
      "asyncReturnType" : "CreateTopicRuleResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Creates a rule. Creating rules is an administrator-level action. Any user who has permission to create rules will be able to access data processed by the rule.</p>",
      "exceptions" : [ {
        "exceptionName" : "SqlParseException",
        "documentation" : "<p>The Rule-SQL expression can't be parsed correctly.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "InternalException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ResourceAlreadyExistsException",
        "documentation" : "<p>The resource already exists.</p>",
        "httpStatusCode" : 409
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "CreateTopicRuleRequest",
        "variableName" : "createTopicRuleRequest",
        "variableType" : "CreateTopicRuleRequest",
        "documentation" : "<p>The input for the CreateTopicRule operation.</p>",
        "simpleType" : "CreateTopicRuleRequest",
        "variableSetterType" : "CreateTopicRuleRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "createTopicRule",
      "operationName" : "CreateTopicRule",
      "returnType" : {
        "returnType" : "CreateTopicRuleResult",
        "documentation" : null
      },
      "syncReturnType" : "CreateTopicRuleResult"
    },
    "DeleteCACertificate" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteCACertificateResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteCACertificateResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteCACertificateRequest, DeleteCACertificateResult>",
      "asyncReturnType" : "DeleteCACertificateResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Deletes a registered CA certificate.</p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "CertificateStateException",
        "documentation" : "<p>The certificate operation is not allowed.</p>",
        "httpStatusCode" : 406
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>",
        "httpStatusCode" : 404
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "DeleteCACertificateRequest",
        "variableName" : "deleteCACertificateRequest",
        "variableType" : "DeleteCACertificateRequest",
        "documentation" : "<p>Input for the DeleteCACertificate operation.</p>",
        "simpleType" : "DeleteCACertificateRequest",
        "variableSetterType" : "DeleteCACertificateRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "deleteCACertificate",
      "operationName" : "DeleteCACertificate",
      "returnType" : {
        "returnType" : "DeleteCACertificateResult",
        "documentation" : "<p>The output for the DeleteCACertificate operation.</p>"
      },
      "syncReturnType" : "DeleteCACertificateResult"
    },
    "DeleteCertificate" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteCertificateResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteCertificateResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteCertificateRequest, DeleteCertificateResult>",
      "asyncReturnType" : "DeleteCertificateResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Deletes the specified certificate.</p> <p>A certificate cannot be deleted if it has a policy attached to it or if its status is set to ACTIVE. To delete a certificate, first use the <a>DetachPrincipalPolicy</a> API to detach all policies. Next, use the <a>UpdateCertificate</a> API to set the certificate to the INACTIVE status.</p>",
      "exceptions" : [ {
        "exceptionName" : "CertificateStateException",
        "documentation" : "<p>The certificate operation is not allowed.</p>",
        "httpStatusCode" : 406
      }, {
        "exceptionName" : "DeleteConflictException",
        "documentation" : "<p>You can't delete the resource because it is attached to one or more resources.</p>",
        "httpStatusCode" : 409
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>",
        "httpStatusCode" : 404
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "DeleteCertificateRequest",
        "variableName" : "deleteCertificateRequest",
        "variableType" : "DeleteCertificateRequest",
        "documentation" : "<p>The input for the DeleteCertificate operation.</p>",
        "simpleType" : "DeleteCertificateRequest",
        "variableSetterType" : "DeleteCertificateRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "deleteCertificate",
      "operationName" : "DeleteCertificate",
      "returnType" : {
        "returnType" : "DeleteCertificateResult",
        "documentation" : null
      },
      "syncReturnType" : "DeleteCertificateResult"
    },
    "DeletePolicy" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DeletePolicyResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DeletePolicyResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeletePolicyRequest, DeletePolicyResult>",
      "asyncReturnType" : "DeletePolicyResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Deletes the specified policy.</p> <p>A policy cannot be deleted if it has non-default versions or it is attached to any certificate.</p> <p>To delete a policy, use the DeletePolicyVersion API to delete all non-default versions of the policy; use the DetachPrincipalPolicy API to detach the policy from any certificate; and then use the DeletePolicy API to delete the policy.</p> <p>When a policy is deleted using DeletePolicy, its default version is deleted with it.</p>",
      "exceptions" : [ {
        "exceptionName" : "DeleteConflictException",
        "documentation" : "<p>You can't delete the resource because it is attached to one or more resources.</p>",
        "httpStatusCode" : 409
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "DeletePolicyRequest",
        "variableName" : "deletePolicyRequest",
        "variableType" : "DeletePolicyRequest",
        "documentation" : "<p>The input for the DeletePolicy operation.</p>",
        "simpleType" : "DeletePolicyRequest",
        "variableSetterType" : "DeletePolicyRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "deletePolicy",
      "operationName" : "DeletePolicy",
      "returnType" : {
        "returnType" : "DeletePolicyResult",
        "documentation" : null
      },
      "syncReturnType" : "DeletePolicyResult"
    },
    "DeletePolicyVersion" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DeletePolicyVersionResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DeletePolicyVersionResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeletePolicyVersionRequest, DeletePolicyVersionResult>",
      "asyncReturnType" : "DeletePolicyVersionResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Deletes the specified version of the specified policy. You cannot delete the default version of a policy using this API. To delete the default version of a policy, use <a>DeletePolicy</a>. To find out which version of a policy is marked as the default version, use ListPolicyVersions.</p>",
      "exceptions" : [ {
        "exceptionName" : "DeleteConflictException",
        "documentation" : "<p>You can't delete the resource because it is attached to one or more resources.</p>",
        "httpStatusCode" : 409
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "DeletePolicyVersionRequest",
        "variableName" : "deletePolicyVersionRequest",
        "variableType" : "DeletePolicyVersionRequest",
        "documentation" : "<p>The input for the DeletePolicyVersion operation.</p>",
        "simpleType" : "DeletePolicyVersionRequest",
        "variableSetterType" : "DeletePolicyVersionRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "deletePolicyVersion",
      "operationName" : "DeletePolicyVersion",
      "returnType" : {
        "returnType" : "DeletePolicyVersionResult",
        "documentation" : null
      },
      "syncReturnType" : "DeletePolicyVersionResult"
    },
    "DeleteRegistrationCode" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteRegistrationCodeResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteRegistrationCodeResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteRegistrationCodeRequest, DeleteRegistrationCodeResult>",
      "asyncReturnType" : "DeleteRegistrationCodeResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Deletes a CA certificate registration code.</p>",
      "exceptions" : [ {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "DeleteRegistrationCodeRequest",
        "variableName" : "deleteRegistrationCodeRequest",
        "variableType" : "DeleteRegistrationCodeRequest",
        "documentation" : "<p>The input for the DeleteRegistrationCode operation.</p>",
        "simpleType" : "DeleteRegistrationCodeRequest",
        "variableSetterType" : "DeleteRegistrationCodeRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "deleteRegistrationCode",
      "operationName" : "DeleteRegistrationCode",
      "returnType" : {
        "returnType" : "DeleteRegistrationCodeResult",
        "documentation" : "<p>The output for the DeleteRegistrationCode operation.</p>"
      },
      "syncReturnType" : "DeleteRegistrationCodeResult"
    },
    "DeleteThing" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteThingResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteThingResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteThingRequest, DeleteThingResult>",
      "asyncReturnType" : "DeleteThingResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Deletes the specified thing.</p>",
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "VersionConflictException",
        "documentation" : "<p>An exception thrown when the version of a thing passed to a command is different than the version specified with the --version parameter.</p>",
        "httpStatusCode" : 409
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "DeleteThingRequest",
        "variableName" : "deleteThingRequest",
        "variableType" : "DeleteThingRequest",
        "documentation" : "<p>The input for the DeleteThing operation.</p>",
        "simpleType" : "DeleteThingRequest",
        "variableSetterType" : "DeleteThingRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "deleteThing",
      "operationName" : "DeleteThing",
      "returnType" : {
        "returnType" : "DeleteThingResult",
        "documentation" : "<p>The output of the DeleteThing operation.</p>"
      },
      "syncReturnType" : "DeleteThingResult"
    },
    "DeleteThingType" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteThingTypeResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteThingTypeResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteThingTypeRequest, DeleteThingTypeResult>",
      "asyncReturnType" : "DeleteThingTypeResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Deletes the specified thing type . You cannot delete a thing type if it has things associated with it. To delete a thing type, first mark it as deprecated by calling <a>DeprecateThingType</a>, then remove any associated things by calling <a>UpdateThing</a> to change the thing type on any associated thing, and finally use <a>DeleteThingType</a> to delete the thing type.</p>",
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "DeleteThingTypeRequest",
        "variableName" : "deleteThingTypeRequest",
        "variableType" : "DeleteThingTypeRequest",
        "documentation" : "<p>The input for the DeleteThingType operation.</p>",
        "simpleType" : "DeleteThingTypeRequest",
        "variableSetterType" : "DeleteThingTypeRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "deleteThingType",
      "operationName" : "DeleteThingType",
      "returnType" : {
        "returnType" : "DeleteThingTypeResult",
        "documentation" : "<p>The output for the DeleteThingType operation.</p>"
      },
      "syncReturnType" : "DeleteThingTypeResult"
    },
    "DeleteTopicRule" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteTopicRuleResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteTopicRuleResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteTopicRuleRequest, DeleteTopicRuleResult>",
      "asyncReturnType" : "DeleteTopicRuleResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Deletes the specified rule.</p>",
      "exceptions" : [ {
        "exceptionName" : "InternalException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "DeleteTopicRuleRequest",
        "variableName" : "deleteTopicRuleRequest",
        "variableType" : "DeleteTopicRuleRequest",
        "documentation" : "<p>The input for the DeleteTopicRule operation.</p>",
        "simpleType" : "DeleteTopicRuleRequest",
        "variableSetterType" : "DeleteTopicRuleRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "deleteTopicRule",
      "operationName" : "DeleteTopicRule",
      "returnType" : {
        "returnType" : "DeleteTopicRuleResult",
        "documentation" : null
      },
      "syncReturnType" : "DeleteTopicRuleResult"
    },
    "DeprecateThingType" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DeprecateThingTypeResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DeprecateThingTypeResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeprecateThingTypeRequest, DeprecateThingTypeResult>",
      "asyncReturnType" : "DeprecateThingTypeResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Deprecates a thing type. You can not associate new things with deprecated thing type.</p>",
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "DeprecateThingTypeRequest",
        "variableName" : "deprecateThingTypeRequest",
        "variableType" : "DeprecateThingTypeRequest",
        "documentation" : "<p>The input for the DeprecateThingType operation.</p>",
        "simpleType" : "DeprecateThingTypeRequest",
        "variableSetterType" : "DeprecateThingTypeRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "deprecateThingType",
      "operationName" : "DeprecateThingType",
      "returnType" : {
        "returnType" : "DeprecateThingTypeResult",
        "documentation" : "<p>The output for the DeprecateThingType operation.</p>"
      },
      "syncReturnType" : "DeprecateThingTypeResult"
    },
    "DescribeCACertificate" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DescribeCACertificateResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DescribeCACertificateResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DescribeCACertificateRequest, DescribeCACertificateResult>",
      "asyncReturnType" : "DescribeCACertificateResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Describes a registered CA certificate.</p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>",
        "httpStatusCode" : 404
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "DescribeCACertificateRequest",
        "variableName" : "describeCACertificateRequest",
        "variableType" : "DescribeCACertificateRequest",
        "documentation" : "<p>The input for the DescribeCACertificate operation.</p>",
        "simpleType" : "DescribeCACertificateRequest",
        "variableSetterType" : "DescribeCACertificateRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "describeCACertificate",
      "operationName" : "DescribeCACertificate",
      "returnType" : {
        "returnType" : "DescribeCACertificateResult",
        "documentation" : "<p>The output from the DescribeCACertificate operation.</p>"
      },
      "syncReturnType" : "DescribeCACertificateResult"
    },
    "DescribeCertificate" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DescribeCertificateResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DescribeCertificateResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DescribeCertificateRequest, DescribeCertificateResult>",
      "asyncReturnType" : "DescribeCertificateResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Gets information about the specified certificate.</p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>",
        "httpStatusCode" : 404
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "DescribeCertificateRequest",
        "variableName" : "describeCertificateRequest",
        "variableType" : "DescribeCertificateRequest",
        "documentation" : "<p>The input for the DescribeCertificate operation.</p>",
        "simpleType" : "DescribeCertificateRequest",
        "variableSetterType" : "DescribeCertificateRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "describeCertificate",
      "operationName" : "DescribeCertificate",
      "returnType" : {
        "returnType" : "DescribeCertificateResult",
        "documentation" : "<p>The output of the DescribeCertificate operation.</p>"
      },
      "syncReturnType" : "DescribeCertificateResult"
    },
    "DescribeEndpoint" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DescribeEndpointResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DescribeEndpointResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DescribeEndpointRequest, DescribeEndpointResult>",
      "asyncReturnType" : "DescribeEndpointResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Returns a unique endpoint specific to the AWS account making the call.</p>",
      "exceptions" : [ {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "DescribeEndpointRequest",
        "variableName" : "describeEndpointRequest",
        "variableType" : "DescribeEndpointRequest",
        "documentation" : "<p>The input for the DescribeEndpoint operation.</p>",
        "simpleType" : "DescribeEndpointRequest",
        "variableSetterType" : "DescribeEndpointRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "describeEndpoint",
      "operationName" : "DescribeEndpoint",
      "returnType" : {
        "returnType" : "DescribeEndpointResult",
        "documentation" : "<p>The output from the DescribeEndpoint operation.</p>"
      },
      "syncReturnType" : "DescribeEndpointResult"
    },
    "DescribeThing" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DescribeThingResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DescribeThingResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DescribeThingRequest, DescribeThingResult>",
      "asyncReturnType" : "DescribeThingResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Gets information about the specified thing.</p>",
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "DescribeThingRequest",
        "variableName" : "describeThingRequest",
        "variableType" : "DescribeThingRequest",
        "documentation" : "<p>The input for the DescribeThing operation.</p>",
        "simpleType" : "DescribeThingRequest",
        "variableSetterType" : "DescribeThingRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "describeThing",
      "operationName" : "DescribeThing",
      "returnType" : {
        "returnType" : "DescribeThingResult",
        "documentation" : "<p>The output from the DescribeThing operation.</p>"
      },
      "syncReturnType" : "DescribeThingResult"
    },
    "DescribeThingType" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DescribeThingTypeResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DescribeThingTypeResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DescribeThingTypeRequest, DescribeThingTypeResult>",
      "asyncReturnType" : "DescribeThingTypeResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Gets information about the specified thing type.</p>",
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "DescribeThingTypeRequest",
        "variableName" : "describeThingTypeRequest",
        "variableType" : "DescribeThingTypeRequest",
        "documentation" : "<p>The input for the DescribeThingType operation.</p>",
        "simpleType" : "DescribeThingTypeRequest",
        "variableSetterType" : "DescribeThingTypeRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "describeThingType",
      "operationName" : "DescribeThingType",
      "returnType" : {
        "returnType" : "DescribeThingTypeResult",
        "documentation" : "<p>The output for the DescribeThingType operation.</p>"
      },
      "syncReturnType" : "DescribeThingTypeResult"
    },
    "DetachPrincipalPolicy" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DetachPrincipalPolicyResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DetachPrincipalPolicyResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DetachPrincipalPolicyRequest, DetachPrincipalPolicyResult>",
      "asyncReturnType" : "DetachPrincipalPolicyResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Removes the specified policy from the specified certificate.</p>",
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "DetachPrincipalPolicyRequest",
        "variableName" : "detachPrincipalPolicyRequest",
        "variableType" : "DetachPrincipalPolicyRequest",
        "documentation" : "<p>The input for the DetachPrincipalPolicy operation.</p>",
        "simpleType" : "DetachPrincipalPolicyRequest",
        "variableSetterType" : "DetachPrincipalPolicyRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "detachPrincipalPolicy",
      "operationName" : "DetachPrincipalPolicy",
      "returnType" : {
        "returnType" : "DetachPrincipalPolicyResult",
        "documentation" : null
      },
      "syncReturnType" : "DetachPrincipalPolicyResult"
    },
    "DetachThingPrincipal" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DetachThingPrincipalResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DetachThingPrincipalResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DetachThingPrincipalRequest, DetachThingPrincipalResult>",
      "asyncReturnType" : "DetachThingPrincipalResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Detaches the specified principal from the specified thing.</p>",
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "DetachThingPrincipalRequest",
        "variableName" : "detachThingPrincipalRequest",
        "variableType" : "DetachThingPrincipalRequest",
        "documentation" : "<p>The input for the DetachThingPrincipal operation.</p>",
        "simpleType" : "DetachThingPrincipalRequest",
        "variableSetterType" : "DetachThingPrincipalRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "detachThingPrincipal",
      "operationName" : "DetachThingPrincipal",
      "returnType" : {
        "returnType" : "DetachThingPrincipalResult",
        "documentation" : "<p>The output from the DetachThingPrincipal operation.</p>"
      },
      "syncReturnType" : "DetachThingPrincipalResult"
    },
    "DisableTopicRule" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DisableTopicRuleResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DisableTopicRuleResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DisableTopicRuleRequest, DisableTopicRuleResult>",
      "asyncReturnType" : "DisableTopicRuleResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Disables the specified rule.</p>",
      "exceptions" : [ {
        "exceptionName" : "InternalException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "DisableTopicRuleRequest",
        "variableName" : "disableTopicRuleRequest",
        "variableType" : "DisableTopicRuleRequest",
        "documentation" : "<p>The input for the DisableTopicRuleRequest operation.</p>",
        "simpleType" : "DisableTopicRuleRequest",
        "variableSetterType" : "DisableTopicRuleRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "disableTopicRule",
      "operationName" : "DisableTopicRule",
      "returnType" : {
        "returnType" : "DisableTopicRuleResult",
        "documentation" : null
      },
      "syncReturnType" : "DisableTopicRuleResult"
    },
    "EnableTopicRule" : {
      "asyncCallableType" : "java.util.concurrent.Callable<EnableTopicRuleResult>",
      "asyncFutureType" : "java.util.concurrent.Future<EnableTopicRuleResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<EnableTopicRuleRequest, EnableTopicRuleResult>",
      "asyncReturnType" : "EnableTopicRuleResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Enables the specified rule.</p>",
      "exceptions" : [ {
        "exceptionName" : "InternalException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "EnableTopicRuleRequest",
        "variableName" : "enableTopicRuleRequest",
        "variableType" : "EnableTopicRuleRequest",
        "documentation" : "<p>The input for the EnableTopicRuleRequest operation.</p>",
        "simpleType" : "EnableTopicRuleRequest",
        "variableSetterType" : "EnableTopicRuleRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "enableTopicRule",
      "operationName" : "EnableTopicRule",
      "returnType" : {
        "returnType" : "EnableTopicRuleResult",
        "documentation" : null
      },
      "syncReturnType" : "EnableTopicRuleResult"
    },
    "GetLoggingOptions" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetLoggingOptionsResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetLoggingOptionsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetLoggingOptionsRequest, GetLoggingOptionsResult>",
      "asyncReturnType" : "GetLoggingOptionsResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Gets the logging options.</p>",
      "exceptions" : [ {
        "exceptionName" : "InternalException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "GetLoggingOptionsRequest",
        "variableName" : "getLoggingOptionsRequest",
        "variableType" : "GetLoggingOptionsRequest",
        "documentation" : "<p>The input for the GetLoggingOptions operation.</p>",
        "simpleType" : "GetLoggingOptionsRequest",
        "variableSetterType" : "GetLoggingOptionsRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getLoggingOptions",
      "operationName" : "GetLoggingOptions",
      "returnType" : {
        "returnType" : "GetLoggingOptionsResult",
        "documentation" : "<p>The output from the GetLoggingOptions operation.</p>"
      },
      "syncReturnType" : "GetLoggingOptionsResult"
    },
    "GetPolicy" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetPolicyResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetPolicyResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetPolicyRequest, GetPolicyResult>",
      "asyncReturnType" : "GetPolicyResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Gets information about the specified policy with the policy document of the default version.</p>",
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "GetPolicyRequest",
        "variableName" : "getPolicyRequest",
        "variableType" : "GetPolicyRequest",
        "documentation" : "<p>The input for the GetPolicy operation.</p>",
        "simpleType" : "GetPolicyRequest",
        "variableSetterType" : "GetPolicyRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getPolicy",
      "operationName" : "GetPolicy",
      "returnType" : {
        "returnType" : "GetPolicyResult",
        "documentation" : "<p>The output from the GetPolicy operation.</p>"
      },
      "syncReturnType" : "GetPolicyResult"
    },
    "GetPolicyVersion" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetPolicyVersionResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetPolicyVersionResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetPolicyVersionRequest, GetPolicyVersionResult>",
      "asyncReturnType" : "GetPolicyVersionResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Gets information about the specified policy version.</p>",
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "GetPolicyVersionRequest",
        "variableName" : "getPolicyVersionRequest",
        "variableType" : "GetPolicyVersionRequest",
        "documentation" : "<p>The input for the GetPolicyVersion operation.</p>",
        "simpleType" : "GetPolicyVersionRequest",
        "variableSetterType" : "GetPolicyVersionRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getPolicyVersion",
      "operationName" : "GetPolicyVersion",
      "returnType" : {
        "returnType" : "GetPolicyVersionResult",
        "documentation" : "<p>The output from the GetPolicyVersion operation.</p>"
      },
      "syncReturnType" : "GetPolicyVersionResult"
    },
    "GetRegistrationCode" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetRegistrationCodeResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetRegistrationCodeResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetRegistrationCodeRequest, GetRegistrationCodeResult>",
      "asyncReturnType" : "GetRegistrationCodeResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Gets a registration code used to register a CA certificate with AWS IoT.</p>",
      "exceptions" : [ {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "GetRegistrationCodeRequest",
        "variableName" : "getRegistrationCodeRequest",
        "variableType" : "GetRegistrationCodeRequest",
        "documentation" : "<p>The input to the GetRegistrationCode operation.</p>",
        "simpleType" : "GetRegistrationCodeRequest",
        "variableSetterType" : "GetRegistrationCodeRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getRegistrationCode",
      "operationName" : "GetRegistrationCode",
      "returnType" : {
        "returnType" : "GetRegistrationCodeResult",
        "documentation" : "<p>The output from the GetRegistrationCode operation.</p>"
      },
      "syncReturnType" : "GetRegistrationCodeResult"
    },
    "GetTopicRule" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetTopicRuleResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetTopicRuleResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetTopicRuleRequest, GetTopicRuleResult>",
      "asyncReturnType" : "GetTopicRuleResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Gets information about the specified rule.</p>",
      "exceptions" : [ {
        "exceptionName" : "InternalException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "GetTopicRuleRequest",
        "variableName" : "getTopicRuleRequest",
        "variableType" : "GetTopicRuleRequest",
        "documentation" : "<p>The input for the GetTopicRule operation.</p>",
        "simpleType" : "GetTopicRuleRequest",
        "variableSetterType" : "GetTopicRuleRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getTopicRule",
      "operationName" : "GetTopicRule",
      "returnType" : {
        "returnType" : "GetTopicRuleResult",
        "documentation" : "<p>The output from the GetTopicRule operation.</p>"
      },
      "syncReturnType" : "GetTopicRuleResult"
    },
    "ListCACertificates" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListCACertificatesResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListCACertificatesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListCACertificatesRequest, ListCACertificatesResult>",
      "asyncReturnType" : "ListCACertificatesResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Lists the CA certificates registered for your AWS account.</p> <p>The results are paginated with a default page size of 25. You can use the returned marker to retrieve additional results.</p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "ListCACertificatesRequest",
        "variableName" : "listCACertificatesRequest",
        "variableType" : "ListCACertificatesRequest",
        "documentation" : "<p>Input for the ListCACertificates operation.</p>",
        "simpleType" : "ListCACertificatesRequest",
        "variableSetterType" : "ListCACertificatesRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listCACertificates",
      "operationName" : "ListCACertificates",
      "returnType" : {
        "returnType" : "ListCACertificatesResult",
        "documentation" : "<p>The output from the ListCACertificates operation.</p>"
      },
      "syncReturnType" : "ListCACertificatesResult"
    },
    "ListCertificates" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListCertificatesResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListCertificatesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListCertificatesRequest, ListCertificatesResult>",
      "asyncReturnType" : "ListCertificatesResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Lists the certificates registered in your AWS account.</p> <p>The results are paginated with a default page size of 25. You can use the returned marker to retrieve additional results.</p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "ListCertificatesRequest",
        "variableName" : "listCertificatesRequest",
        "variableType" : "ListCertificatesRequest",
        "documentation" : "<p>The input for the ListCertificates operation.</p>",
        "simpleType" : "ListCertificatesRequest",
        "variableSetterType" : "ListCertificatesRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listCertificates",
      "operationName" : "ListCertificates",
      "returnType" : {
        "returnType" : "ListCertificatesResult",
        "documentation" : "<p>The output of the ListCertificates operation.</p>"
      },
      "syncReturnType" : "ListCertificatesResult"
    },
    "ListCertificatesByCA" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListCertificatesByCAResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListCertificatesByCAResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListCertificatesByCARequest, ListCertificatesByCAResult>",
      "asyncReturnType" : "ListCertificatesByCAResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>List the device certificates signed by the specified CA certificate.</p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "ListCertificatesByCARequest",
        "variableName" : "listCertificatesByCARequest",
        "variableType" : "ListCertificatesByCARequest",
        "documentation" : "<p>The input to the ListCertificatesByCA operation.</p>",
        "simpleType" : "ListCertificatesByCARequest",
        "variableSetterType" : "ListCertificatesByCARequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listCertificatesByCA",
      "operationName" : "ListCertificatesByCA",
      "returnType" : {
        "returnType" : "ListCertificatesByCAResult",
        "documentation" : "<p>The output of the ListCertificatesByCA operation.</p>"
      },
      "syncReturnType" : "ListCertificatesByCAResult"
    },
    "ListOutgoingCertificates" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListOutgoingCertificatesResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListOutgoingCertificatesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListOutgoingCertificatesRequest, ListOutgoingCertificatesResult>",
      "asyncReturnType" : "ListOutgoingCertificatesResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Lists certificates that are being transfered but not yet accepted.</p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "ListOutgoingCertificatesRequest",
        "variableName" : "listOutgoingCertificatesRequest",
        "variableType" : "ListOutgoingCertificatesRequest",
        "documentation" : "<p>The input to the ListOutgoingCertificates operation.</p>",
        "simpleType" : "ListOutgoingCertificatesRequest",
        "variableSetterType" : "ListOutgoingCertificatesRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listOutgoingCertificates",
      "operationName" : "ListOutgoingCertificates",
      "returnType" : {
        "returnType" : "ListOutgoingCertificatesResult",
        "documentation" : "<p>The output from the ListOutgoingCertificates operation.</p>"
      },
      "syncReturnType" : "ListOutgoingCertificatesResult"
    },
    "ListPolicies" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListPoliciesResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListPoliciesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListPoliciesRequest, ListPoliciesResult>",
      "asyncReturnType" : "ListPoliciesResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Lists your policies.</p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "ListPoliciesRequest",
        "variableName" : "listPoliciesRequest",
        "variableType" : "ListPoliciesRequest",
        "documentation" : "<p>The input for the ListPolicies operation.</p>",
        "simpleType" : "ListPoliciesRequest",
        "variableSetterType" : "ListPoliciesRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listPolicies",
      "operationName" : "ListPolicies",
      "returnType" : {
        "returnType" : "ListPoliciesResult",
        "documentation" : "<p>The output from the ListPolicies operation.</p>"
      },
      "syncReturnType" : "ListPoliciesResult"
    },
    "ListPolicyPrincipals" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListPolicyPrincipalsResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListPolicyPrincipalsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListPolicyPrincipalsRequest, ListPolicyPrincipalsResult>",
      "asyncReturnType" : "ListPolicyPrincipalsResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Lists the principals associated with the specified policy.</p>",
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "ListPolicyPrincipalsRequest",
        "variableName" : "listPolicyPrincipalsRequest",
        "variableType" : "ListPolicyPrincipalsRequest",
        "documentation" : "<p>The input for the ListPolicyPrincipals operation.</p>",
        "simpleType" : "ListPolicyPrincipalsRequest",
        "variableSetterType" : "ListPolicyPrincipalsRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listPolicyPrincipals",
      "operationName" : "ListPolicyPrincipals",
      "returnType" : {
        "returnType" : "ListPolicyPrincipalsResult",
        "documentation" : "<p>The output from the ListPolicyPrincipals operation.</p>"
      },
      "syncReturnType" : "ListPolicyPrincipalsResult"
    },
    "ListPolicyVersions" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListPolicyVersionsResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListPolicyVersionsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListPolicyVersionsRequest, ListPolicyVersionsResult>",
      "asyncReturnType" : "ListPolicyVersionsResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Lists the versions of the specified policy and identifies the default version.</p>",
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "ListPolicyVersionsRequest",
        "variableName" : "listPolicyVersionsRequest",
        "variableType" : "ListPolicyVersionsRequest",
        "documentation" : "<p>The input for the ListPolicyVersions operation.</p>",
        "simpleType" : "ListPolicyVersionsRequest",
        "variableSetterType" : "ListPolicyVersionsRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listPolicyVersions",
      "operationName" : "ListPolicyVersions",
      "returnType" : {
        "returnType" : "ListPolicyVersionsResult",
        "documentation" : "<p>The output from the ListPolicyVersions operation.</p>"
      },
      "syncReturnType" : "ListPolicyVersionsResult"
    },
    "ListPrincipalPolicies" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListPrincipalPoliciesResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListPrincipalPoliciesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListPrincipalPoliciesRequest, ListPrincipalPoliciesResult>",
      "asyncReturnType" : "ListPrincipalPoliciesResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Lists the policies attached to the specified principal. If you use an Cognito identity, the ID must be in <a href=\"http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_GetCredentialsForIdentity.html#API_GetCredentialsForIdentity_RequestSyntax\">AmazonCognito Identity format</a>.</p>",
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "ListPrincipalPoliciesRequest",
        "variableName" : "listPrincipalPoliciesRequest",
        "variableType" : "ListPrincipalPoliciesRequest",
        "documentation" : "<p>The input for the ListPrincipalPolicies operation.</p>",
        "simpleType" : "ListPrincipalPoliciesRequest",
        "variableSetterType" : "ListPrincipalPoliciesRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listPrincipalPolicies",
      "operationName" : "ListPrincipalPolicies",
      "returnType" : {
        "returnType" : "ListPrincipalPoliciesResult",
        "documentation" : "<p>The output from the ListPrincipalPolicies operation.</p>"
      },
      "syncReturnType" : "ListPrincipalPoliciesResult"
    },
    "ListPrincipalThings" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListPrincipalThingsResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListPrincipalThingsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListPrincipalThingsRequest, ListPrincipalThingsResult>",
      "asyncReturnType" : "ListPrincipalThingsResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Lists the things associated with the specified principal.</p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>",
        "httpStatusCode" : 404
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "ListPrincipalThingsRequest",
        "variableName" : "listPrincipalThingsRequest",
        "variableType" : "ListPrincipalThingsRequest",
        "documentation" : "<p>The input for the ListPrincipalThings operation.</p>",
        "simpleType" : "ListPrincipalThingsRequest",
        "variableSetterType" : "ListPrincipalThingsRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listPrincipalThings",
      "operationName" : "ListPrincipalThings",
      "returnType" : {
        "returnType" : "ListPrincipalThingsResult",
        "documentation" : "<p>The output from the ListPrincipalThings operation.</p>"
      },
      "syncReturnType" : "ListPrincipalThingsResult"
    },
    "ListThingPrincipals" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListThingPrincipalsResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListThingPrincipalsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListThingPrincipalsRequest, ListThingPrincipalsResult>",
      "asyncReturnType" : "ListThingPrincipalsResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Lists the principals associated with the specified thing.</p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>",
        "httpStatusCode" : 404
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "ListThingPrincipalsRequest",
        "variableName" : "listThingPrincipalsRequest",
        "variableType" : "ListThingPrincipalsRequest",
        "documentation" : "<p>The input for the ListThingPrincipal operation.</p>",
        "simpleType" : "ListThingPrincipalsRequest",
        "variableSetterType" : "ListThingPrincipalsRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listThingPrincipals",
      "operationName" : "ListThingPrincipals",
      "returnType" : {
        "returnType" : "ListThingPrincipalsResult",
        "documentation" : "<p>The output from the ListThingPrincipals operation.</p>"
      },
      "syncReturnType" : "ListThingPrincipalsResult"
    },
    "ListThingTypes" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListThingTypesResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListThingTypesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListThingTypesRequest, ListThingTypesResult>",
      "asyncReturnType" : "ListThingTypesResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Lists the existing thing types.</p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "ListThingTypesRequest",
        "variableName" : "listThingTypesRequest",
        "variableType" : "ListThingTypesRequest",
        "documentation" : "<p>The input for the ListThingTypes operation.</p>",
        "simpleType" : "ListThingTypesRequest",
        "variableSetterType" : "ListThingTypesRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listThingTypes",
      "operationName" : "ListThingTypes",
      "returnType" : {
        "returnType" : "ListThingTypesResult",
        "documentation" : "<p>The output for the ListThingTypes operation.</p>"
      },
      "syncReturnType" : "ListThingTypesResult"
    },
    "ListThings" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListThingsResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListThingsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListThingsRequest, ListThingsResult>",
      "asyncReturnType" : "ListThingsResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Lists your things. Use the <b>attributeName</b> and <b>attributeValue</b> parameters to filter your things. For example, calling <code>ListThings</code> with attributeName=Color and attributeValue=Red retrieves all things in the registry that contain an attribute <b>Color</b> with the value <b>Red</b>. </p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "ListThingsRequest",
        "variableName" : "listThingsRequest",
        "variableType" : "ListThingsRequest",
        "documentation" : "<p>The input for the ListThings operation.</p>",
        "simpleType" : "ListThingsRequest",
        "variableSetterType" : "ListThingsRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listThings",
      "operationName" : "ListThings",
      "returnType" : {
        "returnType" : "ListThingsResult",
        "documentation" : "<p>The output from the ListThings operation.</p>"
      },
      "syncReturnType" : "ListThingsResult"
    },
    "ListTopicRules" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListTopicRulesResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListTopicRulesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListTopicRulesRequest, ListTopicRulesResult>",
      "asyncReturnType" : "ListTopicRulesResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Lists the rules for the specific topic.</p>",
      "exceptions" : [ {
        "exceptionName" : "InternalException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "ListTopicRulesRequest",
        "variableName" : "listTopicRulesRequest",
        "variableType" : "ListTopicRulesRequest",
        "documentation" : "<p>The input for the ListTopicRules operation.</p>",
        "simpleType" : "ListTopicRulesRequest",
        "variableSetterType" : "ListTopicRulesRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listTopicRules",
      "operationName" : "ListTopicRules",
      "returnType" : {
        "returnType" : "ListTopicRulesResult",
        "documentation" : "<p>The output from the ListTopicRules operation.</p>"
      },
      "syncReturnType" : "ListTopicRulesResult"
    },
    "RegisterCACertificate" : {
      "asyncCallableType" : "java.util.concurrent.Callable<RegisterCACertificateResult>",
      "asyncFutureType" : "java.util.concurrent.Future<RegisterCACertificateResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<RegisterCACertificateRequest, RegisterCACertificateResult>",
      "asyncReturnType" : "RegisterCACertificateResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Registers a CA certificate with AWS IoT. This CA certificate can then be used to sign device certificates, which can be then registered with AWS IoT. You can register up to 10 CA certificates per AWS account that have the same subject field. This enables you to have up to 10 certificate authorities sign your device certificates. If you have more than one CA certificate registered, make sure you pass the CA certificate when you register your device certificates with the RegisterCertificate API.</p>",
      "exceptions" : [ {
        "exceptionName" : "ResourceAlreadyExistsException",
        "documentation" : "<p>The resource already exists.</p>",
        "httpStatusCode" : 409
      }, {
        "exceptionName" : "RegistrationCodeValidationException",
        "documentation" : "<p>The registration code is invalid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "CertificateValidationException",
        "documentation" : "<p>The certificate is invalid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>The number of attached entities exceeds the limit.</p>",
        "httpStatusCode" : 410
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "RegisterCACertificateRequest",
        "variableName" : "registerCACertificateRequest",
        "variableType" : "RegisterCACertificateRequest",
        "documentation" : "<p>The input to the RegisterCACertificate operation.</p>",
        "simpleType" : "RegisterCACertificateRequest",
        "variableSetterType" : "RegisterCACertificateRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "registerCACertificate",
      "operationName" : "RegisterCACertificate",
      "returnType" : {
        "returnType" : "RegisterCACertificateResult",
        "documentation" : "<p>The output from the RegisterCACertificateResponse operation.</p>"
      },
      "syncReturnType" : "RegisterCACertificateResult"
    },
    "RegisterCertificate" : {
      "asyncCallableType" : "java.util.concurrent.Callable<RegisterCertificateResult>",
      "asyncFutureType" : "java.util.concurrent.Future<RegisterCertificateResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<RegisterCertificateRequest, RegisterCertificateResult>",
      "asyncReturnType" : "RegisterCertificateResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Registers a device certificate with AWS IoT. If you have more than one CA certificate that has the same subject field, you must specify the CA certificate that was used to sign the device certificate being registered.</p>",
      "exceptions" : [ {
        "exceptionName" : "ResourceAlreadyExistsException",
        "documentation" : "<p>The resource already exists.</p>",
        "httpStatusCode" : 409
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "CertificateValidationException",
        "documentation" : "<p>The certificate is invalid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "CertificateStateException",
        "documentation" : "<p>The certificate operation is not allowed.</p>",
        "httpStatusCode" : 406
      }, {
        "exceptionName" : "CertificateConflictException",
        "documentation" : "<p>Unable to verify the CA certificate used to sign the device certificate you are attempting to register. This is happens when you have registered more than one CA certificate that has the same subject field and public key.</p>",
        "httpStatusCode" : 409
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "RegisterCertificateRequest",
        "variableName" : "registerCertificateRequest",
        "variableType" : "RegisterCertificateRequest",
        "documentation" : "<p>The input to the RegisterCertificate operation.</p>",
        "simpleType" : "RegisterCertificateRequest",
        "variableSetterType" : "RegisterCertificateRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "registerCertificate",
      "operationName" : "RegisterCertificate",
      "returnType" : {
        "returnType" : "RegisterCertificateResult",
        "documentation" : "<p>The output from the RegisterCertificate operation.</p>"
      },
      "syncReturnType" : "RegisterCertificateResult"
    },
    "RejectCertificateTransfer" : {
      "asyncCallableType" : "java.util.concurrent.Callable<RejectCertificateTransferResult>",
      "asyncFutureType" : "java.util.concurrent.Future<RejectCertificateTransferResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<RejectCertificateTransferRequest, RejectCertificateTransferResult>",
      "asyncReturnType" : "RejectCertificateTransferResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Rejects a pending certificate transfer. After AWS IoT rejects a certificate transfer, the certificate status changes from <b>PENDING_TRANSFER</b> to <b>INACTIVE</b>.</p> <p>To check for pending certificate transfers, call <a>ListCertificates</a> to enumerate your certificates.</p> <p>This operation can only be called by the transfer destination. After it is called, the certificate will be returned to the source's account in the INACTIVE state.</p>",
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "TransferAlreadyCompletedException",
        "documentation" : "<p>You can't revert the certificate transfer because the transfer is already complete.</p>",
        "httpStatusCode" : 410
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "RejectCertificateTransferRequest",
        "variableName" : "rejectCertificateTransferRequest",
        "variableType" : "RejectCertificateTransferRequest",
        "documentation" : "<p>The input for the RejectCertificateTransfer operation.</p>",
        "simpleType" : "RejectCertificateTransferRequest",
        "variableSetterType" : "RejectCertificateTransferRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "rejectCertificateTransfer",
      "operationName" : "RejectCertificateTransfer",
      "returnType" : {
        "returnType" : "RejectCertificateTransferResult",
        "documentation" : null
      },
      "syncReturnType" : "RejectCertificateTransferResult"
    },
    "ReplaceTopicRule" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ReplaceTopicRuleResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ReplaceTopicRuleResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ReplaceTopicRuleRequest, ReplaceTopicRuleResult>",
      "asyncReturnType" : "ReplaceTopicRuleResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Replaces the specified rule. You must specify all parameters for the new rule. Creating rules is an administrator-level action. Any user who has permission to create rules will be able to access data processed by the rule.</p>",
      "exceptions" : [ {
        "exceptionName" : "SqlParseException",
        "documentation" : "<p>The Rule-SQL expression can't be parsed correctly.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "InternalException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "ReplaceTopicRuleRequest",
        "variableName" : "replaceTopicRuleRequest",
        "variableType" : "ReplaceTopicRuleRequest",
        "documentation" : "<p>The input for the ReplaceTopicRule operation.</p>",
        "simpleType" : "ReplaceTopicRuleRequest",
        "variableSetterType" : "ReplaceTopicRuleRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "replaceTopicRule",
      "operationName" : "ReplaceTopicRule",
      "returnType" : {
        "returnType" : "ReplaceTopicRuleResult",
        "documentation" : null
      },
      "syncReturnType" : "ReplaceTopicRuleResult"
    },
    "SetDefaultPolicyVersion" : {
      "asyncCallableType" : "java.util.concurrent.Callable<SetDefaultPolicyVersionResult>",
      "asyncFutureType" : "java.util.concurrent.Future<SetDefaultPolicyVersionResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<SetDefaultPolicyVersionRequest, SetDefaultPolicyVersionResult>",
      "asyncReturnType" : "SetDefaultPolicyVersionResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Sets the specified version of the specified policy as the policy's default (operative) version. This action affects all certificates to which the policy is attached. To list the principals the policy is attached to, use the ListPrincipalPolicy API.</p>",
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "SetDefaultPolicyVersionRequest",
        "variableName" : "setDefaultPolicyVersionRequest",
        "variableType" : "SetDefaultPolicyVersionRequest",
        "documentation" : "<p>The input for the SetDefaultPolicyVersion operation.</p>",
        "simpleType" : "SetDefaultPolicyVersionRequest",
        "variableSetterType" : "SetDefaultPolicyVersionRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "setDefaultPolicyVersion",
      "operationName" : "SetDefaultPolicyVersion",
      "returnType" : {
        "returnType" : "SetDefaultPolicyVersionResult",
        "documentation" : null
      },
      "syncReturnType" : "SetDefaultPolicyVersionResult"
    },
    "SetLoggingOptions" : {
      "asyncCallableType" : "java.util.concurrent.Callable<SetLoggingOptionsResult>",
      "asyncFutureType" : "java.util.concurrent.Future<SetLoggingOptionsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<SetLoggingOptionsRequest, SetLoggingOptionsResult>",
      "asyncReturnType" : "SetLoggingOptionsResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Sets the logging options.</p>",
      "exceptions" : [ {
        "exceptionName" : "InternalException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "SetLoggingOptionsRequest",
        "variableName" : "setLoggingOptionsRequest",
        "variableType" : "SetLoggingOptionsRequest",
        "documentation" : "<p>The input for the SetLoggingOptions operation.</p>",
        "simpleType" : "SetLoggingOptionsRequest",
        "variableSetterType" : "SetLoggingOptionsRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "setLoggingOptions",
      "operationName" : "SetLoggingOptions",
      "returnType" : {
        "returnType" : "SetLoggingOptionsResult",
        "documentation" : null
      },
      "syncReturnType" : "SetLoggingOptionsResult"
    },
    "TransferCertificate" : {
      "asyncCallableType" : "java.util.concurrent.Callable<TransferCertificateResult>",
      "asyncFutureType" : "java.util.concurrent.Future<TransferCertificateResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<TransferCertificateRequest, TransferCertificateResult>",
      "asyncReturnType" : "TransferCertificateResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Transfers the specified certificate to the specified AWS account.</p> <p>You can cancel the transfer until it is acknowledged by the recipient.</p> <p>No notification is sent to the transfer destination's account. It is up to the caller to notify the transfer target.</p> <p>The certificate being transferred must not be in the ACTIVE state. You can use the UpdateCertificate API to deactivate it.</p> <p>The certificate must not have any policies attached to it. You can use the DetachPrincipalPolicy API to detach them.</p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "CertificateStateException",
        "documentation" : "<p>The certificate operation is not allowed.</p>",
        "httpStatusCode" : 406
      }, {
        "exceptionName" : "TransferConflictException",
        "documentation" : "<p>You can't transfer the certificate because authorization policies are still attached.</p>",
        "httpStatusCode" : 409
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "TransferCertificateRequest",
        "variableName" : "transferCertificateRequest",
        "variableType" : "TransferCertificateRequest",
        "documentation" : "<p>The input for the TransferCertificate operation.</p>",
        "simpleType" : "TransferCertificateRequest",
        "variableSetterType" : "TransferCertificateRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "transferCertificate",
      "operationName" : "TransferCertificate",
      "returnType" : {
        "returnType" : "TransferCertificateResult",
        "documentation" : "<p>The output from the TransferCertificate operation.</p>"
      },
      "syncReturnType" : "TransferCertificateResult"
    },
    "UpdateCACertificate" : {
      "asyncCallableType" : "java.util.concurrent.Callable<UpdateCACertificateResult>",
      "asyncFutureType" : "java.util.concurrent.Future<UpdateCACertificateResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<UpdateCACertificateRequest, UpdateCACertificateResult>",
      "asyncReturnType" : "UpdateCACertificateResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Updates a registered CA certificate.</p>",
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "UpdateCACertificateRequest",
        "variableName" : "updateCACertificateRequest",
        "variableType" : "UpdateCACertificateRequest",
        "documentation" : "<p>The input to the UpdateCACertificate operation.</p>",
        "simpleType" : "UpdateCACertificateRequest",
        "variableSetterType" : "UpdateCACertificateRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "updateCACertificate",
      "operationName" : "UpdateCACertificate",
      "returnType" : {
        "returnType" : "UpdateCACertificateResult",
        "documentation" : null
      },
      "syncReturnType" : "UpdateCACertificateResult"
    },
    "UpdateCertificate" : {
      "asyncCallableType" : "java.util.concurrent.Callable<UpdateCertificateResult>",
      "asyncFutureType" : "java.util.concurrent.Future<UpdateCertificateResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<UpdateCertificateRequest, UpdateCertificateResult>",
      "asyncReturnType" : "UpdateCertificateResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Updates the status of the specified certificate. This operation is idempotent.</p> <p>Moving a certificate from the ACTIVE state (including REVOKED) will not disconnect currently connected devices, but these devices will be unable to reconnect.</p> <p>The ACTIVE state is required to authenticate devices connecting to AWS IoT using a certificate.</p>",
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "CertificateStateException",
        "documentation" : "<p>The certificate operation is not allowed.</p>",
        "httpStatusCode" : 406
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "UpdateCertificateRequest",
        "variableName" : "updateCertificateRequest",
        "variableType" : "UpdateCertificateRequest",
        "documentation" : "<p>The input for the UpdateCertificate operation.</p>",
        "simpleType" : "UpdateCertificateRequest",
        "variableSetterType" : "UpdateCertificateRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "updateCertificate",
      "operationName" : "UpdateCertificate",
      "returnType" : {
        "returnType" : "UpdateCertificateResult",
        "documentation" : null
      },
      "syncReturnType" : "UpdateCertificateResult"
    },
    "UpdateThing" : {
      "asyncCallableType" : "java.util.concurrent.Callable<UpdateThingResult>",
      "asyncFutureType" : "java.util.concurrent.Future<UpdateThingResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<UpdateThingRequest, UpdateThingResult>",
      "asyncReturnType" : "UpdateThingResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Updates the data for a thing.</p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "VersionConflictException",
        "documentation" : "<p>An exception thrown when the version of a thing passed to a command is different than the version specified with the --version parameter.</p>",
        "httpStatusCode" : 409
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>",
        "httpStatusCode" : 401
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>",
        "httpStatusCode" : 500
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>",
        "httpStatusCode" : 404
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "UpdateThingRequest",
        "variableName" : "updateThingRequest",
        "variableType" : "UpdateThingRequest",
        "documentation" : "<p>The input for the UpdateThing operation.</p>",
        "simpleType" : "UpdateThingRequest",
        "variableSetterType" : "UpdateThingRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "updateThing",
      "operationName" : "UpdateThing",
      "returnType" : {
        "returnType" : "UpdateThingResult",
        "documentation" : "<p>The output from the UpdateThing operation.</p>"
      },
      "syncReturnType" : "UpdateThingResult"
    }
  },
  "shapes" : {
    "AcceptCertificateTransferRequest" : {
      "c2jName" : "AcceptCertificateTransferRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the AcceptCertificateTransfer operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "AcceptCertificateTransfer",
        "locationName" : null,
        "requestUri" : "/accept-certificate-transfer/{certificateId}",
        "target" : null,
        "verb" : "PATCH",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "certificateId",
        "c2jShape" : "CertificateId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the certificate.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCertificateId",
        "getterDocumentation" : "/**<p>The ID of the certificate.</p>\n@return The ID of the certificate.*/",
        "getterMethodName" : "getCertificateId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "certificateId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "certificateId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CertificateId",
        "setterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.*/",
        "setterMethodName" : "setCertificateId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the certificate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "setAsActive",
        "c2jShape" : "SetAsActive",
        "deprecated" : false,
        "documentation" : "<p>Specifies whether the certificate is active.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@param setAsActive Specifies whether the certificate is active.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSetAsActive",
        "getterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@return Specifies whether the certificate is active.*/",
        "getterMethodName" : "getSetAsActive",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "setAsActive",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "setAsActive",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "SetAsActive",
        "setterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@param setAsActive Specifies whether the certificate is active.*/",
        "setterMethodName" : "setSetAsActive",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "setAsActive",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@param setAsActive Specifies whether the certificate is active.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "setAsActive",
          "variableType" : "Boolean",
          "documentation" : "<p>Specifies whether the certificate is active.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CertificateId" : {
          "c2jName" : "certificateId",
          "c2jShape" : "CertificateId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the certificate.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCertificateId",
          "getterDocumentation" : "/**<p>The ID of the certificate.</p>\n@return The ID of the certificate.*/",
          "getterMethodName" : "getCertificateId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "certificateId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "certificateId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CertificateId",
          "setterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.*/",
          "setterMethodName" : "setCertificateId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the certificate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SetAsActive" : {
          "c2jName" : "setAsActive",
          "c2jShape" : "SetAsActive",
          "deprecated" : false,
          "documentation" : "<p>Specifies whether the certificate is active.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@param setAsActive Specifies whether the certificate is active.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSetAsActive",
          "getterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@return Specifies whether the certificate is active.*/",
          "getterMethodName" : "getSetAsActive",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "setAsActive",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "setAsActive",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "SetAsActive",
          "setterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@param setAsActive Specifies whether the certificate is active.*/",
          "setterMethodName" : "setSetAsActive",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "setAsActive",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@param setAsActive Specifies whether the certificate is active.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "setAsActive",
            "variableType" : "Boolean",
            "documentation" : "<p>Specifies whether the certificate is active.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "certificateId" ],
      "shapeName" : "AcceptCertificateTransferRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "AcceptCertificateTransferRequest",
        "variableName" : "acceptCertificateTransferRequest",
        "variableType" : "AcceptCertificateTransferRequest",
        "documentation" : null,
        "simpleType" : "AcceptCertificateTransferRequest",
        "variableSetterType" : "AcceptCertificateTransferRequest"
      },
      "wrapper" : false
    },
    "AcceptCertificateTransferResult" : {
      "c2jName" : "AcceptCertificateTransferResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : null,
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "AcceptCertificateTransferResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "AcceptCertificateTransferResult",
        "variableName" : "acceptCertificateTransferResult",
        "variableType" : "AcceptCertificateTransferResult",
        "documentation" : null,
        "simpleType" : "AcceptCertificateTransferResult",
        "variableSetterType" : "AcceptCertificateTransferResult"
      },
      "wrapper" : false
    },
    "Action" : {
      "c2jName" : "Action",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Describes the actions associated with a rule.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "dynamoDB",
        "c2jShape" : "DynamoDBAction",
        "deprecated" : false,
        "documentation" : "<p>Write to a DynamoDB table.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Write to a DynamoDB table.</p>\n@param dynamoDB Write to a DynamoDB table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDynamoDB",
        "getterDocumentation" : "/**<p>Write to a DynamoDB table.</p>\n@return Write to a DynamoDB table.*/",
        "getterMethodName" : "getDynamoDB",
        "getterModel" : {
          "returnType" : "DynamoDBAction",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "dynamoDB",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "dynamoDB",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "DynamoDB",
        "setterDocumentation" : "/**<p>Write to a DynamoDB table.</p>\n@param dynamoDB Write to a DynamoDB table.*/",
        "setterMethodName" : "setDynamoDB",
        "setterModel" : {
          "variableDeclarationType" : "DynamoDBAction",
          "variableName" : "dynamoDB",
          "variableType" : "DynamoDBAction",
          "documentation" : "",
          "simpleType" : "DynamoDBAction",
          "variableSetterType" : "DynamoDBAction"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Write to a DynamoDB table.</p>\n@param dynamoDB Write to a DynamoDB table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "DynamoDBAction",
          "variableName" : "dynamoDB",
          "variableType" : "DynamoDBAction",
          "documentation" : "<p>Write to a DynamoDB table.</p>",
          "simpleType" : "DynamoDBAction",
          "variableSetterType" : "DynamoDBAction"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "dynamoDBv2",
        "c2jShape" : "DynamoDBv2Action",
        "deprecated" : false,
        "documentation" : "<p>Write to a DynamoDB table. This is a new version of the DynamoDB action. It allows you to write each attribute in an MQTT message payload into a separate DynamoDB column.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Write to a DynamoDB table. This is a new version of the DynamoDB action. It allows you to write each attribute in an MQTT message payload into a separate DynamoDB column.</p>\n@param dynamoDBv2 Write to a DynamoDB table. This is a new version of the DynamoDB action. It allows you to write each attribute in an MQTT message payload into a separate DynamoDB column.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDynamoDBv2",
        "getterDocumentation" : "/**<p>Write to a DynamoDB table. This is a new version of the DynamoDB action. It allows you to write each attribute in an MQTT message payload into a separate DynamoDB column.</p>\n@return Write to a DynamoDB table. This is a new version of the DynamoDB action. It allows you to write each attribute in an MQTT message payload into a separate DynamoDB column.*/",
        "getterMethodName" : "getDynamoDBv2",
        "getterModel" : {
          "returnType" : "DynamoDBv2Action",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "dynamoDBv2",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "dynamoDBv2",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "DynamoDBv2",
        "setterDocumentation" : "/**<p>Write to a DynamoDB table. This is a new version of the DynamoDB action. It allows you to write each attribute in an MQTT message payload into a separate DynamoDB column.</p>\n@param dynamoDBv2 Write to a DynamoDB table. This is a new version of the DynamoDB action. It allows you to write each attribute in an MQTT message payload into a separate DynamoDB column.*/",
        "setterMethodName" : "setDynamoDBv2",
        "setterModel" : {
          "variableDeclarationType" : "DynamoDBv2Action",
          "variableName" : "dynamoDBv2",
          "variableType" : "DynamoDBv2Action",
          "documentation" : "",
          "simpleType" : "DynamoDBv2Action",
          "variableSetterType" : "DynamoDBv2Action"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Write to a DynamoDB table. This is a new version of the DynamoDB action. It allows you to write each attribute in an MQTT message payload into a separate DynamoDB column.</p>\n@param dynamoDBv2 Write to a DynamoDB table. This is a new version of the DynamoDB action. It allows you to write each attribute in an MQTT message payload into a separate DynamoDB column.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "DynamoDBv2Action",
          "variableName" : "dynamoDBv2",
          "variableType" : "DynamoDBv2Action",
          "documentation" : "<p>Write to a DynamoDB table. This is a new version of the DynamoDB action. It allows you to write each attribute in an MQTT message payload into a separate DynamoDB column.</p>",
          "simpleType" : "DynamoDBv2Action",
          "variableSetterType" : "DynamoDBv2Action"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "lambda",
        "c2jShape" : "LambdaAction",
        "deprecated" : false,
        "documentation" : "<p>Invoke a Lambda function.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Invoke a Lambda function.</p>\n@param lambda Invoke a Lambda function.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLambda",
        "getterDocumentation" : "/**<p>Invoke a Lambda function.</p>\n@return Invoke a Lambda function.*/",
        "getterMethodName" : "getLambda",
        "getterModel" : {
          "returnType" : "LambdaAction",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "lambda",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "lambda",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Lambda",
        "setterDocumentation" : "/**<p>Invoke a Lambda function.</p>\n@param lambda Invoke a Lambda function.*/",
        "setterMethodName" : "setLambda",
        "setterModel" : {
          "variableDeclarationType" : "LambdaAction",
          "variableName" : "lambda",
          "variableType" : "LambdaAction",
          "documentation" : "",
          "simpleType" : "LambdaAction",
          "variableSetterType" : "LambdaAction"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Invoke a Lambda function.</p>\n@param lambda Invoke a Lambda function.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "LambdaAction",
          "variableName" : "lambda",
          "variableType" : "LambdaAction",
          "documentation" : "<p>Invoke a Lambda function.</p>",
          "simpleType" : "LambdaAction",
          "variableSetterType" : "LambdaAction"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "sns",
        "c2jShape" : "SnsAction",
        "deprecated" : false,
        "documentation" : "<p>Publish to an Amazon SNS topic.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Publish to an Amazon SNS topic.</p>\n@param sns Publish to an Amazon SNS topic.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSns",
        "getterDocumentation" : "/**<p>Publish to an Amazon SNS topic.</p>\n@return Publish to an Amazon SNS topic.*/",
        "getterMethodName" : "getSns",
        "getterModel" : {
          "returnType" : "SnsAction",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "sns",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "sns",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Sns",
        "setterDocumentation" : "/**<p>Publish to an Amazon SNS topic.</p>\n@param sns Publish to an Amazon SNS topic.*/",
        "setterMethodName" : "setSns",
        "setterModel" : {
          "variableDeclarationType" : "SnsAction",
          "variableName" : "sns",
          "variableType" : "SnsAction",
          "documentation" : "",
          "simpleType" : "SnsAction",
          "variableSetterType" : "SnsAction"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Publish to an Amazon SNS topic.</p>\n@param sns Publish to an Amazon SNS topic.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "SnsAction",
          "variableName" : "sns",
          "variableType" : "SnsAction",
          "documentation" : "<p>Publish to an Amazon SNS topic.</p>",
          "simpleType" : "SnsAction",
          "variableSetterType" : "SnsAction"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "sqs",
        "c2jShape" : "SqsAction",
        "deprecated" : false,
        "documentation" : "<p>Publish to an Amazon SQS queue.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Publish to an Amazon SQS queue.</p>\n@param sqs Publish to an Amazon SQS queue.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSqs",
        "getterDocumentation" : "/**<p>Publish to an Amazon SQS queue.</p>\n@return Publish to an Amazon SQS queue.*/",
        "getterMethodName" : "getSqs",
        "getterModel" : {
          "returnType" : "SqsAction",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "sqs",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "sqs",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Sqs",
        "setterDocumentation" : "/**<p>Publish to an Amazon SQS queue.</p>\n@param sqs Publish to an Amazon SQS queue.*/",
        "setterMethodName" : "setSqs",
        "setterModel" : {
          "variableDeclarationType" : "SqsAction",
          "variableName" : "sqs",
          "variableType" : "SqsAction",
          "documentation" : "",
          "simpleType" : "SqsAction",
          "variableSetterType" : "SqsAction"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Publish to an Amazon SQS queue.</p>\n@param sqs Publish to an Amazon SQS queue.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "SqsAction",
          "variableName" : "sqs",
          "variableType" : "SqsAction",
          "documentation" : "<p>Publish to an Amazon SQS queue.</p>",
          "simpleType" : "SqsAction",
          "variableSetterType" : "SqsAction"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "kinesis",
        "c2jShape" : "KinesisAction",
        "deprecated" : false,
        "documentation" : "<p>Write data to an Amazon Kinesis stream.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Write data to an Amazon Kinesis stream.</p>\n@param kinesis Write data to an Amazon Kinesis stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withKinesis",
        "getterDocumentation" : "/**<p>Write data to an Amazon Kinesis stream.</p>\n@return Write data to an Amazon Kinesis stream.*/",
        "getterMethodName" : "getKinesis",
        "getterModel" : {
          "returnType" : "KinesisAction",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "kinesis",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "kinesis",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Kinesis",
        "setterDocumentation" : "/**<p>Write data to an Amazon Kinesis stream.</p>\n@param kinesis Write data to an Amazon Kinesis stream.*/",
        "setterMethodName" : "setKinesis",
        "setterModel" : {
          "variableDeclarationType" : "KinesisAction",
          "variableName" : "kinesis",
          "variableType" : "KinesisAction",
          "documentation" : "",
          "simpleType" : "KinesisAction",
          "variableSetterType" : "KinesisAction"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Write data to an Amazon Kinesis stream.</p>\n@param kinesis Write data to an Amazon Kinesis stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "KinesisAction",
          "variableName" : "kinesis",
          "variableType" : "KinesisAction",
          "documentation" : "<p>Write data to an Amazon Kinesis stream.</p>",
          "simpleType" : "KinesisAction",
          "variableSetterType" : "KinesisAction"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "republish",
        "c2jShape" : "RepublishAction",
        "deprecated" : false,
        "documentation" : "<p>Publish to another MQTT topic.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Publish to another MQTT topic.</p>\n@param republish Publish to another MQTT topic.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepublish",
        "getterDocumentation" : "/**<p>Publish to another MQTT topic.</p>\n@return Publish to another MQTT topic.*/",
        "getterMethodName" : "getRepublish",
        "getterModel" : {
          "returnType" : "RepublishAction",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "republish",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "republish",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Republish",
        "setterDocumentation" : "/**<p>Publish to another MQTT topic.</p>\n@param republish Publish to another MQTT topic.*/",
        "setterMethodName" : "setRepublish",
        "setterModel" : {
          "variableDeclarationType" : "RepublishAction",
          "variableName" : "republish",
          "variableType" : "RepublishAction",
          "documentation" : "",
          "simpleType" : "RepublishAction",
          "variableSetterType" : "RepublishAction"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Publish to another MQTT topic.</p>\n@param republish Publish to another MQTT topic.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "RepublishAction",
          "variableName" : "republish",
          "variableType" : "RepublishAction",
          "documentation" : "<p>Publish to another MQTT topic.</p>",
          "simpleType" : "RepublishAction",
          "variableSetterType" : "RepublishAction"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "s3",
        "c2jShape" : "S3Action",
        "deprecated" : false,
        "documentation" : "<p>Write to an Amazon S3 bucket.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Write to an Amazon S3 bucket.</p>\n@param s3 Write to an Amazon S3 bucket.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withS3",
        "getterDocumentation" : "/**<p>Write to an Amazon S3 bucket.</p>\n@return Write to an Amazon S3 bucket.*/",
        "getterMethodName" : "getS3",
        "getterModel" : {
          "returnType" : "S3Action",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "s3",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "s3",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "S3",
        "setterDocumentation" : "/**<p>Write to an Amazon S3 bucket.</p>\n@param s3 Write to an Amazon S3 bucket.*/",
        "setterMethodName" : "setS3",
        "setterModel" : {
          "variableDeclarationType" : "S3Action",
          "variableName" : "s3",
          "variableType" : "S3Action",
          "documentation" : "",
          "simpleType" : "S3Action",
          "variableSetterType" : "S3Action"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Write to an Amazon S3 bucket.</p>\n@param s3 Write to an Amazon S3 bucket.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "S3Action",
          "variableName" : "s3",
          "variableType" : "S3Action",
          "documentation" : "<p>Write to an Amazon S3 bucket.</p>",
          "simpleType" : "S3Action",
          "variableSetterType" : "S3Action"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "firehose",
        "c2jShape" : "FirehoseAction",
        "deprecated" : false,
        "documentation" : "<p>Write to an Amazon Kinesis Firehose stream.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Write to an Amazon Kinesis Firehose stream.</p>\n@param firehose Write to an Amazon Kinesis Firehose stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFirehose",
        "getterDocumentation" : "/**<p>Write to an Amazon Kinesis Firehose stream.</p>\n@return Write to an Amazon Kinesis Firehose stream.*/",
        "getterMethodName" : "getFirehose",
        "getterModel" : {
          "returnType" : "FirehoseAction",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "firehose",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "firehose",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Firehose",
        "setterDocumentation" : "/**<p>Write to an Amazon Kinesis Firehose stream.</p>\n@param firehose Write to an Amazon Kinesis Firehose stream.*/",
        "setterMethodName" : "setFirehose",
        "setterModel" : {
          "variableDeclarationType" : "FirehoseAction",
          "variableName" : "firehose",
          "variableType" : "FirehoseAction",
          "documentation" : "",
          "simpleType" : "FirehoseAction",
          "variableSetterType" : "FirehoseAction"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Write to an Amazon Kinesis Firehose stream.</p>\n@param firehose Write to an Amazon Kinesis Firehose stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "FirehoseAction",
          "variableName" : "firehose",
          "variableType" : "FirehoseAction",
          "documentation" : "<p>Write to an Amazon Kinesis Firehose stream.</p>",
          "simpleType" : "FirehoseAction",
          "variableSetterType" : "FirehoseAction"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "cloudwatchMetric",
        "c2jShape" : "CloudwatchMetricAction",
        "deprecated" : false,
        "documentation" : "<p>Capture a CloudWatch metric.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Capture a CloudWatch metric.</p>\n@param cloudwatchMetric Capture a CloudWatch metric.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCloudwatchMetric",
        "getterDocumentation" : "/**<p>Capture a CloudWatch metric.</p>\n@return Capture a CloudWatch metric.*/",
        "getterMethodName" : "getCloudwatchMetric",
        "getterModel" : {
          "returnType" : "CloudwatchMetricAction",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "cloudwatchMetric",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "cloudwatchMetric",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "CloudwatchMetric",
        "setterDocumentation" : "/**<p>Capture a CloudWatch metric.</p>\n@param cloudwatchMetric Capture a CloudWatch metric.*/",
        "setterMethodName" : "setCloudwatchMetric",
        "setterModel" : {
          "variableDeclarationType" : "CloudwatchMetricAction",
          "variableName" : "cloudwatchMetric",
          "variableType" : "CloudwatchMetricAction",
          "documentation" : "",
          "simpleType" : "CloudwatchMetricAction",
          "variableSetterType" : "CloudwatchMetricAction"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Capture a CloudWatch metric.</p>\n@param cloudwatchMetric Capture a CloudWatch metric.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "CloudwatchMetricAction",
          "variableName" : "cloudwatchMetric",
          "variableType" : "CloudwatchMetricAction",
          "documentation" : "<p>Capture a CloudWatch metric.</p>",
          "simpleType" : "CloudwatchMetricAction",
          "variableSetterType" : "CloudwatchMetricAction"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "cloudwatchAlarm",
        "c2jShape" : "CloudwatchAlarmAction",
        "deprecated" : false,
        "documentation" : "<p>Change the state of a CloudWatch alarm.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Change the state of a CloudWatch alarm.</p>\n@param cloudwatchAlarm Change the state of a CloudWatch alarm.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCloudwatchAlarm",
        "getterDocumentation" : "/**<p>Change the state of a CloudWatch alarm.</p>\n@return Change the state of a CloudWatch alarm.*/",
        "getterMethodName" : "getCloudwatchAlarm",
        "getterModel" : {
          "returnType" : "CloudwatchAlarmAction",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "cloudwatchAlarm",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "cloudwatchAlarm",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "CloudwatchAlarm",
        "setterDocumentation" : "/**<p>Change the state of a CloudWatch alarm.</p>\n@param cloudwatchAlarm Change the state of a CloudWatch alarm.*/",
        "setterMethodName" : "setCloudwatchAlarm",
        "setterModel" : {
          "variableDeclarationType" : "CloudwatchAlarmAction",
          "variableName" : "cloudwatchAlarm",
          "variableType" : "CloudwatchAlarmAction",
          "documentation" : "",
          "simpleType" : "CloudwatchAlarmAction",
          "variableSetterType" : "CloudwatchAlarmAction"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Change the state of a CloudWatch alarm.</p>\n@param cloudwatchAlarm Change the state of a CloudWatch alarm.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "CloudwatchAlarmAction",
          "variableName" : "cloudwatchAlarm",
          "variableType" : "CloudwatchAlarmAction",
          "documentation" : "<p>Change the state of a CloudWatch alarm.</p>",
          "simpleType" : "CloudwatchAlarmAction",
          "variableSetterType" : "CloudwatchAlarmAction"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "elasticsearch",
        "c2jShape" : "ElasticsearchAction",
        "deprecated" : false,
        "documentation" : "<p>Write data to an Amazon Elasticsearch Service domain.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Write data to an Amazon Elasticsearch Service domain.</p>\n@param elasticsearch Write data to an Amazon Elasticsearch Service domain.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withElasticsearch",
        "getterDocumentation" : "/**<p>Write data to an Amazon Elasticsearch Service domain.</p>\n@return Write data to an Amazon Elasticsearch Service domain.*/",
        "getterMethodName" : "getElasticsearch",
        "getterModel" : {
          "returnType" : "ElasticsearchAction",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "elasticsearch",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "elasticsearch",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Elasticsearch",
        "setterDocumentation" : "/**<p>Write data to an Amazon Elasticsearch Service domain.</p>\n@param elasticsearch Write data to an Amazon Elasticsearch Service domain.*/",
        "setterMethodName" : "setElasticsearch",
        "setterModel" : {
          "variableDeclarationType" : "ElasticsearchAction",
          "variableName" : "elasticsearch",
          "variableType" : "ElasticsearchAction",
          "documentation" : "",
          "simpleType" : "ElasticsearchAction",
          "variableSetterType" : "ElasticsearchAction"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Write data to an Amazon Elasticsearch Service domain.</p>\n@param elasticsearch Write data to an Amazon Elasticsearch Service domain.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "ElasticsearchAction",
          "variableName" : "elasticsearch",
          "variableType" : "ElasticsearchAction",
          "documentation" : "<p>Write data to an Amazon Elasticsearch Service domain.</p>",
          "simpleType" : "ElasticsearchAction",
          "variableSetterType" : "ElasticsearchAction"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "salesforce",
        "c2jShape" : "SalesforceAction",
        "deprecated" : false,
        "documentation" : "<p>Send a message to a Salesforce IoT Cloud Input Stream.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Send a message to a Salesforce IoT Cloud Input Stream.</p>\n@param salesforce Send a message to a Salesforce IoT Cloud Input Stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSalesforce",
        "getterDocumentation" : "/**<p>Send a message to a Salesforce IoT Cloud Input Stream.</p>\n@return Send a message to a Salesforce IoT Cloud Input Stream.*/",
        "getterMethodName" : "getSalesforce",
        "getterModel" : {
          "returnType" : "SalesforceAction",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "salesforce",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "salesforce",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Salesforce",
        "setterDocumentation" : "/**<p>Send a message to a Salesforce IoT Cloud Input Stream.</p>\n@param salesforce Send a message to a Salesforce IoT Cloud Input Stream.*/",
        "setterMethodName" : "setSalesforce",
        "setterModel" : {
          "variableDeclarationType" : "SalesforceAction",
          "variableName" : "salesforce",
          "variableType" : "SalesforceAction",
          "documentation" : "",
          "simpleType" : "SalesforceAction",
          "variableSetterType" : "SalesforceAction"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Send a message to a Salesforce IoT Cloud Input Stream.</p>\n@param salesforce Send a message to a Salesforce IoT Cloud Input Stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "SalesforceAction",
          "variableName" : "salesforce",
          "variableType" : "SalesforceAction",
          "documentation" : "<p>Send a message to a Salesforce IoT Cloud Input Stream.</p>",
          "simpleType" : "SalesforceAction",
          "variableSetterType" : "SalesforceAction"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CloudwatchAlarm" : {
          "c2jName" : "cloudwatchAlarm",
          "c2jShape" : "CloudwatchAlarmAction",
          "deprecated" : false,
          "documentation" : "<p>Change the state of a CloudWatch alarm.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Change the state of a CloudWatch alarm.</p>\n@param cloudwatchAlarm Change the state of a CloudWatch alarm.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCloudwatchAlarm",
          "getterDocumentation" : "/**<p>Change the state of a CloudWatch alarm.</p>\n@return Change the state of a CloudWatch alarm.*/",
          "getterMethodName" : "getCloudwatchAlarm",
          "getterModel" : {
            "returnType" : "CloudwatchAlarmAction",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "cloudwatchAlarm",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "cloudwatchAlarm",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "CloudwatchAlarm",
          "setterDocumentation" : "/**<p>Change the state of a CloudWatch alarm.</p>\n@param cloudwatchAlarm Change the state of a CloudWatch alarm.*/",
          "setterMethodName" : "setCloudwatchAlarm",
          "setterModel" : {
            "variableDeclarationType" : "CloudwatchAlarmAction",
            "variableName" : "cloudwatchAlarm",
            "variableType" : "CloudwatchAlarmAction",
            "documentation" : "",
            "simpleType" : "CloudwatchAlarmAction",
            "variableSetterType" : "CloudwatchAlarmAction"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Change the state of a CloudWatch alarm.</p>\n@param cloudwatchAlarm Change the state of a CloudWatch alarm.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "CloudwatchAlarmAction",
            "variableName" : "cloudwatchAlarm",
            "variableType" : "CloudwatchAlarmAction",
            "documentation" : "<p>Change the state of a CloudWatch alarm.</p>",
            "simpleType" : "CloudwatchAlarmAction",
            "variableSetterType" : "CloudwatchAlarmAction"
          },
          "xmlNameSpaceUri" : null
        },
        "CloudwatchMetric" : {
          "c2jName" : "cloudwatchMetric",
          "c2jShape" : "CloudwatchMetricAction",
          "deprecated" : false,
          "documentation" : "<p>Capture a CloudWatch metric.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Capture a CloudWatch metric.</p>\n@param cloudwatchMetric Capture a CloudWatch metric.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCloudwatchMetric",
          "getterDocumentation" : "/**<p>Capture a CloudWatch metric.</p>\n@return Capture a CloudWatch metric.*/",
          "getterMethodName" : "getCloudwatchMetric",
          "getterModel" : {
            "returnType" : "CloudwatchMetricAction",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "cloudwatchMetric",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "cloudwatchMetric",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "CloudwatchMetric",
          "setterDocumentation" : "/**<p>Capture a CloudWatch metric.</p>\n@param cloudwatchMetric Capture a CloudWatch metric.*/",
          "setterMethodName" : "setCloudwatchMetric",
          "setterModel" : {
            "variableDeclarationType" : "CloudwatchMetricAction",
            "variableName" : "cloudwatchMetric",
            "variableType" : "CloudwatchMetricAction",
            "documentation" : "",
            "simpleType" : "CloudwatchMetricAction",
            "variableSetterType" : "CloudwatchMetricAction"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Capture a CloudWatch metric.</p>\n@param cloudwatchMetric Capture a CloudWatch metric.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "CloudwatchMetricAction",
            "variableName" : "cloudwatchMetric",
            "variableType" : "CloudwatchMetricAction",
            "documentation" : "<p>Capture a CloudWatch metric.</p>",
            "simpleType" : "CloudwatchMetricAction",
            "variableSetterType" : "CloudwatchMetricAction"
          },
          "xmlNameSpaceUri" : null
        },
        "DynamoDB" : {
          "c2jName" : "dynamoDB",
          "c2jShape" : "DynamoDBAction",
          "deprecated" : false,
          "documentation" : "<p>Write to a DynamoDB table.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Write to a DynamoDB table.</p>\n@param dynamoDB Write to a DynamoDB table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDynamoDB",
          "getterDocumentation" : "/**<p>Write to a DynamoDB table.</p>\n@return Write to a DynamoDB table.*/",
          "getterMethodName" : "getDynamoDB",
          "getterModel" : {
            "returnType" : "DynamoDBAction",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "dynamoDB",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "dynamoDB",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "DynamoDB",
          "setterDocumentation" : "/**<p>Write to a DynamoDB table.</p>\n@param dynamoDB Write to a DynamoDB table.*/",
          "setterMethodName" : "setDynamoDB",
          "setterModel" : {
            "variableDeclarationType" : "DynamoDBAction",
            "variableName" : "dynamoDB",
            "variableType" : "DynamoDBAction",
            "documentation" : "",
            "simpleType" : "DynamoDBAction",
            "variableSetterType" : "DynamoDBAction"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Write to a DynamoDB table.</p>\n@param dynamoDB Write to a DynamoDB table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "DynamoDBAction",
            "variableName" : "dynamoDB",
            "variableType" : "DynamoDBAction",
            "documentation" : "<p>Write to a DynamoDB table.</p>",
            "simpleType" : "DynamoDBAction",
            "variableSetterType" : "DynamoDBAction"
          },
          "xmlNameSpaceUri" : null
        },
        "DynamoDBv2" : {
          "c2jName" : "dynamoDBv2",
          "c2jShape" : "DynamoDBv2Action",
          "deprecated" : false,
          "documentation" : "<p>Write to a DynamoDB table. This is a new version of the DynamoDB action. It allows you to write each attribute in an MQTT message payload into a separate DynamoDB column.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Write to a DynamoDB table. This is a new version of the DynamoDB action. It allows you to write each attribute in an MQTT message payload into a separate DynamoDB column.</p>\n@param dynamoDBv2 Write to a DynamoDB table. This is a new version of the DynamoDB action. It allows you to write each attribute in an MQTT message payload into a separate DynamoDB column.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDynamoDBv2",
          "getterDocumentation" : "/**<p>Write to a DynamoDB table. This is a new version of the DynamoDB action. It allows you to write each attribute in an MQTT message payload into a separate DynamoDB column.</p>\n@return Write to a DynamoDB table. This is a new version of the DynamoDB action. It allows you to write each attribute in an MQTT message payload into a separate DynamoDB column.*/",
          "getterMethodName" : "getDynamoDBv2",
          "getterModel" : {
            "returnType" : "DynamoDBv2Action",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "dynamoDBv2",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "dynamoDBv2",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "DynamoDBv2",
          "setterDocumentation" : "/**<p>Write to a DynamoDB table. This is a new version of the DynamoDB action. It allows you to write each attribute in an MQTT message payload into a separate DynamoDB column.</p>\n@param dynamoDBv2 Write to a DynamoDB table. This is a new version of the DynamoDB action. It allows you to write each attribute in an MQTT message payload into a separate DynamoDB column.*/",
          "setterMethodName" : "setDynamoDBv2",
          "setterModel" : {
            "variableDeclarationType" : "DynamoDBv2Action",
            "variableName" : "dynamoDBv2",
            "variableType" : "DynamoDBv2Action",
            "documentation" : "",
            "simpleType" : "DynamoDBv2Action",
            "variableSetterType" : "DynamoDBv2Action"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Write to a DynamoDB table. This is a new version of the DynamoDB action. It allows you to write each attribute in an MQTT message payload into a separate DynamoDB column.</p>\n@param dynamoDBv2 Write to a DynamoDB table. This is a new version of the DynamoDB action. It allows you to write each attribute in an MQTT message payload into a separate DynamoDB column.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "DynamoDBv2Action",
            "variableName" : "dynamoDBv2",
            "variableType" : "DynamoDBv2Action",
            "documentation" : "<p>Write to a DynamoDB table. This is a new version of the DynamoDB action. It allows you to write each attribute in an MQTT message payload into a separate DynamoDB column.</p>",
            "simpleType" : "DynamoDBv2Action",
            "variableSetterType" : "DynamoDBv2Action"
          },
          "xmlNameSpaceUri" : null
        },
        "Elasticsearch" : {
          "c2jName" : "elasticsearch",
          "c2jShape" : "ElasticsearchAction",
          "deprecated" : false,
          "documentation" : "<p>Write data to an Amazon Elasticsearch Service domain.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Write data to an Amazon Elasticsearch Service domain.</p>\n@param elasticsearch Write data to an Amazon Elasticsearch Service domain.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withElasticsearch",
          "getterDocumentation" : "/**<p>Write data to an Amazon Elasticsearch Service domain.</p>\n@return Write data to an Amazon Elasticsearch Service domain.*/",
          "getterMethodName" : "getElasticsearch",
          "getterModel" : {
            "returnType" : "ElasticsearchAction",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "elasticsearch",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "elasticsearch",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Elasticsearch",
          "setterDocumentation" : "/**<p>Write data to an Amazon Elasticsearch Service domain.</p>\n@param elasticsearch Write data to an Amazon Elasticsearch Service domain.*/",
          "setterMethodName" : "setElasticsearch",
          "setterModel" : {
            "variableDeclarationType" : "ElasticsearchAction",
            "variableName" : "elasticsearch",
            "variableType" : "ElasticsearchAction",
            "documentation" : "",
            "simpleType" : "ElasticsearchAction",
            "variableSetterType" : "ElasticsearchAction"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Write data to an Amazon Elasticsearch Service domain.</p>\n@param elasticsearch Write data to an Amazon Elasticsearch Service domain.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "ElasticsearchAction",
            "variableName" : "elasticsearch",
            "variableType" : "ElasticsearchAction",
            "documentation" : "<p>Write data to an Amazon Elasticsearch Service domain.</p>",
            "simpleType" : "ElasticsearchAction",
            "variableSetterType" : "ElasticsearchAction"
          },
          "xmlNameSpaceUri" : null
        },
        "Firehose" : {
          "c2jName" : "firehose",
          "c2jShape" : "FirehoseAction",
          "deprecated" : false,
          "documentation" : "<p>Write to an Amazon Kinesis Firehose stream.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Write to an Amazon Kinesis Firehose stream.</p>\n@param firehose Write to an Amazon Kinesis Firehose stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFirehose",
          "getterDocumentation" : "/**<p>Write to an Amazon Kinesis Firehose stream.</p>\n@return Write to an Amazon Kinesis Firehose stream.*/",
          "getterMethodName" : "getFirehose",
          "getterModel" : {
            "returnType" : "FirehoseAction",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "firehose",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "firehose",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Firehose",
          "setterDocumentation" : "/**<p>Write to an Amazon Kinesis Firehose stream.</p>\n@param firehose Write to an Amazon Kinesis Firehose stream.*/",
          "setterMethodName" : "setFirehose",
          "setterModel" : {
            "variableDeclarationType" : "FirehoseAction",
            "variableName" : "firehose",
            "variableType" : "FirehoseAction",
            "documentation" : "",
            "simpleType" : "FirehoseAction",
            "variableSetterType" : "FirehoseAction"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Write to an Amazon Kinesis Firehose stream.</p>\n@param firehose Write to an Amazon Kinesis Firehose stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "FirehoseAction",
            "variableName" : "firehose",
            "variableType" : "FirehoseAction",
            "documentation" : "<p>Write to an Amazon Kinesis Firehose stream.</p>",
            "simpleType" : "FirehoseAction",
            "variableSetterType" : "FirehoseAction"
          },
          "xmlNameSpaceUri" : null
        },
        "Kinesis" : {
          "c2jName" : "kinesis",
          "c2jShape" : "KinesisAction",
          "deprecated" : false,
          "documentation" : "<p>Write data to an Amazon Kinesis stream.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Write data to an Amazon Kinesis stream.</p>\n@param kinesis Write data to an Amazon Kinesis stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withKinesis",
          "getterDocumentation" : "/**<p>Write data to an Amazon Kinesis stream.</p>\n@return Write data to an Amazon Kinesis stream.*/",
          "getterMethodName" : "getKinesis",
          "getterModel" : {
            "returnType" : "KinesisAction",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "kinesis",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "kinesis",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Kinesis",
          "setterDocumentation" : "/**<p>Write data to an Amazon Kinesis stream.</p>\n@param kinesis Write data to an Amazon Kinesis stream.*/",
          "setterMethodName" : "setKinesis",
          "setterModel" : {
            "variableDeclarationType" : "KinesisAction",
            "variableName" : "kinesis",
            "variableType" : "KinesisAction",
            "documentation" : "",
            "simpleType" : "KinesisAction",
            "variableSetterType" : "KinesisAction"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Write data to an Amazon Kinesis stream.</p>\n@param kinesis Write data to an Amazon Kinesis stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "KinesisAction",
            "variableName" : "kinesis",
            "variableType" : "KinesisAction",
            "documentation" : "<p>Write data to an Amazon Kinesis stream.</p>",
            "simpleType" : "KinesisAction",
            "variableSetterType" : "KinesisAction"
          },
          "xmlNameSpaceUri" : null
        },
        "Lambda" : {
          "c2jName" : "lambda",
          "c2jShape" : "LambdaAction",
          "deprecated" : false,
          "documentation" : "<p>Invoke a Lambda function.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Invoke a Lambda function.</p>\n@param lambda Invoke a Lambda function.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLambda",
          "getterDocumentation" : "/**<p>Invoke a Lambda function.</p>\n@return Invoke a Lambda function.*/",
          "getterMethodName" : "getLambda",
          "getterModel" : {
            "returnType" : "LambdaAction",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "lambda",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "lambda",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Lambda",
          "setterDocumentation" : "/**<p>Invoke a Lambda function.</p>\n@param lambda Invoke a Lambda function.*/",
          "setterMethodName" : "setLambda",
          "setterModel" : {
            "variableDeclarationType" : "LambdaAction",
            "variableName" : "lambda",
            "variableType" : "LambdaAction",
            "documentation" : "",
            "simpleType" : "LambdaAction",
            "variableSetterType" : "LambdaAction"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Invoke a Lambda function.</p>\n@param lambda Invoke a Lambda function.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "LambdaAction",
            "variableName" : "lambda",
            "variableType" : "LambdaAction",
            "documentation" : "<p>Invoke a Lambda function.</p>",
            "simpleType" : "LambdaAction",
            "variableSetterType" : "LambdaAction"
          },
          "xmlNameSpaceUri" : null
        },
        "Republish" : {
          "c2jName" : "republish",
          "c2jShape" : "RepublishAction",
          "deprecated" : false,
          "documentation" : "<p>Publish to another MQTT topic.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Publish to another MQTT topic.</p>\n@param republish Publish to another MQTT topic.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepublish",
          "getterDocumentation" : "/**<p>Publish to another MQTT topic.</p>\n@return Publish to another MQTT topic.*/",
          "getterMethodName" : "getRepublish",
          "getterModel" : {
            "returnType" : "RepublishAction",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "republish",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "republish",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Republish",
          "setterDocumentation" : "/**<p>Publish to another MQTT topic.</p>\n@param republish Publish to another MQTT topic.*/",
          "setterMethodName" : "setRepublish",
          "setterModel" : {
            "variableDeclarationType" : "RepublishAction",
            "variableName" : "republish",
            "variableType" : "RepublishAction",
            "documentation" : "",
            "simpleType" : "RepublishAction",
            "variableSetterType" : "RepublishAction"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Publish to another MQTT topic.</p>\n@param republish Publish to another MQTT topic.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "RepublishAction",
            "variableName" : "republish",
            "variableType" : "RepublishAction",
            "documentation" : "<p>Publish to another MQTT topic.</p>",
            "simpleType" : "RepublishAction",
            "variableSetterType" : "RepublishAction"
          },
          "xmlNameSpaceUri" : null
        },
        "S3" : {
          "c2jName" : "s3",
          "c2jShape" : "S3Action",
          "deprecated" : false,
          "documentation" : "<p>Write to an Amazon S3 bucket.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Write to an Amazon S3 bucket.</p>\n@param s3 Write to an Amazon S3 bucket.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withS3",
          "getterDocumentation" : "/**<p>Write to an Amazon S3 bucket.</p>\n@return Write to an Amazon S3 bucket.*/",
          "getterMethodName" : "getS3",
          "getterModel" : {
            "returnType" : "S3Action",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "s3",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "s3",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "S3",
          "setterDocumentation" : "/**<p>Write to an Amazon S3 bucket.</p>\n@param s3 Write to an Amazon S3 bucket.*/",
          "setterMethodName" : "setS3",
          "setterModel" : {
            "variableDeclarationType" : "S3Action",
            "variableName" : "s3",
            "variableType" : "S3Action",
            "documentation" : "",
            "simpleType" : "S3Action",
            "variableSetterType" : "S3Action"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Write to an Amazon S3 bucket.</p>\n@param s3 Write to an Amazon S3 bucket.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "S3Action",
            "variableName" : "s3",
            "variableType" : "S3Action",
            "documentation" : "<p>Write to an Amazon S3 bucket.</p>",
            "simpleType" : "S3Action",
            "variableSetterType" : "S3Action"
          },
          "xmlNameSpaceUri" : null
        },
        "Salesforce" : {
          "c2jName" : "salesforce",
          "c2jShape" : "SalesforceAction",
          "deprecated" : false,
          "documentation" : "<p>Send a message to a Salesforce IoT Cloud Input Stream.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Send a message to a Salesforce IoT Cloud Input Stream.</p>\n@param salesforce Send a message to a Salesforce IoT Cloud Input Stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSalesforce",
          "getterDocumentation" : "/**<p>Send a message to a Salesforce IoT Cloud Input Stream.</p>\n@return Send a message to a Salesforce IoT Cloud Input Stream.*/",
          "getterMethodName" : "getSalesforce",
          "getterModel" : {
            "returnType" : "SalesforceAction",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "salesforce",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "salesforce",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Salesforce",
          "setterDocumentation" : "/**<p>Send a message to a Salesforce IoT Cloud Input Stream.</p>\n@param salesforce Send a message to a Salesforce IoT Cloud Input Stream.*/",
          "setterMethodName" : "setSalesforce",
          "setterModel" : {
            "variableDeclarationType" : "SalesforceAction",
            "variableName" : "salesforce",
            "variableType" : "SalesforceAction",
            "documentation" : "",
            "simpleType" : "SalesforceAction",
            "variableSetterType" : "SalesforceAction"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Send a message to a Salesforce IoT Cloud Input Stream.</p>\n@param salesforce Send a message to a Salesforce IoT Cloud Input Stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "SalesforceAction",
            "variableName" : "salesforce",
            "variableType" : "SalesforceAction",
            "documentation" : "<p>Send a message to a Salesforce IoT Cloud Input Stream.</p>",
            "simpleType" : "SalesforceAction",
            "variableSetterType" : "SalesforceAction"
          },
          "xmlNameSpaceUri" : null
        },
        "Sns" : {
          "c2jName" : "sns",
          "c2jShape" : "SnsAction",
          "deprecated" : false,
          "documentation" : "<p>Publish to an Amazon SNS topic.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Publish to an Amazon SNS topic.</p>\n@param sns Publish to an Amazon SNS topic.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSns",
          "getterDocumentation" : "/**<p>Publish to an Amazon SNS topic.</p>\n@return Publish to an Amazon SNS topic.*/",
          "getterMethodName" : "getSns",
          "getterModel" : {
            "returnType" : "SnsAction",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "sns",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "sns",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Sns",
          "setterDocumentation" : "/**<p>Publish to an Amazon SNS topic.</p>\n@param sns Publish to an Amazon SNS topic.*/",
          "setterMethodName" : "setSns",
          "setterModel" : {
            "variableDeclarationType" : "SnsAction",
            "variableName" : "sns",
            "variableType" : "SnsAction",
            "documentation" : "",
            "simpleType" : "SnsAction",
            "variableSetterType" : "SnsAction"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Publish to an Amazon SNS topic.</p>\n@param sns Publish to an Amazon SNS topic.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "SnsAction",
            "variableName" : "sns",
            "variableType" : "SnsAction",
            "documentation" : "<p>Publish to an Amazon SNS topic.</p>",
            "simpleType" : "SnsAction",
            "variableSetterType" : "SnsAction"
          },
          "xmlNameSpaceUri" : null
        },
        "Sqs" : {
          "c2jName" : "sqs",
          "c2jShape" : "SqsAction",
          "deprecated" : false,
          "documentation" : "<p>Publish to an Amazon SQS queue.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Publish to an Amazon SQS queue.</p>\n@param sqs Publish to an Amazon SQS queue.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSqs",
          "getterDocumentation" : "/**<p>Publish to an Amazon SQS queue.</p>\n@return Publish to an Amazon SQS queue.*/",
          "getterMethodName" : "getSqs",
          "getterModel" : {
            "returnType" : "SqsAction",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "sqs",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "sqs",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Sqs",
          "setterDocumentation" : "/**<p>Publish to an Amazon SQS queue.</p>\n@param sqs Publish to an Amazon SQS queue.*/",
          "setterMethodName" : "setSqs",
          "setterModel" : {
            "variableDeclarationType" : "SqsAction",
            "variableName" : "sqs",
            "variableType" : "SqsAction",
            "documentation" : "",
            "simpleType" : "SqsAction",
            "variableSetterType" : "SqsAction"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Publish to an Amazon SQS queue.</p>\n@param sqs Publish to an Amazon SQS queue.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "SqsAction",
            "variableName" : "sqs",
            "variableType" : "SqsAction",
            "documentation" : "<p>Publish to an Amazon SQS queue.</p>",
            "simpleType" : "SqsAction",
            "variableSetterType" : "SqsAction"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Action",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "Action",
        "variableName" : "action",
        "variableType" : "Action",
        "documentation" : null,
        "simpleType" : "Action",
        "variableSetterType" : "Action"
      },
      "wrapper" : false
    },
    "AttachPrincipalPolicyRequest" : {
      "c2jName" : "AttachPrincipalPolicyRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the AttachPrincipalPolicy operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : true,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "AttachPrincipalPolicy",
        "locationName" : null,
        "requestUri" : "/principal-policies/{policyName}",
        "target" : null,
        "verb" : "PUT",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "policyName",
        "c2jShape" : "PolicyName",
        "deprecated" : false,
        "documentation" : "<p>The policy name.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicyName",
        "getterDocumentation" : "/**<p>The policy name.</p>\n@return The policy name.*/",
        "getterMethodName" : "getPolicyName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "policyName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "policyName",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PolicyName",
        "setterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.*/",
        "setterMethodName" : "setPolicyName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyName",
          "variableType" : "String",
          "documentation" : "<p>The policy name.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "principal",
        "c2jShape" : "Principal",
        "deprecated" : false,
        "documentation" : "<p>The principal, which can be a certificate ARN (as returned from the CreateCertificate operation) or an Amazon Cognito ID.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The principal, which can be a certificate ARN (as returned from the CreateCertificate operation) or an Amazon Cognito ID.</p>\n@param principal The principal, which can be a certificate ARN (as returned from the CreateCertificate operation) or an Amazon Cognito ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPrincipal",
        "getterDocumentation" : "/**<p>The principal, which can be a certificate ARN (as returned from the CreateCertificate operation) or an Amazon Cognito ID.</p>\n@return The principal, which can be a certificate ARN (as returned from the CreateCertificate operation) or an Amazon Cognito ID.*/",
        "getterMethodName" : "getPrincipal",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "x-amzn-iot-principal",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "x-amzn-iot-principal",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Principal",
        "setterDocumentation" : "/**<p>The principal, which can be a certificate ARN (as returned from the CreateCertificate operation) or an Amazon Cognito ID.</p>\n@param principal The principal, which can be a certificate ARN (as returned from the CreateCertificate operation) or an Amazon Cognito ID.*/",
        "setterMethodName" : "setPrincipal",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "principal",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The principal, which can be a certificate ARN (as returned from the CreateCertificate operation) or an Amazon Cognito ID.</p>\n@param principal The principal, which can be a certificate ARN (as returned from the CreateCertificate operation) or an Amazon Cognito ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "principal",
          "variableType" : "String",
          "documentation" : "<p>The principal, which can be a certificate ARN (as returned from the CreateCertificate operation) or an Amazon Cognito ID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "PolicyName" : {
          "c2jName" : "policyName",
          "c2jShape" : "PolicyName",
          "deprecated" : false,
          "documentation" : "<p>The policy name.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicyName",
          "getterDocumentation" : "/**<p>The policy name.</p>\n@return The policy name.*/",
          "getterMethodName" : "getPolicyName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "policyName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "policyName",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PolicyName",
          "setterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.*/",
          "setterMethodName" : "setPolicyName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyName",
            "variableType" : "String",
            "documentation" : "<p>The policy name.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Principal" : {
          "c2jName" : "principal",
          "c2jShape" : "Principal",
          "deprecated" : false,
          "documentation" : "<p>The principal, which can be a certificate ARN (as returned from the CreateCertificate operation) or an Amazon Cognito ID.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The principal, which can be a certificate ARN (as returned from the CreateCertificate operation) or an Amazon Cognito ID.</p>\n@param principal The principal, which can be a certificate ARN (as returned from the CreateCertificate operation) or an Amazon Cognito ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPrincipal",
          "getterDocumentation" : "/**<p>The principal, which can be a certificate ARN (as returned from the CreateCertificate operation) or an Amazon Cognito ID.</p>\n@return The principal, which can be a certificate ARN (as returned from the CreateCertificate operation) or an Amazon Cognito ID.*/",
          "getterMethodName" : "getPrincipal",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "x-amzn-iot-principal",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "x-amzn-iot-principal",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Principal",
          "setterDocumentation" : "/**<p>The principal, which can be a certificate ARN (as returned from the CreateCertificate operation) or an Amazon Cognito ID.</p>\n@param principal The principal, which can be a certificate ARN (as returned from the CreateCertificate operation) or an Amazon Cognito ID.*/",
          "setterMethodName" : "setPrincipal",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "principal",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The principal, which can be a certificate ARN (as returned from the CreateCertificate operation) or an Amazon Cognito ID.</p>\n@param principal The principal, which can be a certificate ARN (as returned from the CreateCertificate operation) or an Amazon Cognito ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "principal",
            "variableType" : "String",
            "documentation" : "<p>The principal, which can be a certificate ARN (as returned from the CreateCertificate operation) or an Amazon Cognito ID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "policyName", "principal" ],
      "shapeName" : "AttachPrincipalPolicyRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "AttachPrincipalPolicyRequest",
        "variableName" : "attachPrincipalPolicyRequest",
        "variableType" : "AttachPrincipalPolicyRequest",
        "documentation" : null,
        "simpleType" : "AttachPrincipalPolicyRequest",
        "variableSetterType" : "AttachPrincipalPolicyRequest"
      },
      "wrapper" : false
    },
    "AttachPrincipalPolicyResult" : {
      "c2jName" : "AttachPrincipalPolicyResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : null,
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "AttachPrincipalPolicyResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "AttachPrincipalPolicyResult",
        "variableName" : "attachPrincipalPolicyResult",
        "variableType" : "AttachPrincipalPolicyResult",
        "documentation" : null,
        "simpleType" : "AttachPrincipalPolicyResult",
        "variableSetterType" : "AttachPrincipalPolicyResult"
      },
      "wrapper" : false
    },
    "AttachThingPrincipalRequest" : {
      "c2jName" : "AttachThingPrincipalRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the AttachThingPrincipal operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : true,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "AttachThingPrincipal",
        "locationName" : null,
        "requestUri" : "/things/{thingName}/principals",
        "target" : null,
        "verb" : "PUT",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "thingName",
        "c2jShape" : "ThingName",
        "deprecated" : false,
        "documentation" : "<p>The name of the thing.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withThingName",
        "getterDocumentation" : "/**<p>The name of the thing.</p>\n@return The name of the thing.*/",
        "getterMethodName" : "getThingName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "thingName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "thingName",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ThingName",
        "setterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.*/",
        "setterMethodName" : "setThingName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingName",
          "variableType" : "String",
          "documentation" : "<p>The name of the thing.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "principal",
        "c2jShape" : "Principal",
        "deprecated" : false,
        "documentation" : "<p>The principal, such as a certificate or other credential.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The principal, such as a certificate or other credential.</p>\n@param principal The principal, such as a certificate or other credential.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPrincipal",
        "getterDocumentation" : "/**<p>The principal, such as a certificate or other credential.</p>\n@return The principal, such as a certificate or other credential.*/",
        "getterMethodName" : "getPrincipal",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "x-amzn-principal",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "x-amzn-principal",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Principal",
        "setterDocumentation" : "/**<p>The principal, such as a certificate or other credential.</p>\n@param principal The principal, such as a certificate or other credential.*/",
        "setterMethodName" : "setPrincipal",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "principal",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The principal, such as a certificate or other credential.</p>\n@param principal The principal, such as a certificate or other credential.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "principal",
          "variableType" : "String",
          "documentation" : "<p>The principal, such as a certificate or other credential.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Principal" : {
          "c2jName" : "principal",
          "c2jShape" : "Principal",
          "deprecated" : false,
          "documentation" : "<p>The principal, such as a certificate or other credential.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The principal, such as a certificate or other credential.</p>\n@param principal The principal, such as a certificate or other credential.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPrincipal",
          "getterDocumentation" : "/**<p>The principal, such as a certificate or other credential.</p>\n@return The principal, such as a certificate or other credential.*/",
          "getterMethodName" : "getPrincipal",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "x-amzn-principal",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "x-amzn-principal",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Principal",
          "setterDocumentation" : "/**<p>The principal, such as a certificate or other credential.</p>\n@param principal The principal, such as a certificate or other credential.*/",
          "setterMethodName" : "setPrincipal",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "principal",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The principal, such as a certificate or other credential.</p>\n@param principal The principal, such as a certificate or other credential.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "principal",
            "variableType" : "String",
            "documentation" : "<p>The principal, such as a certificate or other credential.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ThingName" : {
          "c2jName" : "thingName",
          "c2jShape" : "ThingName",
          "deprecated" : false,
          "documentation" : "<p>The name of the thing.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withThingName",
          "getterDocumentation" : "/**<p>The name of the thing.</p>\n@return The name of the thing.*/",
          "getterMethodName" : "getThingName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "thingName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "thingName",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ThingName",
          "setterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.*/",
          "setterMethodName" : "setThingName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingName",
            "variableType" : "String",
            "documentation" : "<p>The name of the thing.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "thingName", "principal" ],
      "shapeName" : "AttachThingPrincipalRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "AttachThingPrincipalRequest",
        "variableName" : "attachThingPrincipalRequest",
        "variableType" : "AttachThingPrincipalRequest",
        "documentation" : null,
        "simpleType" : "AttachThingPrincipalRequest",
        "variableSetterType" : "AttachThingPrincipalRequest"
      },
      "wrapper" : false
    },
    "AttachThingPrincipalResult" : {
      "c2jName" : "AttachThingPrincipalResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The output from the AttachThingPrincipal operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "AttachThingPrincipalResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "AttachThingPrincipalResult",
        "variableName" : "attachThingPrincipalResult",
        "variableType" : "AttachThingPrincipalResult",
        "documentation" : null,
        "simpleType" : "AttachThingPrincipalResult",
        "variableSetterType" : "AttachThingPrincipalResult"
      },
      "wrapper" : false
    },
    "AttributePayload" : {
      "c2jName" : "AttributePayload",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The attribute payload.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "attributes",
        "c2jShape" : "Attributes",
        "deprecated" : false,
        "documentation" : "<p>A JSON string containing up to three key-value pair in JSON format. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code> </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A JSON string containing up to three key-value pair in JSON format. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code> </p>\n@param attributes A JSON string containing up to three key-value pair in JSON format. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAttributes",
        "getterDocumentation" : "/**<p>A JSON string containing up to three key-value pair in JSON format. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code> </p>\n@return A JSON string containing up to three key-value pair in JSON format. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code>*/",
        "getterMethodName" : "getAttributes",
        "getterModel" : {
          "returnType" : "java.util.Map<String,String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "attributes",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "attributes",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : true,
        "mapModel" : {
          "implType" : "java.util.HashMap",
          "interfaceType" : "java.util.Map",
          "keyLocationName" : "key",
          "keyModel" : null,
          "keyType" : "String",
          "valueLocationName" : "value",
          "valueModel" : {
            "c2jName" : "value",
            "c2jShape" : "AttributeValue",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withValue",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getValue",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "value",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "value",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Value",
            "setterDocumentation" : "/**\n@param value */",
            "setterMethodName" : "setValue",
            "setterModel" : {
              "variableDeclarationType" : "String",
              "variableName" : "value",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "String",
              "variableName" : "value",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "valueType" : "String",
          "entryType" : "Map.Entry<String, String>",
          "keySimple" : true,
          "templateImplType" : "java.util.HashMap<String,String>",
          "templateType" : "java.util.Map<String,String>",
          "valueList" : false,
          "valueSimple" : true
        },
        "marshallingTargetClass" : "Map",
        "marshallingType" : "MAP",
        "name" : "Attributes",
        "setterDocumentation" : "/**<p>A JSON string containing up to three key-value pair in JSON format. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code> </p>\n@param attributes A JSON string containing up to three key-value pair in JSON format. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code>*/",
        "setterMethodName" : "setAttributes",
        "setterModel" : {
          "variableDeclarationType" : "java.util.Map<String,String>",
          "variableName" : "attributes",
          "variableType" : "java.util.Map<String,String>",
          "documentation" : "",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A JSON string containing up to three key-value pair in JSON format. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code> </p>\n@param attributes A JSON string containing up to three key-value pair in JSON format. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.Map<String,String>",
          "variableName" : "attributes",
          "variableType" : "java.util.Map<String,String>",
          "documentation" : "<p>A JSON string containing up to three key-value pair in JSON format. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code> </p>",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "merge",
        "c2jShape" : "Flag",
        "deprecated" : false,
        "documentation" : "<p>Specifies whether the list of attributes provided in the <code>AttributePayload</code> is merged with the attributes stored in the registry, instead of overwriting them.</p> <p>To remove an attribute, call <code>UpdateThing</code> with an empty attribute value.</p> <note> <p>The <code>merge</code> attribute is only valid when calling <code>UpdateThing</code>.</p> </note>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Specifies whether the list of attributes provided in the <code>AttributePayload</code> is merged with the attributes stored in the registry, instead of overwriting them.</p> <p>To remove an attribute, call <code>UpdateThing</code> with an empty attribute value.</p> <note> <p>The <code>merge</code> attribute is only valid when calling <code>UpdateThing</code>.</p> </note>\n@param merge Specifies whether the list of attributes provided in the <code>AttributePayload</code> is merged with the attributes stored in the registry, instead of overwriting them.</p> <p>To remove an attribute, call <code>UpdateThing</code> with an empty attribute value.</p> <note> <p>The <code>merge</code> attribute is only valid when calling <code>UpdateThing</code>.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMerge",
        "getterDocumentation" : "/**<p>Specifies whether the list of attributes provided in the <code>AttributePayload</code> is merged with the attributes stored in the registry, instead of overwriting them.</p> <p>To remove an attribute, call <code>UpdateThing</code> with an empty attribute value.</p> <note> <p>The <code>merge</code> attribute is only valid when calling <code>UpdateThing</code>.</p> </note>\n@return Specifies whether the list of attributes provided in the <code>AttributePayload</code> is merged with the attributes stored in the registry, instead of overwriting them.</p> <p>To remove an attribute, call <code>UpdateThing</code> with an empty attribute value.</p> <note> <p>The <code>merge</code> attribute is only valid when calling <code>UpdateThing</code>.</p>*/",
        "getterMethodName" : "getMerge",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "merge",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "merge",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "Merge",
        "setterDocumentation" : "/**<p>Specifies whether the list of attributes provided in the <code>AttributePayload</code> is merged with the attributes stored in the registry, instead of overwriting them.</p> <p>To remove an attribute, call <code>UpdateThing</code> with an empty attribute value.</p> <note> <p>The <code>merge</code> attribute is only valid when calling <code>UpdateThing</code>.</p> </note>\n@param merge Specifies whether the list of attributes provided in the <code>AttributePayload</code> is merged with the attributes stored in the registry, instead of overwriting them.</p> <p>To remove an attribute, call <code>UpdateThing</code> with an empty attribute value.</p> <note> <p>The <code>merge</code> attribute is only valid when calling <code>UpdateThing</code>.</p>*/",
        "setterMethodName" : "setMerge",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "merge",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Specifies whether the list of attributes provided in the <code>AttributePayload</code> is merged with the attributes stored in the registry, instead of overwriting them.</p> <p>To remove an attribute, call <code>UpdateThing</code> with an empty attribute value.</p> <note> <p>The <code>merge</code> attribute is only valid when calling <code>UpdateThing</code>.</p> </note>\n@param merge Specifies whether the list of attributes provided in the <code>AttributePayload</code> is merged with the attributes stored in the registry, instead of overwriting them.</p> <p>To remove an attribute, call <code>UpdateThing</code> with an empty attribute value.</p> <note> <p>The <code>merge</code> attribute is only valid when calling <code>UpdateThing</code>.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "merge",
          "variableType" : "Boolean",
          "documentation" : "<p>Specifies whether the list of attributes provided in the <code>AttributePayload</code> is merged with the attributes stored in the registry, instead of overwriting them.</p> <p>To remove an attribute, call <code>UpdateThing</code> with an empty attribute value.</p> <note> <p>The <code>merge</code> attribute is only valid when calling <code>UpdateThing</code>.</p> </note>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Attributes" : {
          "c2jName" : "attributes",
          "c2jShape" : "Attributes",
          "deprecated" : false,
          "documentation" : "<p>A JSON string containing up to three key-value pair in JSON format. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code> </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A JSON string containing up to three key-value pair in JSON format. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code> </p>\n@param attributes A JSON string containing up to three key-value pair in JSON format. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAttributes",
          "getterDocumentation" : "/**<p>A JSON string containing up to three key-value pair in JSON format. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code> </p>\n@return A JSON string containing up to three key-value pair in JSON format. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code>*/",
          "getterMethodName" : "getAttributes",
          "getterModel" : {
            "returnType" : "java.util.Map<String,String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "attributes",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "attributes",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : true,
          "mapModel" : {
            "implType" : "java.util.HashMap",
            "interfaceType" : "java.util.Map",
            "keyLocationName" : "key",
            "keyModel" : null,
            "keyType" : "String",
            "valueLocationName" : "value",
            "valueModel" : {
              "c2jName" : "value",
              "c2jShape" : "AttributeValue",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withValue",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getValue",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "value",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "value",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Value",
              "setterDocumentation" : "/**\n@param value */",
              "setterMethodName" : "setValue",
              "setterModel" : {
                "variableDeclarationType" : "String",
                "variableName" : "value",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "String",
                "variableName" : "value",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "valueType" : "String",
            "entryType" : "Map.Entry<String, String>",
            "keySimple" : true,
            "templateImplType" : "java.util.HashMap<String,String>",
            "templateType" : "java.util.Map<String,String>",
            "valueList" : false,
            "valueSimple" : true
          },
          "marshallingTargetClass" : "Map",
          "marshallingType" : "MAP",
          "name" : "Attributes",
          "setterDocumentation" : "/**<p>A JSON string containing up to three key-value pair in JSON format. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code> </p>\n@param attributes A JSON string containing up to three key-value pair in JSON format. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code>*/",
          "setterMethodName" : "setAttributes",
          "setterModel" : {
            "variableDeclarationType" : "java.util.Map<String,String>",
            "variableName" : "attributes",
            "variableType" : "java.util.Map<String,String>",
            "documentation" : "",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A JSON string containing up to three key-value pair in JSON format. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code> </p>\n@param attributes A JSON string containing up to three key-value pair in JSON format. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.Map<String,String>",
            "variableName" : "attributes",
            "variableType" : "java.util.Map<String,String>",
            "documentation" : "<p>A JSON string containing up to three key-value pair in JSON format. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code> </p>",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "xmlNameSpaceUri" : null
        },
        "Merge" : {
          "c2jName" : "merge",
          "c2jShape" : "Flag",
          "deprecated" : false,
          "documentation" : "<p>Specifies whether the list of attributes provided in the <code>AttributePayload</code> is merged with the attributes stored in the registry, instead of overwriting them.</p> <p>To remove an attribute, call <code>UpdateThing</code> with an empty attribute value.</p> <note> <p>The <code>merge</code> attribute is only valid when calling <code>UpdateThing</code>.</p> </note>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Specifies whether the list of attributes provided in the <code>AttributePayload</code> is merged with the attributes stored in the registry, instead of overwriting them.</p> <p>To remove an attribute, call <code>UpdateThing</code> with an empty attribute value.</p> <note> <p>The <code>merge</code> attribute is only valid when calling <code>UpdateThing</code>.</p> </note>\n@param merge Specifies whether the list of attributes provided in the <code>AttributePayload</code> is merged with the attributes stored in the registry, instead of overwriting them.</p> <p>To remove an attribute, call <code>UpdateThing</code> with an empty attribute value.</p> <note> <p>The <code>merge</code> attribute is only valid when calling <code>UpdateThing</code>.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMerge",
          "getterDocumentation" : "/**<p>Specifies whether the list of attributes provided in the <code>AttributePayload</code> is merged with the attributes stored in the registry, instead of overwriting them.</p> <p>To remove an attribute, call <code>UpdateThing</code> with an empty attribute value.</p> <note> <p>The <code>merge</code> attribute is only valid when calling <code>UpdateThing</code>.</p> </note>\n@return Specifies whether the list of attributes provided in the <code>AttributePayload</code> is merged with the attributes stored in the registry, instead of overwriting them.</p> <p>To remove an attribute, call <code>UpdateThing</code> with an empty attribute value.</p> <note> <p>The <code>merge</code> attribute is only valid when calling <code>UpdateThing</code>.</p>*/",
          "getterMethodName" : "getMerge",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "merge",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "merge",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "Merge",
          "setterDocumentation" : "/**<p>Specifies whether the list of attributes provided in the <code>AttributePayload</code> is merged with the attributes stored in the registry, instead of overwriting them.</p> <p>To remove an attribute, call <code>UpdateThing</code> with an empty attribute value.</p> <note> <p>The <code>merge</code> attribute is only valid when calling <code>UpdateThing</code>.</p> </note>\n@param merge Specifies whether the list of attributes provided in the <code>AttributePayload</code> is merged with the attributes stored in the registry, instead of overwriting them.</p> <p>To remove an attribute, call <code>UpdateThing</code> with an empty attribute value.</p> <note> <p>The <code>merge</code> attribute is only valid when calling <code>UpdateThing</code>.</p>*/",
          "setterMethodName" : "setMerge",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "merge",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Specifies whether the list of attributes provided in the <code>AttributePayload</code> is merged with the attributes stored in the registry, instead of overwriting them.</p> <p>To remove an attribute, call <code>UpdateThing</code> with an empty attribute value.</p> <note> <p>The <code>merge</code> attribute is only valid when calling <code>UpdateThing</code>.</p> </note>\n@param merge Specifies whether the list of attributes provided in the <code>AttributePayload</code> is merged with the attributes stored in the registry, instead of overwriting them.</p> <p>To remove an attribute, call <code>UpdateThing</code> with an empty attribute value.</p> <note> <p>The <code>merge</code> attribute is only valid when calling <code>UpdateThing</code>.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "merge",
            "variableType" : "Boolean",
            "documentation" : "<p>Specifies whether the list of attributes provided in the <code>AttributePayload</code> is merged with the attributes stored in the registry, instead of overwriting them.</p> <p>To remove an attribute, call <code>UpdateThing</code> with an empty attribute value.</p> <note> <p>The <code>merge</code> attribute is only valid when calling <code>UpdateThing</code>.</p> </note>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "AttributePayload",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "AttributePayload",
        "variableName" : "attributePayload",
        "variableType" : "AttributePayload",
        "documentation" : null,
        "simpleType" : "AttributePayload",
        "variableSetterType" : "AttributePayload"
      },
      "wrapper" : false
    },
    "AutoRegistrationStatus" : {
      "c2jName" : "AutoRegistrationStatus",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "ENABLE",
        "value" : "ENABLE"
      }, {
        "name" : "DISABLE",
        "value" : "DISABLE"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "AutoRegistrationStatus",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "AutoRegistrationStatus",
        "variableName" : "autoRegistrationStatus",
        "variableType" : "AutoRegistrationStatus",
        "documentation" : null,
        "simpleType" : "AutoRegistrationStatus",
        "variableSetterType" : "AutoRegistrationStatus"
      },
      "wrapper" : false
    },
    "CACertificate" : {
      "c2jName" : "CACertificate",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A CA certificate.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "certificateArn",
        "c2jShape" : "CertificateArn",
        "deprecated" : false,
        "documentation" : "<p>The ARN of the CA certificate.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ARN of the CA certificate.</p>\n@param certificateArn The ARN of the CA certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCertificateArn",
        "getterDocumentation" : "/**<p>The ARN of the CA certificate.</p>\n@return The ARN of the CA certificate.*/",
        "getterMethodName" : "getCertificateArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "certificateArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "certificateArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CertificateArn",
        "setterDocumentation" : "/**<p>The ARN of the CA certificate.</p>\n@param certificateArn The ARN of the CA certificate.*/",
        "setterMethodName" : "setCertificateArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ARN of the CA certificate.</p>\n@param certificateArn The ARN of the CA certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateArn",
          "variableType" : "String",
          "documentation" : "<p>The ARN of the CA certificate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "certificateId",
        "c2jShape" : "CertificateId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the CA certificate.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the CA certificate.</p>\n@param certificateId The ID of the CA certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCertificateId",
        "getterDocumentation" : "/**<p>The ID of the CA certificate.</p>\n@return The ID of the CA certificate.*/",
        "getterMethodName" : "getCertificateId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "certificateId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "certificateId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CertificateId",
        "setterDocumentation" : "/**<p>The ID of the CA certificate.</p>\n@param certificateId The ID of the CA certificate.*/",
        "setterMethodName" : "setCertificateId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the CA certificate.</p>\n@param certificateId The ID of the CA certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the CA certificate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "status",
        "c2jShape" : "CACertificateStatus",
        "deprecated" : false,
        "documentation" : "<p>The status of the CA certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.</p>",
        "enumType" : "CACertificateStatus",
        "fluentSetterDocumentation" : "/**<p>The status of the CA certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.</p>\n@param status The status of the CA certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CACertificateStatus*/",
        "fluentSetterMethodName" : "withStatus",
        "getterDocumentation" : "/**<p>The status of the CA certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.</p>\n@return The status of the CA certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.\n@see CACertificateStatus*/",
        "getterMethodName" : "getStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "status",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "status",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Status",
        "setterDocumentation" : "/**<p>The status of the CA certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.</p>\n@param status The status of the CA certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.\n@see CACertificateStatus*/",
        "setterMethodName" : "setStatus",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The status of the CA certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.</p>\n@param status The status of the CA certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CACertificateStatus*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "<p>The status of the CA certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "creationDate",
        "c2jShape" : "DateType",
        "deprecated" : false,
        "documentation" : "<p>The date the CA certificate was created.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date the CA certificate was created.</p>\n@param creationDate The date the CA certificate was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCreationDate",
        "getterDocumentation" : "/**<p>The date the CA certificate was created.</p>\n@return The date the CA certificate was created.*/",
        "getterMethodName" : "getCreationDate",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "creationDate",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "creationDate",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "CreationDate",
        "setterDocumentation" : "/**<p>The date the CA certificate was created.</p>\n@param creationDate The date the CA certificate was created.*/",
        "setterMethodName" : "setCreationDate",
        "setterModel" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "creationDate",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date the CA certificate was created.</p>\n@param creationDate The date the CA certificate was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "creationDate",
          "variableType" : "java.util.Date",
          "documentation" : "<p>The date the CA certificate was created.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CertificateArn" : {
          "c2jName" : "certificateArn",
          "c2jShape" : "CertificateArn",
          "deprecated" : false,
          "documentation" : "<p>The ARN of the CA certificate.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ARN of the CA certificate.</p>\n@param certificateArn The ARN of the CA certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCertificateArn",
          "getterDocumentation" : "/**<p>The ARN of the CA certificate.</p>\n@return The ARN of the CA certificate.*/",
          "getterMethodName" : "getCertificateArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "certificateArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "certificateArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CertificateArn",
          "setterDocumentation" : "/**<p>The ARN of the CA certificate.</p>\n@param certificateArn The ARN of the CA certificate.*/",
          "setterMethodName" : "setCertificateArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ARN of the CA certificate.</p>\n@param certificateArn The ARN of the CA certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateArn",
            "variableType" : "String",
            "documentation" : "<p>The ARN of the CA certificate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CertificateId" : {
          "c2jName" : "certificateId",
          "c2jShape" : "CertificateId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the CA certificate.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the CA certificate.</p>\n@param certificateId The ID of the CA certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCertificateId",
          "getterDocumentation" : "/**<p>The ID of the CA certificate.</p>\n@return The ID of the CA certificate.*/",
          "getterMethodName" : "getCertificateId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "certificateId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "certificateId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CertificateId",
          "setterDocumentation" : "/**<p>The ID of the CA certificate.</p>\n@param certificateId The ID of the CA certificate.*/",
          "setterMethodName" : "setCertificateId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the CA certificate.</p>\n@param certificateId The ID of the CA certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the CA certificate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CreationDate" : {
          "c2jName" : "creationDate",
          "c2jShape" : "DateType",
          "deprecated" : false,
          "documentation" : "<p>The date the CA certificate was created.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date the CA certificate was created.</p>\n@param creationDate The date the CA certificate was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCreationDate",
          "getterDocumentation" : "/**<p>The date the CA certificate was created.</p>\n@return The date the CA certificate was created.*/",
          "getterMethodName" : "getCreationDate",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "creationDate",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "creationDate",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "CreationDate",
          "setterDocumentation" : "/**<p>The date the CA certificate was created.</p>\n@param creationDate The date the CA certificate was created.*/",
          "setterMethodName" : "setCreationDate",
          "setterModel" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "creationDate",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date the CA certificate was created.</p>\n@param creationDate The date the CA certificate was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "creationDate",
            "variableType" : "java.util.Date",
            "documentation" : "<p>The date the CA certificate was created.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "Status" : {
          "c2jName" : "status",
          "c2jShape" : "CACertificateStatus",
          "deprecated" : false,
          "documentation" : "<p>The status of the CA certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.</p>",
          "enumType" : "CACertificateStatus",
          "fluentSetterDocumentation" : "/**<p>The status of the CA certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.</p>\n@param status The status of the CA certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CACertificateStatus*/",
          "fluentSetterMethodName" : "withStatus",
          "getterDocumentation" : "/**<p>The status of the CA certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.</p>\n@return The status of the CA certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.\n@see CACertificateStatus*/",
          "getterMethodName" : "getStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "status",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "status",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Status",
          "setterDocumentation" : "/**<p>The status of the CA certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.</p>\n@param status The status of the CA certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.\n@see CACertificateStatus*/",
          "setterMethodName" : "setStatus",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The status of the CA certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.</p>\n@param status The status of the CA certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CACertificateStatus*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "<p>The status of the CA certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CACertificate",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "CACertificate",
        "variableName" : "cACertificate",
        "variableType" : "CACertificate",
        "documentation" : null,
        "simpleType" : "CACertificate",
        "variableSetterType" : "CACertificate"
      },
      "wrapper" : false
    },
    "CACertificateDescription" : {
      "c2jName" : "CACertificateDescription",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Describes a CA certificate.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "certificateArn",
        "c2jShape" : "CertificateArn",
        "deprecated" : false,
        "documentation" : "<p>The CA certificate ARN.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The CA certificate ARN.</p>\n@param certificateArn The CA certificate ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCertificateArn",
        "getterDocumentation" : "/**<p>The CA certificate ARN.</p>\n@return The CA certificate ARN.*/",
        "getterMethodName" : "getCertificateArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "certificateArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "certificateArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CertificateArn",
        "setterDocumentation" : "/**<p>The CA certificate ARN.</p>\n@param certificateArn The CA certificate ARN.*/",
        "setterMethodName" : "setCertificateArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The CA certificate ARN.</p>\n@param certificateArn The CA certificate ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateArn",
          "variableType" : "String",
          "documentation" : "<p>The CA certificate ARN.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "certificateId",
        "c2jShape" : "CertificateId",
        "deprecated" : false,
        "documentation" : "<p>The CA certificate ID.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The CA certificate ID.</p>\n@param certificateId The CA certificate ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCertificateId",
        "getterDocumentation" : "/**<p>The CA certificate ID.</p>\n@return The CA certificate ID.*/",
        "getterMethodName" : "getCertificateId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "certificateId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "certificateId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CertificateId",
        "setterDocumentation" : "/**<p>The CA certificate ID.</p>\n@param certificateId The CA certificate ID.*/",
        "setterMethodName" : "setCertificateId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The CA certificate ID.</p>\n@param certificateId The CA certificate ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateId",
          "variableType" : "String",
          "documentation" : "<p>The CA certificate ID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "status",
        "c2jShape" : "CACertificateStatus",
        "deprecated" : false,
        "documentation" : "<p>The status of a CA certificate.</p>",
        "enumType" : "CACertificateStatus",
        "fluentSetterDocumentation" : "/**<p>The status of a CA certificate.</p>\n@param status The status of a CA certificate.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CACertificateStatus*/",
        "fluentSetterMethodName" : "withStatus",
        "getterDocumentation" : "/**<p>The status of a CA certificate.</p>\n@return The status of a CA certificate.\n@see CACertificateStatus*/",
        "getterMethodName" : "getStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "status",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "status",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Status",
        "setterDocumentation" : "/**<p>The status of a CA certificate.</p>\n@param status The status of a CA certificate.\n@see CACertificateStatus*/",
        "setterMethodName" : "setStatus",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The status of a CA certificate.</p>\n@param status The status of a CA certificate.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CACertificateStatus*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "<p>The status of a CA certificate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "certificatePem",
        "c2jShape" : "CertificatePem",
        "deprecated" : false,
        "documentation" : "<p>The CA certificate data, in PEM format.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The CA certificate data, in PEM format.</p>\n@param certificatePem The CA certificate data, in PEM format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCertificatePem",
        "getterDocumentation" : "/**<p>The CA certificate data, in PEM format.</p>\n@return The CA certificate data, in PEM format.*/",
        "getterMethodName" : "getCertificatePem",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "certificatePem",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "certificatePem",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CertificatePem",
        "setterDocumentation" : "/**<p>The CA certificate data, in PEM format.</p>\n@param certificatePem The CA certificate data, in PEM format.*/",
        "setterMethodName" : "setCertificatePem",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificatePem",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The CA certificate data, in PEM format.</p>\n@param certificatePem The CA certificate data, in PEM format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificatePem",
          "variableType" : "String",
          "documentation" : "<p>The CA certificate data, in PEM format.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ownedBy",
        "c2jShape" : "AwsAccountId",
        "deprecated" : false,
        "documentation" : "<p>The owner of the CA certificate.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The owner of the CA certificate.</p>\n@param ownedBy The owner of the CA certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withOwnedBy",
        "getterDocumentation" : "/**<p>The owner of the CA certificate.</p>\n@return The owner of the CA certificate.*/",
        "getterMethodName" : "getOwnedBy",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ownedBy",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ownedBy",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "OwnedBy",
        "setterDocumentation" : "/**<p>The owner of the CA certificate.</p>\n@param ownedBy The owner of the CA certificate.*/",
        "setterMethodName" : "setOwnedBy",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "ownedBy",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The owner of the CA certificate.</p>\n@param ownedBy The owner of the CA certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "ownedBy",
          "variableType" : "String",
          "documentation" : "<p>The owner of the CA certificate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "creationDate",
        "c2jShape" : "DateType",
        "deprecated" : false,
        "documentation" : "<p>The date the CA certificate was created.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date the CA certificate was created.</p>\n@param creationDate The date the CA certificate was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCreationDate",
        "getterDocumentation" : "/**<p>The date the CA certificate was created.</p>\n@return The date the CA certificate was created.*/",
        "getterMethodName" : "getCreationDate",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "creationDate",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "creationDate",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "CreationDate",
        "setterDocumentation" : "/**<p>The date the CA certificate was created.</p>\n@param creationDate The date the CA certificate was created.*/",
        "setterMethodName" : "setCreationDate",
        "setterModel" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "creationDate",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date the CA certificate was created.</p>\n@param creationDate The date the CA certificate was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "creationDate",
          "variableType" : "java.util.Date",
          "documentation" : "<p>The date the CA certificate was created.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "autoRegistrationStatus",
        "c2jShape" : "AutoRegistrationStatus",
        "deprecated" : false,
        "documentation" : "<p>Whether the CA certificate configured for auto registration of device certificates. Valid values are \"ENABLE\" and \"DISABLE\"</p>",
        "enumType" : "AutoRegistrationStatus",
        "fluentSetterDocumentation" : "/**<p>Whether the CA certificate configured for auto registration of device certificates. Valid values are \"ENABLE\" and \"DISABLE\"</p>\n@param autoRegistrationStatus Whether the CA certificate configured for auto registration of device certificates. Valid values are \"ENABLE\" and \"DISABLE\"\n@return Returns a reference to this object so that method calls can be chained together.\n@see AutoRegistrationStatus*/",
        "fluentSetterMethodName" : "withAutoRegistrationStatus",
        "getterDocumentation" : "/**<p>Whether the CA certificate configured for auto registration of device certificates. Valid values are \"ENABLE\" and \"DISABLE\"</p>\n@return Whether the CA certificate configured for auto registration of device certificates. Valid values are \"ENABLE\" and \"DISABLE\"\n@see AutoRegistrationStatus*/",
        "getterMethodName" : "getAutoRegistrationStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "autoRegistrationStatus",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "autoRegistrationStatus",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "AutoRegistrationStatus",
        "setterDocumentation" : "/**<p>Whether the CA certificate configured for auto registration of device certificates. Valid values are \"ENABLE\" and \"DISABLE\"</p>\n@param autoRegistrationStatus Whether the CA certificate configured for auto registration of device certificates. Valid values are \"ENABLE\" and \"DISABLE\"\n@see AutoRegistrationStatus*/",
        "setterMethodName" : "setAutoRegistrationStatus",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "autoRegistrationStatus",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Whether the CA certificate configured for auto registration of device certificates. Valid values are \"ENABLE\" and \"DISABLE\"</p>\n@param autoRegistrationStatus Whether the CA certificate configured for auto registration of device certificates. Valid values are \"ENABLE\" and \"DISABLE\"\n@return Returns a reference to this object so that method calls can be chained together.\n@see AutoRegistrationStatus*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "autoRegistrationStatus",
          "variableType" : "String",
          "documentation" : "<p>Whether the CA certificate configured for auto registration of device certificates. Valid values are \"ENABLE\" and \"DISABLE\"</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AutoRegistrationStatus" : {
          "c2jName" : "autoRegistrationStatus",
          "c2jShape" : "AutoRegistrationStatus",
          "deprecated" : false,
          "documentation" : "<p>Whether the CA certificate configured for auto registration of device certificates. Valid values are \"ENABLE\" and \"DISABLE\"</p>",
          "enumType" : "AutoRegistrationStatus",
          "fluentSetterDocumentation" : "/**<p>Whether the CA certificate configured for auto registration of device certificates. Valid values are \"ENABLE\" and \"DISABLE\"</p>\n@param autoRegistrationStatus Whether the CA certificate configured for auto registration of device certificates. Valid values are \"ENABLE\" and \"DISABLE\"\n@return Returns a reference to this object so that method calls can be chained together.\n@see AutoRegistrationStatus*/",
          "fluentSetterMethodName" : "withAutoRegistrationStatus",
          "getterDocumentation" : "/**<p>Whether the CA certificate configured for auto registration of device certificates. Valid values are \"ENABLE\" and \"DISABLE\"</p>\n@return Whether the CA certificate configured for auto registration of device certificates. Valid values are \"ENABLE\" and \"DISABLE\"\n@see AutoRegistrationStatus*/",
          "getterMethodName" : "getAutoRegistrationStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "autoRegistrationStatus",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "autoRegistrationStatus",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "AutoRegistrationStatus",
          "setterDocumentation" : "/**<p>Whether the CA certificate configured for auto registration of device certificates. Valid values are \"ENABLE\" and \"DISABLE\"</p>\n@param autoRegistrationStatus Whether the CA certificate configured for auto registration of device certificates. Valid values are \"ENABLE\" and \"DISABLE\"\n@see AutoRegistrationStatus*/",
          "setterMethodName" : "setAutoRegistrationStatus",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "autoRegistrationStatus",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Whether the CA certificate configured for auto registration of device certificates. Valid values are \"ENABLE\" and \"DISABLE\"</p>\n@param autoRegistrationStatus Whether the CA certificate configured for auto registration of device certificates. Valid values are \"ENABLE\" and \"DISABLE\"\n@return Returns a reference to this object so that method calls can be chained together.\n@see AutoRegistrationStatus*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "autoRegistrationStatus",
            "variableType" : "String",
            "documentation" : "<p>Whether the CA certificate configured for auto registration of device certificates. Valid values are \"ENABLE\" and \"DISABLE\"</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CertificateArn" : {
          "c2jName" : "certificateArn",
          "c2jShape" : "CertificateArn",
          "deprecated" : false,
          "documentation" : "<p>The CA certificate ARN.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The CA certificate ARN.</p>\n@param certificateArn The CA certificate ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCertificateArn",
          "getterDocumentation" : "/**<p>The CA certificate ARN.</p>\n@return The CA certificate ARN.*/",
          "getterMethodName" : "getCertificateArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "certificateArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "certificateArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CertificateArn",
          "setterDocumentation" : "/**<p>The CA certificate ARN.</p>\n@param certificateArn The CA certificate ARN.*/",
          "setterMethodName" : "setCertificateArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The CA certificate ARN.</p>\n@param certificateArn The CA certificate ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateArn",
            "variableType" : "String",
            "documentation" : "<p>The CA certificate ARN.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CertificateId" : {
          "c2jName" : "certificateId",
          "c2jShape" : "CertificateId",
          "deprecated" : false,
          "documentation" : "<p>The CA certificate ID.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The CA certificate ID.</p>\n@param certificateId The CA certificate ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCertificateId",
          "getterDocumentation" : "/**<p>The CA certificate ID.</p>\n@return The CA certificate ID.*/",
          "getterMethodName" : "getCertificateId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "certificateId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "certificateId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CertificateId",
          "setterDocumentation" : "/**<p>The CA certificate ID.</p>\n@param certificateId The CA certificate ID.*/",
          "setterMethodName" : "setCertificateId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The CA certificate ID.</p>\n@param certificateId The CA certificate ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateId",
            "variableType" : "String",
            "documentation" : "<p>The CA certificate ID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CertificatePem" : {
          "c2jName" : "certificatePem",
          "c2jShape" : "CertificatePem",
          "deprecated" : false,
          "documentation" : "<p>The CA certificate data, in PEM format.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The CA certificate data, in PEM format.</p>\n@param certificatePem The CA certificate data, in PEM format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCertificatePem",
          "getterDocumentation" : "/**<p>The CA certificate data, in PEM format.</p>\n@return The CA certificate data, in PEM format.*/",
          "getterMethodName" : "getCertificatePem",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "certificatePem",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "certificatePem",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CertificatePem",
          "setterDocumentation" : "/**<p>The CA certificate data, in PEM format.</p>\n@param certificatePem The CA certificate data, in PEM format.*/",
          "setterMethodName" : "setCertificatePem",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificatePem",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The CA certificate data, in PEM format.</p>\n@param certificatePem The CA certificate data, in PEM format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificatePem",
            "variableType" : "String",
            "documentation" : "<p>The CA certificate data, in PEM format.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CreationDate" : {
          "c2jName" : "creationDate",
          "c2jShape" : "DateType",
          "deprecated" : false,
          "documentation" : "<p>The date the CA certificate was created.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date the CA certificate was created.</p>\n@param creationDate The date the CA certificate was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCreationDate",
          "getterDocumentation" : "/**<p>The date the CA certificate was created.</p>\n@return The date the CA certificate was created.*/",
          "getterMethodName" : "getCreationDate",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "creationDate",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "creationDate",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "CreationDate",
          "setterDocumentation" : "/**<p>The date the CA certificate was created.</p>\n@param creationDate The date the CA certificate was created.*/",
          "setterMethodName" : "setCreationDate",
          "setterModel" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "creationDate",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date the CA certificate was created.</p>\n@param creationDate The date the CA certificate was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "creationDate",
            "variableType" : "java.util.Date",
            "documentation" : "<p>The date the CA certificate was created.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "OwnedBy" : {
          "c2jName" : "ownedBy",
          "c2jShape" : "AwsAccountId",
          "deprecated" : false,
          "documentation" : "<p>The owner of the CA certificate.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The owner of the CA certificate.</p>\n@param ownedBy The owner of the CA certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withOwnedBy",
          "getterDocumentation" : "/**<p>The owner of the CA certificate.</p>\n@return The owner of the CA certificate.*/",
          "getterMethodName" : "getOwnedBy",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ownedBy",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ownedBy",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "OwnedBy",
          "setterDocumentation" : "/**<p>The owner of the CA certificate.</p>\n@param ownedBy The owner of the CA certificate.*/",
          "setterMethodName" : "setOwnedBy",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "ownedBy",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The owner of the CA certificate.</p>\n@param ownedBy The owner of the CA certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "ownedBy",
            "variableType" : "String",
            "documentation" : "<p>The owner of the CA certificate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Status" : {
          "c2jName" : "status",
          "c2jShape" : "CACertificateStatus",
          "deprecated" : false,
          "documentation" : "<p>The status of a CA certificate.</p>",
          "enumType" : "CACertificateStatus",
          "fluentSetterDocumentation" : "/**<p>The status of a CA certificate.</p>\n@param status The status of a CA certificate.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CACertificateStatus*/",
          "fluentSetterMethodName" : "withStatus",
          "getterDocumentation" : "/**<p>The status of a CA certificate.</p>\n@return The status of a CA certificate.\n@see CACertificateStatus*/",
          "getterMethodName" : "getStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "status",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "status",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Status",
          "setterDocumentation" : "/**<p>The status of a CA certificate.</p>\n@param status The status of a CA certificate.\n@see CACertificateStatus*/",
          "setterMethodName" : "setStatus",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The status of a CA certificate.</p>\n@param status The status of a CA certificate.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CACertificateStatus*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "<p>The status of a CA certificate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CACertificateDescription",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "CACertificateDescription",
        "variableName" : "cACertificateDescription",
        "variableType" : "CACertificateDescription",
        "documentation" : null,
        "simpleType" : "CACertificateDescription",
        "variableSetterType" : "CACertificateDescription"
      },
      "wrapper" : false
    },
    "CACertificateStatus" : {
      "c2jName" : "CACertificateStatus",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "ACTIVE",
        "value" : "ACTIVE"
      }, {
        "name" : "INACTIVE",
        "value" : "INACTIVE"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CACertificateStatus",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "CACertificateStatus",
        "variableName" : "cACertificateStatus",
        "variableType" : "CACertificateStatus",
        "documentation" : null,
        "simpleType" : "CACertificateStatus",
        "variableSetterType" : "CACertificateStatus"
      },
      "wrapper" : false
    },
    "CancelCertificateTransferRequest" : {
      "c2jName" : "CancelCertificateTransferRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the CancelCertificateTransfer operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "CancelCertificateTransfer",
        "locationName" : null,
        "requestUri" : "/cancel-certificate-transfer/{certificateId}",
        "target" : null,
        "verb" : "PATCH",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "certificateId",
        "c2jShape" : "CertificateId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the certificate.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCertificateId",
        "getterDocumentation" : "/**<p>The ID of the certificate.</p>\n@return The ID of the certificate.*/",
        "getterMethodName" : "getCertificateId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "certificateId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "certificateId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CertificateId",
        "setterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.*/",
        "setterMethodName" : "setCertificateId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the certificate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CertificateId" : {
          "c2jName" : "certificateId",
          "c2jShape" : "CertificateId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the certificate.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCertificateId",
          "getterDocumentation" : "/**<p>The ID of the certificate.</p>\n@return The ID of the certificate.*/",
          "getterMethodName" : "getCertificateId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "certificateId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "certificateId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CertificateId",
          "setterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.*/",
          "setterMethodName" : "setCertificateId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the certificate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "certificateId" ],
      "shapeName" : "CancelCertificateTransferRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "CancelCertificateTransferRequest",
        "variableName" : "cancelCertificateTransferRequest",
        "variableType" : "CancelCertificateTransferRequest",
        "documentation" : null,
        "simpleType" : "CancelCertificateTransferRequest",
        "variableSetterType" : "CancelCertificateTransferRequest"
      },
      "wrapper" : false
    },
    "CancelCertificateTransferResult" : {
      "c2jName" : "CancelCertificateTransferResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : null,
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CancelCertificateTransferResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "CancelCertificateTransferResult",
        "variableName" : "cancelCertificateTransferResult",
        "variableType" : "CancelCertificateTransferResult",
        "documentation" : null,
        "simpleType" : "CancelCertificateTransferResult",
        "variableSetterType" : "CancelCertificateTransferResult"
      },
      "wrapper" : false
    },
    "CannedAccessControlList" : {
      "c2jName" : "CannedAccessControlList",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "Private",
        "value" : "private"
      }, {
        "name" : "PublicRead",
        "value" : "public-read"
      }, {
        "name" : "PublicReadWrite",
        "value" : "public-read-write"
      }, {
        "name" : "AwsExecRead",
        "value" : "aws-exec-read"
      }, {
        "name" : "AuthenticatedRead",
        "value" : "authenticated-read"
      }, {
        "name" : "BucketOwnerRead",
        "value" : "bucket-owner-read"
      }, {
        "name" : "BucketOwnerFullControl",
        "value" : "bucket-owner-full-control"
      }, {
        "name" : "LogDeliveryWrite",
        "value" : "log-delivery-write"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CannedAccessControlList",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "CannedAccessControlList",
        "variableName" : "cannedAccessControlList",
        "variableType" : "CannedAccessControlList",
        "documentation" : null,
        "simpleType" : "CannedAccessControlList",
        "variableSetterType" : "CannedAccessControlList"
      },
      "wrapper" : false
    },
    "Certificate" : {
      "c2jName" : "Certificate",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Information about a certificate.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "certificateArn",
        "c2jShape" : "CertificateArn",
        "deprecated" : false,
        "documentation" : "<p>The ARN of the certificate.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param certificateArn The ARN of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCertificateArn",
        "getterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@return The ARN of the certificate.*/",
        "getterMethodName" : "getCertificateArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "certificateArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "certificateArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CertificateArn",
        "setterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param certificateArn The ARN of the certificate.*/",
        "setterMethodName" : "setCertificateArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param certificateArn The ARN of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateArn",
          "variableType" : "String",
          "documentation" : "<p>The ARN of the certificate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "certificateId",
        "c2jShape" : "CertificateId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the certificate.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCertificateId",
        "getterDocumentation" : "/**<p>The ID of the certificate.</p>\n@return The ID of the certificate.*/",
        "getterMethodName" : "getCertificateId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "certificateId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "certificateId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CertificateId",
        "setterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.*/",
        "setterMethodName" : "setCertificateId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the certificate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "status",
        "c2jShape" : "CertificateStatus",
        "deprecated" : false,
        "documentation" : "<p>The status of the certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.</p>",
        "enumType" : "CertificateStatus",
        "fluentSetterDocumentation" : "/**<p>The status of the certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.</p>\n@param status The status of the certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CertificateStatus*/",
        "fluentSetterMethodName" : "withStatus",
        "getterDocumentation" : "/**<p>The status of the certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.</p>\n@return The status of the certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.\n@see CertificateStatus*/",
        "getterMethodName" : "getStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "status",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "status",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Status",
        "setterDocumentation" : "/**<p>The status of the certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.</p>\n@param status The status of the certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.\n@see CertificateStatus*/",
        "setterMethodName" : "setStatus",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The status of the certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.</p>\n@param status The status of the certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CertificateStatus*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "<p>The status of the certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "creationDate",
        "c2jShape" : "DateType",
        "deprecated" : false,
        "documentation" : "<p>The date and time the certificate was created.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date and time the certificate was created.</p>\n@param creationDate The date and time the certificate was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCreationDate",
        "getterDocumentation" : "/**<p>The date and time the certificate was created.</p>\n@return The date and time the certificate was created.*/",
        "getterMethodName" : "getCreationDate",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "creationDate",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "creationDate",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "CreationDate",
        "setterDocumentation" : "/**<p>The date and time the certificate was created.</p>\n@param creationDate The date and time the certificate was created.*/",
        "setterMethodName" : "setCreationDate",
        "setterModel" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "creationDate",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date and time the certificate was created.</p>\n@param creationDate The date and time the certificate was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "creationDate",
          "variableType" : "java.util.Date",
          "documentation" : "<p>The date and time the certificate was created.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CertificateArn" : {
          "c2jName" : "certificateArn",
          "c2jShape" : "CertificateArn",
          "deprecated" : false,
          "documentation" : "<p>The ARN of the certificate.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param certificateArn The ARN of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCertificateArn",
          "getterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@return The ARN of the certificate.*/",
          "getterMethodName" : "getCertificateArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "certificateArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "certificateArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CertificateArn",
          "setterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param certificateArn The ARN of the certificate.*/",
          "setterMethodName" : "setCertificateArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param certificateArn The ARN of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateArn",
            "variableType" : "String",
            "documentation" : "<p>The ARN of the certificate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CertificateId" : {
          "c2jName" : "certificateId",
          "c2jShape" : "CertificateId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the certificate.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCertificateId",
          "getterDocumentation" : "/**<p>The ID of the certificate.</p>\n@return The ID of the certificate.*/",
          "getterMethodName" : "getCertificateId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "certificateId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "certificateId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CertificateId",
          "setterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.*/",
          "setterMethodName" : "setCertificateId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the certificate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CreationDate" : {
          "c2jName" : "creationDate",
          "c2jShape" : "DateType",
          "deprecated" : false,
          "documentation" : "<p>The date and time the certificate was created.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date and time the certificate was created.</p>\n@param creationDate The date and time the certificate was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCreationDate",
          "getterDocumentation" : "/**<p>The date and time the certificate was created.</p>\n@return The date and time the certificate was created.*/",
          "getterMethodName" : "getCreationDate",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "creationDate",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "creationDate",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "CreationDate",
          "setterDocumentation" : "/**<p>The date and time the certificate was created.</p>\n@param creationDate The date and time the certificate was created.*/",
          "setterMethodName" : "setCreationDate",
          "setterModel" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "creationDate",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date and time the certificate was created.</p>\n@param creationDate The date and time the certificate was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "creationDate",
            "variableType" : "java.util.Date",
            "documentation" : "<p>The date and time the certificate was created.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "Status" : {
          "c2jName" : "status",
          "c2jShape" : "CertificateStatus",
          "deprecated" : false,
          "documentation" : "<p>The status of the certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.</p>",
          "enumType" : "CertificateStatus",
          "fluentSetterDocumentation" : "/**<p>The status of the certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.</p>\n@param status The status of the certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CertificateStatus*/",
          "fluentSetterMethodName" : "withStatus",
          "getterDocumentation" : "/**<p>The status of the certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.</p>\n@return The status of the certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.\n@see CertificateStatus*/",
          "getterMethodName" : "getStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "status",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "status",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Status",
          "setterDocumentation" : "/**<p>The status of the certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.</p>\n@param status The status of the certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.\n@see CertificateStatus*/",
          "setterMethodName" : "setStatus",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The status of the certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.</p>\n@param status The status of the certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CertificateStatus*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "<p>The status of the certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Certificate",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "Certificate",
        "variableName" : "certificate",
        "variableType" : "Certificate",
        "documentation" : null,
        "simpleType" : "Certificate",
        "variableSetterType" : "Certificate"
      },
      "wrapper" : false
    },
    "CertificateConflictException" : {
      "c2jName" : "CertificateConflictException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Unable to verify the CA certificate used to sign the device certificate you are attempting to register. This is happens when you have registered more than one CA certificate that has the same subject field and public key.</p>",
      "enums" : null,
      "errorCode" : "CertificateConflictException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CertificateConflictException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "CertificateConflictException",
        "variableName" : "certificateConflictException",
        "variableType" : "CertificateConflictException",
        "documentation" : null,
        "simpleType" : "CertificateConflictException",
        "variableSetterType" : "CertificateConflictException"
      },
      "wrapper" : false
    },
    "CertificateDescription" : {
      "c2jName" : "CertificateDescription",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Describes a certificate.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "certificateArn",
        "c2jShape" : "CertificateArn",
        "deprecated" : false,
        "documentation" : "<p>The ARN of the certificate.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param certificateArn The ARN of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCertificateArn",
        "getterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@return The ARN of the certificate.*/",
        "getterMethodName" : "getCertificateArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "certificateArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "certificateArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CertificateArn",
        "setterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param certificateArn The ARN of the certificate.*/",
        "setterMethodName" : "setCertificateArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param certificateArn The ARN of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateArn",
          "variableType" : "String",
          "documentation" : "<p>The ARN of the certificate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "certificateId",
        "c2jShape" : "CertificateId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the certificate.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCertificateId",
        "getterDocumentation" : "/**<p>The ID of the certificate.</p>\n@return The ID of the certificate.*/",
        "getterMethodName" : "getCertificateId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "certificateId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "certificateId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CertificateId",
        "setterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.*/",
        "setterMethodName" : "setCertificateId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the certificate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "caCertificateId",
        "c2jShape" : "CertificateId",
        "deprecated" : false,
        "documentation" : "<p>The certificate ID of the CA certificate used to sign this certificate.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The certificate ID of the CA certificate used to sign this certificate.</p>\n@param caCertificateId The certificate ID of the CA certificate used to sign this certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCaCertificateId",
        "getterDocumentation" : "/**<p>The certificate ID of the CA certificate used to sign this certificate.</p>\n@return The certificate ID of the CA certificate used to sign this certificate.*/",
        "getterMethodName" : "getCaCertificateId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "caCertificateId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "caCertificateId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CaCertificateId",
        "setterDocumentation" : "/**<p>The certificate ID of the CA certificate used to sign this certificate.</p>\n@param caCertificateId The certificate ID of the CA certificate used to sign this certificate.*/",
        "setterMethodName" : "setCaCertificateId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "caCertificateId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The certificate ID of the CA certificate used to sign this certificate.</p>\n@param caCertificateId The certificate ID of the CA certificate used to sign this certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "caCertificateId",
          "variableType" : "String",
          "documentation" : "<p>The certificate ID of the CA certificate used to sign this certificate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "status",
        "c2jShape" : "CertificateStatus",
        "deprecated" : false,
        "documentation" : "<p>The status of the certificate.</p>",
        "enumType" : "CertificateStatus",
        "fluentSetterDocumentation" : "/**<p>The status of the certificate.</p>\n@param status The status of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CertificateStatus*/",
        "fluentSetterMethodName" : "withStatus",
        "getterDocumentation" : "/**<p>The status of the certificate.</p>\n@return The status of the certificate.\n@see CertificateStatus*/",
        "getterMethodName" : "getStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "status",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "status",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Status",
        "setterDocumentation" : "/**<p>The status of the certificate.</p>\n@param status The status of the certificate.\n@see CertificateStatus*/",
        "setterMethodName" : "setStatus",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The status of the certificate.</p>\n@param status The status of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CertificateStatus*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "<p>The status of the certificate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "certificatePem",
        "c2jShape" : "CertificatePem",
        "deprecated" : false,
        "documentation" : "<p>The certificate data, in PEM format.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@param certificatePem The certificate data, in PEM format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCertificatePem",
        "getterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@return The certificate data, in PEM format.*/",
        "getterMethodName" : "getCertificatePem",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "certificatePem",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "certificatePem",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CertificatePem",
        "setterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@param certificatePem The certificate data, in PEM format.*/",
        "setterMethodName" : "setCertificatePem",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificatePem",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@param certificatePem The certificate data, in PEM format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificatePem",
          "variableType" : "String",
          "documentation" : "<p>The certificate data, in PEM format.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ownedBy",
        "c2jShape" : "AwsAccountId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the AWS account that owns the certificate.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the AWS account that owns the certificate.</p>\n@param ownedBy The ID of the AWS account that owns the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withOwnedBy",
        "getterDocumentation" : "/**<p>The ID of the AWS account that owns the certificate.</p>\n@return The ID of the AWS account that owns the certificate.*/",
        "getterMethodName" : "getOwnedBy",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ownedBy",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ownedBy",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "OwnedBy",
        "setterDocumentation" : "/**<p>The ID of the AWS account that owns the certificate.</p>\n@param ownedBy The ID of the AWS account that owns the certificate.*/",
        "setterMethodName" : "setOwnedBy",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "ownedBy",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the AWS account that owns the certificate.</p>\n@param ownedBy The ID of the AWS account that owns the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "ownedBy",
          "variableType" : "String",
          "documentation" : "<p>The ID of the AWS account that owns the certificate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "previousOwnedBy",
        "c2jShape" : "AwsAccountId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the AWS account of the previous owner of the certificate.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the AWS account of the previous owner of the certificate.</p>\n@param previousOwnedBy The ID of the AWS account of the previous owner of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPreviousOwnedBy",
        "getterDocumentation" : "/**<p>The ID of the AWS account of the previous owner of the certificate.</p>\n@return The ID of the AWS account of the previous owner of the certificate.*/",
        "getterMethodName" : "getPreviousOwnedBy",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "previousOwnedBy",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "previousOwnedBy",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PreviousOwnedBy",
        "setterDocumentation" : "/**<p>The ID of the AWS account of the previous owner of the certificate.</p>\n@param previousOwnedBy The ID of the AWS account of the previous owner of the certificate.*/",
        "setterMethodName" : "setPreviousOwnedBy",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "previousOwnedBy",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the AWS account of the previous owner of the certificate.</p>\n@param previousOwnedBy The ID of the AWS account of the previous owner of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "previousOwnedBy",
          "variableType" : "String",
          "documentation" : "<p>The ID of the AWS account of the previous owner of the certificate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "creationDate",
        "c2jShape" : "DateType",
        "deprecated" : false,
        "documentation" : "<p>The date and time the certificate was created.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date and time the certificate was created.</p>\n@param creationDate The date and time the certificate was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCreationDate",
        "getterDocumentation" : "/**<p>The date and time the certificate was created.</p>\n@return The date and time the certificate was created.*/",
        "getterMethodName" : "getCreationDate",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "creationDate",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "creationDate",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "CreationDate",
        "setterDocumentation" : "/**<p>The date and time the certificate was created.</p>\n@param creationDate The date and time the certificate was created.*/",
        "setterMethodName" : "setCreationDate",
        "setterModel" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "creationDate",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date and time the certificate was created.</p>\n@param creationDate The date and time the certificate was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "creationDate",
          "variableType" : "java.util.Date",
          "documentation" : "<p>The date and time the certificate was created.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "lastModifiedDate",
        "c2jShape" : "DateType",
        "deprecated" : false,
        "documentation" : "<p>The date and time the certificate was last modified.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date and time the certificate was last modified.</p>\n@param lastModifiedDate The date and time the certificate was last modified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLastModifiedDate",
        "getterDocumentation" : "/**<p>The date and time the certificate was last modified.</p>\n@return The date and time the certificate was last modified.*/",
        "getterMethodName" : "getLastModifiedDate",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "lastModifiedDate",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "lastModifiedDate",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "LastModifiedDate",
        "setterDocumentation" : "/**<p>The date and time the certificate was last modified.</p>\n@param lastModifiedDate The date and time the certificate was last modified.*/",
        "setterMethodName" : "setLastModifiedDate",
        "setterModel" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "lastModifiedDate",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date and time the certificate was last modified.</p>\n@param lastModifiedDate The date and time the certificate was last modified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "lastModifiedDate",
          "variableType" : "java.util.Date",
          "documentation" : "<p>The date and time the certificate was last modified.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "transferData",
        "c2jShape" : "TransferData",
        "deprecated" : false,
        "documentation" : "<p>The transfer data.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The transfer data.</p>\n@param transferData The transfer data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTransferData",
        "getterDocumentation" : "/**<p>The transfer data.</p>\n@return The transfer data.*/",
        "getterMethodName" : "getTransferData",
        "getterModel" : {
          "returnType" : "TransferData",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "transferData",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "transferData",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "TransferData",
        "setterDocumentation" : "/**<p>The transfer data.</p>\n@param transferData The transfer data.*/",
        "setterMethodName" : "setTransferData",
        "setterModel" : {
          "variableDeclarationType" : "TransferData",
          "variableName" : "transferData",
          "variableType" : "TransferData",
          "documentation" : "",
          "simpleType" : "TransferData",
          "variableSetterType" : "TransferData"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The transfer data.</p>\n@param transferData The transfer data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "TransferData",
          "variableName" : "transferData",
          "variableType" : "TransferData",
          "documentation" : "<p>The transfer data.</p>",
          "simpleType" : "TransferData",
          "variableSetterType" : "TransferData"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CaCertificateId" : {
          "c2jName" : "caCertificateId",
          "c2jShape" : "CertificateId",
          "deprecated" : false,
          "documentation" : "<p>The certificate ID of the CA certificate used to sign this certificate.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The certificate ID of the CA certificate used to sign this certificate.</p>\n@param caCertificateId The certificate ID of the CA certificate used to sign this certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCaCertificateId",
          "getterDocumentation" : "/**<p>The certificate ID of the CA certificate used to sign this certificate.</p>\n@return The certificate ID of the CA certificate used to sign this certificate.*/",
          "getterMethodName" : "getCaCertificateId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "caCertificateId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "caCertificateId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CaCertificateId",
          "setterDocumentation" : "/**<p>The certificate ID of the CA certificate used to sign this certificate.</p>\n@param caCertificateId The certificate ID of the CA certificate used to sign this certificate.*/",
          "setterMethodName" : "setCaCertificateId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "caCertificateId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The certificate ID of the CA certificate used to sign this certificate.</p>\n@param caCertificateId The certificate ID of the CA certificate used to sign this certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "caCertificateId",
            "variableType" : "String",
            "documentation" : "<p>The certificate ID of the CA certificate used to sign this certificate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CertificateArn" : {
          "c2jName" : "certificateArn",
          "c2jShape" : "CertificateArn",
          "deprecated" : false,
          "documentation" : "<p>The ARN of the certificate.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param certificateArn The ARN of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCertificateArn",
          "getterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@return The ARN of the certificate.*/",
          "getterMethodName" : "getCertificateArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "certificateArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "certificateArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CertificateArn",
          "setterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param certificateArn The ARN of the certificate.*/",
          "setterMethodName" : "setCertificateArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param certificateArn The ARN of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateArn",
            "variableType" : "String",
            "documentation" : "<p>The ARN of the certificate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CertificateId" : {
          "c2jName" : "certificateId",
          "c2jShape" : "CertificateId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the certificate.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCertificateId",
          "getterDocumentation" : "/**<p>The ID of the certificate.</p>\n@return The ID of the certificate.*/",
          "getterMethodName" : "getCertificateId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "certificateId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "certificateId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CertificateId",
          "setterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.*/",
          "setterMethodName" : "setCertificateId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the certificate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CertificatePem" : {
          "c2jName" : "certificatePem",
          "c2jShape" : "CertificatePem",
          "deprecated" : false,
          "documentation" : "<p>The certificate data, in PEM format.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@param certificatePem The certificate data, in PEM format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCertificatePem",
          "getterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@return The certificate data, in PEM format.*/",
          "getterMethodName" : "getCertificatePem",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "certificatePem",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "certificatePem",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CertificatePem",
          "setterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@param certificatePem The certificate data, in PEM format.*/",
          "setterMethodName" : "setCertificatePem",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificatePem",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@param certificatePem The certificate data, in PEM format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificatePem",
            "variableType" : "String",
            "documentation" : "<p>The certificate data, in PEM format.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CreationDate" : {
          "c2jName" : "creationDate",
          "c2jShape" : "DateType",
          "deprecated" : false,
          "documentation" : "<p>The date and time the certificate was created.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date and time the certificate was created.</p>\n@param creationDate The date and time the certificate was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCreationDate",
          "getterDocumentation" : "/**<p>The date and time the certificate was created.</p>\n@return The date and time the certificate was created.*/",
          "getterMethodName" : "getCreationDate",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "creationDate",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "creationDate",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "CreationDate",
          "setterDocumentation" : "/**<p>The date and time the certificate was created.</p>\n@param creationDate The date and time the certificate was created.*/",
          "setterMethodName" : "setCreationDate",
          "setterModel" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "creationDate",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date and time the certificate was created.</p>\n@param creationDate The date and time the certificate was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "creationDate",
            "variableType" : "java.util.Date",
            "documentation" : "<p>The date and time the certificate was created.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "LastModifiedDate" : {
          "c2jName" : "lastModifiedDate",
          "c2jShape" : "DateType",
          "deprecated" : false,
          "documentation" : "<p>The date and time the certificate was last modified.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date and time the certificate was last modified.</p>\n@param lastModifiedDate The date and time the certificate was last modified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLastModifiedDate",
          "getterDocumentation" : "/**<p>The date and time the certificate was last modified.</p>\n@return The date and time the certificate was last modified.*/",
          "getterMethodName" : "getLastModifiedDate",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "lastModifiedDate",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "lastModifiedDate",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "LastModifiedDate",
          "setterDocumentation" : "/**<p>The date and time the certificate was last modified.</p>\n@param lastModifiedDate The date and time the certificate was last modified.*/",
          "setterMethodName" : "setLastModifiedDate",
          "setterModel" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "lastModifiedDate",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date and time the certificate was last modified.</p>\n@param lastModifiedDate The date and time the certificate was last modified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "lastModifiedDate",
            "variableType" : "java.util.Date",
            "documentation" : "<p>The date and time the certificate was last modified.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "OwnedBy" : {
          "c2jName" : "ownedBy",
          "c2jShape" : "AwsAccountId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the AWS account that owns the certificate.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the AWS account that owns the certificate.</p>\n@param ownedBy The ID of the AWS account that owns the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withOwnedBy",
          "getterDocumentation" : "/**<p>The ID of the AWS account that owns the certificate.</p>\n@return The ID of the AWS account that owns the certificate.*/",
          "getterMethodName" : "getOwnedBy",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ownedBy",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ownedBy",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "OwnedBy",
          "setterDocumentation" : "/**<p>The ID of the AWS account that owns the certificate.</p>\n@param ownedBy The ID of the AWS account that owns the certificate.*/",
          "setterMethodName" : "setOwnedBy",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "ownedBy",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the AWS account that owns the certificate.</p>\n@param ownedBy The ID of the AWS account that owns the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "ownedBy",
            "variableType" : "String",
            "documentation" : "<p>The ID of the AWS account that owns the certificate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "PreviousOwnedBy" : {
          "c2jName" : "previousOwnedBy",
          "c2jShape" : "AwsAccountId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the AWS account of the previous owner of the certificate.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the AWS account of the previous owner of the certificate.</p>\n@param previousOwnedBy The ID of the AWS account of the previous owner of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPreviousOwnedBy",
          "getterDocumentation" : "/**<p>The ID of the AWS account of the previous owner of the certificate.</p>\n@return The ID of the AWS account of the previous owner of the certificate.*/",
          "getterMethodName" : "getPreviousOwnedBy",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "previousOwnedBy",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "previousOwnedBy",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PreviousOwnedBy",
          "setterDocumentation" : "/**<p>The ID of the AWS account of the previous owner of the certificate.</p>\n@param previousOwnedBy The ID of the AWS account of the previous owner of the certificate.*/",
          "setterMethodName" : "setPreviousOwnedBy",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "previousOwnedBy",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the AWS account of the previous owner of the certificate.</p>\n@param previousOwnedBy The ID of the AWS account of the previous owner of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "previousOwnedBy",
            "variableType" : "String",
            "documentation" : "<p>The ID of the AWS account of the previous owner of the certificate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Status" : {
          "c2jName" : "status",
          "c2jShape" : "CertificateStatus",
          "deprecated" : false,
          "documentation" : "<p>The status of the certificate.</p>",
          "enumType" : "CertificateStatus",
          "fluentSetterDocumentation" : "/**<p>The status of the certificate.</p>\n@param status The status of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CertificateStatus*/",
          "fluentSetterMethodName" : "withStatus",
          "getterDocumentation" : "/**<p>The status of the certificate.</p>\n@return The status of the certificate.\n@see CertificateStatus*/",
          "getterMethodName" : "getStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "status",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "status",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Status",
          "setterDocumentation" : "/**<p>The status of the certificate.</p>\n@param status The status of the certificate.\n@see CertificateStatus*/",
          "setterMethodName" : "setStatus",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The status of the certificate.</p>\n@param status The status of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CertificateStatus*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "<p>The status of the certificate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TransferData" : {
          "c2jName" : "transferData",
          "c2jShape" : "TransferData",
          "deprecated" : false,
          "documentation" : "<p>The transfer data.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The transfer data.</p>\n@param transferData The transfer data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTransferData",
          "getterDocumentation" : "/**<p>The transfer data.</p>\n@return The transfer data.*/",
          "getterMethodName" : "getTransferData",
          "getterModel" : {
            "returnType" : "TransferData",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "transferData",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "transferData",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "TransferData",
          "setterDocumentation" : "/**<p>The transfer data.</p>\n@param transferData The transfer data.*/",
          "setterMethodName" : "setTransferData",
          "setterModel" : {
            "variableDeclarationType" : "TransferData",
            "variableName" : "transferData",
            "variableType" : "TransferData",
            "documentation" : "",
            "simpleType" : "TransferData",
            "variableSetterType" : "TransferData"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The transfer data.</p>\n@param transferData The transfer data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "TransferData",
            "variableName" : "transferData",
            "variableType" : "TransferData",
            "documentation" : "<p>The transfer data.</p>",
            "simpleType" : "TransferData",
            "variableSetterType" : "TransferData"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CertificateDescription",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "CertificateDescription",
        "variableName" : "certificateDescription",
        "variableType" : "CertificateDescription",
        "documentation" : null,
        "simpleType" : "CertificateDescription",
        "variableSetterType" : "CertificateDescription"
      },
      "wrapper" : false
    },
    "CertificateStateException" : {
      "c2jName" : "CertificateStateException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The certificate operation is not allowed.</p>",
      "enums" : null,
      "errorCode" : "CertificateStateException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CertificateStateException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "CertificateStateException",
        "variableName" : "certificateStateException",
        "variableType" : "CertificateStateException",
        "documentation" : null,
        "simpleType" : "CertificateStateException",
        "variableSetterType" : "CertificateStateException"
      },
      "wrapper" : false
    },
    "CertificateStatus" : {
      "c2jName" : "CertificateStatus",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "ACTIVE",
        "value" : "ACTIVE"
      }, {
        "name" : "INACTIVE",
        "value" : "INACTIVE"
      }, {
        "name" : "REVOKED",
        "value" : "REVOKED"
      }, {
        "name" : "PENDING_TRANSFER",
        "value" : "PENDING_TRANSFER"
      }, {
        "name" : "REGISTER_INACTIVE",
        "value" : "REGISTER_INACTIVE"
      }, {
        "name" : "PENDING_ACTIVATION",
        "value" : "PENDING_ACTIVATION"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CertificateStatus",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "CertificateStatus",
        "variableName" : "certificateStatus",
        "variableType" : "CertificateStatus",
        "documentation" : null,
        "simpleType" : "CertificateStatus",
        "variableSetterType" : "CertificateStatus"
      },
      "wrapper" : false
    },
    "CertificateValidationException" : {
      "c2jName" : "CertificateValidationException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The certificate is invalid.</p>",
      "enums" : null,
      "errorCode" : "CertificateValidationException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CertificateValidationException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "CertificateValidationException",
        "variableName" : "certificateValidationException",
        "variableType" : "CertificateValidationException",
        "documentation" : null,
        "simpleType" : "CertificateValidationException",
        "variableSetterType" : "CertificateValidationException"
      },
      "wrapper" : false
    },
    "CloudwatchAlarmAction" : {
      "c2jName" : "CloudwatchAlarmAction",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Describes an action that updates a CloudWatch alarm.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "roleArn",
        "c2jShape" : "AwsArn",
        "deprecated" : false,
        "documentation" : "<p>The IAM role that allows access to the CloudWatch alarm.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The IAM role that allows access to the CloudWatch alarm.</p>\n@param roleArn The IAM role that allows access to the CloudWatch alarm.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRoleArn",
        "getterDocumentation" : "/**<p>The IAM role that allows access to the CloudWatch alarm.</p>\n@return The IAM role that allows access to the CloudWatch alarm.*/",
        "getterMethodName" : "getRoleArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "roleArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "roleArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RoleArn",
        "setterDocumentation" : "/**<p>The IAM role that allows access to the CloudWatch alarm.</p>\n@param roleArn The IAM role that allows access to the CloudWatch alarm.*/",
        "setterMethodName" : "setRoleArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "roleArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The IAM role that allows access to the CloudWatch alarm.</p>\n@param roleArn The IAM role that allows access to the CloudWatch alarm.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "roleArn",
          "variableType" : "String",
          "documentation" : "<p>The IAM role that allows access to the CloudWatch alarm.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "alarmName",
        "c2jShape" : "AlarmName",
        "deprecated" : false,
        "documentation" : "<p>The CloudWatch alarm name.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The CloudWatch alarm name.</p>\n@param alarmName The CloudWatch alarm name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAlarmName",
        "getterDocumentation" : "/**<p>The CloudWatch alarm name.</p>\n@return The CloudWatch alarm name.*/",
        "getterMethodName" : "getAlarmName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "alarmName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "alarmName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "AlarmName",
        "setterDocumentation" : "/**<p>The CloudWatch alarm name.</p>\n@param alarmName The CloudWatch alarm name.*/",
        "setterMethodName" : "setAlarmName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "alarmName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The CloudWatch alarm name.</p>\n@param alarmName The CloudWatch alarm name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "alarmName",
          "variableType" : "String",
          "documentation" : "<p>The CloudWatch alarm name.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "stateReason",
        "c2jShape" : "StateReason",
        "deprecated" : false,
        "documentation" : "<p>The reason for the alarm change.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The reason for the alarm change.</p>\n@param stateReason The reason for the alarm change.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withStateReason",
        "getterDocumentation" : "/**<p>The reason for the alarm change.</p>\n@return The reason for the alarm change.*/",
        "getterMethodName" : "getStateReason",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "stateReason",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "stateReason",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "StateReason",
        "setterDocumentation" : "/**<p>The reason for the alarm change.</p>\n@param stateReason The reason for the alarm change.*/",
        "setterMethodName" : "setStateReason",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "stateReason",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The reason for the alarm change.</p>\n@param stateReason The reason for the alarm change.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "stateReason",
          "variableType" : "String",
          "documentation" : "<p>The reason for the alarm change.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "stateValue",
        "c2jShape" : "StateValue",
        "deprecated" : false,
        "documentation" : "<p>The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.</p>\n@param stateValue The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withStateValue",
        "getterDocumentation" : "/**<p>The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.</p>\n@return The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.*/",
        "getterMethodName" : "getStateValue",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "stateValue",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "stateValue",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "StateValue",
        "setterDocumentation" : "/**<p>The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.</p>\n@param stateValue The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.*/",
        "setterMethodName" : "setStateValue",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "stateValue",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.</p>\n@param stateValue The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "stateValue",
          "variableType" : "String",
          "documentation" : "<p>The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AlarmName" : {
          "c2jName" : "alarmName",
          "c2jShape" : "AlarmName",
          "deprecated" : false,
          "documentation" : "<p>The CloudWatch alarm name.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The CloudWatch alarm name.</p>\n@param alarmName The CloudWatch alarm name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAlarmName",
          "getterDocumentation" : "/**<p>The CloudWatch alarm name.</p>\n@return The CloudWatch alarm name.*/",
          "getterMethodName" : "getAlarmName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "alarmName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "alarmName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "AlarmName",
          "setterDocumentation" : "/**<p>The CloudWatch alarm name.</p>\n@param alarmName The CloudWatch alarm name.*/",
          "setterMethodName" : "setAlarmName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "alarmName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The CloudWatch alarm name.</p>\n@param alarmName The CloudWatch alarm name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "alarmName",
            "variableType" : "String",
            "documentation" : "<p>The CloudWatch alarm name.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RoleArn" : {
          "c2jName" : "roleArn",
          "c2jShape" : "AwsArn",
          "deprecated" : false,
          "documentation" : "<p>The IAM role that allows access to the CloudWatch alarm.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The IAM role that allows access to the CloudWatch alarm.</p>\n@param roleArn The IAM role that allows access to the CloudWatch alarm.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRoleArn",
          "getterDocumentation" : "/**<p>The IAM role that allows access to the CloudWatch alarm.</p>\n@return The IAM role that allows access to the CloudWatch alarm.*/",
          "getterMethodName" : "getRoleArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "roleArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "roleArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RoleArn",
          "setterDocumentation" : "/**<p>The IAM role that allows access to the CloudWatch alarm.</p>\n@param roleArn The IAM role that allows access to the CloudWatch alarm.*/",
          "setterMethodName" : "setRoleArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "roleArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The IAM role that allows access to the CloudWatch alarm.</p>\n@param roleArn The IAM role that allows access to the CloudWatch alarm.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "roleArn",
            "variableType" : "String",
            "documentation" : "<p>The IAM role that allows access to the CloudWatch alarm.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "StateReason" : {
          "c2jName" : "stateReason",
          "c2jShape" : "StateReason",
          "deprecated" : false,
          "documentation" : "<p>The reason for the alarm change.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The reason for the alarm change.</p>\n@param stateReason The reason for the alarm change.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withStateReason",
          "getterDocumentation" : "/**<p>The reason for the alarm change.</p>\n@return The reason for the alarm change.*/",
          "getterMethodName" : "getStateReason",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "stateReason",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "stateReason",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "StateReason",
          "setterDocumentation" : "/**<p>The reason for the alarm change.</p>\n@param stateReason The reason for the alarm change.*/",
          "setterMethodName" : "setStateReason",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "stateReason",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The reason for the alarm change.</p>\n@param stateReason The reason for the alarm change.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "stateReason",
            "variableType" : "String",
            "documentation" : "<p>The reason for the alarm change.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "StateValue" : {
          "c2jName" : "stateValue",
          "c2jShape" : "StateValue",
          "deprecated" : false,
          "documentation" : "<p>The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.</p>\n@param stateValue The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withStateValue",
          "getterDocumentation" : "/**<p>The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.</p>\n@return The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.*/",
          "getterMethodName" : "getStateValue",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "stateValue",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "stateValue",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "StateValue",
          "setterDocumentation" : "/**<p>The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.</p>\n@param stateValue The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.*/",
          "setterMethodName" : "setStateValue",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "stateValue",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.</p>\n@param stateValue The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "stateValue",
            "variableType" : "String",
            "documentation" : "<p>The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "roleArn", "alarmName", "stateReason", "stateValue" ],
      "shapeName" : "CloudwatchAlarmAction",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "CloudwatchAlarmAction",
        "variableName" : "cloudwatchAlarmAction",
        "variableType" : "CloudwatchAlarmAction",
        "documentation" : null,
        "simpleType" : "CloudwatchAlarmAction",
        "variableSetterType" : "CloudwatchAlarmAction"
      },
      "wrapper" : false
    },
    "CloudwatchMetricAction" : {
      "c2jName" : "CloudwatchMetricAction",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Describes an action that captures a CloudWatch metric.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "roleArn",
        "c2jShape" : "AwsArn",
        "deprecated" : false,
        "documentation" : "<p>The IAM role that allows access to the CloudWatch metric.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The IAM role that allows access to the CloudWatch metric.</p>\n@param roleArn The IAM role that allows access to the CloudWatch metric.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRoleArn",
        "getterDocumentation" : "/**<p>The IAM role that allows access to the CloudWatch metric.</p>\n@return The IAM role that allows access to the CloudWatch metric.*/",
        "getterMethodName" : "getRoleArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "roleArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "roleArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RoleArn",
        "setterDocumentation" : "/**<p>The IAM role that allows access to the CloudWatch metric.</p>\n@param roleArn The IAM role that allows access to the CloudWatch metric.*/",
        "setterMethodName" : "setRoleArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "roleArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The IAM role that allows access to the CloudWatch metric.</p>\n@param roleArn The IAM role that allows access to the CloudWatch metric.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "roleArn",
          "variableType" : "String",
          "documentation" : "<p>The IAM role that allows access to the CloudWatch metric.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "metricNamespace",
        "c2jShape" : "MetricNamespace",
        "deprecated" : false,
        "documentation" : "<p>The CloudWatch metric namespace name.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The CloudWatch metric namespace name.</p>\n@param metricNamespace The CloudWatch metric namespace name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMetricNamespace",
        "getterDocumentation" : "/**<p>The CloudWatch metric namespace name.</p>\n@return The CloudWatch metric namespace name.*/",
        "getterMethodName" : "getMetricNamespace",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "metricNamespace",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "metricNamespace",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "MetricNamespace",
        "setterDocumentation" : "/**<p>The CloudWatch metric namespace name.</p>\n@param metricNamespace The CloudWatch metric namespace name.*/",
        "setterMethodName" : "setMetricNamespace",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "metricNamespace",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The CloudWatch metric namespace name.</p>\n@param metricNamespace The CloudWatch metric namespace name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "metricNamespace",
          "variableType" : "String",
          "documentation" : "<p>The CloudWatch metric namespace name.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "metricName",
        "c2jShape" : "MetricName",
        "deprecated" : false,
        "documentation" : "<p>The CloudWatch metric name.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The CloudWatch metric name.</p>\n@param metricName The CloudWatch metric name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMetricName",
        "getterDocumentation" : "/**<p>The CloudWatch metric name.</p>\n@return The CloudWatch metric name.*/",
        "getterMethodName" : "getMetricName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "metricName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "metricName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "MetricName",
        "setterDocumentation" : "/**<p>The CloudWatch metric name.</p>\n@param metricName The CloudWatch metric name.*/",
        "setterMethodName" : "setMetricName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "metricName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The CloudWatch metric name.</p>\n@param metricName The CloudWatch metric name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "metricName",
          "variableType" : "String",
          "documentation" : "<p>The CloudWatch metric name.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "metricValue",
        "c2jShape" : "MetricValue",
        "deprecated" : false,
        "documentation" : "<p>The CloudWatch metric value.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The CloudWatch metric value.</p>\n@param metricValue The CloudWatch metric value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMetricValue",
        "getterDocumentation" : "/**<p>The CloudWatch metric value.</p>\n@return The CloudWatch metric value.*/",
        "getterMethodName" : "getMetricValue",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "metricValue",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "metricValue",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "MetricValue",
        "setterDocumentation" : "/**<p>The CloudWatch metric value.</p>\n@param metricValue The CloudWatch metric value.*/",
        "setterMethodName" : "setMetricValue",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "metricValue",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The CloudWatch metric value.</p>\n@param metricValue The CloudWatch metric value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "metricValue",
          "variableType" : "String",
          "documentation" : "<p>The CloudWatch metric value.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "metricUnit",
        "c2jShape" : "MetricUnit",
        "deprecated" : false,
        "documentation" : "<p>The <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit\">metric unit</a> supported by CloudWatch.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit\">metric unit</a> supported by CloudWatch.</p>\n@param metricUnit The <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit\">metric unit</a> supported by CloudWatch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMetricUnit",
        "getterDocumentation" : "/**<p>The <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit\">metric unit</a> supported by CloudWatch.</p>\n@return The <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit\">metric unit</a> supported by CloudWatch.*/",
        "getterMethodName" : "getMetricUnit",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "metricUnit",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "metricUnit",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "MetricUnit",
        "setterDocumentation" : "/**<p>The <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit\">metric unit</a> supported by CloudWatch.</p>\n@param metricUnit The <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit\">metric unit</a> supported by CloudWatch.*/",
        "setterMethodName" : "setMetricUnit",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "metricUnit",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit\">metric unit</a> supported by CloudWatch.</p>\n@param metricUnit The <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit\">metric unit</a> supported by CloudWatch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "metricUnit",
          "variableType" : "String",
          "documentation" : "<p>The <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit\">metric unit</a> supported by CloudWatch.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "metricTimestamp",
        "c2jShape" : "MetricTimestamp",
        "deprecated" : false,
        "documentation" : "<p>An optional <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp\">Unix timestamp</a>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An optional <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp\">Unix timestamp</a>.</p>\n@param metricTimestamp An optional <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp\">Unix timestamp</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMetricTimestamp",
        "getterDocumentation" : "/**<p>An optional <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp\">Unix timestamp</a>.</p>\n@return An optional <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp\">Unix timestamp</a>.*/",
        "getterMethodName" : "getMetricTimestamp",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "metricTimestamp",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "metricTimestamp",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "MetricTimestamp",
        "setterDocumentation" : "/**<p>An optional <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp\">Unix timestamp</a>.</p>\n@param metricTimestamp An optional <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp\">Unix timestamp</a>.*/",
        "setterMethodName" : "setMetricTimestamp",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "metricTimestamp",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An optional <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp\">Unix timestamp</a>.</p>\n@param metricTimestamp An optional <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp\">Unix timestamp</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "metricTimestamp",
          "variableType" : "String",
          "documentation" : "<p>An optional <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp\">Unix timestamp</a>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "MetricName" : {
          "c2jName" : "metricName",
          "c2jShape" : "MetricName",
          "deprecated" : false,
          "documentation" : "<p>The CloudWatch metric name.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The CloudWatch metric name.</p>\n@param metricName The CloudWatch metric name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMetricName",
          "getterDocumentation" : "/**<p>The CloudWatch metric name.</p>\n@return The CloudWatch metric name.*/",
          "getterMethodName" : "getMetricName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "metricName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "metricName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "MetricName",
          "setterDocumentation" : "/**<p>The CloudWatch metric name.</p>\n@param metricName The CloudWatch metric name.*/",
          "setterMethodName" : "setMetricName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "metricName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The CloudWatch metric name.</p>\n@param metricName The CloudWatch metric name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "metricName",
            "variableType" : "String",
            "documentation" : "<p>The CloudWatch metric name.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "MetricNamespace" : {
          "c2jName" : "metricNamespace",
          "c2jShape" : "MetricNamespace",
          "deprecated" : false,
          "documentation" : "<p>The CloudWatch metric namespace name.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The CloudWatch metric namespace name.</p>\n@param metricNamespace The CloudWatch metric namespace name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMetricNamespace",
          "getterDocumentation" : "/**<p>The CloudWatch metric namespace name.</p>\n@return The CloudWatch metric namespace name.*/",
          "getterMethodName" : "getMetricNamespace",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "metricNamespace",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "metricNamespace",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "MetricNamespace",
          "setterDocumentation" : "/**<p>The CloudWatch metric namespace name.</p>\n@param metricNamespace The CloudWatch metric namespace name.*/",
          "setterMethodName" : "setMetricNamespace",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "metricNamespace",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The CloudWatch metric namespace name.</p>\n@param metricNamespace The CloudWatch metric namespace name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "metricNamespace",
            "variableType" : "String",
            "documentation" : "<p>The CloudWatch metric namespace name.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "MetricTimestamp" : {
          "c2jName" : "metricTimestamp",
          "c2jShape" : "MetricTimestamp",
          "deprecated" : false,
          "documentation" : "<p>An optional <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp\">Unix timestamp</a>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An optional <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp\">Unix timestamp</a>.</p>\n@param metricTimestamp An optional <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp\">Unix timestamp</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMetricTimestamp",
          "getterDocumentation" : "/**<p>An optional <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp\">Unix timestamp</a>.</p>\n@return An optional <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp\">Unix timestamp</a>.*/",
          "getterMethodName" : "getMetricTimestamp",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "metricTimestamp",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "metricTimestamp",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "MetricTimestamp",
          "setterDocumentation" : "/**<p>An optional <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp\">Unix timestamp</a>.</p>\n@param metricTimestamp An optional <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp\">Unix timestamp</a>.*/",
          "setterMethodName" : "setMetricTimestamp",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "metricTimestamp",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An optional <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp\">Unix timestamp</a>.</p>\n@param metricTimestamp An optional <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp\">Unix timestamp</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "metricTimestamp",
            "variableType" : "String",
            "documentation" : "<p>An optional <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp\">Unix timestamp</a>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "MetricUnit" : {
          "c2jName" : "metricUnit",
          "c2jShape" : "MetricUnit",
          "deprecated" : false,
          "documentation" : "<p>The <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit\">metric unit</a> supported by CloudWatch.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit\">metric unit</a> supported by CloudWatch.</p>\n@param metricUnit The <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit\">metric unit</a> supported by CloudWatch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMetricUnit",
          "getterDocumentation" : "/**<p>The <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit\">metric unit</a> supported by CloudWatch.</p>\n@return The <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit\">metric unit</a> supported by CloudWatch.*/",
          "getterMethodName" : "getMetricUnit",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "metricUnit",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "metricUnit",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "MetricUnit",
          "setterDocumentation" : "/**<p>The <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit\">metric unit</a> supported by CloudWatch.</p>\n@param metricUnit The <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit\">metric unit</a> supported by CloudWatch.*/",
          "setterMethodName" : "setMetricUnit",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "metricUnit",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit\">metric unit</a> supported by CloudWatch.</p>\n@param metricUnit The <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit\">metric unit</a> supported by CloudWatch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "metricUnit",
            "variableType" : "String",
            "documentation" : "<p>The <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit\">metric unit</a> supported by CloudWatch.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "MetricValue" : {
          "c2jName" : "metricValue",
          "c2jShape" : "MetricValue",
          "deprecated" : false,
          "documentation" : "<p>The CloudWatch metric value.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The CloudWatch metric value.</p>\n@param metricValue The CloudWatch metric value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMetricValue",
          "getterDocumentation" : "/**<p>The CloudWatch metric value.</p>\n@return The CloudWatch metric value.*/",
          "getterMethodName" : "getMetricValue",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "metricValue",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "metricValue",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "MetricValue",
          "setterDocumentation" : "/**<p>The CloudWatch metric value.</p>\n@param metricValue The CloudWatch metric value.*/",
          "setterMethodName" : "setMetricValue",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "metricValue",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The CloudWatch metric value.</p>\n@param metricValue The CloudWatch metric value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "metricValue",
            "variableType" : "String",
            "documentation" : "<p>The CloudWatch metric value.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RoleArn" : {
          "c2jName" : "roleArn",
          "c2jShape" : "AwsArn",
          "deprecated" : false,
          "documentation" : "<p>The IAM role that allows access to the CloudWatch metric.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The IAM role that allows access to the CloudWatch metric.</p>\n@param roleArn The IAM role that allows access to the CloudWatch metric.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRoleArn",
          "getterDocumentation" : "/**<p>The IAM role that allows access to the CloudWatch metric.</p>\n@return The IAM role that allows access to the CloudWatch metric.*/",
          "getterMethodName" : "getRoleArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "roleArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "roleArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RoleArn",
          "setterDocumentation" : "/**<p>The IAM role that allows access to the CloudWatch metric.</p>\n@param roleArn The IAM role that allows access to the CloudWatch metric.*/",
          "setterMethodName" : "setRoleArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "roleArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The IAM role that allows access to the CloudWatch metric.</p>\n@param roleArn The IAM role that allows access to the CloudWatch metric.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "roleArn",
            "variableType" : "String",
            "documentation" : "<p>The IAM role that allows access to the CloudWatch metric.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "roleArn", "metricNamespace", "metricName", "metricValue", "metricUnit" ],
      "shapeName" : "CloudwatchMetricAction",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "CloudwatchMetricAction",
        "variableName" : "cloudwatchMetricAction",
        "variableType" : "CloudwatchMetricAction",
        "documentation" : null,
        "simpleType" : "CloudwatchMetricAction",
        "variableSetterType" : "CloudwatchMetricAction"
      },
      "wrapper" : false
    },
    "CreateCertificateFromCsrRequest" : {
      "c2jName" : "CreateCertificateFromCsrRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the CreateCertificateFromCsr operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "CreateCertificateFromCsr",
        "locationName" : null,
        "requestUri" : "/certificates",
        "target" : null,
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "certificateSigningRequest",
        "c2jShape" : "CertificateSigningRequest",
        "deprecated" : false,
        "documentation" : "<p>The certificate signing request (CSR).</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The certificate signing request (CSR).</p>\n@param certificateSigningRequest The certificate signing request (CSR).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCertificateSigningRequest",
        "getterDocumentation" : "/**<p>The certificate signing request (CSR).</p>\n@return The certificate signing request (CSR).*/",
        "getterMethodName" : "getCertificateSigningRequest",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "certificateSigningRequest",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "certificateSigningRequest",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CertificateSigningRequest",
        "setterDocumentation" : "/**<p>The certificate signing request (CSR).</p>\n@param certificateSigningRequest The certificate signing request (CSR).*/",
        "setterMethodName" : "setCertificateSigningRequest",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateSigningRequest",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The certificate signing request (CSR).</p>\n@param certificateSigningRequest The certificate signing request (CSR).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateSigningRequest",
          "variableType" : "String",
          "documentation" : "<p>The certificate signing request (CSR).</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "setAsActive",
        "c2jShape" : "SetAsActive",
        "deprecated" : false,
        "documentation" : "<p>Specifies whether the certificate is active.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@param setAsActive Specifies whether the certificate is active.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSetAsActive",
        "getterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@return Specifies whether the certificate is active.*/",
        "getterMethodName" : "getSetAsActive",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "setAsActive",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "setAsActive",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "SetAsActive",
        "setterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@param setAsActive Specifies whether the certificate is active.*/",
        "setterMethodName" : "setSetAsActive",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "setAsActive",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@param setAsActive Specifies whether the certificate is active.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "setAsActive",
          "variableType" : "Boolean",
          "documentation" : "<p>Specifies whether the certificate is active.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CertificateSigningRequest" : {
          "c2jName" : "certificateSigningRequest",
          "c2jShape" : "CertificateSigningRequest",
          "deprecated" : false,
          "documentation" : "<p>The certificate signing request (CSR).</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The certificate signing request (CSR).</p>\n@param certificateSigningRequest The certificate signing request (CSR).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCertificateSigningRequest",
          "getterDocumentation" : "/**<p>The certificate signing request (CSR).</p>\n@return The certificate signing request (CSR).*/",
          "getterMethodName" : "getCertificateSigningRequest",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "certificateSigningRequest",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "certificateSigningRequest",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CertificateSigningRequest",
          "setterDocumentation" : "/**<p>The certificate signing request (CSR).</p>\n@param certificateSigningRequest The certificate signing request (CSR).*/",
          "setterMethodName" : "setCertificateSigningRequest",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateSigningRequest",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The certificate signing request (CSR).</p>\n@param certificateSigningRequest The certificate signing request (CSR).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateSigningRequest",
            "variableType" : "String",
            "documentation" : "<p>The certificate signing request (CSR).</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SetAsActive" : {
          "c2jName" : "setAsActive",
          "c2jShape" : "SetAsActive",
          "deprecated" : false,
          "documentation" : "<p>Specifies whether the certificate is active.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@param setAsActive Specifies whether the certificate is active.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSetAsActive",
          "getterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@return Specifies whether the certificate is active.*/",
          "getterMethodName" : "getSetAsActive",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "setAsActive",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "setAsActive",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "SetAsActive",
          "setterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@param setAsActive Specifies whether the certificate is active.*/",
          "setterMethodName" : "setSetAsActive",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "setAsActive",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@param setAsActive Specifies whether the certificate is active.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "setAsActive",
            "variableType" : "Boolean",
            "documentation" : "<p>Specifies whether the certificate is active.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "certificateSigningRequest" ],
      "shapeName" : "CreateCertificateFromCsrRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "CreateCertificateFromCsrRequest",
        "variableName" : "createCertificateFromCsrRequest",
        "variableType" : "CreateCertificateFromCsrRequest",
        "documentation" : null,
        "simpleType" : "CreateCertificateFromCsrRequest",
        "variableSetterType" : "CreateCertificateFromCsrRequest"
      },
      "wrapper" : false
    },
    "CreateCertificateFromCsrResult" : {
      "c2jName" : "CreateCertificateFromCsrResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The output from the CreateCertificateFromCsr operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "certificateArn",
        "c2jShape" : "CertificateArn",
        "deprecated" : false,
        "documentation" : "<p>The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.</p>\n@param certificateArn The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCertificateArn",
        "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.</p>\n@return The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.*/",
        "getterMethodName" : "getCertificateArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "certificateArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "certificateArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CertificateArn",
        "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.</p>\n@param certificateArn The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.*/",
        "setterMethodName" : "setCertificateArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.</p>\n@param certificateArn The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateArn",
          "variableType" : "String",
          "documentation" : "<p>The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "certificateId",
        "c2jShape" : "CertificateId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the certificate. Certificate management operations only take a certificateId.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the certificate. Certificate management operations only take a certificateId.</p>\n@param certificateId The ID of the certificate. Certificate management operations only take a certificateId.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCertificateId",
        "getterDocumentation" : "/**<p>The ID of the certificate. Certificate management operations only take a certificateId.</p>\n@return The ID of the certificate. Certificate management operations only take a certificateId.*/",
        "getterMethodName" : "getCertificateId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "certificateId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "certificateId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CertificateId",
        "setterDocumentation" : "/**<p>The ID of the certificate. Certificate management operations only take a certificateId.</p>\n@param certificateId The ID of the certificate. Certificate management operations only take a certificateId.*/",
        "setterMethodName" : "setCertificateId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the certificate. Certificate management operations only take a certificateId.</p>\n@param certificateId The ID of the certificate. Certificate management operations only take a certificateId.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the certificate. Certificate management operations only take a certificateId.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "certificatePem",
        "c2jShape" : "CertificatePem",
        "deprecated" : false,
        "documentation" : "<p>The certificate data, in PEM format.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@param certificatePem The certificate data, in PEM format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCertificatePem",
        "getterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@return The certificate data, in PEM format.*/",
        "getterMethodName" : "getCertificatePem",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "certificatePem",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "certificatePem",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CertificatePem",
        "setterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@param certificatePem The certificate data, in PEM format.*/",
        "setterMethodName" : "setCertificatePem",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificatePem",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@param certificatePem The certificate data, in PEM format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificatePem",
          "variableType" : "String",
          "documentation" : "<p>The certificate data, in PEM format.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CertificateArn" : {
          "c2jName" : "certificateArn",
          "c2jShape" : "CertificateArn",
          "deprecated" : false,
          "documentation" : "<p>The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.</p>\n@param certificateArn The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCertificateArn",
          "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.</p>\n@return The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.*/",
          "getterMethodName" : "getCertificateArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "certificateArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "certificateArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CertificateArn",
          "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.</p>\n@param certificateArn The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.*/",
          "setterMethodName" : "setCertificateArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.</p>\n@param certificateArn The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateArn",
            "variableType" : "String",
            "documentation" : "<p>The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CertificateId" : {
          "c2jName" : "certificateId",
          "c2jShape" : "CertificateId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the certificate. Certificate management operations only take a certificateId.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the certificate. Certificate management operations only take a certificateId.</p>\n@param certificateId The ID of the certificate. Certificate management operations only take a certificateId.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCertificateId",
          "getterDocumentation" : "/**<p>The ID of the certificate. Certificate management operations only take a certificateId.</p>\n@return The ID of the certificate. Certificate management operations only take a certificateId.*/",
          "getterMethodName" : "getCertificateId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "certificateId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "certificateId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CertificateId",
          "setterDocumentation" : "/**<p>The ID of the certificate. Certificate management operations only take a certificateId.</p>\n@param certificateId The ID of the certificate. Certificate management operations only take a certificateId.*/",
          "setterMethodName" : "setCertificateId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the certificate. Certificate management operations only take a certificateId.</p>\n@param certificateId The ID of the certificate. Certificate management operations only take a certificateId.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the certificate. Certificate management operations only take a certificateId.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CertificatePem" : {
          "c2jName" : "certificatePem",
          "c2jShape" : "CertificatePem",
          "deprecated" : false,
          "documentation" : "<p>The certificate data, in PEM format.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@param certificatePem The certificate data, in PEM format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCertificatePem",
          "getterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@return The certificate data, in PEM format.*/",
          "getterMethodName" : "getCertificatePem",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "certificatePem",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "certificatePem",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CertificatePem",
          "setterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@param certificatePem The certificate data, in PEM format.*/",
          "setterMethodName" : "setCertificatePem",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificatePem",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@param certificatePem The certificate data, in PEM format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificatePem",
            "variableType" : "String",
            "documentation" : "<p>The certificate data, in PEM format.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CreateCertificateFromCsrResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "CreateCertificateFromCsrResult",
        "variableName" : "createCertificateFromCsrResult",
        "variableType" : "CreateCertificateFromCsrResult",
        "documentation" : null,
        "simpleType" : "CreateCertificateFromCsrResult",
        "variableSetterType" : "CreateCertificateFromCsrResult"
      },
      "wrapper" : false
    },
    "CreateKeysAndCertificateRequest" : {
      "c2jName" : "CreateKeysAndCertificateRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the CreateKeysAndCertificate operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "CreateKeysAndCertificate",
        "locationName" : null,
        "requestUri" : "/keys-and-certificate",
        "target" : null,
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "setAsActive",
        "c2jShape" : "SetAsActive",
        "deprecated" : false,
        "documentation" : "<p>Specifies whether the certificate is active.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@param setAsActive Specifies whether the certificate is active.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSetAsActive",
        "getterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@return Specifies whether the certificate is active.*/",
        "getterMethodName" : "getSetAsActive",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "setAsActive",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "setAsActive",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "SetAsActive",
        "setterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@param setAsActive Specifies whether the certificate is active.*/",
        "setterMethodName" : "setSetAsActive",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "setAsActive",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@param setAsActive Specifies whether the certificate is active.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "setAsActive",
          "variableType" : "Boolean",
          "documentation" : "<p>Specifies whether the certificate is active.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "SetAsActive" : {
          "c2jName" : "setAsActive",
          "c2jShape" : "SetAsActive",
          "deprecated" : false,
          "documentation" : "<p>Specifies whether the certificate is active.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@param setAsActive Specifies whether the certificate is active.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSetAsActive",
          "getterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@return Specifies whether the certificate is active.*/",
          "getterMethodName" : "getSetAsActive",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "setAsActive",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "setAsActive",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "SetAsActive",
          "setterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@param setAsActive Specifies whether the certificate is active.*/",
          "setterMethodName" : "setSetAsActive",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "setAsActive",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@param setAsActive Specifies whether the certificate is active.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "setAsActive",
            "variableType" : "Boolean",
            "documentation" : "<p>Specifies whether the certificate is active.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CreateKeysAndCertificateRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "CreateKeysAndCertificateRequest",
        "variableName" : "createKeysAndCertificateRequest",
        "variableType" : "CreateKeysAndCertificateRequest",
        "documentation" : null,
        "simpleType" : "CreateKeysAndCertificateRequest",
        "variableSetterType" : "CreateKeysAndCertificateRequest"
      },
      "wrapper" : false
    },
    "CreateKeysAndCertificateResult" : {
      "c2jName" : "CreateKeysAndCertificateResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The output of the CreateKeysAndCertificate operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "certificateArn",
        "c2jShape" : "CertificateArn",
        "deprecated" : false,
        "documentation" : "<p>The ARN of the certificate.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param certificateArn The ARN of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCertificateArn",
        "getterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@return The ARN of the certificate.*/",
        "getterMethodName" : "getCertificateArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "certificateArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "certificateArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CertificateArn",
        "setterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param certificateArn The ARN of the certificate.*/",
        "setterMethodName" : "setCertificateArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param certificateArn The ARN of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateArn",
          "variableType" : "String",
          "documentation" : "<p>The ARN of the certificate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "certificateId",
        "c2jShape" : "CertificateId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the certificate. AWS IoT issues a default subject name for the certificate (for example, AWS IoT Certificate).</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the certificate. AWS IoT issues a default subject name for the certificate (for example, AWS IoT Certificate).</p>\n@param certificateId The ID of the certificate. AWS IoT issues a default subject name for the certificate (for example, AWS IoT Certificate).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCertificateId",
        "getterDocumentation" : "/**<p>The ID of the certificate. AWS IoT issues a default subject name for the certificate (for example, AWS IoT Certificate).</p>\n@return The ID of the certificate. AWS IoT issues a default subject name for the certificate (for example, AWS IoT Certificate).*/",
        "getterMethodName" : "getCertificateId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "certificateId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "certificateId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CertificateId",
        "setterDocumentation" : "/**<p>The ID of the certificate. AWS IoT issues a default subject name for the certificate (for example, AWS IoT Certificate).</p>\n@param certificateId The ID of the certificate. AWS IoT issues a default subject name for the certificate (for example, AWS IoT Certificate).*/",
        "setterMethodName" : "setCertificateId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the certificate. AWS IoT issues a default subject name for the certificate (for example, AWS IoT Certificate).</p>\n@param certificateId The ID of the certificate. AWS IoT issues a default subject name for the certificate (for example, AWS IoT Certificate).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the certificate. AWS IoT issues a default subject name for the certificate (for example, AWS IoT Certificate).</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "certificatePem",
        "c2jShape" : "CertificatePem",
        "deprecated" : false,
        "documentation" : "<p>The certificate data, in PEM format.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@param certificatePem The certificate data, in PEM format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCertificatePem",
        "getterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@return The certificate data, in PEM format.*/",
        "getterMethodName" : "getCertificatePem",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "certificatePem",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "certificatePem",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CertificatePem",
        "setterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@param certificatePem The certificate data, in PEM format.*/",
        "setterMethodName" : "setCertificatePem",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificatePem",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@param certificatePem The certificate data, in PEM format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificatePem",
          "variableType" : "String",
          "documentation" : "<p>The certificate data, in PEM format.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "keyPair",
        "c2jShape" : "KeyPair",
        "deprecated" : false,
        "documentation" : "<p>The generated key pair.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The generated key pair.</p>\n@param keyPair The generated key pair.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withKeyPair",
        "getterDocumentation" : "/**<p>The generated key pair.</p>\n@return The generated key pair.*/",
        "getterMethodName" : "getKeyPair",
        "getterModel" : {
          "returnType" : "KeyPair",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "keyPair",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "keyPair",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "KeyPair",
        "setterDocumentation" : "/**<p>The generated key pair.</p>\n@param keyPair The generated key pair.*/",
        "setterMethodName" : "setKeyPair",
        "setterModel" : {
          "variableDeclarationType" : "KeyPair",
          "variableName" : "keyPair",
          "variableType" : "KeyPair",
          "documentation" : "",
          "simpleType" : "KeyPair",
          "variableSetterType" : "KeyPair"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The generated key pair.</p>\n@param keyPair The generated key pair.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "KeyPair",
          "variableName" : "keyPair",
          "variableType" : "KeyPair",
          "documentation" : "<p>The generated key pair.</p>",
          "simpleType" : "KeyPair",
          "variableSetterType" : "KeyPair"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CertificateArn" : {
          "c2jName" : "certificateArn",
          "c2jShape" : "CertificateArn",
          "deprecated" : false,
          "documentation" : "<p>The ARN of the certificate.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param certificateArn The ARN of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCertificateArn",
          "getterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@return The ARN of the certificate.*/",
          "getterMethodName" : "getCertificateArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "certificateArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "certificateArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CertificateArn",
          "setterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param certificateArn The ARN of the certificate.*/",
          "setterMethodName" : "setCertificateArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param certificateArn The ARN of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateArn",
            "variableType" : "String",
            "documentation" : "<p>The ARN of the certificate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CertificateId" : {
          "c2jName" : "certificateId",
          "c2jShape" : "CertificateId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the certificate. AWS IoT issues a default subject name for the certificate (for example, AWS IoT Certificate).</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the certificate. AWS IoT issues a default subject name for the certificate (for example, AWS IoT Certificate).</p>\n@param certificateId The ID of the certificate. AWS IoT issues a default subject name for the certificate (for example, AWS IoT Certificate).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCertificateId",
          "getterDocumentation" : "/**<p>The ID of the certificate. AWS IoT issues a default subject name for the certificate (for example, AWS IoT Certificate).</p>\n@return The ID of the certificate. AWS IoT issues a default subject name for the certificate (for example, AWS IoT Certificate).*/",
          "getterMethodName" : "getCertificateId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "certificateId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "certificateId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CertificateId",
          "setterDocumentation" : "/**<p>The ID of the certificate. AWS IoT issues a default subject name for the certificate (for example, AWS IoT Certificate).</p>\n@param certificateId The ID of the certificate. AWS IoT issues a default subject name for the certificate (for example, AWS IoT Certificate).*/",
          "setterMethodName" : "setCertificateId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the certificate. AWS IoT issues a default subject name for the certificate (for example, AWS IoT Certificate).</p>\n@param certificateId The ID of the certificate. AWS IoT issues a default subject name for the certificate (for example, AWS IoT Certificate).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the certificate. AWS IoT issues a default subject name for the certificate (for example, AWS IoT Certificate).</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CertificatePem" : {
          "c2jName" : "certificatePem",
          "c2jShape" : "CertificatePem",
          "deprecated" : false,
          "documentation" : "<p>The certificate data, in PEM format.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@param certificatePem The certificate data, in PEM format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCertificatePem",
          "getterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@return The certificate data, in PEM format.*/",
          "getterMethodName" : "getCertificatePem",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "certificatePem",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "certificatePem",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CertificatePem",
          "setterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@param certificatePem The certificate data, in PEM format.*/",
          "setterMethodName" : "setCertificatePem",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificatePem",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@param certificatePem The certificate data, in PEM format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificatePem",
            "variableType" : "String",
            "documentation" : "<p>The certificate data, in PEM format.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "KeyPair" : {
          "c2jName" : "keyPair",
          "c2jShape" : "KeyPair",
          "deprecated" : false,
          "documentation" : "<p>The generated key pair.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The generated key pair.</p>\n@param keyPair The generated key pair.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withKeyPair",
          "getterDocumentation" : "/**<p>The generated key pair.</p>\n@return The generated key pair.*/",
          "getterMethodName" : "getKeyPair",
          "getterModel" : {
            "returnType" : "KeyPair",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "keyPair",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "keyPair",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "KeyPair",
          "setterDocumentation" : "/**<p>The generated key pair.</p>\n@param keyPair The generated key pair.*/",
          "setterMethodName" : "setKeyPair",
          "setterModel" : {
            "variableDeclarationType" : "KeyPair",
            "variableName" : "keyPair",
            "variableType" : "KeyPair",
            "documentation" : "",
            "simpleType" : "KeyPair",
            "variableSetterType" : "KeyPair"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The generated key pair.</p>\n@param keyPair The generated key pair.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "KeyPair",
            "variableName" : "keyPair",
            "variableType" : "KeyPair",
            "documentation" : "<p>The generated key pair.</p>",
            "simpleType" : "KeyPair",
            "variableSetterType" : "KeyPair"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CreateKeysAndCertificateResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "CreateKeysAndCertificateResult",
        "variableName" : "createKeysAndCertificateResult",
        "variableType" : "CreateKeysAndCertificateResult",
        "documentation" : null,
        "simpleType" : "CreateKeysAndCertificateResult",
        "variableSetterType" : "CreateKeysAndCertificateResult"
      },
      "wrapper" : false
    },
    "CreatePolicyRequest" : {
      "c2jName" : "CreatePolicyRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the CreatePolicy operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "CreatePolicy",
        "locationName" : null,
        "requestUri" : "/policies/{policyName}",
        "target" : null,
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "policyName",
        "c2jShape" : "PolicyName",
        "deprecated" : false,
        "documentation" : "<p>The policy name.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicyName",
        "getterDocumentation" : "/**<p>The policy name.</p>\n@return The policy name.*/",
        "getterMethodName" : "getPolicyName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "policyName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "policyName",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PolicyName",
        "setterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.*/",
        "setterMethodName" : "setPolicyName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyName",
          "variableType" : "String",
          "documentation" : "<p>The policy name.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "policyDocument",
        "c2jShape" : "PolicyDocument",
        "deprecated" : false,
        "documentation" : "<p>The JSON document that describes the policy. <b>policyDocument</b> must have a minimum length of 1, with a maximum length of 2048, excluding whitespace.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The JSON document that describes the policy. <b>policyDocument</b> must have a minimum length of 1, with a maximum length of 2048, excluding whitespace.</p>\n@param policyDocument The JSON document that describes the policy. <b>policyDocument</b> must have a minimum length of 1, with a maximum length of 2048, excluding whitespace.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicyDocument",
        "getterDocumentation" : "/**<p>The JSON document that describes the policy. <b>policyDocument</b> must have a minimum length of 1, with a maximum length of 2048, excluding whitespace.</p>\n@return The JSON document that describes the policy. <b>policyDocument</b> must have a minimum length of 1, with a maximum length of 2048, excluding whitespace.*/",
        "getterMethodName" : "getPolicyDocument",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "policyDocument",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "policyDocument",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PolicyDocument",
        "setterDocumentation" : "/**<p>The JSON document that describes the policy. <b>policyDocument</b> must have a minimum length of 1, with a maximum length of 2048, excluding whitespace.</p>\n@param policyDocument The JSON document that describes the policy. <b>policyDocument</b> must have a minimum length of 1, with a maximum length of 2048, excluding whitespace.*/",
        "setterMethodName" : "setPolicyDocument",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyDocument",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The JSON document that describes the policy. <b>policyDocument</b> must have a minimum length of 1, with a maximum length of 2048, excluding whitespace.</p>\n@param policyDocument The JSON document that describes the policy. <b>policyDocument</b> must have a minimum length of 1, with a maximum length of 2048, excluding whitespace.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyDocument",
          "variableType" : "String",
          "documentation" : "<p>The JSON document that describes the policy. <b>policyDocument</b> must have a minimum length of 1, with a maximum length of 2048, excluding whitespace.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "PolicyDocument" : {
          "c2jName" : "policyDocument",
          "c2jShape" : "PolicyDocument",
          "deprecated" : false,
          "documentation" : "<p>The JSON document that describes the policy. <b>policyDocument</b> must have a minimum length of 1, with a maximum length of 2048, excluding whitespace.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The JSON document that describes the policy. <b>policyDocument</b> must have a minimum length of 1, with a maximum length of 2048, excluding whitespace.</p>\n@param policyDocument The JSON document that describes the policy. <b>policyDocument</b> must have a minimum length of 1, with a maximum length of 2048, excluding whitespace.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicyDocument",
          "getterDocumentation" : "/**<p>The JSON document that describes the policy. <b>policyDocument</b> must have a minimum length of 1, with a maximum length of 2048, excluding whitespace.</p>\n@return The JSON document that describes the policy. <b>policyDocument</b> must have a minimum length of 1, with a maximum length of 2048, excluding whitespace.*/",
          "getterMethodName" : "getPolicyDocument",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "policyDocument",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "policyDocument",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PolicyDocument",
          "setterDocumentation" : "/**<p>The JSON document that describes the policy. <b>policyDocument</b> must have a minimum length of 1, with a maximum length of 2048, excluding whitespace.</p>\n@param policyDocument The JSON document that describes the policy. <b>policyDocument</b> must have a minimum length of 1, with a maximum length of 2048, excluding whitespace.*/",
          "setterMethodName" : "setPolicyDocument",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyDocument",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The JSON document that describes the policy. <b>policyDocument</b> must have a minimum length of 1, with a maximum length of 2048, excluding whitespace.</p>\n@param policyDocument The JSON document that describes the policy. <b>policyDocument</b> must have a minimum length of 1, with a maximum length of 2048, excluding whitespace.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyDocument",
            "variableType" : "String",
            "documentation" : "<p>The JSON document that describes the policy. <b>policyDocument</b> must have a minimum length of 1, with a maximum length of 2048, excluding whitespace.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "PolicyName" : {
          "c2jName" : "policyName",
          "c2jShape" : "PolicyName",
          "deprecated" : false,
          "documentation" : "<p>The policy name.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicyName",
          "getterDocumentation" : "/**<p>The policy name.</p>\n@return The policy name.*/",
          "getterMethodName" : "getPolicyName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "policyName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "policyName",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PolicyName",
          "setterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.*/",
          "setterMethodName" : "setPolicyName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyName",
            "variableType" : "String",
            "documentation" : "<p>The policy name.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "policyName", "policyDocument" ],
      "shapeName" : "CreatePolicyRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "CreatePolicyRequest",
        "variableName" : "createPolicyRequest",
        "variableType" : "CreatePolicyRequest",
        "documentation" : null,
        "simpleType" : "CreatePolicyRequest",
        "variableSetterType" : "CreatePolicyRequest"
      },
      "wrapper" : false
    },
    "CreatePolicyResult" : {
      "c2jName" : "CreatePolicyResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The output from the CreatePolicy operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "policyName",
        "c2jShape" : "PolicyName",
        "deprecated" : false,
        "documentation" : "<p>The policy name.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicyName",
        "getterDocumentation" : "/**<p>The policy name.</p>\n@return The policy name.*/",
        "getterMethodName" : "getPolicyName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "policyName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "policyName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PolicyName",
        "setterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.*/",
        "setterMethodName" : "setPolicyName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyName",
          "variableType" : "String",
          "documentation" : "<p>The policy name.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "policyArn",
        "c2jShape" : "PolicyArn",
        "deprecated" : false,
        "documentation" : "<p>The policy ARN.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicyArn",
        "getterDocumentation" : "/**<p>The policy ARN.</p>\n@return The policy ARN.*/",
        "getterMethodName" : "getPolicyArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "policyArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "policyArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PolicyArn",
        "setterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.*/",
        "setterMethodName" : "setPolicyArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyArn",
          "variableType" : "String",
          "documentation" : "<p>The policy ARN.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "policyDocument",
        "c2jShape" : "PolicyDocument",
        "deprecated" : false,
        "documentation" : "<p>The JSON document that describes the policy.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicyDocument",
        "getterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@return The JSON document that describes the policy.*/",
        "getterMethodName" : "getPolicyDocument",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "policyDocument",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "policyDocument",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PolicyDocument",
        "setterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.*/",
        "setterMethodName" : "setPolicyDocument",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyDocument",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyDocument",
          "variableType" : "String",
          "documentation" : "<p>The JSON document that describes the policy.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "policyVersionId",
        "c2jShape" : "PolicyVersionId",
        "deprecated" : false,
        "documentation" : "<p>The policy version ID.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicyVersionId",
        "getterDocumentation" : "/**<p>The policy version ID.</p>\n@return The policy version ID.*/",
        "getterMethodName" : "getPolicyVersionId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "policyVersionId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "policyVersionId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PolicyVersionId",
        "setterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.*/",
        "setterMethodName" : "setPolicyVersionId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyVersionId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyVersionId",
          "variableType" : "String",
          "documentation" : "<p>The policy version ID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "PolicyArn" : {
          "c2jName" : "policyArn",
          "c2jShape" : "PolicyArn",
          "deprecated" : false,
          "documentation" : "<p>The policy ARN.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicyArn",
          "getterDocumentation" : "/**<p>The policy ARN.</p>\n@return The policy ARN.*/",
          "getterMethodName" : "getPolicyArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "policyArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "policyArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PolicyArn",
          "setterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.*/",
          "setterMethodName" : "setPolicyArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyArn",
            "variableType" : "String",
            "documentation" : "<p>The policy ARN.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "PolicyDocument" : {
          "c2jName" : "policyDocument",
          "c2jShape" : "PolicyDocument",
          "deprecated" : false,
          "documentation" : "<p>The JSON document that describes the policy.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicyDocument",
          "getterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@return The JSON document that describes the policy.*/",
          "getterMethodName" : "getPolicyDocument",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "policyDocument",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "policyDocument",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PolicyDocument",
          "setterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.*/",
          "setterMethodName" : "setPolicyDocument",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyDocument",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyDocument",
            "variableType" : "String",
            "documentation" : "<p>The JSON document that describes the policy.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "PolicyName" : {
          "c2jName" : "policyName",
          "c2jShape" : "PolicyName",
          "deprecated" : false,
          "documentation" : "<p>The policy name.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicyName",
          "getterDocumentation" : "/**<p>The policy name.</p>\n@return The policy name.*/",
          "getterMethodName" : "getPolicyName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "policyName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "policyName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PolicyName",
          "setterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.*/",
          "setterMethodName" : "setPolicyName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyName",
            "variableType" : "String",
            "documentation" : "<p>The policy name.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "PolicyVersionId" : {
          "c2jName" : "policyVersionId",
          "c2jShape" : "PolicyVersionId",
          "deprecated" : false,
          "documentation" : "<p>The policy version ID.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicyVersionId",
          "getterDocumentation" : "/**<p>The policy version ID.</p>\n@return The policy version ID.*/",
          "getterMethodName" : "getPolicyVersionId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "policyVersionId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "policyVersionId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PolicyVersionId",
          "setterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.*/",
          "setterMethodName" : "setPolicyVersionId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyVersionId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyVersionId",
            "variableType" : "String",
            "documentation" : "<p>The policy version ID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CreatePolicyResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "CreatePolicyResult",
        "variableName" : "createPolicyResult",
        "variableType" : "CreatePolicyResult",
        "documentation" : null,
        "simpleType" : "CreatePolicyResult",
        "variableSetterType" : "CreatePolicyResult"
      },
      "wrapper" : false
    },
    "CreatePolicyVersionRequest" : {
      "c2jName" : "CreatePolicyVersionRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the CreatePolicyVersion operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "CreatePolicyVersion",
        "locationName" : null,
        "requestUri" : "/policies/{policyName}/version",
        "target" : null,
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "policyName",
        "c2jShape" : "PolicyName",
        "deprecated" : false,
        "documentation" : "<p>The policy name.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicyName",
        "getterDocumentation" : "/**<p>The policy name.</p>\n@return The policy name.*/",
        "getterMethodName" : "getPolicyName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "policyName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "policyName",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PolicyName",
        "setterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.*/",
        "setterMethodName" : "setPolicyName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyName",
          "variableType" : "String",
          "documentation" : "<p>The policy name.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "policyDocument",
        "c2jShape" : "PolicyDocument",
        "deprecated" : false,
        "documentation" : "<p>The JSON document that describes the policy. Minimum length of 1. Maximum length of 2048, excluding whitespaces</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The JSON document that describes the policy. Minimum length of 1. Maximum length of 2048, excluding whitespaces</p>\n@param policyDocument The JSON document that describes the policy. Minimum length of 1. Maximum length of 2048, excluding whitespaces\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicyDocument",
        "getterDocumentation" : "/**<p>The JSON document that describes the policy. Minimum length of 1. Maximum length of 2048, excluding whitespaces</p>\n@return The JSON document that describes the policy. Minimum length of 1. Maximum length of 2048, excluding whitespaces*/",
        "getterMethodName" : "getPolicyDocument",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "policyDocument",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "policyDocument",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PolicyDocument",
        "setterDocumentation" : "/**<p>The JSON document that describes the policy. Minimum length of 1. Maximum length of 2048, excluding whitespaces</p>\n@param policyDocument The JSON document that describes the policy. Minimum length of 1. Maximum length of 2048, excluding whitespaces*/",
        "setterMethodName" : "setPolicyDocument",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyDocument",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The JSON document that describes the policy. Minimum length of 1. Maximum length of 2048, excluding whitespaces</p>\n@param policyDocument The JSON document that describes the policy. Minimum length of 1. Maximum length of 2048, excluding whitespaces\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyDocument",
          "variableType" : "String",
          "documentation" : "<p>The JSON document that describes the policy. Minimum length of 1. Maximum length of 2048, excluding whitespaces</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "setAsDefault",
        "c2jShape" : "SetAsDefault",
        "deprecated" : false,
        "documentation" : "<p>Specifies whether the policy version is set as the default. When this parameter is true, the new policy version becomes the operative version (that is, the version that is in effect for the certificates to which the policy is attached).</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Specifies whether the policy version is set as the default. When this parameter is true, the new policy version becomes the operative version (that is, the version that is in effect for the certificates to which the policy is attached).</p>\n@param setAsDefault Specifies whether the policy version is set as the default. When this parameter is true, the new policy version becomes the operative version (that is, the version that is in effect for the certificates to which the policy is attached).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSetAsDefault",
        "getterDocumentation" : "/**<p>Specifies whether the policy version is set as the default. When this parameter is true, the new policy version becomes the operative version (that is, the version that is in effect for the certificates to which the policy is attached).</p>\n@return Specifies whether the policy version is set as the default. When this parameter is true, the new policy version becomes the operative version (that is, the version that is in effect for the certificates to which the policy is attached).*/",
        "getterMethodName" : "getSetAsDefault",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "setAsDefault",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "setAsDefault",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "SetAsDefault",
        "setterDocumentation" : "/**<p>Specifies whether the policy version is set as the default. When this parameter is true, the new policy version becomes the operative version (that is, the version that is in effect for the certificates to which the policy is attached).</p>\n@param setAsDefault Specifies whether the policy version is set as the default. When this parameter is true, the new policy version becomes the operative version (that is, the version that is in effect for the certificates to which the policy is attached).*/",
        "setterMethodName" : "setSetAsDefault",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "setAsDefault",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Specifies whether the policy version is set as the default. When this parameter is true, the new policy version becomes the operative version (that is, the version that is in effect for the certificates to which the policy is attached).</p>\n@param setAsDefault Specifies whether the policy version is set as the default. When this parameter is true, the new policy version becomes the operative version (that is, the version that is in effect for the certificates to which the policy is attached).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "setAsDefault",
          "variableType" : "Boolean",
          "documentation" : "<p>Specifies whether the policy version is set as the default. When this parameter is true, the new policy version becomes the operative version (that is, the version that is in effect for the certificates to which the policy is attached).</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "PolicyDocument" : {
          "c2jName" : "policyDocument",
          "c2jShape" : "PolicyDocument",
          "deprecated" : false,
          "documentation" : "<p>The JSON document that describes the policy. Minimum length of 1. Maximum length of 2048, excluding whitespaces</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The JSON document that describes the policy. Minimum length of 1. Maximum length of 2048, excluding whitespaces</p>\n@param policyDocument The JSON document that describes the policy. Minimum length of 1. Maximum length of 2048, excluding whitespaces\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicyDocument",
          "getterDocumentation" : "/**<p>The JSON document that describes the policy. Minimum length of 1. Maximum length of 2048, excluding whitespaces</p>\n@return The JSON document that describes the policy. Minimum length of 1. Maximum length of 2048, excluding whitespaces*/",
          "getterMethodName" : "getPolicyDocument",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "policyDocument",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "policyDocument",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PolicyDocument",
          "setterDocumentation" : "/**<p>The JSON document that describes the policy. Minimum length of 1. Maximum length of 2048, excluding whitespaces</p>\n@param policyDocument The JSON document that describes the policy. Minimum length of 1. Maximum length of 2048, excluding whitespaces*/",
          "setterMethodName" : "setPolicyDocument",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyDocument",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The JSON document that describes the policy. Minimum length of 1. Maximum length of 2048, excluding whitespaces</p>\n@param policyDocument The JSON document that describes the policy. Minimum length of 1. Maximum length of 2048, excluding whitespaces\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyDocument",
            "variableType" : "String",
            "documentation" : "<p>The JSON document that describes the policy. Minimum length of 1. Maximum length of 2048, excluding whitespaces</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "PolicyName" : {
          "c2jName" : "policyName",
          "c2jShape" : "PolicyName",
          "deprecated" : false,
          "documentation" : "<p>The policy name.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicyName",
          "getterDocumentation" : "/**<p>The policy name.</p>\n@return The policy name.*/",
          "getterMethodName" : "getPolicyName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "policyName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "policyName",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PolicyName",
          "setterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.*/",
          "setterMethodName" : "setPolicyName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyName",
            "variableType" : "String",
            "documentation" : "<p>The policy name.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SetAsDefault" : {
          "c2jName" : "setAsDefault",
          "c2jShape" : "SetAsDefault",
          "deprecated" : false,
          "documentation" : "<p>Specifies whether the policy version is set as the default. When this parameter is true, the new policy version becomes the operative version (that is, the version that is in effect for the certificates to which the policy is attached).</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Specifies whether the policy version is set as the default. When this parameter is true, the new policy version becomes the operative version (that is, the version that is in effect for the certificates to which the policy is attached).</p>\n@param setAsDefault Specifies whether the policy version is set as the default. When this parameter is true, the new policy version becomes the operative version (that is, the version that is in effect for the certificates to which the policy is attached).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSetAsDefault",
          "getterDocumentation" : "/**<p>Specifies whether the policy version is set as the default. When this parameter is true, the new policy version becomes the operative version (that is, the version that is in effect for the certificates to which the policy is attached).</p>\n@return Specifies whether the policy version is set as the default. When this parameter is true, the new policy version becomes the operative version (that is, the version that is in effect for the certificates to which the policy is attached).*/",
          "getterMethodName" : "getSetAsDefault",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "setAsDefault",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "setAsDefault",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "SetAsDefault",
          "setterDocumentation" : "/**<p>Specifies whether the policy version is set as the default. When this parameter is true, the new policy version becomes the operative version (that is, the version that is in effect for the certificates to which the policy is attached).</p>\n@param setAsDefault Specifies whether the policy version is set as the default. When this parameter is true, the new policy version becomes the operative version (that is, the version that is in effect for the certificates to which the policy is attached).*/",
          "setterMethodName" : "setSetAsDefault",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "setAsDefault",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Specifies whether the policy version is set as the default. When this parameter is true, the new policy version becomes the operative version (that is, the version that is in effect for the certificates to which the policy is attached).</p>\n@param setAsDefault Specifies whether the policy version is set as the default. When this parameter is true, the new policy version becomes the operative version (that is, the version that is in effect for the certificates to which the policy is attached).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "setAsDefault",
            "variableType" : "Boolean",
            "documentation" : "<p>Specifies whether the policy version is set as the default. When this parameter is true, the new policy version becomes the operative version (that is, the version that is in effect for the certificates to which the policy is attached).</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "policyName", "policyDocument" ],
      "shapeName" : "CreatePolicyVersionRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "CreatePolicyVersionRequest",
        "variableName" : "createPolicyVersionRequest",
        "variableType" : "CreatePolicyVersionRequest",
        "documentation" : null,
        "simpleType" : "CreatePolicyVersionRequest",
        "variableSetterType" : "CreatePolicyVersionRequest"
      },
      "wrapper" : false
    },
    "CreatePolicyVersionResult" : {
      "c2jName" : "CreatePolicyVersionResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The output of the CreatePolicyVersion operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "policyArn",
        "c2jShape" : "PolicyArn",
        "deprecated" : false,
        "documentation" : "<p>The policy ARN.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicyArn",
        "getterDocumentation" : "/**<p>The policy ARN.</p>\n@return The policy ARN.*/",
        "getterMethodName" : "getPolicyArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "policyArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "policyArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PolicyArn",
        "setterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.*/",
        "setterMethodName" : "setPolicyArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyArn",
          "variableType" : "String",
          "documentation" : "<p>The policy ARN.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "policyDocument",
        "c2jShape" : "PolicyDocument",
        "deprecated" : false,
        "documentation" : "<p>The JSON document that describes the policy.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicyDocument",
        "getterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@return The JSON document that describes the policy.*/",
        "getterMethodName" : "getPolicyDocument",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "policyDocument",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "policyDocument",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PolicyDocument",
        "setterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.*/",
        "setterMethodName" : "setPolicyDocument",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyDocument",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyDocument",
          "variableType" : "String",
          "documentation" : "<p>The JSON document that describes the policy.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "policyVersionId",
        "c2jShape" : "PolicyVersionId",
        "deprecated" : false,
        "documentation" : "<p>The policy version ID.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicyVersionId",
        "getterDocumentation" : "/**<p>The policy version ID.</p>\n@return The policy version ID.*/",
        "getterMethodName" : "getPolicyVersionId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "policyVersionId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "policyVersionId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PolicyVersionId",
        "setterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.*/",
        "setterMethodName" : "setPolicyVersionId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyVersionId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyVersionId",
          "variableType" : "String",
          "documentation" : "<p>The policy version ID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "isDefaultVersion",
        "c2jShape" : "IsDefaultVersion",
        "deprecated" : false,
        "documentation" : "<p>Specifies whether the policy version is the default.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@param isDefaultVersion Specifies whether the policy version is the default.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withIsDefaultVersion",
        "getterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@return Specifies whether the policy version is the default.*/",
        "getterMethodName" : "getIsDefaultVersion",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "isDefaultVersion",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "isDefaultVersion",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "IsDefaultVersion",
        "setterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@param isDefaultVersion Specifies whether the policy version is the default.*/",
        "setterMethodName" : "setIsDefaultVersion",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "isDefaultVersion",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@param isDefaultVersion Specifies whether the policy version is the default.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "isDefaultVersion",
          "variableType" : "Boolean",
          "documentation" : "<p>Specifies whether the policy version is the default.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "IsDefaultVersion" : {
          "c2jName" : "isDefaultVersion",
          "c2jShape" : "IsDefaultVersion",
          "deprecated" : false,
          "documentation" : "<p>Specifies whether the policy version is the default.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@param isDefaultVersion Specifies whether the policy version is the default.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withIsDefaultVersion",
          "getterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@return Specifies whether the policy version is the default.*/",
          "getterMethodName" : "getIsDefaultVersion",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "isDefaultVersion",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "isDefaultVersion",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "IsDefaultVersion",
          "setterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@param isDefaultVersion Specifies whether the policy version is the default.*/",
          "setterMethodName" : "setIsDefaultVersion",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "isDefaultVersion",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@param isDefaultVersion Specifies whether the policy version is the default.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "isDefaultVersion",
            "variableType" : "Boolean",
            "documentation" : "<p>Specifies whether the policy version is the default.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        },
        "PolicyArn" : {
          "c2jName" : "policyArn",
          "c2jShape" : "PolicyArn",
          "deprecated" : false,
          "documentation" : "<p>The policy ARN.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicyArn",
          "getterDocumentation" : "/**<p>The policy ARN.</p>\n@return The policy ARN.*/",
          "getterMethodName" : "getPolicyArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "policyArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "policyArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PolicyArn",
          "setterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.*/",
          "setterMethodName" : "setPolicyArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyArn",
            "variableType" : "String",
            "documentation" : "<p>The policy ARN.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "PolicyDocument" : {
          "c2jName" : "policyDocument",
          "c2jShape" : "PolicyDocument",
          "deprecated" : false,
          "documentation" : "<p>The JSON document that describes the policy.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicyDocument",
          "getterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@return The JSON document that describes the policy.*/",
          "getterMethodName" : "getPolicyDocument",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "policyDocument",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "policyDocument",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PolicyDocument",
          "setterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.*/",
          "setterMethodName" : "setPolicyDocument",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyDocument",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyDocument",
            "variableType" : "String",
            "documentation" : "<p>The JSON document that describes the policy.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "PolicyVersionId" : {
          "c2jName" : "policyVersionId",
          "c2jShape" : "PolicyVersionId",
          "deprecated" : false,
          "documentation" : "<p>The policy version ID.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicyVersionId",
          "getterDocumentation" : "/**<p>The policy version ID.</p>\n@return The policy version ID.*/",
          "getterMethodName" : "getPolicyVersionId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "policyVersionId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "policyVersionId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PolicyVersionId",
          "setterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.*/",
          "setterMethodName" : "setPolicyVersionId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyVersionId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyVersionId",
            "variableType" : "String",
            "documentation" : "<p>The policy version ID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CreatePolicyVersionResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "CreatePolicyVersionResult",
        "variableName" : "createPolicyVersionResult",
        "variableType" : "CreatePolicyVersionResult",
        "documentation" : null,
        "simpleType" : "CreatePolicyVersionResult",
        "variableSetterType" : "CreatePolicyVersionResult"
      },
      "wrapper" : false
    },
    "CreateThingRequest" : {
      "c2jName" : "CreateThingRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the CreateThing operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "CreateThing",
        "locationName" : null,
        "requestUri" : "/things/{thingName}",
        "target" : null,
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "thingName",
        "c2jShape" : "ThingName",
        "deprecated" : false,
        "documentation" : "<p>The name of the thing to create.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the thing to create.</p>\n@param thingName The name of the thing to create.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withThingName",
        "getterDocumentation" : "/**<p>The name of the thing to create.</p>\n@return The name of the thing to create.*/",
        "getterMethodName" : "getThingName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "thingName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "thingName",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ThingName",
        "setterDocumentation" : "/**<p>The name of the thing to create.</p>\n@param thingName The name of the thing to create.*/",
        "setterMethodName" : "setThingName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the thing to create.</p>\n@param thingName The name of the thing to create.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingName",
          "variableType" : "String",
          "documentation" : "<p>The name of the thing to create.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "thingTypeName",
        "c2jShape" : "ThingTypeName",
        "deprecated" : false,
        "documentation" : "<p>The name of the thing type associated with the new thing.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the thing type associated with the new thing.</p>\n@param thingTypeName The name of the thing type associated with the new thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withThingTypeName",
        "getterDocumentation" : "/**<p>The name of the thing type associated with the new thing.</p>\n@return The name of the thing type associated with the new thing.*/",
        "getterMethodName" : "getThingTypeName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "thingTypeName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "thingTypeName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ThingTypeName",
        "setterDocumentation" : "/**<p>The name of the thing type associated with the new thing.</p>\n@param thingTypeName The name of the thing type associated with the new thing.*/",
        "setterMethodName" : "setThingTypeName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingTypeName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the thing type associated with the new thing.</p>\n@param thingTypeName The name of the thing type associated with the new thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingTypeName",
          "variableType" : "String",
          "documentation" : "<p>The name of the thing type associated with the new thing.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "attributePayload",
        "c2jShape" : "AttributePayload",
        "deprecated" : false,
        "documentation" : "<p>The attribute payload, which consists of up to three name/value pairs in a JSON document. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code> </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The attribute payload, which consists of up to three name/value pairs in a JSON document. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code> </p>\n@param attributePayload The attribute payload, which consists of up to three name/value pairs in a JSON document. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAttributePayload",
        "getterDocumentation" : "/**<p>The attribute payload, which consists of up to three name/value pairs in a JSON document. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code> </p>\n@return The attribute payload, which consists of up to three name/value pairs in a JSON document. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code>*/",
        "getterMethodName" : "getAttributePayload",
        "getterModel" : {
          "returnType" : "AttributePayload",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "attributePayload",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "attributePayload",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "AttributePayload",
        "setterDocumentation" : "/**<p>The attribute payload, which consists of up to three name/value pairs in a JSON document. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code> </p>\n@param attributePayload The attribute payload, which consists of up to three name/value pairs in a JSON document. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code>*/",
        "setterMethodName" : "setAttributePayload",
        "setterModel" : {
          "variableDeclarationType" : "AttributePayload",
          "variableName" : "attributePayload",
          "variableType" : "AttributePayload",
          "documentation" : "",
          "simpleType" : "AttributePayload",
          "variableSetterType" : "AttributePayload"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The attribute payload, which consists of up to three name/value pairs in a JSON document. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code> </p>\n@param attributePayload The attribute payload, which consists of up to three name/value pairs in a JSON document. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "AttributePayload",
          "variableName" : "attributePayload",
          "variableType" : "AttributePayload",
          "documentation" : "<p>The attribute payload, which consists of up to three name/value pairs in a JSON document. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code> </p>",
          "simpleType" : "AttributePayload",
          "variableSetterType" : "AttributePayload"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AttributePayload" : {
          "c2jName" : "attributePayload",
          "c2jShape" : "AttributePayload",
          "deprecated" : false,
          "documentation" : "<p>The attribute payload, which consists of up to three name/value pairs in a JSON document. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code> </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The attribute payload, which consists of up to three name/value pairs in a JSON document. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code> </p>\n@param attributePayload The attribute payload, which consists of up to three name/value pairs in a JSON document. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAttributePayload",
          "getterDocumentation" : "/**<p>The attribute payload, which consists of up to three name/value pairs in a JSON document. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code> </p>\n@return The attribute payload, which consists of up to three name/value pairs in a JSON document. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code>*/",
          "getterMethodName" : "getAttributePayload",
          "getterModel" : {
            "returnType" : "AttributePayload",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "attributePayload",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "attributePayload",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "AttributePayload",
          "setterDocumentation" : "/**<p>The attribute payload, which consists of up to three name/value pairs in a JSON document. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code> </p>\n@param attributePayload The attribute payload, which consists of up to three name/value pairs in a JSON document. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code>*/",
          "setterMethodName" : "setAttributePayload",
          "setterModel" : {
            "variableDeclarationType" : "AttributePayload",
            "variableName" : "attributePayload",
            "variableType" : "AttributePayload",
            "documentation" : "",
            "simpleType" : "AttributePayload",
            "variableSetterType" : "AttributePayload"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The attribute payload, which consists of up to three name/value pairs in a JSON document. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code> </p>\n@param attributePayload The attribute payload, which consists of up to three name/value pairs in a JSON document. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "AttributePayload",
            "variableName" : "attributePayload",
            "variableType" : "AttributePayload",
            "documentation" : "<p>The attribute payload, which consists of up to three name/value pairs in a JSON document. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code> </p>",
            "simpleType" : "AttributePayload",
            "variableSetterType" : "AttributePayload"
          },
          "xmlNameSpaceUri" : null
        },
        "ThingName" : {
          "c2jName" : "thingName",
          "c2jShape" : "ThingName",
          "deprecated" : false,
          "documentation" : "<p>The name of the thing to create.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the thing to create.</p>\n@param thingName The name of the thing to create.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withThingName",
          "getterDocumentation" : "/**<p>The name of the thing to create.</p>\n@return The name of the thing to create.*/",
          "getterMethodName" : "getThingName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "thingName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "thingName",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ThingName",
          "setterDocumentation" : "/**<p>The name of the thing to create.</p>\n@param thingName The name of the thing to create.*/",
          "setterMethodName" : "setThingName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the thing to create.</p>\n@param thingName The name of the thing to create.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingName",
            "variableType" : "String",
            "documentation" : "<p>The name of the thing to create.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ThingTypeName" : {
          "c2jName" : "thingTypeName",
          "c2jShape" : "ThingTypeName",
          "deprecated" : false,
          "documentation" : "<p>The name of the thing type associated with the new thing.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the thing type associated with the new thing.</p>\n@param thingTypeName The name of the thing type associated with the new thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withThingTypeName",
          "getterDocumentation" : "/**<p>The name of the thing type associated with the new thing.</p>\n@return The name of the thing type associated with the new thing.*/",
          "getterMethodName" : "getThingTypeName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "thingTypeName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "thingTypeName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ThingTypeName",
          "setterDocumentation" : "/**<p>The name of the thing type associated with the new thing.</p>\n@param thingTypeName The name of the thing type associated with the new thing.*/",
          "setterMethodName" : "setThingTypeName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingTypeName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the thing type associated with the new thing.</p>\n@param thingTypeName The name of the thing type associated with the new thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingTypeName",
            "variableType" : "String",
            "documentation" : "<p>The name of the thing type associated with the new thing.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "thingName" ],
      "shapeName" : "CreateThingRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "CreateThingRequest",
        "variableName" : "createThingRequest",
        "variableType" : "CreateThingRequest",
        "documentation" : null,
        "simpleType" : "CreateThingRequest",
        "variableSetterType" : "CreateThingRequest"
      },
      "wrapper" : false
    },
    "CreateThingResult" : {
      "c2jName" : "CreateThingResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The output of the CreateThing operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "thingName",
        "c2jShape" : "ThingName",
        "deprecated" : false,
        "documentation" : "<p>The name of the new thing.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the new thing.</p>\n@param thingName The name of the new thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withThingName",
        "getterDocumentation" : "/**<p>The name of the new thing.</p>\n@return The name of the new thing.*/",
        "getterMethodName" : "getThingName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "thingName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "thingName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ThingName",
        "setterDocumentation" : "/**<p>The name of the new thing.</p>\n@param thingName The name of the new thing.*/",
        "setterMethodName" : "setThingName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the new thing.</p>\n@param thingName The name of the new thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingName",
          "variableType" : "String",
          "documentation" : "<p>The name of the new thing.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "thingArn",
        "c2jShape" : "ThingArn",
        "deprecated" : false,
        "documentation" : "<p>The ARN of the new thing.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ARN of the new thing.</p>\n@param thingArn The ARN of the new thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withThingArn",
        "getterDocumentation" : "/**<p>The ARN of the new thing.</p>\n@return The ARN of the new thing.*/",
        "getterMethodName" : "getThingArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "thingArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "thingArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ThingArn",
        "setterDocumentation" : "/**<p>The ARN of the new thing.</p>\n@param thingArn The ARN of the new thing.*/",
        "setterMethodName" : "setThingArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ARN of the new thing.</p>\n@param thingArn The ARN of the new thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingArn",
          "variableType" : "String",
          "documentation" : "<p>The ARN of the new thing.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ThingArn" : {
          "c2jName" : "thingArn",
          "c2jShape" : "ThingArn",
          "deprecated" : false,
          "documentation" : "<p>The ARN of the new thing.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ARN of the new thing.</p>\n@param thingArn The ARN of the new thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withThingArn",
          "getterDocumentation" : "/**<p>The ARN of the new thing.</p>\n@return The ARN of the new thing.*/",
          "getterMethodName" : "getThingArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "thingArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "thingArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ThingArn",
          "setterDocumentation" : "/**<p>The ARN of the new thing.</p>\n@param thingArn The ARN of the new thing.*/",
          "setterMethodName" : "setThingArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ARN of the new thing.</p>\n@param thingArn The ARN of the new thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingArn",
            "variableType" : "String",
            "documentation" : "<p>The ARN of the new thing.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ThingName" : {
          "c2jName" : "thingName",
          "c2jShape" : "ThingName",
          "deprecated" : false,
          "documentation" : "<p>The name of the new thing.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the new thing.</p>\n@param thingName The name of the new thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withThingName",
          "getterDocumentation" : "/**<p>The name of the new thing.</p>\n@return The name of the new thing.*/",
          "getterMethodName" : "getThingName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "thingName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "thingName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ThingName",
          "setterDocumentation" : "/**<p>The name of the new thing.</p>\n@param thingName The name of the new thing.*/",
          "setterMethodName" : "setThingName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the new thing.</p>\n@param thingName The name of the new thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingName",
            "variableType" : "String",
            "documentation" : "<p>The name of the new thing.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CreateThingResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "CreateThingResult",
        "variableName" : "createThingResult",
        "variableType" : "CreateThingResult",
        "documentation" : null,
        "simpleType" : "CreateThingResult",
        "variableSetterType" : "CreateThingResult"
      },
      "wrapper" : false
    },
    "CreateThingTypeRequest" : {
      "c2jName" : "CreateThingTypeRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the CreateThingType operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "CreateThingType",
        "locationName" : null,
        "requestUri" : "/thing-types/{thingTypeName}",
        "target" : null,
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "thingTypeName",
        "c2jShape" : "ThingTypeName",
        "deprecated" : false,
        "documentation" : "<p>The name of the thing type.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withThingTypeName",
        "getterDocumentation" : "/**<p>The name of the thing type.</p>\n@return The name of the thing type.*/",
        "getterMethodName" : "getThingTypeName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "thingTypeName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "thingTypeName",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ThingTypeName",
        "setterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.*/",
        "setterMethodName" : "setThingTypeName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingTypeName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingTypeName",
          "variableType" : "String",
          "documentation" : "<p>The name of the thing type.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "thingTypeProperties",
        "c2jShape" : "ThingTypeProperties",
        "deprecated" : false,
        "documentation" : "<p>The ThingTypeProperties for the thing type to create. It contains information about the new thing type including a description, and a list of searchable thing attribute names.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ThingTypeProperties for the thing type to create. It contains information about the new thing type including a description, and a list of searchable thing attribute names.</p>\n@param thingTypeProperties The ThingTypeProperties for the thing type to create. It contains information about the new thing type including a description, and a list of searchable thing attribute names.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withThingTypeProperties",
        "getterDocumentation" : "/**<p>The ThingTypeProperties for the thing type to create. It contains information about the new thing type including a description, and a list of searchable thing attribute names.</p>\n@return The ThingTypeProperties for the thing type to create. It contains information about the new thing type including a description, and a list of searchable thing attribute names.*/",
        "getterMethodName" : "getThingTypeProperties",
        "getterModel" : {
          "returnType" : "ThingTypeProperties",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "thingTypeProperties",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "thingTypeProperties",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ThingTypeProperties",
        "setterDocumentation" : "/**<p>The ThingTypeProperties for the thing type to create. It contains information about the new thing type including a description, and a list of searchable thing attribute names.</p>\n@param thingTypeProperties The ThingTypeProperties for the thing type to create. It contains information about the new thing type including a description, and a list of searchable thing attribute names.*/",
        "setterMethodName" : "setThingTypeProperties",
        "setterModel" : {
          "variableDeclarationType" : "ThingTypeProperties",
          "variableName" : "thingTypeProperties",
          "variableType" : "ThingTypeProperties",
          "documentation" : "",
          "simpleType" : "ThingTypeProperties",
          "variableSetterType" : "ThingTypeProperties"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ThingTypeProperties for the thing type to create. It contains information about the new thing type including a description, and a list of searchable thing attribute names.</p>\n@param thingTypeProperties The ThingTypeProperties for the thing type to create. It contains information about the new thing type including a description, and a list of searchable thing attribute names.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "ThingTypeProperties",
          "variableName" : "thingTypeProperties",
          "variableType" : "ThingTypeProperties",
          "documentation" : "<p>The ThingTypeProperties for the thing type to create. It contains information about the new thing type including a description, and a list of searchable thing attribute names.</p>",
          "simpleType" : "ThingTypeProperties",
          "variableSetterType" : "ThingTypeProperties"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ThingTypeName" : {
          "c2jName" : "thingTypeName",
          "c2jShape" : "ThingTypeName",
          "deprecated" : false,
          "documentation" : "<p>The name of the thing type.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withThingTypeName",
          "getterDocumentation" : "/**<p>The name of the thing type.</p>\n@return The name of the thing type.*/",
          "getterMethodName" : "getThingTypeName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "thingTypeName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "thingTypeName",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ThingTypeName",
          "setterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.*/",
          "setterMethodName" : "setThingTypeName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingTypeName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingTypeName",
            "variableType" : "String",
            "documentation" : "<p>The name of the thing type.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ThingTypeProperties" : {
          "c2jName" : "thingTypeProperties",
          "c2jShape" : "ThingTypeProperties",
          "deprecated" : false,
          "documentation" : "<p>The ThingTypeProperties for the thing type to create. It contains information about the new thing type including a description, and a list of searchable thing attribute names.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ThingTypeProperties for the thing type to create. It contains information about the new thing type including a description, and a list of searchable thing attribute names.</p>\n@param thingTypeProperties The ThingTypeProperties for the thing type to create. It contains information about the new thing type including a description, and a list of searchable thing attribute names.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withThingTypeProperties",
          "getterDocumentation" : "/**<p>The ThingTypeProperties for the thing type to create. It contains information about the new thing type including a description, and a list of searchable thing attribute names.</p>\n@return The ThingTypeProperties for the thing type to create. It contains information about the new thing type including a description, and a list of searchable thing attribute names.*/",
          "getterMethodName" : "getThingTypeProperties",
          "getterModel" : {
            "returnType" : "ThingTypeProperties",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "thingTypeProperties",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "thingTypeProperties",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ThingTypeProperties",
          "setterDocumentation" : "/**<p>The ThingTypeProperties for the thing type to create. It contains information about the new thing type including a description, and a list of searchable thing attribute names.</p>\n@param thingTypeProperties The ThingTypeProperties for the thing type to create. It contains information about the new thing type including a description, and a list of searchable thing attribute names.*/",
          "setterMethodName" : "setThingTypeProperties",
          "setterModel" : {
            "variableDeclarationType" : "ThingTypeProperties",
            "variableName" : "thingTypeProperties",
            "variableType" : "ThingTypeProperties",
            "documentation" : "",
            "simpleType" : "ThingTypeProperties",
            "variableSetterType" : "ThingTypeProperties"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ThingTypeProperties for the thing type to create. It contains information about the new thing type including a description, and a list of searchable thing attribute names.</p>\n@param thingTypeProperties The ThingTypeProperties for the thing type to create. It contains information about the new thing type including a description, and a list of searchable thing attribute names.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "ThingTypeProperties",
            "variableName" : "thingTypeProperties",
            "variableType" : "ThingTypeProperties",
            "documentation" : "<p>The ThingTypeProperties for the thing type to create. It contains information about the new thing type including a description, and a list of searchable thing attribute names.</p>",
            "simpleType" : "ThingTypeProperties",
            "variableSetterType" : "ThingTypeProperties"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "thingTypeName" ],
      "shapeName" : "CreateThingTypeRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "CreateThingTypeRequest",
        "variableName" : "createThingTypeRequest",
        "variableType" : "CreateThingTypeRequest",
        "documentation" : null,
        "simpleType" : "CreateThingTypeRequest",
        "variableSetterType" : "CreateThingTypeRequest"
      },
      "wrapper" : false
    },
    "CreateThingTypeResult" : {
      "c2jName" : "CreateThingTypeResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The output of the CreateThingType operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "thingTypeName",
        "c2jShape" : "ThingTypeName",
        "deprecated" : false,
        "documentation" : "<p>The name of the thing type.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withThingTypeName",
        "getterDocumentation" : "/**<p>The name of the thing type.</p>\n@return The name of the thing type.*/",
        "getterMethodName" : "getThingTypeName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "thingTypeName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "thingTypeName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ThingTypeName",
        "setterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.*/",
        "setterMethodName" : "setThingTypeName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingTypeName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingTypeName",
          "variableType" : "String",
          "documentation" : "<p>The name of the thing type.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "thingTypeArn",
        "c2jShape" : "ThingTypeArn",
        "deprecated" : false,
        "documentation" : "<p>The Amazon Resource Name (ARN) of the thing type.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the thing type.</p>\n@param thingTypeArn The Amazon Resource Name (ARN) of the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withThingTypeArn",
        "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the thing type.</p>\n@return The Amazon Resource Name (ARN) of the thing type.*/",
        "getterMethodName" : "getThingTypeArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "thingTypeArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "thingTypeArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ThingTypeArn",
        "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the thing type.</p>\n@param thingTypeArn The Amazon Resource Name (ARN) of the thing type.*/",
        "setterMethodName" : "setThingTypeArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingTypeArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the thing type.</p>\n@param thingTypeArn The Amazon Resource Name (ARN) of the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingTypeArn",
          "variableType" : "String",
          "documentation" : "<p>The Amazon Resource Name (ARN) of the thing type.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ThingTypeArn" : {
          "c2jName" : "thingTypeArn",
          "c2jShape" : "ThingTypeArn",
          "deprecated" : false,
          "documentation" : "<p>The Amazon Resource Name (ARN) of the thing type.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the thing type.</p>\n@param thingTypeArn The Amazon Resource Name (ARN) of the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withThingTypeArn",
          "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the thing type.</p>\n@return The Amazon Resource Name (ARN) of the thing type.*/",
          "getterMethodName" : "getThingTypeArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "thingTypeArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "thingTypeArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ThingTypeArn",
          "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the thing type.</p>\n@param thingTypeArn The Amazon Resource Name (ARN) of the thing type.*/",
          "setterMethodName" : "setThingTypeArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingTypeArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the thing type.</p>\n@param thingTypeArn The Amazon Resource Name (ARN) of the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingTypeArn",
            "variableType" : "String",
            "documentation" : "<p>The Amazon Resource Name (ARN) of the thing type.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ThingTypeName" : {
          "c2jName" : "thingTypeName",
          "c2jShape" : "ThingTypeName",
          "deprecated" : false,
          "documentation" : "<p>The name of the thing type.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withThingTypeName",
          "getterDocumentation" : "/**<p>The name of the thing type.</p>\n@return The name of the thing type.*/",
          "getterMethodName" : "getThingTypeName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "thingTypeName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "thingTypeName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ThingTypeName",
          "setterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.*/",
          "setterMethodName" : "setThingTypeName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingTypeName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingTypeName",
            "variableType" : "String",
            "documentation" : "<p>The name of the thing type.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CreateThingTypeResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "CreateThingTypeResult",
        "variableName" : "createThingTypeResult",
        "variableType" : "CreateThingTypeResult",
        "documentation" : null,
        "simpleType" : "CreateThingTypeResult",
        "variableSetterType" : "CreateThingTypeResult"
      },
      "wrapper" : false
    },
    "CreateTopicRuleRequest" : {
      "c2jName" : "CreateTopicRuleRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the CreateTopicRule operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : true,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "CreateTopicRule",
        "locationName" : null,
        "requestUri" : "/rules/{ruleName}",
        "target" : null,
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ruleName",
        "c2jShape" : "RuleName",
        "deprecated" : false,
        "documentation" : "<p>The name of the rule.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRuleName",
        "getterDocumentation" : "/**<p>The name of the rule.</p>\n@return The name of the rule.*/",
        "getterMethodName" : "getRuleName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "ruleName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ruleName",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RuleName",
        "setterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.*/",
        "setterMethodName" : "setRuleName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "ruleName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "ruleName",
          "variableType" : "String",
          "documentation" : "<p>The name of the rule.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "topicRulePayload",
        "c2jShape" : "TopicRulePayload",
        "deprecated" : false,
        "documentation" : "<p>The rule payload.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The rule payload.</p>\n@param topicRulePayload The rule payload.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTopicRulePayload",
        "getterDocumentation" : "/**<p>The rule payload.</p>\n@return The rule payload.*/",
        "getterMethodName" : "getTopicRulePayload",
        "getterModel" : {
          "returnType" : "TopicRulePayload",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : true,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "topicRulePayload",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "topicRulePayload",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "TopicRulePayload",
        "setterDocumentation" : "/**<p>The rule payload.</p>\n@param topicRulePayload The rule payload.*/",
        "setterMethodName" : "setTopicRulePayload",
        "setterModel" : {
          "variableDeclarationType" : "TopicRulePayload",
          "variableName" : "topicRulePayload",
          "variableType" : "TopicRulePayload",
          "documentation" : "",
          "simpleType" : "TopicRulePayload",
          "variableSetterType" : "TopicRulePayload"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The rule payload.</p>\n@param topicRulePayload The rule payload.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "TopicRulePayload",
          "variableName" : "topicRulePayload",
          "variableType" : "TopicRulePayload",
          "documentation" : "<p>The rule payload.</p>",
          "simpleType" : "TopicRulePayload",
          "variableSetterType" : "TopicRulePayload"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "RuleName" : {
          "c2jName" : "ruleName",
          "c2jShape" : "RuleName",
          "deprecated" : false,
          "documentation" : "<p>The name of the rule.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRuleName",
          "getterDocumentation" : "/**<p>The name of the rule.</p>\n@return The name of the rule.*/",
          "getterMethodName" : "getRuleName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "ruleName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ruleName",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RuleName",
          "setterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.*/",
          "setterMethodName" : "setRuleName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "ruleName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "ruleName",
            "variableType" : "String",
            "documentation" : "<p>The name of the rule.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TopicRulePayload" : {
          "c2jName" : "topicRulePayload",
          "c2jShape" : "TopicRulePayload",
          "deprecated" : false,
          "documentation" : "<p>The rule payload.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The rule payload.</p>\n@param topicRulePayload The rule payload.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTopicRulePayload",
          "getterDocumentation" : "/**<p>The rule payload.</p>\n@return The rule payload.*/",
          "getterMethodName" : "getTopicRulePayload",
          "getterModel" : {
            "returnType" : "TopicRulePayload",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : true,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "topicRulePayload",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "topicRulePayload",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "TopicRulePayload",
          "setterDocumentation" : "/**<p>The rule payload.</p>\n@param topicRulePayload The rule payload.*/",
          "setterMethodName" : "setTopicRulePayload",
          "setterModel" : {
            "variableDeclarationType" : "TopicRulePayload",
            "variableName" : "topicRulePayload",
            "variableType" : "TopicRulePayload",
            "documentation" : "",
            "simpleType" : "TopicRulePayload",
            "variableSetterType" : "TopicRulePayload"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The rule payload.</p>\n@param topicRulePayload The rule payload.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "TopicRulePayload",
            "variableName" : "topicRulePayload",
            "variableType" : "TopicRulePayload",
            "documentation" : "<p>The rule payload.</p>",
            "simpleType" : "TopicRulePayload",
            "variableSetterType" : "TopicRulePayload"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ruleName", "topicRulePayload" ],
      "shapeName" : "CreateTopicRuleRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "CreateTopicRuleRequest",
        "variableName" : "createTopicRuleRequest",
        "variableType" : "CreateTopicRuleRequest",
        "documentation" : null,
        "simpleType" : "CreateTopicRuleRequest",
        "variableSetterType" : "CreateTopicRuleRequest"
      },
      "wrapper" : false
    },
    "CreateTopicRuleResult" : {
      "c2jName" : "CreateTopicRuleResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : null,
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CreateTopicRuleResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "CreateTopicRuleResult",
        "variableName" : "createTopicRuleResult",
        "variableType" : "CreateTopicRuleResult",
        "documentation" : null,
        "simpleType" : "CreateTopicRuleResult",
        "variableSetterType" : "CreateTopicRuleResult"
      },
      "wrapper" : false
    },
    "DeleteCACertificateRequest" : {
      "c2jName" : "DeleteCACertificateRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Input for the DeleteCACertificate operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DeleteCACertificate",
        "locationName" : null,
        "requestUri" : "/cacertificate/{caCertificateId}",
        "target" : null,
        "verb" : "DELETE",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "certificateId",
        "c2jShape" : "CertificateId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the certificate to delete.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the certificate to delete.</p>\n@param certificateId The ID of the certificate to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCertificateId",
        "getterDocumentation" : "/**<p>The ID of the certificate to delete.</p>\n@return The ID of the certificate to delete.*/",
        "getterMethodName" : "getCertificateId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "caCertificateId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "caCertificateId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CertificateId",
        "setterDocumentation" : "/**<p>The ID of the certificate to delete.</p>\n@param certificateId The ID of the certificate to delete.*/",
        "setterMethodName" : "setCertificateId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the certificate to delete.</p>\n@param certificateId The ID of the certificate to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the certificate to delete.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CertificateId" : {
          "c2jName" : "certificateId",
          "c2jShape" : "CertificateId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the certificate to delete.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the certificate to delete.</p>\n@param certificateId The ID of the certificate to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCertificateId",
          "getterDocumentation" : "/**<p>The ID of the certificate to delete.</p>\n@return The ID of the certificate to delete.*/",
          "getterMethodName" : "getCertificateId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "caCertificateId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "caCertificateId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CertificateId",
          "setterDocumentation" : "/**<p>The ID of the certificate to delete.</p>\n@param certificateId The ID of the certificate to delete.*/",
          "setterMethodName" : "setCertificateId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the certificate to delete.</p>\n@param certificateId The ID of the certificate to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the certificate to delete.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "certificateId" ],
      "shapeName" : "DeleteCACertificateRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "DeleteCACertificateRequest",
        "variableName" : "deleteCACertificateRequest",
        "variableType" : "DeleteCACertificateRequest",
        "documentation" : null,
        "simpleType" : "DeleteCACertificateRequest",
        "variableSetterType" : "DeleteCACertificateRequest"
      },
      "wrapper" : false
    },
    "DeleteCACertificateResult" : {
      "c2jName" : "DeleteCACertificateResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The output for the DeleteCACertificate operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DeleteCACertificateResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "DeleteCACertificateResult",
        "variableName" : "deleteCACertificateResult",
        "variableType" : "DeleteCACertificateResult",
        "documentation" : null,
        "simpleType" : "DeleteCACertificateResult",
        "variableSetterType" : "DeleteCACertificateResult"
      },
      "wrapper" : false
    },
    "DeleteCertificateRequest" : {
      "c2jName" : "DeleteCertificateRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the DeleteCertificate operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DeleteCertificate",
        "locationName" : null,
        "requestUri" : "/certificates/{certificateId}",
        "target" : null,
        "verb" : "DELETE",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "certificateId",
        "c2jShape" : "CertificateId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the certificate.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCertificateId",
        "getterDocumentation" : "/**<p>The ID of the certificate.</p>\n@return The ID of the certificate.*/",
        "getterMethodName" : "getCertificateId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "certificateId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "certificateId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CertificateId",
        "setterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.*/",
        "setterMethodName" : "setCertificateId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the certificate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CertificateId" : {
          "c2jName" : "certificateId",
          "c2jShape" : "CertificateId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the certificate.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCertificateId",
          "getterDocumentation" : "/**<p>The ID of the certificate.</p>\n@return The ID of the certificate.*/",
          "getterMethodName" : "getCertificateId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "certificateId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "certificateId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CertificateId",
          "setterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.*/",
          "setterMethodName" : "setCertificateId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the certificate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "certificateId" ],
      "shapeName" : "DeleteCertificateRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "DeleteCertificateRequest",
        "variableName" : "deleteCertificateRequest",
        "variableType" : "DeleteCertificateRequest",
        "documentation" : null,
        "simpleType" : "DeleteCertificateRequest",
        "variableSetterType" : "DeleteCertificateRequest"
      },
      "wrapper" : false
    },
    "DeleteCertificateResult" : {
      "c2jName" : "DeleteCertificateResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : null,
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DeleteCertificateResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "DeleteCertificateResult",
        "variableName" : "deleteCertificateResult",
        "variableType" : "DeleteCertificateResult",
        "documentation" : null,
        "simpleType" : "DeleteCertificateResult",
        "variableSetterType" : "DeleteCertificateResult"
      },
      "wrapper" : false
    },
    "DeleteConflictException" : {
      "c2jName" : "DeleteConflictException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>You can't delete the resource because it is attached to one or more resources.</p>",
      "enums" : null,
      "errorCode" : "DeleteConflictException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DeleteConflictException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "DeleteConflictException",
        "variableName" : "deleteConflictException",
        "variableType" : "DeleteConflictException",
        "documentation" : null,
        "simpleType" : "DeleteConflictException",
        "variableSetterType" : "DeleteConflictException"
      },
      "wrapper" : false
    },
    "DeletePolicyRequest" : {
      "c2jName" : "DeletePolicyRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the DeletePolicy operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DeletePolicy",
        "locationName" : null,
        "requestUri" : "/policies/{policyName}",
        "target" : null,
        "verb" : "DELETE",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "policyName",
        "c2jShape" : "PolicyName",
        "deprecated" : false,
        "documentation" : "<p>The name of the policy to delete.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the policy to delete.</p>\n@param policyName The name of the policy to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicyName",
        "getterDocumentation" : "/**<p>The name of the policy to delete.</p>\n@return The name of the policy to delete.*/",
        "getterMethodName" : "getPolicyName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "policyName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "policyName",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PolicyName",
        "setterDocumentation" : "/**<p>The name of the policy to delete.</p>\n@param policyName The name of the policy to delete.*/",
        "setterMethodName" : "setPolicyName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the policy to delete.</p>\n@param policyName The name of the policy to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyName",
          "variableType" : "String",
          "documentation" : "<p>The name of the policy to delete.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "PolicyName" : {
          "c2jName" : "policyName",
          "c2jShape" : "PolicyName",
          "deprecated" : false,
          "documentation" : "<p>The name of the policy to delete.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the policy to delete.</p>\n@param policyName The name of the policy to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicyName",
          "getterDocumentation" : "/**<p>The name of the policy to delete.</p>\n@return The name of the policy to delete.*/",
          "getterMethodName" : "getPolicyName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "policyName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "policyName",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PolicyName",
          "setterDocumentation" : "/**<p>The name of the policy to delete.</p>\n@param policyName The name of the policy to delete.*/",
          "setterMethodName" : "setPolicyName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the policy to delete.</p>\n@param policyName The name of the policy to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyName",
            "variableType" : "String",
            "documentation" : "<p>The name of the policy to delete.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "policyName" ],
      "shapeName" : "DeletePolicyRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "DeletePolicyRequest",
        "variableName" : "deletePolicyRequest",
        "variableType" : "DeletePolicyRequest",
        "documentation" : null,
        "simpleType" : "DeletePolicyRequest",
        "variableSetterType" : "DeletePolicyRequest"
      },
      "wrapper" : false
    },
    "DeletePolicyResult" : {
      "c2jName" : "DeletePolicyResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : null,
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DeletePolicyResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "DeletePolicyResult",
        "variableName" : "deletePolicyResult",
        "variableType" : "DeletePolicyResult",
        "documentation" : null,
        "simpleType" : "DeletePolicyResult",
        "variableSetterType" : "DeletePolicyResult"
      },
      "wrapper" : false
    },
    "DeletePolicyVersionRequest" : {
      "c2jName" : "DeletePolicyVersionRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the DeletePolicyVersion operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DeletePolicyVersion",
        "locationName" : null,
        "requestUri" : "/policies/{policyName}/version/{policyVersionId}",
        "target" : null,
        "verb" : "DELETE",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "policyName",
        "c2jShape" : "PolicyName",
        "deprecated" : false,
        "documentation" : "<p>The name of the policy.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the policy.</p>\n@param policyName The name of the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicyName",
        "getterDocumentation" : "/**<p>The name of the policy.</p>\n@return The name of the policy.*/",
        "getterMethodName" : "getPolicyName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "policyName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "policyName",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PolicyName",
        "setterDocumentation" : "/**<p>The name of the policy.</p>\n@param policyName The name of the policy.*/",
        "setterMethodName" : "setPolicyName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the policy.</p>\n@param policyName The name of the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyName",
          "variableType" : "String",
          "documentation" : "<p>The name of the policy.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "policyVersionId",
        "c2jShape" : "PolicyVersionId",
        "deprecated" : false,
        "documentation" : "<p>The policy version ID.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicyVersionId",
        "getterDocumentation" : "/**<p>The policy version ID.</p>\n@return The policy version ID.*/",
        "getterMethodName" : "getPolicyVersionId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "policyVersionId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "policyVersionId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PolicyVersionId",
        "setterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.*/",
        "setterMethodName" : "setPolicyVersionId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyVersionId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyVersionId",
          "variableType" : "String",
          "documentation" : "<p>The policy version ID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "PolicyName" : {
          "c2jName" : "policyName",
          "c2jShape" : "PolicyName",
          "deprecated" : false,
          "documentation" : "<p>The name of the policy.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the policy.</p>\n@param policyName The name of the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicyName",
          "getterDocumentation" : "/**<p>The name of the policy.</p>\n@return The name of the policy.*/",
          "getterMethodName" : "getPolicyName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "policyName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "policyName",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PolicyName",
          "setterDocumentation" : "/**<p>The name of the policy.</p>\n@param policyName The name of the policy.*/",
          "setterMethodName" : "setPolicyName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the policy.</p>\n@param policyName The name of the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyName",
            "variableType" : "String",
            "documentation" : "<p>The name of the policy.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "PolicyVersionId" : {
          "c2jName" : "policyVersionId",
          "c2jShape" : "PolicyVersionId",
          "deprecated" : false,
          "documentation" : "<p>The policy version ID.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicyVersionId",
          "getterDocumentation" : "/**<p>The policy version ID.</p>\n@return The policy version ID.*/",
          "getterMethodName" : "getPolicyVersionId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "policyVersionId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "policyVersionId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PolicyVersionId",
          "setterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.*/",
          "setterMethodName" : "setPolicyVersionId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyVersionId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyVersionId",
            "variableType" : "String",
            "documentation" : "<p>The policy version ID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "policyName", "policyVersionId" ],
      "shapeName" : "DeletePolicyVersionRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "DeletePolicyVersionRequest",
        "variableName" : "deletePolicyVersionRequest",
        "variableType" : "DeletePolicyVersionRequest",
        "documentation" : null,
        "simpleType" : "DeletePolicyVersionRequest",
        "variableSetterType" : "DeletePolicyVersionRequest"
      },
      "wrapper" : false
    },
    "DeletePolicyVersionResult" : {
      "c2jName" : "DeletePolicyVersionResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : null,
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DeletePolicyVersionResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "DeletePolicyVersionResult",
        "variableName" : "deletePolicyVersionResult",
        "variableType" : "DeletePolicyVersionResult",
        "documentation" : null,
        "simpleType" : "DeletePolicyVersionResult",
        "variableSetterType" : "DeletePolicyVersionResult"
      },
      "wrapper" : false
    },
    "DeleteRegistrationCodeRequest" : {
      "c2jName" : "DeleteRegistrationCodeRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the DeleteRegistrationCode operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DeleteRegistrationCode",
        "locationName" : null,
        "requestUri" : "/registrationcode",
        "target" : null,
        "verb" : "DELETE",
        "xmlNameSpaceUri" : null
      },
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DeleteRegistrationCodeRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "DeleteRegistrationCodeRequest",
        "variableName" : "deleteRegistrationCodeRequest",
        "variableType" : "DeleteRegistrationCodeRequest",
        "documentation" : null,
        "simpleType" : "DeleteRegistrationCodeRequest",
        "variableSetterType" : "DeleteRegistrationCodeRequest"
      },
      "wrapper" : false
    },
    "DeleteRegistrationCodeResult" : {
      "c2jName" : "DeleteRegistrationCodeResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The output for the DeleteRegistrationCode operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DeleteRegistrationCodeResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "DeleteRegistrationCodeResult",
        "variableName" : "deleteRegistrationCodeResult",
        "variableType" : "DeleteRegistrationCodeResult",
        "documentation" : null,
        "simpleType" : "DeleteRegistrationCodeResult",
        "variableSetterType" : "DeleteRegistrationCodeResult"
      },
      "wrapper" : false
    },
    "DeleteThingRequest" : {
      "c2jName" : "DeleteThingRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the DeleteThing operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DeleteThing",
        "locationName" : null,
        "requestUri" : "/things/{thingName}",
        "target" : null,
        "verb" : "DELETE",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "thingName",
        "c2jShape" : "ThingName",
        "deprecated" : false,
        "documentation" : "<p>The name of the thing to delete.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the thing to delete.</p>\n@param thingName The name of the thing to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withThingName",
        "getterDocumentation" : "/**<p>The name of the thing to delete.</p>\n@return The name of the thing to delete.*/",
        "getterMethodName" : "getThingName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "thingName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "thingName",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ThingName",
        "setterDocumentation" : "/**<p>The name of the thing to delete.</p>\n@param thingName The name of the thing to delete.*/",
        "setterMethodName" : "setThingName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the thing to delete.</p>\n@param thingName The name of the thing to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingName",
          "variableType" : "String",
          "documentation" : "<p>The name of the thing to delete.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "expectedVersion",
        "c2jShape" : "OptionalVersion",
        "deprecated" : false,
        "documentation" : "<p>The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>DeleteThing</code> request is rejected with a <code>VersionConflictException</code>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>DeleteThing</code> request is rejected with a <code>VersionConflictException</code>.</p>\n@param expectedVersion The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>DeleteThing</code> request is rejected with a <code>VersionConflictException</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withExpectedVersion",
        "getterDocumentation" : "/**<p>The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>DeleteThing</code> request is rejected with a <code>VersionConflictException</code>.</p>\n@return The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>DeleteThing</code> request is rejected with a <code>VersionConflictException</code>.*/",
        "getterMethodName" : "getExpectedVersion",
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "expectedVersion",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "expectedVersion",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Long",
        "marshallingType" : "LONG",
        "name" : "ExpectedVersion",
        "setterDocumentation" : "/**<p>The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>DeleteThing</code> request is rejected with a <code>VersionConflictException</code>.</p>\n@param expectedVersion The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>DeleteThing</code> request is rejected with a <code>VersionConflictException</code>.*/",
        "setterMethodName" : "setExpectedVersion",
        "setterModel" : {
          "variableDeclarationType" : "Long",
          "variableName" : "expectedVersion",
          "variableType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>DeleteThing</code> request is rejected with a <code>VersionConflictException</code>.</p>\n@param expectedVersion The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>DeleteThing</code> request is rejected with a <code>VersionConflictException</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Long",
          "variableName" : "expectedVersion",
          "variableType" : "Long",
          "documentation" : "<p>The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>DeleteThing</code> request is rejected with a <code>VersionConflictException</code>.</p>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ExpectedVersion" : {
          "c2jName" : "expectedVersion",
          "c2jShape" : "OptionalVersion",
          "deprecated" : false,
          "documentation" : "<p>The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>DeleteThing</code> request is rejected with a <code>VersionConflictException</code>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>DeleteThing</code> request is rejected with a <code>VersionConflictException</code>.</p>\n@param expectedVersion The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>DeleteThing</code> request is rejected with a <code>VersionConflictException</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withExpectedVersion",
          "getterDocumentation" : "/**<p>The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>DeleteThing</code> request is rejected with a <code>VersionConflictException</code>.</p>\n@return The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>DeleteThing</code> request is rejected with a <code>VersionConflictException</code>.*/",
          "getterMethodName" : "getExpectedVersion",
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "expectedVersion",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "expectedVersion",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Long",
          "marshallingType" : "LONG",
          "name" : "ExpectedVersion",
          "setterDocumentation" : "/**<p>The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>DeleteThing</code> request is rejected with a <code>VersionConflictException</code>.</p>\n@param expectedVersion The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>DeleteThing</code> request is rejected with a <code>VersionConflictException</code>.*/",
          "setterMethodName" : "setExpectedVersion",
          "setterModel" : {
            "variableDeclarationType" : "Long",
            "variableName" : "expectedVersion",
            "variableType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>DeleteThing</code> request is rejected with a <code>VersionConflictException</code>.</p>\n@param expectedVersion The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>DeleteThing</code> request is rejected with a <code>VersionConflictException</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Long",
            "variableName" : "expectedVersion",
            "variableType" : "Long",
            "documentation" : "<p>The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>DeleteThing</code> request is rejected with a <code>VersionConflictException</code>.</p>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "xmlNameSpaceUri" : null
        },
        "ThingName" : {
          "c2jName" : "thingName",
          "c2jShape" : "ThingName",
          "deprecated" : false,
          "documentation" : "<p>The name of the thing to delete.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the thing to delete.</p>\n@param thingName The name of the thing to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withThingName",
          "getterDocumentation" : "/**<p>The name of the thing to delete.</p>\n@return The name of the thing to delete.*/",
          "getterMethodName" : "getThingName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "thingName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "thingName",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ThingName",
          "setterDocumentation" : "/**<p>The name of the thing to delete.</p>\n@param thingName The name of the thing to delete.*/",
          "setterMethodName" : "setThingName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the thing to delete.</p>\n@param thingName The name of the thing to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingName",
            "variableType" : "String",
            "documentation" : "<p>The name of the thing to delete.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "thingName" ],
      "shapeName" : "DeleteThingRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "DeleteThingRequest",
        "variableName" : "deleteThingRequest",
        "variableType" : "DeleteThingRequest",
        "documentation" : null,
        "simpleType" : "DeleteThingRequest",
        "variableSetterType" : "DeleteThingRequest"
      },
      "wrapper" : false
    },
    "DeleteThingResult" : {
      "c2jName" : "DeleteThingResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The output of the DeleteThing operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DeleteThingResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "DeleteThingResult",
        "variableName" : "deleteThingResult",
        "variableType" : "DeleteThingResult",
        "documentation" : null,
        "simpleType" : "DeleteThingResult",
        "variableSetterType" : "DeleteThingResult"
      },
      "wrapper" : false
    },
    "DeleteThingTypeRequest" : {
      "c2jName" : "DeleteThingTypeRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the DeleteThingType operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DeleteThingType",
        "locationName" : null,
        "requestUri" : "/thing-types/{thingTypeName}",
        "target" : null,
        "verb" : "DELETE",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "thingTypeName",
        "c2jShape" : "ThingTypeName",
        "deprecated" : false,
        "documentation" : "<p>The name of the thing type.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withThingTypeName",
        "getterDocumentation" : "/**<p>The name of the thing type.</p>\n@return The name of the thing type.*/",
        "getterMethodName" : "getThingTypeName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "thingTypeName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "thingTypeName",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ThingTypeName",
        "setterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.*/",
        "setterMethodName" : "setThingTypeName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingTypeName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingTypeName",
          "variableType" : "String",
          "documentation" : "<p>The name of the thing type.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ThingTypeName" : {
          "c2jName" : "thingTypeName",
          "c2jShape" : "ThingTypeName",
          "deprecated" : false,
          "documentation" : "<p>The name of the thing type.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withThingTypeName",
          "getterDocumentation" : "/**<p>The name of the thing type.</p>\n@return The name of the thing type.*/",
          "getterMethodName" : "getThingTypeName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "thingTypeName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "thingTypeName",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ThingTypeName",
          "setterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.*/",
          "setterMethodName" : "setThingTypeName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingTypeName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingTypeName",
            "variableType" : "String",
            "documentation" : "<p>The name of the thing type.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "thingTypeName" ],
      "shapeName" : "DeleteThingTypeRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "DeleteThingTypeRequest",
        "variableName" : "deleteThingTypeRequest",
        "variableType" : "DeleteThingTypeRequest",
        "documentation" : null,
        "simpleType" : "DeleteThingTypeRequest",
        "variableSetterType" : "DeleteThingTypeRequest"
      },
      "wrapper" : false
    },
    "DeleteThingTypeResult" : {
      "c2jName" : "DeleteThingTypeResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The output for the DeleteThingType operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DeleteThingTypeResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "DeleteThingTypeResult",
        "variableName" : "deleteThingTypeResult",
        "variableType" : "DeleteThingTypeResult",
        "documentation" : null,
        "simpleType" : "DeleteThingTypeResult",
        "variableSetterType" : "DeleteThingTypeResult"
      },
      "wrapper" : false
    },
    "DeleteTopicRuleRequest" : {
      "c2jName" : "DeleteTopicRuleRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the DeleteTopicRule operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DeleteTopicRule",
        "locationName" : null,
        "requestUri" : "/rules/{ruleName}",
        "target" : null,
        "verb" : "DELETE",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ruleName",
        "c2jShape" : "RuleName",
        "deprecated" : false,
        "documentation" : "<p>The name of the rule.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRuleName",
        "getterDocumentation" : "/**<p>The name of the rule.</p>\n@return The name of the rule.*/",
        "getterMethodName" : "getRuleName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "ruleName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ruleName",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RuleName",
        "setterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.*/",
        "setterMethodName" : "setRuleName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "ruleName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "ruleName",
          "variableType" : "String",
          "documentation" : "<p>The name of the rule.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "RuleName" : {
          "c2jName" : "ruleName",
          "c2jShape" : "RuleName",
          "deprecated" : false,
          "documentation" : "<p>The name of the rule.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRuleName",
          "getterDocumentation" : "/**<p>The name of the rule.</p>\n@return The name of the rule.*/",
          "getterMethodName" : "getRuleName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "ruleName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ruleName",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RuleName",
          "setterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.*/",
          "setterMethodName" : "setRuleName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "ruleName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "ruleName",
            "variableType" : "String",
            "documentation" : "<p>The name of the rule.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ruleName" ],
      "shapeName" : "DeleteTopicRuleRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "DeleteTopicRuleRequest",
        "variableName" : "deleteTopicRuleRequest",
        "variableType" : "DeleteTopicRuleRequest",
        "documentation" : null,
        "simpleType" : "DeleteTopicRuleRequest",
        "variableSetterType" : "DeleteTopicRuleRequest"
      },
      "wrapper" : false
    },
    "DeleteTopicRuleResult" : {
      "c2jName" : "DeleteTopicRuleResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : null,
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DeleteTopicRuleResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "DeleteTopicRuleResult",
        "variableName" : "deleteTopicRuleResult",
        "variableType" : "DeleteTopicRuleResult",
        "documentation" : null,
        "simpleType" : "DeleteTopicRuleResult",
        "variableSetterType" : "DeleteTopicRuleResult"
      },
      "wrapper" : false
    },
    "DeprecateThingTypeRequest" : {
      "c2jName" : "DeprecateThingTypeRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the DeprecateThingType operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DeprecateThingType",
        "locationName" : null,
        "requestUri" : "/thing-types/{thingTypeName}/deprecate",
        "target" : null,
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "thingTypeName",
        "c2jShape" : "ThingTypeName",
        "deprecated" : false,
        "documentation" : "<p>The name of the thing type to deprecate.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the thing type to deprecate.</p>\n@param thingTypeName The name of the thing type to deprecate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withThingTypeName",
        "getterDocumentation" : "/**<p>The name of the thing type to deprecate.</p>\n@return The name of the thing type to deprecate.*/",
        "getterMethodName" : "getThingTypeName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "thingTypeName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "thingTypeName",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ThingTypeName",
        "setterDocumentation" : "/**<p>The name of the thing type to deprecate.</p>\n@param thingTypeName The name of the thing type to deprecate.*/",
        "setterMethodName" : "setThingTypeName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingTypeName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the thing type to deprecate.</p>\n@param thingTypeName The name of the thing type to deprecate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingTypeName",
          "variableType" : "String",
          "documentation" : "<p>The name of the thing type to deprecate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "undoDeprecate",
        "c2jShape" : "UndoDeprecate",
        "deprecated" : false,
        "documentation" : "<p>Whether to undeprecate a deprecated thing type. If <b>true</b>, the thing type will not be deprecated anymore and you can associate it with things.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Whether to undeprecate a deprecated thing type. If <b>true</b>, the thing type will not be deprecated anymore and you can associate it with things.</p>\n@param undoDeprecate Whether to undeprecate a deprecated thing type. If <b>true</b>, the thing type will not be deprecated anymore and you can associate it with things.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withUndoDeprecate",
        "getterDocumentation" : "/**<p>Whether to undeprecate a deprecated thing type. If <b>true</b>, the thing type will not be deprecated anymore and you can associate it with things.</p>\n@return Whether to undeprecate a deprecated thing type. If <b>true</b>, the thing type will not be deprecated anymore and you can associate it with things.*/",
        "getterMethodName" : "getUndoDeprecate",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "undoDeprecate",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "undoDeprecate",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "UndoDeprecate",
        "setterDocumentation" : "/**<p>Whether to undeprecate a deprecated thing type. If <b>true</b>, the thing type will not be deprecated anymore and you can associate it with things.</p>\n@param undoDeprecate Whether to undeprecate a deprecated thing type. If <b>true</b>, the thing type will not be deprecated anymore and you can associate it with things.*/",
        "setterMethodName" : "setUndoDeprecate",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "undoDeprecate",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Whether to undeprecate a deprecated thing type. If <b>true</b>, the thing type will not be deprecated anymore and you can associate it with things.</p>\n@param undoDeprecate Whether to undeprecate a deprecated thing type. If <b>true</b>, the thing type will not be deprecated anymore and you can associate it with things.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "undoDeprecate",
          "variableType" : "Boolean",
          "documentation" : "<p>Whether to undeprecate a deprecated thing type. If <b>true</b>, the thing type will not be deprecated anymore and you can associate it with things.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ThingTypeName" : {
          "c2jName" : "thingTypeName",
          "c2jShape" : "ThingTypeName",
          "deprecated" : false,
          "documentation" : "<p>The name of the thing type to deprecate.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the thing type to deprecate.</p>\n@param thingTypeName The name of the thing type to deprecate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withThingTypeName",
          "getterDocumentation" : "/**<p>The name of the thing type to deprecate.</p>\n@return The name of the thing type to deprecate.*/",
          "getterMethodName" : "getThingTypeName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "thingTypeName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "thingTypeName",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ThingTypeName",
          "setterDocumentation" : "/**<p>The name of the thing type to deprecate.</p>\n@param thingTypeName The name of the thing type to deprecate.*/",
          "setterMethodName" : "setThingTypeName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingTypeName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the thing type to deprecate.</p>\n@param thingTypeName The name of the thing type to deprecate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingTypeName",
            "variableType" : "String",
            "documentation" : "<p>The name of the thing type to deprecate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "UndoDeprecate" : {
          "c2jName" : "undoDeprecate",
          "c2jShape" : "UndoDeprecate",
          "deprecated" : false,
          "documentation" : "<p>Whether to undeprecate a deprecated thing type. If <b>true</b>, the thing type will not be deprecated anymore and you can associate it with things.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Whether to undeprecate a deprecated thing type. If <b>true</b>, the thing type will not be deprecated anymore and you can associate it with things.</p>\n@param undoDeprecate Whether to undeprecate a deprecated thing type. If <b>true</b>, the thing type will not be deprecated anymore and you can associate it with things.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withUndoDeprecate",
          "getterDocumentation" : "/**<p>Whether to undeprecate a deprecated thing type. If <b>true</b>, the thing type will not be deprecated anymore and you can associate it with things.</p>\n@return Whether to undeprecate a deprecated thing type. If <b>true</b>, the thing type will not be deprecated anymore and you can associate it with things.*/",
          "getterMethodName" : "getUndoDeprecate",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "undoDeprecate",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "undoDeprecate",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "UndoDeprecate",
          "setterDocumentation" : "/**<p>Whether to undeprecate a deprecated thing type. If <b>true</b>, the thing type will not be deprecated anymore and you can associate it with things.</p>\n@param undoDeprecate Whether to undeprecate a deprecated thing type. If <b>true</b>, the thing type will not be deprecated anymore and you can associate it with things.*/",
          "setterMethodName" : "setUndoDeprecate",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "undoDeprecate",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Whether to undeprecate a deprecated thing type. If <b>true</b>, the thing type will not be deprecated anymore and you can associate it with things.</p>\n@param undoDeprecate Whether to undeprecate a deprecated thing type. If <b>true</b>, the thing type will not be deprecated anymore and you can associate it with things.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "undoDeprecate",
            "variableType" : "Boolean",
            "documentation" : "<p>Whether to undeprecate a deprecated thing type. If <b>true</b>, the thing type will not be deprecated anymore and you can associate it with things.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "thingTypeName" ],
      "shapeName" : "DeprecateThingTypeRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "DeprecateThingTypeRequest",
        "variableName" : "deprecateThingTypeRequest",
        "variableType" : "DeprecateThingTypeRequest",
        "documentation" : null,
        "simpleType" : "DeprecateThingTypeRequest",
        "variableSetterType" : "DeprecateThingTypeRequest"
      },
      "wrapper" : false
    },
    "DeprecateThingTypeResult" : {
      "c2jName" : "DeprecateThingTypeResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The output for the DeprecateThingType operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DeprecateThingTypeResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "DeprecateThingTypeResult",
        "variableName" : "deprecateThingTypeResult",
        "variableType" : "DeprecateThingTypeResult",
        "documentation" : null,
        "simpleType" : "DeprecateThingTypeResult",
        "variableSetterType" : "DeprecateThingTypeResult"
      },
      "wrapper" : false
    },
    "DescribeCACertificateRequest" : {
      "c2jName" : "DescribeCACertificateRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the DescribeCACertificate operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DescribeCACertificate",
        "locationName" : null,
        "requestUri" : "/cacertificate/{caCertificateId}",
        "target" : null,
        "verb" : "GET",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "certificateId",
        "c2jShape" : "CertificateId",
        "deprecated" : false,
        "documentation" : "<p>The CA certificate identifier.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The CA certificate identifier.</p>\n@param certificateId The CA certificate identifier.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCertificateId",
        "getterDocumentation" : "/**<p>The CA certificate identifier.</p>\n@return The CA certificate identifier.*/",
        "getterMethodName" : "getCertificateId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "caCertificateId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "caCertificateId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CertificateId",
        "setterDocumentation" : "/**<p>The CA certificate identifier.</p>\n@param certificateId The CA certificate identifier.*/",
        "setterMethodName" : "setCertificateId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The CA certificate identifier.</p>\n@param certificateId The CA certificate identifier.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateId",
          "variableType" : "String",
          "documentation" : "<p>The CA certificate identifier.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CertificateId" : {
          "c2jName" : "certificateId",
          "c2jShape" : "CertificateId",
          "deprecated" : false,
          "documentation" : "<p>The CA certificate identifier.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The CA certificate identifier.</p>\n@param certificateId The CA certificate identifier.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCertificateId",
          "getterDocumentation" : "/**<p>The CA certificate identifier.</p>\n@return The CA certificate identifier.*/",
          "getterMethodName" : "getCertificateId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "caCertificateId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "caCertificateId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CertificateId",
          "setterDocumentation" : "/**<p>The CA certificate identifier.</p>\n@param certificateId The CA certificate identifier.*/",
          "setterMethodName" : "setCertificateId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The CA certificate identifier.</p>\n@param certificateId The CA certificate identifier.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateId",
            "variableType" : "String",
            "documentation" : "<p>The CA certificate identifier.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "certificateId" ],
      "shapeName" : "DescribeCACertificateRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "DescribeCACertificateRequest",
        "variableName" : "describeCACertificateRequest",
        "variableType" : "DescribeCACertificateRequest",
        "documentation" : null,
        "simpleType" : "DescribeCACertificateRequest",
        "variableSetterType" : "DescribeCACertificateRequest"
      },
      "wrapper" : false
    },
    "DescribeCACertificateResult" : {
      "c2jName" : "DescribeCACertificateResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The output from the DescribeCACertificate operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "certificateDescription",
        "c2jShape" : "CACertificateDescription",
        "deprecated" : false,
        "documentation" : "<p>The CA certificate description.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The CA certificate description.</p>\n@param certificateDescription The CA certificate description.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCertificateDescription",
        "getterDocumentation" : "/**<p>The CA certificate description.</p>\n@return The CA certificate description.*/",
        "getterMethodName" : "getCertificateDescription",
        "getterModel" : {
          "returnType" : "CACertificateDescription",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "certificateDescription",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "certificateDescription",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "CertificateDescription",
        "setterDocumentation" : "/**<p>The CA certificate description.</p>\n@param certificateDescription The CA certificate description.*/",
        "setterMethodName" : "setCertificateDescription",
        "setterModel" : {
          "variableDeclarationType" : "CACertificateDescription",
          "variableName" : "certificateDescription",
          "variableType" : "CACertificateDescription",
          "documentation" : "",
          "simpleType" : "CACertificateDescription",
          "variableSetterType" : "CACertificateDescription"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The CA certificate description.</p>\n@param certificateDescription The CA certificate description.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "CACertificateDescription",
          "variableName" : "certificateDescription",
          "variableType" : "CACertificateDescription",
          "documentation" : "<p>The CA certificate description.</p>",
          "simpleType" : "CACertificateDescription",
          "variableSetterType" : "CACertificateDescription"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CertificateDescription" : {
          "c2jName" : "certificateDescription",
          "c2jShape" : "CACertificateDescription",
          "deprecated" : false,
          "documentation" : "<p>The CA certificate description.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The CA certificate description.</p>\n@param certificateDescription The CA certificate description.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCertificateDescription",
          "getterDocumentation" : "/**<p>The CA certificate description.</p>\n@return The CA certificate description.*/",
          "getterMethodName" : "getCertificateDescription",
          "getterModel" : {
            "returnType" : "CACertificateDescription",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "certificateDescription",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "certificateDescription",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "CertificateDescription",
          "setterDocumentation" : "/**<p>The CA certificate description.</p>\n@param certificateDescription The CA certificate description.*/",
          "setterMethodName" : "setCertificateDescription",
          "setterModel" : {
            "variableDeclarationType" : "CACertificateDescription",
            "variableName" : "certificateDescription",
            "variableType" : "CACertificateDescription",
            "documentation" : "",
            "simpleType" : "CACertificateDescription",
            "variableSetterType" : "CACertificateDescription"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The CA certificate description.</p>\n@param certificateDescription The CA certificate description.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "CACertificateDescription",
            "variableName" : "certificateDescription",
            "variableType" : "CACertificateDescription",
            "documentation" : "<p>The CA certificate description.</p>",
            "simpleType" : "CACertificateDescription",
            "variableSetterType" : "CACertificateDescription"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DescribeCACertificateResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "DescribeCACertificateResult",
        "variableName" : "describeCACertificateResult",
        "variableType" : "DescribeCACertificateResult",
        "documentation" : null,
        "simpleType" : "DescribeCACertificateResult",
        "variableSetterType" : "DescribeCACertificateResult"
      },
      "wrapper" : false
    },
    "DescribeCertificateRequest" : {
      "c2jName" : "DescribeCertificateRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the DescribeCertificate operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DescribeCertificate",
        "locationName" : null,
        "requestUri" : "/certificates/{certificateId}",
        "target" : null,
        "verb" : "GET",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "certificateId",
        "c2jShape" : "CertificateId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the certificate.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCertificateId",
        "getterDocumentation" : "/**<p>The ID of the certificate.</p>\n@return The ID of the certificate.*/",
        "getterMethodName" : "getCertificateId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "certificateId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "certificateId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CertificateId",
        "setterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.*/",
        "setterMethodName" : "setCertificateId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the certificate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CertificateId" : {
          "c2jName" : "certificateId",
          "c2jShape" : "CertificateId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the certificate.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCertificateId",
          "getterDocumentation" : "/**<p>The ID of the certificate.</p>\n@return The ID of the certificate.*/",
          "getterMethodName" : "getCertificateId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "certificateId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "certificateId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CertificateId",
          "setterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.*/",
          "setterMethodName" : "setCertificateId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the certificate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "certificateId" ],
      "shapeName" : "DescribeCertificateRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "DescribeCertificateRequest",
        "variableName" : "describeCertificateRequest",
        "variableType" : "DescribeCertificateRequest",
        "documentation" : null,
        "simpleType" : "DescribeCertificateRequest",
        "variableSetterType" : "DescribeCertificateRequest"
      },
      "wrapper" : false
    },
    "DescribeCertificateResult" : {
      "c2jName" : "DescribeCertificateResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The output of the DescribeCertificate operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "certificateDescription",
        "c2jShape" : "CertificateDescription",
        "deprecated" : false,
        "documentation" : "<p>The description of the certificate.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The description of the certificate.</p>\n@param certificateDescription The description of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCertificateDescription",
        "getterDocumentation" : "/**<p>The description of the certificate.</p>\n@return The description of the certificate.*/",
        "getterMethodName" : "getCertificateDescription",
        "getterModel" : {
          "returnType" : "CertificateDescription",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "certificateDescription",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "certificateDescription",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "CertificateDescription",
        "setterDocumentation" : "/**<p>The description of the certificate.</p>\n@param certificateDescription The description of the certificate.*/",
        "setterMethodName" : "setCertificateDescription",
        "setterModel" : {
          "variableDeclarationType" : "CertificateDescription",
          "variableName" : "certificateDescription",
          "variableType" : "CertificateDescription",
          "documentation" : "",
          "simpleType" : "CertificateDescription",
          "variableSetterType" : "CertificateDescription"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The description of the certificate.</p>\n@param certificateDescription The description of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "CertificateDescription",
          "variableName" : "certificateDescription",
          "variableType" : "CertificateDescription",
          "documentation" : "<p>The description of the certificate.</p>",
          "simpleType" : "CertificateDescription",
          "variableSetterType" : "CertificateDescription"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CertificateDescription" : {
          "c2jName" : "certificateDescription",
          "c2jShape" : "CertificateDescription",
          "deprecated" : false,
          "documentation" : "<p>The description of the certificate.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The description of the certificate.</p>\n@param certificateDescription The description of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCertificateDescription",
          "getterDocumentation" : "/**<p>The description of the certificate.</p>\n@return The description of the certificate.*/",
          "getterMethodName" : "getCertificateDescription",
          "getterModel" : {
            "returnType" : "CertificateDescription",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "certificateDescription",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "certificateDescription",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "CertificateDescription",
          "setterDocumentation" : "/**<p>The description of the certificate.</p>\n@param certificateDescription The description of the certificate.*/",
          "setterMethodName" : "setCertificateDescription",
          "setterModel" : {
            "variableDeclarationType" : "CertificateDescription",
            "variableName" : "certificateDescription",
            "variableType" : "CertificateDescription",
            "documentation" : "",
            "simpleType" : "CertificateDescription",
            "variableSetterType" : "CertificateDescription"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The description of the certificate.</p>\n@param certificateDescription The description of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "CertificateDescription",
            "variableName" : "certificateDescription",
            "variableType" : "CertificateDescription",
            "documentation" : "<p>The description of the certificate.</p>",
            "simpleType" : "CertificateDescription",
            "variableSetterType" : "CertificateDescription"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DescribeCertificateResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "DescribeCertificateResult",
        "variableName" : "describeCertificateResult",
        "variableType" : "DescribeCertificateResult",
        "documentation" : null,
        "simpleType" : "DescribeCertificateResult",
        "variableSetterType" : "DescribeCertificateResult"
      },
      "wrapper" : false
    },
    "DescribeEndpointRequest" : {
      "c2jName" : "DescribeEndpointRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the DescribeEndpoint operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DescribeEndpoint",
        "locationName" : null,
        "requestUri" : "/endpoint",
        "target" : null,
        "verb" : "GET",
        "xmlNameSpaceUri" : null
      },
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DescribeEndpointRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "DescribeEndpointRequest",
        "variableName" : "describeEndpointRequest",
        "variableType" : "DescribeEndpointRequest",
        "documentation" : null,
        "simpleType" : "DescribeEndpointRequest",
        "variableSetterType" : "DescribeEndpointRequest"
      },
      "wrapper" : false
    },
    "DescribeEndpointResult" : {
      "c2jName" : "DescribeEndpointResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The output from the DescribeEndpoint operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "endpointAddress",
        "c2jShape" : "EndpointAddress",
        "deprecated" : false,
        "documentation" : "<p>The endpoint. The format of the endpoint is as follows: <i>identifier</i>.iot.<i>region</i>.amazonaws.com.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The endpoint. The format of the endpoint is as follows: <i>identifier</i>.iot.<i>region</i>.amazonaws.com.</p>\n@param endpointAddress The endpoint. The format of the endpoint is as follows: <i>identifier</i>.iot.<i>region</i>.amazonaws.com.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withEndpointAddress",
        "getterDocumentation" : "/**<p>The endpoint. The format of the endpoint is as follows: <i>identifier</i>.iot.<i>region</i>.amazonaws.com.</p>\n@return The endpoint. The format of the endpoint is as follows: <i>identifier</i>.iot.<i>region</i>.amazonaws.com.*/",
        "getterMethodName" : "getEndpointAddress",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "endpointAddress",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "endpointAddress",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "EndpointAddress",
        "setterDocumentation" : "/**<p>The endpoint. The format of the endpoint is as follows: <i>identifier</i>.iot.<i>region</i>.amazonaws.com.</p>\n@param endpointAddress The endpoint. The format of the endpoint is as follows: <i>identifier</i>.iot.<i>region</i>.amazonaws.com.*/",
        "setterMethodName" : "setEndpointAddress",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "endpointAddress",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The endpoint. The format of the endpoint is as follows: <i>identifier</i>.iot.<i>region</i>.amazonaws.com.</p>\n@param endpointAddress The endpoint. The format of the endpoint is as follows: <i>identifier</i>.iot.<i>region</i>.amazonaws.com.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "endpointAddress",
          "variableType" : "String",
          "documentation" : "<p>The endpoint. The format of the endpoint is as follows: <i>identifier</i>.iot.<i>region</i>.amazonaws.com.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "EndpointAddress" : {
          "c2jName" : "endpointAddress",
          "c2jShape" : "EndpointAddress",
          "deprecated" : false,
          "documentation" : "<p>The endpoint. The format of the endpoint is as follows: <i>identifier</i>.iot.<i>region</i>.amazonaws.com.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The endpoint. The format of the endpoint is as follows: <i>identifier</i>.iot.<i>region</i>.amazonaws.com.</p>\n@param endpointAddress The endpoint. The format of the endpoint is as follows: <i>identifier</i>.iot.<i>region</i>.amazonaws.com.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withEndpointAddress",
          "getterDocumentation" : "/**<p>The endpoint. The format of the endpoint is as follows: <i>identifier</i>.iot.<i>region</i>.amazonaws.com.</p>\n@return The endpoint. The format of the endpoint is as follows: <i>identifier</i>.iot.<i>region</i>.amazonaws.com.*/",
          "getterMethodName" : "getEndpointAddress",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "endpointAddress",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "endpointAddress",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "EndpointAddress",
          "setterDocumentation" : "/**<p>The endpoint. The format of the endpoint is as follows: <i>identifier</i>.iot.<i>region</i>.amazonaws.com.</p>\n@param endpointAddress The endpoint. The format of the endpoint is as follows: <i>identifier</i>.iot.<i>region</i>.amazonaws.com.*/",
          "setterMethodName" : "setEndpointAddress",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "endpointAddress",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The endpoint. The format of the endpoint is as follows: <i>identifier</i>.iot.<i>region</i>.amazonaws.com.</p>\n@param endpointAddress The endpoint. The format of the endpoint is as follows: <i>identifier</i>.iot.<i>region</i>.amazonaws.com.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "endpointAddress",
            "variableType" : "String",
            "documentation" : "<p>The endpoint. The format of the endpoint is as follows: <i>identifier</i>.iot.<i>region</i>.amazonaws.com.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DescribeEndpointResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "DescribeEndpointResult",
        "variableName" : "describeEndpointResult",
        "variableType" : "DescribeEndpointResult",
        "documentation" : null,
        "simpleType" : "DescribeEndpointResult",
        "variableSetterType" : "DescribeEndpointResult"
      },
      "wrapper" : false
    },
    "DescribeThingRequest" : {
      "c2jName" : "DescribeThingRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the DescribeThing operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DescribeThing",
        "locationName" : null,
        "requestUri" : "/things/{thingName}",
        "target" : null,
        "verb" : "GET",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "thingName",
        "c2jShape" : "ThingName",
        "deprecated" : false,
        "documentation" : "<p>The name of the thing.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withThingName",
        "getterDocumentation" : "/**<p>The name of the thing.</p>\n@return The name of the thing.*/",
        "getterMethodName" : "getThingName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "thingName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "thingName",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ThingName",
        "setterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.*/",
        "setterMethodName" : "setThingName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingName",
          "variableType" : "String",
          "documentation" : "<p>The name of the thing.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ThingName" : {
          "c2jName" : "thingName",
          "c2jShape" : "ThingName",
          "deprecated" : false,
          "documentation" : "<p>The name of the thing.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withThingName",
          "getterDocumentation" : "/**<p>The name of the thing.</p>\n@return The name of the thing.*/",
          "getterMethodName" : "getThingName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "thingName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "thingName",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ThingName",
          "setterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.*/",
          "setterMethodName" : "setThingName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingName",
            "variableType" : "String",
            "documentation" : "<p>The name of the thing.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "thingName" ],
      "shapeName" : "DescribeThingRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "DescribeThingRequest",
        "variableName" : "describeThingRequest",
        "variableType" : "DescribeThingRequest",
        "documentation" : null,
        "simpleType" : "DescribeThingRequest",
        "variableSetterType" : "DescribeThingRequest"
      },
      "wrapper" : false
    },
    "DescribeThingResult" : {
      "c2jName" : "DescribeThingResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The output from the DescribeThing operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "defaultClientId",
        "c2jShape" : "ClientId",
        "deprecated" : false,
        "documentation" : "<p>The default client ID.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The default client ID.</p>\n@param defaultClientId The default client ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDefaultClientId",
        "getterDocumentation" : "/**<p>The default client ID.</p>\n@return The default client ID.*/",
        "getterMethodName" : "getDefaultClientId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "defaultClientId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "defaultClientId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "DefaultClientId",
        "setterDocumentation" : "/**<p>The default client ID.</p>\n@param defaultClientId The default client ID.*/",
        "setterMethodName" : "setDefaultClientId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "defaultClientId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The default client ID.</p>\n@param defaultClientId The default client ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "defaultClientId",
          "variableType" : "String",
          "documentation" : "<p>The default client ID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "thingName",
        "c2jShape" : "ThingName",
        "deprecated" : false,
        "documentation" : "<p>The name of the thing.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withThingName",
        "getterDocumentation" : "/**<p>The name of the thing.</p>\n@return The name of the thing.*/",
        "getterMethodName" : "getThingName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "thingName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "thingName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ThingName",
        "setterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.*/",
        "setterMethodName" : "setThingName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingName",
          "variableType" : "String",
          "documentation" : "<p>The name of the thing.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "thingTypeName",
        "c2jShape" : "ThingTypeName",
        "deprecated" : false,
        "documentation" : "<p>The thing type name.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The thing type name.</p>\n@param thingTypeName The thing type name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withThingTypeName",
        "getterDocumentation" : "/**<p>The thing type name.</p>\n@return The thing type name.*/",
        "getterMethodName" : "getThingTypeName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "thingTypeName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "thingTypeName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ThingTypeName",
        "setterDocumentation" : "/**<p>The thing type name.</p>\n@param thingTypeName The thing type name.*/",
        "setterMethodName" : "setThingTypeName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingTypeName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The thing type name.</p>\n@param thingTypeName The thing type name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingTypeName",
          "variableType" : "String",
          "documentation" : "<p>The thing type name.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "attributes",
        "c2jShape" : "Attributes",
        "deprecated" : false,
        "documentation" : "<p>The thing attributes.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The thing attributes.</p>\n@param attributes The thing attributes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAttributes",
        "getterDocumentation" : "/**<p>The thing attributes.</p>\n@return The thing attributes.*/",
        "getterMethodName" : "getAttributes",
        "getterModel" : {
          "returnType" : "java.util.Map<String,String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "attributes",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "attributes",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : true,
        "mapModel" : {
          "implType" : "java.util.HashMap",
          "interfaceType" : "java.util.Map",
          "keyLocationName" : "key",
          "keyModel" : null,
          "keyType" : "String",
          "valueLocationName" : "value",
          "valueModel" : {
            "c2jName" : "value",
            "c2jShape" : "AttributeValue",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withValue",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getValue",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "value",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "value",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Value",
            "setterDocumentation" : "/**\n@param value */",
            "setterMethodName" : "setValue",
            "setterModel" : {
              "variableDeclarationType" : "String",
              "variableName" : "value",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "String",
              "variableName" : "value",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "valueType" : "String",
          "entryType" : "Map.Entry<String, String>",
          "keySimple" : true,
          "templateImplType" : "java.util.HashMap<String,String>",
          "templateType" : "java.util.Map<String,String>",
          "valueList" : false,
          "valueSimple" : true
        },
        "marshallingTargetClass" : "Map",
        "marshallingType" : "MAP",
        "name" : "Attributes",
        "setterDocumentation" : "/**<p>The thing attributes.</p>\n@param attributes The thing attributes.*/",
        "setterMethodName" : "setAttributes",
        "setterModel" : {
          "variableDeclarationType" : "java.util.Map<String,String>",
          "variableName" : "attributes",
          "variableType" : "java.util.Map<String,String>",
          "documentation" : "",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The thing attributes.</p>\n@param attributes The thing attributes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.Map<String,String>",
          "variableName" : "attributes",
          "variableType" : "java.util.Map<String,String>",
          "documentation" : "<p>The thing attributes.</p>",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "version",
        "c2jShape" : "Version",
        "deprecated" : false,
        "documentation" : "<p>The current version of the thing record in the registry.</p> <note> <p>To avoid unintentional changes to the information in the registry, you can pass the version information in the <code>expectedVersion</code> parameter of the <code>UpdateThing</code> and <code>DeleteThing</code> calls.</p> </note>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The current version of the thing record in the registry.</p> <note> <p>To avoid unintentional changes to the information in the registry, you can pass the version information in the <code>expectedVersion</code> parameter of the <code>UpdateThing</code> and <code>DeleteThing</code> calls.</p> </note>\n@param version The current version of the thing record in the registry.</p> <note> <p>To avoid unintentional changes to the information in the registry, you can pass the version information in the <code>expectedVersion</code> parameter of the <code>UpdateThing</code> and <code>DeleteThing</code> calls.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withVersion",
        "getterDocumentation" : "/**<p>The current version of the thing record in the registry.</p> <note> <p>To avoid unintentional changes to the information in the registry, you can pass the version information in the <code>expectedVersion</code> parameter of the <code>UpdateThing</code> and <code>DeleteThing</code> calls.</p> </note>\n@return The current version of the thing record in the registry.</p> <note> <p>To avoid unintentional changes to the information in the registry, you can pass the version information in the <code>expectedVersion</code> parameter of the <code>UpdateThing</code> and <code>DeleteThing</code> calls.</p>*/",
        "getterMethodName" : "getVersion",
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "version",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "version",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Long",
        "marshallingType" : "LONG",
        "name" : "Version",
        "setterDocumentation" : "/**<p>The current version of the thing record in the registry.</p> <note> <p>To avoid unintentional changes to the information in the registry, you can pass the version information in the <code>expectedVersion</code> parameter of the <code>UpdateThing</code> and <code>DeleteThing</code> calls.</p> </note>\n@param version The current version of the thing record in the registry.</p> <note> <p>To avoid unintentional changes to the information in the registry, you can pass the version information in the <code>expectedVersion</code> parameter of the <code>UpdateThing</code> and <code>DeleteThing</code> calls.</p>*/",
        "setterMethodName" : "setVersion",
        "setterModel" : {
          "variableDeclarationType" : "Long",
          "variableName" : "version",
          "variableType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The current version of the thing record in the registry.</p> <note> <p>To avoid unintentional changes to the information in the registry, you can pass the version information in the <code>expectedVersion</code> parameter of the <code>UpdateThing</code> and <code>DeleteThing</code> calls.</p> </note>\n@param version The current version of the thing record in the registry.</p> <note> <p>To avoid unintentional changes to the information in the registry, you can pass the version information in the <code>expectedVersion</code> parameter of the <code>UpdateThing</code> and <code>DeleteThing</code> calls.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Long",
          "variableName" : "version",
          "variableType" : "Long",
          "documentation" : "<p>The current version of the thing record in the registry.</p> <note> <p>To avoid unintentional changes to the information in the registry, you can pass the version information in the <code>expectedVersion</code> parameter of the <code>UpdateThing</code> and <code>DeleteThing</code> calls.</p> </note>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Attributes" : {
          "c2jName" : "attributes",
          "c2jShape" : "Attributes",
          "deprecated" : false,
          "documentation" : "<p>The thing attributes.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The thing attributes.</p>\n@param attributes The thing attributes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAttributes",
          "getterDocumentation" : "/**<p>The thing attributes.</p>\n@return The thing attributes.*/",
          "getterMethodName" : "getAttributes",
          "getterModel" : {
            "returnType" : "java.util.Map<String,String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "attributes",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "attributes",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : true,
          "mapModel" : {
            "implType" : "java.util.HashMap",
            "interfaceType" : "java.util.Map",
            "keyLocationName" : "key",
            "keyModel" : null,
            "keyType" : "String",
            "valueLocationName" : "value",
            "valueModel" : {
              "c2jName" : "value",
              "c2jShape" : "AttributeValue",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withValue",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getValue",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "value",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "value",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Value",
              "setterDocumentation" : "/**\n@param value */",
              "setterMethodName" : "setValue",
              "setterModel" : {
                "variableDeclarationType" : "String",
                "variableName" : "value",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "String",
                "variableName" : "value",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "valueType" : "String",
            "entryType" : "Map.Entry<String, String>",
            "keySimple" : true,
            "templateImplType" : "java.util.HashMap<String,String>",
            "templateType" : "java.util.Map<String,String>",
            "valueList" : false,
            "valueSimple" : true
          },
          "marshallingTargetClass" : "Map",
          "marshallingType" : "MAP",
          "name" : "Attributes",
          "setterDocumentation" : "/**<p>The thing attributes.</p>\n@param attributes The thing attributes.*/",
          "setterMethodName" : "setAttributes",
          "setterModel" : {
            "variableDeclarationType" : "java.util.Map<String,String>",
            "variableName" : "attributes",
            "variableType" : "java.util.Map<String,String>",
            "documentation" : "",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The thing attributes.</p>\n@param attributes The thing attributes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.Map<String,String>",
            "variableName" : "attributes",
            "variableType" : "java.util.Map<String,String>",
            "documentation" : "<p>The thing attributes.</p>",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "xmlNameSpaceUri" : null
        },
        "DefaultClientId" : {
          "c2jName" : "defaultClientId",
          "c2jShape" : "ClientId",
          "deprecated" : false,
          "documentation" : "<p>The default client ID.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The default client ID.</p>\n@param defaultClientId The default client ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDefaultClientId",
          "getterDocumentation" : "/**<p>The default client ID.</p>\n@return The default client ID.*/",
          "getterMethodName" : "getDefaultClientId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "defaultClientId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "defaultClientId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "DefaultClientId",
          "setterDocumentation" : "/**<p>The default client ID.</p>\n@param defaultClientId The default client ID.*/",
          "setterMethodName" : "setDefaultClientId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "defaultClientId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The default client ID.</p>\n@param defaultClientId The default client ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "defaultClientId",
            "variableType" : "String",
            "documentation" : "<p>The default client ID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ThingName" : {
          "c2jName" : "thingName",
          "c2jShape" : "ThingName",
          "deprecated" : false,
          "documentation" : "<p>The name of the thing.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withThingName",
          "getterDocumentation" : "/**<p>The name of the thing.</p>\n@return The name of the thing.*/",
          "getterMethodName" : "getThingName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "thingName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "thingName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ThingName",
          "setterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.*/",
          "setterMethodName" : "setThingName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingName",
            "variableType" : "String",
            "documentation" : "<p>The name of the thing.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ThingTypeName" : {
          "c2jName" : "thingTypeName",
          "c2jShape" : "ThingTypeName",
          "deprecated" : false,
          "documentation" : "<p>The thing type name.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The thing type name.</p>\n@param thingTypeName The thing type name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withThingTypeName",
          "getterDocumentation" : "/**<p>The thing type name.</p>\n@return The thing type name.*/",
          "getterMethodName" : "getThingTypeName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "thingTypeName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "thingTypeName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ThingTypeName",
          "setterDocumentation" : "/**<p>The thing type name.</p>\n@param thingTypeName The thing type name.*/",
          "setterMethodName" : "setThingTypeName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingTypeName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The thing type name.</p>\n@param thingTypeName The thing type name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingTypeName",
            "variableType" : "String",
            "documentation" : "<p>The thing type name.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Version" : {
          "c2jName" : "version",
          "c2jShape" : "Version",
          "deprecated" : false,
          "documentation" : "<p>The current version of the thing record in the registry.</p> <note> <p>To avoid unintentional changes to the information in the registry, you can pass the version information in the <code>expectedVersion</code> parameter of the <code>UpdateThing</code> and <code>DeleteThing</code> calls.</p> </note>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The current version of the thing record in the registry.</p> <note> <p>To avoid unintentional changes to the information in the registry, you can pass the version information in the <code>expectedVersion</code> parameter of the <code>UpdateThing</code> and <code>DeleteThing</code> calls.</p> </note>\n@param version The current version of the thing record in the registry.</p> <note> <p>To avoid unintentional changes to the information in the registry, you can pass the version information in the <code>expectedVersion</code> parameter of the <code>UpdateThing</code> and <code>DeleteThing</code> calls.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withVersion",
          "getterDocumentation" : "/**<p>The current version of the thing record in the registry.</p> <note> <p>To avoid unintentional changes to the information in the registry, you can pass the version information in the <code>expectedVersion</code> parameter of the <code>UpdateThing</code> and <code>DeleteThing</code> calls.</p> </note>\n@return The current version of the thing record in the registry.</p> <note> <p>To avoid unintentional changes to the information in the registry, you can pass the version information in the <code>expectedVersion</code> parameter of the <code>UpdateThing</code> and <code>DeleteThing</code> calls.</p>*/",
          "getterMethodName" : "getVersion",
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "version",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "version",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Long",
          "marshallingType" : "LONG",
          "name" : "Version",
          "setterDocumentation" : "/**<p>The current version of the thing record in the registry.</p> <note> <p>To avoid unintentional changes to the information in the registry, you can pass the version information in the <code>expectedVersion</code> parameter of the <code>UpdateThing</code> and <code>DeleteThing</code> calls.</p> </note>\n@param version The current version of the thing record in the registry.</p> <note> <p>To avoid unintentional changes to the information in the registry, you can pass the version information in the <code>expectedVersion</code> parameter of the <code>UpdateThing</code> and <code>DeleteThing</code> calls.</p>*/",
          "setterMethodName" : "setVersion",
          "setterModel" : {
            "variableDeclarationType" : "Long",
            "variableName" : "version",
            "variableType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The current version of the thing record in the registry.</p> <note> <p>To avoid unintentional changes to the information in the registry, you can pass the version information in the <code>expectedVersion</code> parameter of the <code>UpdateThing</code> and <code>DeleteThing</code> calls.</p> </note>\n@param version The current version of the thing record in the registry.</p> <note> <p>To avoid unintentional changes to the information in the registry, you can pass the version information in the <code>expectedVersion</code> parameter of the <code>UpdateThing</code> and <code>DeleteThing</code> calls.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Long",
            "variableName" : "version",
            "variableType" : "Long",
            "documentation" : "<p>The current version of the thing record in the registry.</p> <note> <p>To avoid unintentional changes to the information in the registry, you can pass the version information in the <code>expectedVersion</code> parameter of the <code>UpdateThing</code> and <code>DeleteThing</code> calls.</p> </note>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DescribeThingResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "DescribeThingResult",
        "variableName" : "describeThingResult",
        "variableType" : "DescribeThingResult",
        "documentation" : null,
        "simpleType" : "DescribeThingResult",
        "variableSetterType" : "DescribeThingResult"
      },
      "wrapper" : false
    },
    "DescribeThingTypeRequest" : {
      "c2jName" : "DescribeThingTypeRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the DescribeThingType operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DescribeThingType",
        "locationName" : null,
        "requestUri" : "/thing-types/{thingTypeName}",
        "target" : null,
        "verb" : "GET",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "thingTypeName",
        "c2jShape" : "ThingTypeName",
        "deprecated" : false,
        "documentation" : "<p>The name of the thing type.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withThingTypeName",
        "getterDocumentation" : "/**<p>The name of the thing type.</p>\n@return The name of the thing type.*/",
        "getterMethodName" : "getThingTypeName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "thingTypeName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "thingTypeName",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ThingTypeName",
        "setterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.*/",
        "setterMethodName" : "setThingTypeName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingTypeName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingTypeName",
          "variableType" : "String",
          "documentation" : "<p>The name of the thing type.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ThingTypeName" : {
          "c2jName" : "thingTypeName",
          "c2jShape" : "ThingTypeName",
          "deprecated" : false,
          "documentation" : "<p>The name of the thing type.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withThingTypeName",
          "getterDocumentation" : "/**<p>The name of the thing type.</p>\n@return The name of the thing type.*/",
          "getterMethodName" : "getThingTypeName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "thingTypeName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "thingTypeName",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ThingTypeName",
          "setterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.*/",
          "setterMethodName" : "setThingTypeName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingTypeName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingTypeName",
            "variableType" : "String",
            "documentation" : "<p>The name of the thing type.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "thingTypeName" ],
      "shapeName" : "DescribeThingTypeRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "DescribeThingTypeRequest",
        "variableName" : "describeThingTypeRequest",
        "variableType" : "DescribeThingTypeRequest",
        "documentation" : null,
        "simpleType" : "DescribeThingTypeRequest",
        "variableSetterType" : "DescribeThingTypeRequest"
      },
      "wrapper" : false
    },
    "DescribeThingTypeResult" : {
      "c2jName" : "DescribeThingTypeResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The output for the DescribeThingType operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "thingTypeName",
        "c2jShape" : "ThingTypeName",
        "deprecated" : false,
        "documentation" : "<p>The name of the thing type.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withThingTypeName",
        "getterDocumentation" : "/**<p>The name of the thing type.</p>\n@return The name of the thing type.*/",
        "getterMethodName" : "getThingTypeName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "thingTypeName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "thingTypeName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ThingTypeName",
        "setterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.*/",
        "setterMethodName" : "setThingTypeName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingTypeName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingTypeName",
          "variableType" : "String",
          "documentation" : "<p>The name of the thing type.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "thingTypeProperties",
        "c2jShape" : "ThingTypeProperties",
        "deprecated" : false,
        "documentation" : "<p>The ThingTypeProperties contains information about the thing type including description, and a list of searchable thing attribute names.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ThingTypeProperties contains information about the thing type including description, and a list of searchable thing attribute names.</p>\n@param thingTypeProperties The ThingTypeProperties contains information about the thing type including description, and a list of searchable thing attribute names.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withThingTypeProperties",
        "getterDocumentation" : "/**<p>The ThingTypeProperties contains information about the thing type including description, and a list of searchable thing attribute names.</p>\n@return The ThingTypeProperties contains information about the thing type including description, and a list of searchable thing attribute names.*/",
        "getterMethodName" : "getThingTypeProperties",
        "getterModel" : {
          "returnType" : "ThingTypeProperties",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "thingTypeProperties",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "thingTypeProperties",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ThingTypeProperties",
        "setterDocumentation" : "/**<p>The ThingTypeProperties contains information about the thing type including description, and a list of searchable thing attribute names.</p>\n@param thingTypeProperties The ThingTypeProperties contains information about the thing type including description, and a list of searchable thing attribute names.*/",
        "setterMethodName" : "setThingTypeProperties",
        "setterModel" : {
          "variableDeclarationType" : "ThingTypeProperties",
          "variableName" : "thingTypeProperties",
          "variableType" : "ThingTypeProperties",
          "documentation" : "",
          "simpleType" : "ThingTypeProperties",
          "variableSetterType" : "ThingTypeProperties"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ThingTypeProperties contains information about the thing type including description, and a list of searchable thing attribute names.</p>\n@param thingTypeProperties The ThingTypeProperties contains information about the thing type including description, and a list of searchable thing attribute names.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "ThingTypeProperties",
          "variableName" : "thingTypeProperties",
          "variableType" : "ThingTypeProperties",
          "documentation" : "<p>The ThingTypeProperties contains information about the thing type including description, and a list of searchable thing attribute names.</p>",
          "simpleType" : "ThingTypeProperties",
          "variableSetterType" : "ThingTypeProperties"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "thingTypeMetadata",
        "c2jShape" : "ThingTypeMetadata",
        "deprecated" : false,
        "documentation" : "<p>The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.</p>\n@param thingTypeMetadata The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withThingTypeMetadata",
        "getterDocumentation" : "/**<p>The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.</p>\n@return The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.*/",
        "getterMethodName" : "getThingTypeMetadata",
        "getterModel" : {
          "returnType" : "ThingTypeMetadata",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "thingTypeMetadata",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "thingTypeMetadata",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ThingTypeMetadata",
        "setterDocumentation" : "/**<p>The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.</p>\n@param thingTypeMetadata The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.*/",
        "setterMethodName" : "setThingTypeMetadata",
        "setterModel" : {
          "variableDeclarationType" : "ThingTypeMetadata",
          "variableName" : "thingTypeMetadata",
          "variableType" : "ThingTypeMetadata",
          "documentation" : "",
          "simpleType" : "ThingTypeMetadata",
          "variableSetterType" : "ThingTypeMetadata"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.</p>\n@param thingTypeMetadata The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "ThingTypeMetadata",
          "variableName" : "thingTypeMetadata",
          "variableType" : "ThingTypeMetadata",
          "documentation" : "<p>The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.</p>",
          "simpleType" : "ThingTypeMetadata",
          "variableSetterType" : "ThingTypeMetadata"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ThingTypeMetadata" : {
          "c2jName" : "thingTypeMetadata",
          "c2jShape" : "ThingTypeMetadata",
          "deprecated" : false,
          "documentation" : "<p>The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.</p>\n@param thingTypeMetadata The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withThingTypeMetadata",
          "getterDocumentation" : "/**<p>The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.</p>\n@return The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.*/",
          "getterMethodName" : "getThingTypeMetadata",
          "getterModel" : {
            "returnType" : "ThingTypeMetadata",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "thingTypeMetadata",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "thingTypeMetadata",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ThingTypeMetadata",
          "setterDocumentation" : "/**<p>The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.</p>\n@param thingTypeMetadata The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.*/",
          "setterMethodName" : "setThingTypeMetadata",
          "setterModel" : {
            "variableDeclarationType" : "ThingTypeMetadata",
            "variableName" : "thingTypeMetadata",
            "variableType" : "ThingTypeMetadata",
            "documentation" : "",
            "simpleType" : "ThingTypeMetadata",
            "variableSetterType" : "ThingTypeMetadata"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.</p>\n@param thingTypeMetadata The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "ThingTypeMetadata",
            "variableName" : "thingTypeMetadata",
            "variableType" : "ThingTypeMetadata",
            "documentation" : "<p>The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.</p>",
            "simpleType" : "ThingTypeMetadata",
            "variableSetterType" : "ThingTypeMetadata"
          },
          "xmlNameSpaceUri" : null
        },
        "ThingTypeName" : {
          "c2jName" : "thingTypeName",
          "c2jShape" : "ThingTypeName",
          "deprecated" : false,
          "documentation" : "<p>The name of the thing type.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withThingTypeName",
          "getterDocumentation" : "/**<p>The name of the thing type.</p>\n@return The name of the thing type.*/",
          "getterMethodName" : "getThingTypeName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "thingTypeName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "thingTypeName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ThingTypeName",
          "setterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.*/",
          "setterMethodName" : "setThingTypeName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingTypeName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingTypeName",
            "variableType" : "String",
            "documentation" : "<p>The name of the thing type.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ThingTypeProperties" : {
          "c2jName" : "thingTypeProperties",
          "c2jShape" : "ThingTypeProperties",
          "deprecated" : false,
          "documentation" : "<p>The ThingTypeProperties contains information about the thing type including description, and a list of searchable thing attribute names.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ThingTypeProperties contains information about the thing type including description, and a list of searchable thing attribute names.</p>\n@param thingTypeProperties The ThingTypeProperties contains information about the thing type including description, and a list of searchable thing attribute names.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withThingTypeProperties",
          "getterDocumentation" : "/**<p>The ThingTypeProperties contains information about the thing type including description, and a list of searchable thing attribute names.</p>\n@return The ThingTypeProperties contains information about the thing type including description, and a list of searchable thing attribute names.*/",
          "getterMethodName" : "getThingTypeProperties",
          "getterModel" : {
            "returnType" : "ThingTypeProperties",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "thingTypeProperties",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "thingTypeProperties",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ThingTypeProperties",
          "setterDocumentation" : "/**<p>The ThingTypeProperties contains information about the thing type including description, and a list of searchable thing attribute names.</p>\n@param thingTypeProperties The ThingTypeProperties contains information about the thing type including description, and a list of searchable thing attribute names.*/",
          "setterMethodName" : "setThingTypeProperties",
          "setterModel" : {
            "variableDeclarationType" : "ThingTypeProperties",
            "variableName" : "thingTypeProperties",
            "variableType" : "ThingTypeProperties",
            "documentation" : "",
            "simpleType" : "ThingTypeProperties",
            "variableSetterType" : "ThingTypeProperties"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ThingTypeProperties contains information about the thing type including description, and a list of searchable thing attribute names.</p>\n@param thingTypeProperties The ThingTypeProperties contains information about the thing type including description, and a list of searchable thing attribute names.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "ThingTypeProperties",
            "variableName" : "thingTypeProperties",
            "variableType" : "ThingTypeProperties",
            "documentation" : "<p>The ThingTypeProperties contains information about the thing type including description, and a list of searchable thing attribute names.</p>",
            "simpleType" : "ThingTypeProperties",
            "variableSetterType" : "ThingTypeProperties"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DescribeThingTypeResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "DescribeThingTypeResult",
        "variableName" : "describeThingTypeResult",
        "variableType" : "DescribeThingTypeResult",
        "documentation" : null,
        "simpleType" : "DescribeThingTypeResult",
        "variableSetterType" : "DescribeThingTypeResult"
      },
      "wrapper" : false
    },
    "DetachPrincipalPolicyRequest" : {
      "c2jName" : "DetachPrincipalPolicyRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the DetachPrincipalPolicy operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : true,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DetachPrincipalPolicy",
        "locationName" : null,
        "requestUri" : "/principal-policies/{policyName}",
        "target" : null,
        "verb" : "DELETE",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "policyName",
        "c2jShape" : "PolicyName",
        "deprecated" : false,
        "documentation" : "<p>The name of the policy to detach.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the policy to detach.</p>\n@param policyName The name of the policy to detach.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicyName",
        "getterDocumentation" : "/**<p>The name of the policy to detach.</p>\n@return The name of the policy to detach.*/",
        "getterMethodName" : "getPolicyName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "policyName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "policyName",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PolicyName",
        "setterDocumentation" : "/**<p>The name of the policy to detach.</p>\n@param policyName The name of the policy to detach.*/",
        "setterMethodName" : "setPolicyName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the policy to detach.</p>\n@param policyName The name of the policy to detach.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyName",
          "variableType" : "String",
          "documentation" : "<p>The name of the policy to detach.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "principal",
        "c2jShape" : "Principal",
        "deprecated" : false,
        "documentation" : "<p>The principal.</p> <p>If the principal is a certificate, specify the certificate ARN. If the principal is an Amazon Cognito identity, specify the identity ID.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The principal.</p> <p>If the principal is a certificate, specify the certificate ARN. If the principal is an Amazon Cognito identity, specify the identity ID.</p>\n@param principal The principal.</p> <p>If the principal is a certificate, specify the certificate ARN. If the principal is an Amazon Cognito identity, specify the identity ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPrincipal",
        "getterDocumentation" : "/**<p>The principal.</p> <p>If the principal is a certificate, specify the certificate ARN. If the principal is an Amazon Cognito identity, specify the identity ID.</p>\n@return The principal.</p> <p>If the principal is a certificate, specify the certificate ARN. If the principal is an Amazon Cognito identity, specify the identity ID.*/",
        "getterMethodName" : "getPrincipal",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "x-amzn-iot-principal",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "x-amzn-iot-principal",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Principal",
        "setterDocumentation" : "/**<p>The principal.</p> <p>If the principal is a certificate, specify the certificate ARN. If the principal is an Amazon Cognito identity, specify the identity ID.</p>\n@param principal The principal.</p> <p>If the principal is a certificate, specify the certificate ARN. If the principal is an Amazon Cognito identity, specify the identity ID.*/",
        "setterMethodName" : "setPrincipal",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "principal",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The principal.</p> <p>If the principal is a certificate, specify the certificate ARN. If the principal is an Amazon Cognito identity, specify the identity ID.</p>\n@param principal The principal.</p> <p>If the principal is a certificate, specify the certificate ARN. If the principal is an Amazon Cognito identity, specify the identity ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "principal",
          "variableType" : "String",
          "documentation" : "<p>The principal.</p> <p>If the principal is a certificate, specify the certificate ARN. If the principal is an Amazon Cognito identity, specify the identity ID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "PolicyName" : {
          "c2jName" : "policyName",
          "c2jShape" : "PolicyName",
          "deprecated" : false,
          "documentation" : "<p>The name of the policy to detach.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the policy to detach.</p>\n@param policyName The name of the policy to detach.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicyName",
          "getterDocumentation" : "/**<p>The name of the policy to detach.</p>\n@return The name of the policy to detach.*/",
          "getterMethodName" : "getPolicyName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "policyName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "policyName",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PolicyName",
          "setterDocumentation" : "/**<p>The name of the policy to detach.</p>\n@param policyName The name of the policy to detach.*/",
          "setterMethodName" : "setPolicyName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the policy to detach.</p>\n@param policyName The name of the policy to detach.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyName",
            "variableType" : "String",
            "documentation" : "<p>The name of the policy to detach.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Principal" : {
          "c2jName" : "principal",
          "c2jShape" : "Principal",
          "deprecated" : false,
          "documentation" : "<p>The principal.</p> <p>If the principal is a certificate, specify the certificate ARN. If the principal is an Amazon Cognito identity, specify the identity ID.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The principal.</p> <p>If the principal is a certificate, specify the certificate ARN. If the principal is an Amazon Cognito identity, specify the identity ID.</p>\n@param principal The principal.</p> <p>If the principal is a certificate, specify the certificate ARN. If the principal is an Amazon Cognito identity, specify the identity ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPrincipal",
          "getterDocumentation" : "/**<p>The principal.</p> <p>If the principal is a certificate, specify the certificate ARN. If the principal is an Amazon Cognito identity, specify the identity ID.</p>\n@return The principal.</p> <p>If the principal is a certificate, specify the certificate ARN. If the principal is an Amazon Cognito identity, specify the identity ID.*/",
          "getterMethodName" : "getPrincipal",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "x-amzn-iot-principal",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "x-amzn-iot-principal",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Principal",
          "setterDocumentation" : "/**<p>The principal.</p> <p>If the principal is a certificate, specify the certificate ARN. If the principal is an Amazon Cognito identity, specify the identity ID.</p>\n@param principal The principal.</p> <p>If the principal is a certificate, specify the certificate ARN. If the principal is an Amazon Cognito identity, specify the identity ID.*/",
          "setterMethodName" : "setPrincipal",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "principal",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The principal.</p> <p>If the principal is a certificate, specify the certificate ARN. If the principal is an Amazon Cognito identity, specify the identity ID.</p>\n@param principal The principal.</p> <p>If the principal is a certificate, specify the certificate ARN. If the principal is an Amazon Cognito identity, specify the identity ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "principal",
            "variableType" : "String",
            "documentation" : "<p>The principal.</p> <p>If the principal is a certificate, specify the certificate ARN. If the principal is an Amazon Cognito identity, specify the identity ID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "policyName", "principal" ],
      "shapeName" : "DetachPrincipalPolicyRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "DetachPrincipalPolicyRequest",
        "variableName" : "detachPrincipalPolicyRequest",
        "variableType" : "DetachPrincipalPolicyRequest",
        "documentation" : null,
        "simpleType" : "DetachPrincipalPolicyRequest",
        "variableSetterType" : "DetachPrincipalPolicyRequest"
      },
      "wrapper" : false
    },
    "DetachPrincipalPolicyResult" : {
      "c2jName" : "DetachPrincipalPolicyResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : null,
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DetachPrincipalPolicyResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "DetachPrincipalPolicyResult",
        "variableName" : "detachPrincipalPolicyResult",
        "variableType" : "DetachPrincipalPolicyResult",
        "documentation" : null,
        "simpleType" : "DetachPrincipalPolicyResult",
        "variableSetterType" : "DetachPrincipalPolicyResult"
      },
      "wrapper" : false
    },
    "DetachThingPrincipalRequest" : {
      "c2jName" : "DetachThingPrincipalRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the DetachThingPrincipal operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : true,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DetachThingPrincipal",
        "locationName" : null,
        "requestUri" : "/things/{thingName}/principals",
        "target" : null,
        "verb" : "DELETE",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "thingName",
        "c2jShape" : "ThingName",
        "deprecated" : false,
        "documentation" : "<p>The name of the thing.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withThingName",
        "getterDocumentation" : "/**<p>The name of the thing.</p>\n@return The name of the thing.*/",
        "getterMethodName" : "getThingName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "thingName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "thingName",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ThingName",
        "setterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.*/",
        "setterMethodName" : "setThingName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingName",
          "variableType" : "String",
          "documentation" : "<p>The name of the thing.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "principal",
        "c2jShape" : "Principal",
        "deprecated" : false,
        "documentation" : "<p>If the principal is a certificate, this value must be ARN of the certificate. If the principal is an Amazon Cognito identity, this value must be the ID of the Amazon Cognito identity.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>If the principal is a certificate, this value must be ARN of the certificate. If the principal is an Amazon Cognito identity, this value must be the ID of the Amazon Cognito identity.</p>\n@param principal If the principal is a certificate, this value must be ARN of the certificate. If the principal is an Amazon Cognito identity, this value must be the ID of the Amazon Cognito identity.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPrincipal",
        "getterDocumentation" : "/**<p>If the principal is a certificate, this value must be ARN of the certificate. If the principal is an Amazon Cognito identity, this value must be the ID of the Amazon Cognito identity.</p>\n@return If the principal is a certificate, this value must be ARN of the certificate. If the principal is an Amazon Cognito identity, this value must be the ID of the Amazon Cognito identity.*/",
        "getterMethodName" : "getPrincipal",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "x-amzn-principal",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "x-amzn-principal",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Principal",
        "setterDocumentation" : "/**<p>If the principal is a certificate, this value must be ARN of the certificate. If the principal is an Amazon Cognito identity, this value must be the ID of the Amazon Cognito identity.</p>\n@param principal If the principal is a certificate, this value must be ARN of the certificate. If the principal is an Amazon Cognito identity, this value must be the ID of the Amazon Cognito identity.*/",
        "setterMethodName" : "setPrincipal",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "principal",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>If the principal is a certificate, this value must be ARN of the certificate. If the principal is an Amazon Cognito identity, this value must be the ID of the Amazon Cognito identity.</p>\n@param principal If the principal is a certificate, this value must be ARN of the certificate. If the principal is an Amazon Cognito identity, this value must be the ID of the Amazon Cognito identity.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "principal",
          "variableType" : "String",
          "documentation" : "<p>If the principal is a certificate, this value must be ARN of the certificate. If the principal is an Amazon Cognito identity, this value must be the ID of the Amazon Cognito identity.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Principal" : {
          "c2jName" : "principal",
          "c2jShape" : "Principal",
          "deprecated" : false,
          "documentation" : "<p>If the principal is a certificate, this value must be ARN of the certificate. If the principal is an Amazon Cognito identity, this value must be the ID of the Amazon Cognito identity.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>If the principal is a certificate, this value must be ARN of the certificate. If the principal is an Amazon Cognito identity, this value must be the ID of the Amazon Cognito identity.</p>\n@param principal If the principal is a certificate, this value must be ARN of the certificate. If the principal is an Amazon Cognito identity, this value must be the ID of the Amazon Cognito identity.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPrincipal",
          "getterDocumentation" : "/**<p>If the principal is a certificate, this value must be ARN of the certificate. If the principal is an Amazon Cognito identity, this value must be the ID of the Amazon Cognito identity.</p>\n@return If the principal is a certificate, this value must be ARN of the certificate. If the principal is an Amazon Cognito identity, this value must be the ID of the Amazon Cognito identity.*/",
          "getterMethodName" : "getPrincipal",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "x-amzn-principal",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "x-amzn-principal",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Principal",
          "setterDocumentation" : "/**<p>If the principal is a certificate, this value must be ARN of the certificate. If the principal is an Amazon Cognito identity, this value must be the ID of the Amazon Cognito identity.</p>\n@param principal If the principal is a certificate, this value must be ARN of the certificate. If the principal is an Amazon Cognito identity, this value must be the ID of the Amazon Cognito identity.*/",
          "setterMethodName" : "setPrincipal",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "principal",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>If the principal is a certificate, this value must be ARN of the certificate. If the principal is an Amazon Cognito identity, this value must be the ID of the Amazon Cognito identity.</p>\n@param principal If the principal is a certificate, this value must be ARN of the certificate. If the principal is an Amazon Cognito identity, this value must be the ID of the Amazon Cognito identity.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "principal",
            "variableType" : "String",
            "documentation" : "<p>If the principal is a certificate, this value must be ARN of the certificate. If the principal is an Amazon Cognito identity, this value must be the ID of the Amazon Cognito identity.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ThingName" : {
          "c2jName" : "thingName",
          "c2jShape" : "ThingName",
          "deprecated" : false,
          "documentation" : "<p>The name of the thing.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withThingName",
          "getterDocumentation" : "/**<p>The name of the thing.</p>\n@return The name of the thing.*/",
          "getterMethodName" : "getThingName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "thingName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "thingName",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ThingName",
          "setterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.*/",
          "setterMethodName" : "setThingName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingName",
            "variableType" : "String",
            "documentation" : "<p>The name of the thing.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "thingName", "principal" ],
      "shapeName" : "DetachThingPrincipalRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "DetachThingPrincipalRequest",
        "variableName" : "detachThingPrincipalRequest",
        "variableType" : "DetachThingPrincipalRequest",
        "documentation" : null,
        "simpleType" : "DetachThingPrincipalRequest",
        "variableSetterType" : "DetachThingPrincipalRequest"
      },
      "wrapper" : false
    },
    "DetachThingPrincipalResult" : {
      "c2jName" : "DetachThingPrincipalResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The output from the DetachThingPrincipal operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DetachThingPrincipalResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "DetachThingPrincipalResult",
        "variableName" : "detachThingPrincipalResult",
        "variableType" : "DetachThingPrincipalResult",
        "documentation" : null,
        "simpleType" : "DetachThingPrincipalResult",
        "variableSetterType" : "DetachThingPrincipalResult"
      },
      "wrapper" : false
    },
    "DisableTopicRuleRequest" : {
      "c2jName" : "DisableTopicRuleRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the DisableTopicRuleRequest operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DisableTopicRule",
        "locationName" : null,
        "requestUri" : "/rules/{ruleName}/disable",
        "target" : null,
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ruleName",
        "c2jShape" : "RuleName",
        "deprecated" : false,
        "documentation" : "<p>The name of the rule to disable.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the rule to disable.</p>\n@param ruleName The name of the rule to disable.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRuleName",
        "getterDocumentation" : "/**<p>The name of the rule to disable.</p>\n@return The name of the rule to disable.*/",
        "getterMethodName" : "getRuleName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "ruleName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ruleName",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RuleName",
        "setterDocumentation" : "/**<p>The name of the rule to disable.</p>\n@param ruleName The name of the rule to disable.*/",
        "setterMethodName" : "setRuleName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "ruleName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the rule to disable.</p>\n@param ruleName The name of the rule to disable.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "ruleName",
          "variableType" : "String",
          "documentation" : "<p>The name of the rule to disable.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "RuleName" : {
          "c2jName" : "ruleName",
          "c2jShape" : "RuleName",
          "deprecated" : false,
          "documentation" : "<p>The name of the rule to disable.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the rule to disable.</p>\n@param ruleName The name of the rule to disable.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRuleName",
          "getterDocumentation" : "/**<p>The name of the rule to disable.</p>\n@return The name of the rule to disable.*/",
          "getterMethodName" : "getRuleName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "ruleName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ruleName",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RuleName",
          "setterDocumentation" : "/**<p>The name of the rule to disable.</p>\n@param ruleName The name of the rule to disable.*/",
          "setterMethodName" : "setRuleName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "ruleName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the rule to disable.</p>\n@param ruleName The name of the rule to disable.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "ruleName",
            "variableType" : "String",
            "documentation" : "<p>The name of the rule to disable.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ruleName" ],
      "shapeName" : "DisableTopicRuleRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "DisableTopicRuleRequest",
        "variableName" : "disableTopicRuleRequest",
        "variableType" : "DisableTopicRuleRequest",
        "documentation" : null,
        "simpleType" : "DisableTopicRuleRequest",
        "variableSetterType" : "DisableTopicRuleRequest"
      },
      "wrapper" : false
    },
    "DisableTopicRuleResult" : {
      "c2jName" : "DisableTopicRuleResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : null,
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DisableTopicRuleResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "DisableTopicRuleResult",
        "variableName" : "disableTopicRuleResult",
        "variableType" : "DisableTopicRuleResult",
        "documentation" : null,
        "simpleType" : "DisableTopicRuleResult",
        "variableSetterType" : "DisableTopicRuleResult"
      },
      "wrapper" : false
    },
    "DynamoDBAction" : {
      "c2jName" : "DynamoDBAction",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Describes an action to write to a DynamoDB table.</p> <p>The <code>tableName</code>, <code>hashKeyField</code>, and <code>rangeKeyField</code> values must match the values used when you created the table.</p> <p>The <code>hashKeyValue</code> and <code>rangeKeyvalue</code> fields use a substitution template syntax. These templates provide data at runtime. The syntax is as follows: ${<i>sql-expression</i>}.</p> <p>You can specify any valid expression in a WHERE or SELECT clause, including JSON properties, comparisons, calculations, and functions. For example, the following field uses the third level of the topic:</p> <p> <code>\"hashKeyValue\": \"${topic(3)}\"</code> </p> <p>The following field uses the timestamp:</p> <p> <code>\"rangeKeyValue\": \"${timestamp()}\"</code> </p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "tableName",
        "c2jShape" : "TableName",
        "deprecated" : false,
        "documentation" : "<p>The name of the DynamoDB table.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the DynamoDB table.</p>\n@param tableName The name of the DynamoDB table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTableName",
        "getterDocumentation" : "/**<p>The name of the DynamoDB table.</p>\n@return The name of the DynamoDB table.*/",
        "getterMethodName" : "getTableName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "tableName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "tableName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TableName",
        "setterDocumentation" : "/**<p>The name of the DynamoDB table.</p>\n@param tableName The name of the DynamoDB table.*/",
        "setterMethodName" : "setTableName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "tableName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the DynamoDB table.</p>\n@param tableName The name of the DynamoDB table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "tableName",
          "variableType" : "String",
          "documentation" : "<p>The name of the DynamoDB table.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "roleArn",
        "c2jShape" : "AwsArn",
        "deprecated" : false,
        "documentation" : "<p>The ARN of the IAM role that grants access to the DynamoDB table.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access to the DynamoDB table.</p>\n@param roleArn The ARN of the IAM role that grants access to the DynamoDB table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRoleArn",
        "getterDocumentation" : "/**<p>The ARN of the IAM role that grants access to the DynamoDB table.</p>\n@return The ARN of the IAM role that grants access to the DynamoDB table.*/",
        "getterMethodName" : "getRoleArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "roleArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "roleArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RoleArn",
        "setterDocumentation" : "/**<p>The ARN of the IAM role that grants access to the DynamoDB table.</p>\n@param roleArn The ARN of the IAM role that grants access to the DynamoDB table.*/",
        "setterMethodName" : "setRoleArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "roleArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access to the DynamoDB table.</p>\n@param roleArn The ARN of the IAM role that grants access to the DynamoDB table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "roleArn",
          "variableType" : "String",
          "documentation" : "<p>The ARN of the IAM role that grants access to the DynamoDB table.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "operation",
        "c2jShape" : "DynamoOperation",
        "deprecated" : false,
        "documentation" : "<p>The type of operation to be performed. This follows the substitution template, so it can be <code>${operation}</code>, but the substitution must result in one of the following: <code>INSERT</code>, <code>UPDATE</code>, or <code>DELETE</code>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The type of operation to be performed. This follows the substitution template, so it can be <code>${operation}</code>, but the substitution must result in one of the following: <code>INSERT</code>, <code>UPDATE</code>, or <code>DELETE</code>.</p>\n@param operation The type of operation to be performed. This follows the substitution template, so it can be <code>${operation}</code>, but the substitution must result in one of the following: <code>INSERT</code>, <code>UPDATE</code>, or <code>DELETE</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withOperation",
        "getterDocumentation" : "/**<p>The type of operation to be performed. This follows the substitution template, so it can be <code>${operation}</code>, but the substitution must result in one of the following: <code>INSERT</code>, <code>UPDATE</code>, or <code>DELETE</code>.</p>\n@return The type of operation to be performed. This follows the substitution template, so it can be <code>${operation}</code>, but the substitution must result in one of the following: <code>INSERT</code>, <code>UPDATE</code>, or <code>DELETE</code>.*/",
        "getterMethodName" : "getOperation",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "operation",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "operation",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Operation",
        "setterDocumentation" : "/**<p>The type of operation to be performed. This follows the substitution template, so it can be <code>${operation}</code>, but the substitution must result in one of the following: <code>INSERT</code>, <code>UPDATE</code>, or <code>DELETE</code>.</p>\n@param operation The type of operation to be performed. This follows the substitution template, so it can be <code>${operation}</code>, but the substitution must result in one of the following: <code>INSERT</code>, <code>UPDATE</code>, or <code>DELETE</code>.*/",
        "setterMethodName" : "setOperation",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "operation",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The type of operation to be performed. This follows the substitution template, so it can be <code>${operation}</code>, but the substitution must result in one of the following: <code>INSERT</code>, <code>UPDATE</code>, or <code>DELETE</code>.</p>\n@param operation The type of operation to be performed. This follows the substitution template, so it can be <code>${operation}</code>, but the substitution must result in one of the following: <code>INSERT</code>, <code>UPDATE</code>, or <code>DELETE</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "operation",
          "variableType" : "String",
          "documentation" : "<p>The type of operation to be performed. This follows the substitution template, so it can be <code>${operation}</code>, but the substitution must result in one of the following: <code>INSERT</code>, <code>UPDATE</code>, or <code>DELETE</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "hashKeyField",
        "c2jShape" : "HashKeyField",
        "deprecated" : false,
        "documentation" : "<p>The hash key name.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The hash key name.</p>\n@param hashKeyField The hash key name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withHashKeyField",
        "getterDocumentation" : "/**<p>The hash key name.</p>\n@return The hash key name.*/",
        "getterMethodName" : "getHashKeyField",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "hashKeyField",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "hashKeyField",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "HashKeyField",
        "setterDocumentation" : "/**<p>The hash key name.</p>\n@param hashKeyField The hash key name.*/",
        "setterMethodName" : "setHashKeyField",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "hashKeyField",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The hash key name.</p>\n@param hashKeyField The hash key name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "hashKeyField",
          "variableType" : "String",
          "documentation" : "<p>The hash key name.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "hashKeyValue",
        "c2jShape" : "HashKeyValue",
        "deprecated" : false,
        "documentation" : "<p>The hash key value.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The hash key value.</p>\n@param hashKeyValue The hash key value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withHashKeyValue",
        "getterDocumentation" : "/**<p>The hash key value.</p>\n@return The hash key value.*/",
        "getterMethodName" : "getHashKeyValue",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "hashKeyValue",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "hashKeyValue",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "HashKeyValue",
        "setterDocumentation" : "/**<p>The hash key value.</p>\n@param hashKeyValue The hash key value.*/",
        "setterMethodName" : "setHashKeyValue",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "hashKeyValue",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The hash key value.</p>\n@param hashKeyValue The hash key value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "hashKeyValue",
          "variableType" : "String",
          "documentation" : "<p>The hash key value.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "hashKeyType",
        "c2jShape" : "DynamoKeyType",
        "deprecated" : false,
        "documentation" : "<p>The hash key type. Valid values are \"STRING\" or \"NUMBER\"</p>",
        "enumType" : "DynamoKeyType",
        "fluentSetterDocumentation" : "/**<p>The hash key type. Valid values are \"STRING\" or \"NUMBER\"</p>\n@param hashKeyType The hash key type. Valid values are \"STRING\" or \"NUMBER\"\n@return Returns a reference to this object so that method calls can be chained together.\n@see DynamoKeyType*/",
        "fluentSetterMethodName" : "withHashKeyType",
        "getterDocumentation" : "/**<p>The hash key type. Valid values are \"STRING\" or \"NUMBER\"</p>\n@return The hash key type. Valid values are \"STRING\" or \"NUMBER\"\n@see DynamoKeyType*/",
        "getterMethodName" : "getHashKeyType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "hashKeyType",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "hashKeyType",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "HashKeyType",
        "setterDocumentation" : "/**<p>The hash key type. Valid values are \"STRING\" or \"NUMBER\"</p>\n@param hashKeyType The hash key type. Valid values are \"STRING\" or \"NUMBER\"\n@see DynamoKeyType*/",
        "setterMethodName" : "setHashKeyType",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "hashKeyType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The hash key type. Valid values are \"STRING\" or \"NUMBER\"</p>\n@param hashKeyType The hash key type. Valid values are \"STRING\" or \"NUMBER\"\n@return Returns a reference to this object so that method calls can be chained together.\n@see DynamoKeyType*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "hashKeyType",
          "variableType" : "String",
          "documentation" : "<p>The hash key type. Valid values are \"STRING\" or \"NUMBER\"</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "rangeKeyField",
        "c2jShape" : "RangeKeyField",
        "deprecated" : false,
        "documentation" : "<p>The range key name.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The range key name.</p>\n@param rangeKeyField The range key name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRangeKeyField",
        "getterDocumentation" : "/**<p>The range key name.</p>\n@return The range key name.*/",
        "getterMethodName" : "getRangeKeyField",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "rangeKeyField",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "rangeKeyField",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RangeKeyField",
        "setterDocumentation" : "/**<p>The range key name.</p>\n@param rangeKeyField The range key name.*/",
        "setterMethodName" : "setRangeKeyField",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "rangeKeyField",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The range key name.</p>\n@param rangeKeyField The range key name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "rangeKeyField",
          "variableType" : "String",
          "documentation" : "<p>The range key name.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "rangeKeyValue",
        "c2jShape" : "RangeKeyValue",
        "deprecated" : false,
        "documentation" : "<p>The range key value.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The range key value.</p>\n@param rangeKeyValue The range key value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRangeKeyValue",
        "getterDocumentation" : "/**<p>The range key value.</p>\n@return The range key value.*/",
        "getterMethodName" : "getRangeKeyValue",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "rangeKeyValue",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "rangeKeyValue",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RangeKeyValue",
        "setterDocumentation" : "/**<p>The range key value.</p>\n@param rangeKeyValue The range key value.*/",
        "setterMethodName" : "setRangeKeyValue",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "rangeKeyValue",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The range key value.</p>\n@param rangeKeyValue The range key value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "rangeKeyValue",
          "variableType" : "String",
          "documentation" : "<p>The range key value.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "rangeKeyType",
        "c2jShape" : "DynamoKeyType",
        "deprecated" : false,
        "documentation" : "<p>The range key type. Valid values are \"STRING\" or \"NUMBER\"</p>",
        "enumType" : "DynamoKeyType",
        "fluentSetterDocumentation" : "/**<p>The range key type. Valid values are \"STRING\" or \"NUMBER\"</p>\n@param rangeKeyType The range key type. Valid values are \"STRING\" or \"NUMBER\"\n@return Returns a reference to this object so that method calls can be chained together.\n@see DynamoKeyType*/",
        "fluentSetterMethodName" : "withRangeKeyType",
        "getterDocumentation" : "/**<p>The range key type. Valid values are \"STRING\" or \"NUMBER\"</p>\n@return The range key type. Valid values are \"STRING\" or \"NUMBER\"\n@see DynamoKeyType*/",
        "getterMethodName" : "getRangeKeyType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "rangeKeyType",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "rangeKeyType",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RangeKeyType",
        "setterDocumentation" : "/**<p>The range key type. Valid values are \"STRING\" or \"NUMBER\"</p>\n@param rangeKeyType The range key type. Valid values are \"STRING\" or \"NUMBER\"\n@see DynamoKeyType*/",
        "setterMethodName" : "setRangeKeyType",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "rangeKeyType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The range key type. Valid values are \"STRING\" or \"NUMBER\"</p>\n@param rangeKeyType The range key type. Valid values are \"STRING\" or \"NUMBER\"\n@return Returns a reference to this object so that method calls can be chained together.\n@see DynamoKeyType*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "rangeKeyType",
          "variableType" : "String",
          "documentation" : "<p>The range key type. Valid values are \"STRING\" or \"NUMBER\"</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "payloadField",
        "c2jShape" : "PayloadField",
        "deprecated" : false,
        "documentation" : "<p>The action payload. This name can be customized.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The action payload. This name can be customized.</p>\n@param payloadField The action payload. This name can be customized.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPayloadField",
        "getterDocumentation" : "/**<p>The action payload. This name can be customized.</p>\n@return The action payload. This name can be customized.*/",
        "getterMethodName" : "getPayloadField",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "payloadField",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "payloadField",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PayloadField",
        "setterDocumentation" : "/**<p>The action payload. This name can be customized.</p>\n@param payloadField The action payload. This name can be customized.*/",
        "setterMethodName" : "setPayloadField",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "payloadField",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The action payload. This name can be customized.</p>\n@param payloadField The action payload. This name can be customized.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "payloadField",
          "variableType" : "String",
          "documentation" : "<p>The action payload. This name can be customized.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "HashKeyField" : {
          "c2jName" : "hashKeyField",
          "c2jShape" : "HashKeyField",
          "deprecated" : false,
          "documentation" : "<p>The hash key name.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The hash key name.</p>\n@param hashKeyField The hash key name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withHashKeyField",
          "getterDocumentation" : "/**<p>The hash key name.</p>\n@return The hash key name.*/",
          "getterMethodName" : "getHashKeyField",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "hashKeyField",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "hashKeyField",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "HashKeyField",
          "setterDocumentation" : "/**<p>The hash key name.</p>\n@param hashKeyField The hash key name.*/",
          "setterMethodName" : "setHashKeyField",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "hashKeyField",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The hash key name.</p>\n@param hashKeyField The hash key name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "hashKeyField",
            "variableType" : "String",
            "documentation" : "<p>The hash key name.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "HashKeyType" : {
          "c2jName" : "hashKeyType",
          "c2jShape" : "DynamoKeyType",
          "deprecated" : false,
          "documentation" : "<p>The hash key type. Valid values are \"STRING\" or \"NUMBER\"</p>",
          "enumType" : "DynamoKeyType",
          "fluentSetterDocumentation" : "/**<p>The hash key type. Valid values are \"STRING\" or \"NUMBER\"</p>\n@param hashKeyType The hash key type. Valid values are \"STRING\" or \"NUMBER\"\n@return Returns a reference to this object so that method calls can be chained together.\n@see DynamoKeyType*/",
          "fluentSetterMethodName" : "withHashKeyType",
          "getterDocumentation" : "/**<p>The hash key type. Valid values are \"STRING\" or \"NUMBER\"</p>\n@return The hash key type. Valid values are \"STRING\" or \"NUMBER\"\n@see DynamoKeyType*/",
          "getterMethodName" : "getHashKeyType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "hashKeyType",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "hashKeyType",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "HashKeyType",
          "setterDocumentation" : "/**<p>The hash key type. Valid values are \"STRING\" or \"NUMBER\"</p>\n@param hashKeyType The hash key type. Valid values are \"STRING\" or \"NUMBER\"\n@see DynamoKeyType*/",
          "setterMethodName" : "setHashKeyType",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "hashKeyType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The hash key type. Valid values are \"STRING\" or \"NUMBER\"</p>\n@param hashKeyType The hash key type. Valid values are \"STRING\" or \"NUMBER\"\n@return Returns a reference to this object so that method calls can be chained together.\n@see DynamoKeyType*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "hashKeyType",
            "variableType" : "String",
            "documentation" : "<p>The hash key type. Valid values are \"STRING\" or \"NUMBER\"</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "HashKeyValue" : {
          "c2jName" : "hashKeyValue",
          "c2jShape" : "HashKeyValue",
          "deprecated" : false,
          "documentation" : "<p>The hash key value.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The hash key value.</p>\n@param hashKeyValue The hash key value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withHashKeyValue",
          "getterDocumentation" : "/**<p>The hash key value.</p>\n@return The hash key value.*/",
          "getterMethodName" : "getHashKeyValue",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "hashKeyValue",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "hashKeyValue",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "HashKeyValue",
          "setterDocumentation" : "/**<p>The hash key value.</p>\n@param hashKeyValue The hash key value.*/",
          "setterMethodName" : "setHashKeyValue",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "hashKeyValue",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The hash key value.</p>\n@param hashKeyValue The hash key value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "hashKeyValue",
            "variableType" : "String",
            "documentation" : "<p>The hash key value.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Operation" : {
          "c2jName" : "operation",
          "c2jShape" : "DynamoOperation",
          "deprecated" : false,
          "documentation" : "<p>The type of operation to be performed. This follows the substitution template, so it can be <code>${operation}</code>, but the substitution must result in one of the following: <code>INSERT</code>, <code>UPDATE</code>, or <code>DELETE</code>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The type of operation to be performed. This follows the substitution template, so it can be <code>${operation}</code>, but the substitution must result in one of the following: <code>INSERT</code>, <code>UPDATE</code>, or <code>DELETE</code>.</p>\n@param operation The type of operation to be performed. This follows the substitution template, so it can be <code>${operation}</code>, but the substitution must result in one of the following: <code>INSERT</code>, <code>UPDATE</code>, or <code>DELETE</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withOperation",
          "getterDocumentation" : "/**<p>The type of operation to be performed. This follows the substitution template, so it can be <code>${operation}</code>, but the substitution must result in one of the following: <code>INSERT</code>, <code>UPDATE</code>, or <code>DELETE</code>.</p>\n@return The type of operation to be performed. This follows the substitution template, so it can be <code>${operation}</code>, but the substitution must result in one of the following: <code>INSERT</code>, <code>UPDATE</code>, or <code>DELETE</code>.*/",
          "getterMethodName" : "getOperation",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "operation",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "operation",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Operation",
          "setterDocumentation" : "/**<p>The type of operation to be performed. This follows the substitution template, so it can be <code>${operation}</code>, but the substitution must result in one of the following: <code>INSERT</code>, <code>UPDATE</code>, or <code>DELETE</code>.</p>\n@param operation The type of operation to be performed. This follows the substitution template, so it can be <code>${operation}</code>, but the substitution must result in one of the following: <code>INSERT</code>, <code>UPDATE</code>, or <code>DELETE</code>.*/",
          "setterMethodName" : "setOperation",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "operation",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The type of operation to be performed. This follows the substitution template, so it can be <code>${operation}</code>, but the substitution must result in one of the following: <code>INSERT</code>, <code>UPDATE</code>, or <code>DELETE</code>.</p>\n@param operation The type of operation to be performed. This follows the substitution template, so it can be <code>${operation}</code>, but the substitution must result in one of the following: <code>INSERT</code>, <code>UPDATE</code>, or <code>DELETE</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "operation",
            "variableType" : "String",
            "documentation" : "<p>The type of operation to be performed. This follows the substitution template, so it can be <code>${operation}</code>, but the substitution must result in one of the following: <code>INSERT</code>, <code>UPDATE</code>, or <code>DELETE</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "PayloadField" : {
          "c2jName" : "payloadField",
          "c2jShape" : "PayloadField",
          "deprecated" : false,
          "documentation" : "<p>The action payload. This name can be customized.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The action payload. This name can be customized.</p>\n@param payloadField The action payload. This name can be customized.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPayloadField",
          "getterDocumentation" : "/**<p>The action payload. This name can be customized.</p>\n@return The action payload. This name can be customized.*/",
          "getterMethodName" : "getPayloadField",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "payloadField",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "payloadField",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PayloadField",
          "setterDocumentation" : "/**<p>The action payload. This name can be customized.</p>\n@param payloadField The action payload. This name can be customized.*/",
          "setterMethodName" : "setPayloadField",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "payloadField",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The action payload. This name can be customized.</p>\n@param payloadField The action payload. This name can be customized.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "payloadField",
            "variableType" : "String",
            "documentation" : "<p>The action payload. This name can be customized.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RangeKeyField" : {
          "c2jName" : "rangeKeyField",
          "c2jShape" : "RangeKeyField",
          "deprecated" : false,
          "documentation" : "<p>The range key name.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The range key name.</p>\n@param rangeKeyField The range key name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRangeKeyField",
          "getterDocumentation" : "/**<p>The range key name.</p>\n@return The range key name.*/",
          "getterMethodName" : "getRangeKeyField",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "rangeKeyField",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "rangeKeyField",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RangeKeyField",
          "setterDocumentation" : "/**<p>The range key name.</p>\n@param rangeKeyField The range key name.*/",
          "setterMethodName" : "setRangeKeyField",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "rangeKeyField",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The range key name.</p>\n@param rangeKeyField The range key name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "rangeKeyField",
            "variableType" : "String",
            "documentation" : "<p>The range key name.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RangeKeyType" : {
          "c2jName" : "rangeKeyType",
          "c2jShape" : "DynamoKeyType",
          "deprecated" : false,
          "documentation" : "<p>The range key type. Valid values are \"STRING\" or \"NUMBER\"</p>",
          "enumType" : "DynamoKeyType",
          "fluentSetterDocumentation" : "/**<p>The range key type. Valid values are \"STRING\" or \"NUMBER\"</p>\n@param rangeKeyType The range key type. Valid values are \"STRING\" or \"NUMBER\"\n@return Returns a reference to this object so that method calls can be chained together.\n@see DynamoKeyType*/",
          "fluentSetterMethodName" : "withRangeKeyType",
          "getterDocumentation" : "/**<p>The range key type. Valid values are \"STRING\" or \"NUMBER\"</p>\n@return The range key type. Valid values are \"STRING\" or \"NUMBER\"\n@see DynamoKeyType*/",
          "getterMethodName" : "getRangeKeyType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "rangeKeyType",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "rangeKeyType",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RangeKeyType",
          "setterDocumentation" : "/**<p>The range key type. Valid values are \"STRING\" or \"NUMBER\"</p>\n@param rangeKeyType The range key type. Valid values are \"STRING\" or \"NUMBER\"\n@see DynamoKeyType*/",
          "setterMethodName" : "setRangeKeyType",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "rangeKeyType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The range key type. Valid values are \"STRING\" or \"NUMBER\"</p>\n@param rangeKeyType The range key type. Valid values are \"STRING\" or \"NUMBER\"\n@return Returns a reference to this object so that method calls can be chained together.\n@see DynamoKeyType*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "rangeKeyType",
            "variableType" : "String",
            "documentation" : "<p>The range key type. Valid values are \"STRING\" or \"NUMBER\"</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RangeKeyValue" : {
          "c2jName" : "rangeKeyValue",
          "c2jShape" : "RangeKeyValue",
          "deprecated" : false,
          "documentation" : "<p>The range key value.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The range key value.</p>\n@param rangeKeyValue The range key value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRangeKeyValue",
          "getterDocumentation" : "/**<p>The range key value.</p>\n@return The range key value.*/",
          "getterMethodName" : "getRangeKeyValue",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "rangeKeyValue",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "rangeKeyValue",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RangeKeyValue",
          "setterDocumentation" : "/**<p>The range key value.</p>\n@param rangeKeyValue The range key value.*/",
          "setterMethodName" : "setRangeKeyValue",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "rangeKeyValue",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The range key value.</p>\n@param rangeKeyValue The range key value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "rangeKeyValue",
            "variableType" : "String",
            "documentation" : "<p>The range key value.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RoleArn" : {
          "c2jName" : "roleArn",
          "c2jShape" : "AwsArn",
          "deprecated" : false,
          "documentation" : "<p>The ARN of the IAM role that grants access to the DynamoDB table.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access to the DynamoDB table.</p>\n@param roleArn The ARN of the IAM role that grants access to the DynamoDB table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRoleArn",
          "getterDocumentation" : "/**<p>The ARN of the IAM role that grants access to the DynamoDB table.</p>\n@return The ARN of the IAM role that grants access to the DynamoDB table.*/",
          "getterMethodName" : "getRoleArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "roleArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "roleArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RoleArn",
          "setterDocumentation" : "/**<p>The ARN of the IAM role that grants access to the DynamoDB table.</p>\n@param roleArn The ARN of the IAM role that grants access to the DynamoDB table.*/",
          "setterMethodName" : "setRoleArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "roleArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access to the DynamoDB table.</p>\n@param roleArn The ARN of the IAM role that grants access to the DynamoDB table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "roleArn",
            "variableType" : "String",
            "documentation" : "<p>The ARN of the IAM role that grants access to the DynamoDB table.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TableName" : {
          "c2jName" : "tableName",
          "c2jShape" : "TableName",
          "deprecated" : false,
          "documentation" : "<p>The name of the DynamoDB table.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the DynamoDB table.</p>\n@param tableName The name of the DynamoDB table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTableName",
          "getterDocumentation" : "/**<p>The name of the DynamoDB table.</p>\n@return The name of the DynamoDB table.*/",
          "getterMethodName" : "getTableName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "tableName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "tableName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TableName",
          "setterDocumentation" : "/**<p>The name of the DynamoDB table.</p>\n@param tableName The name of the DynamoDB table.*/",
          "setterMethodName" : "setTableName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "tableName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the DynamoDB table.</p>\n@param tableName The name of the DynamoDB table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "tableName",
            "variableType" : "String",
            "documentation" : "<p>The name of the DynamoDB table.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "tableName", "roleArn", "hashKeyField", "hashKeyValue" ],
      "shapeName" : "DynamoDBAction",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "DynamoDBAction",
        "variableName" : "dynamoDBAction",
        "variableType" : "DynamoDBAction",
        "documentation" : null,
        "simpleType" : "DynamoDBAction",
        "variableSetterType" : "DynamoDBAction"
      },
      "wrapper" : false
    },
    "DynamoDBv2Action" : {
      "c2jName" : "DynamoDBv2Action",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Describes an action to write to a DynamoDB table.</p> <p>This DynamoDB action writes each attribute in the message payload into it's own column in the DynamoDB table.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "roleArn",
        "c2jShape" : "AwsArn",
        "deprecated" : false,
        "documentation" : "<p>The ARN of the IAM role that grants access to the DynamoDB table.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access to the DynamoDB table.</p>\n@param roleArn The ARN of the IAM role that grants access to the DynamoDB table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRoleArn",
        "getterDocumentation" : "/**<p>The ARN of the IAM role that grants access to the DynamoDB table.</p>\n@return The ARN of the IAM role that grants access to the DynamoDB table.*/",
        "getterMethodName" : "getRoleArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "roleArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "roleArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RoleArn",
        "setterDocumentation" : "/**<p>The ARN of the IAM role that grants access to the DynamoDB table.</p>\n@param roleArn The ARN of the IAM role that grants access to the DynamoDB table.*/",
        "setterMethodName" : "setRoleArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "roleArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access to the DynamoDB table.</p>\n@param roleArn The ARN of the IAM role that grants access to the DynamoDB table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "roleArn",
          "variableType" : "String",
          "documentation" : "<p>The ARN of the IAM role that grants access to the DynamoDB table.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "putItem",
        "c2jShape" : "PutItemInput",
        "deprecated" : false,
        "documentation" : "<p>Specifies the DynamoDB table to which the message data will be written. For example:</p> <p> <code>{ \"dynamoDBv2\": { \"roleArn\": \"aws:iam:12341251:my-role\" \"putItem\": { \"tableName\": \"my-table\" } } }</code> </p> <p>Each attribute in the message payload will be written to a separate column in the DynamoDB database.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Specifies the DynamoDB table to which the message data will be written. For example:</p> <p> <code>{ \"dynamoDBv2\": { \"roleArn\": \"aws:iam:12341251:my-role\" \"putItem\": { \"tableName\": \"my-table\" } } }</code> </p> <p>Each attribute in the message payload will be written to a separate column in the DynamoDB database.</p>\n@param putItem Specifies the DynamoDB table to which the message data will be written. For example:</p> <p> <code>{ \"dynamoDBv2\": { \"roleArn\": \"aws:iam:12341251:my-role\" \"putItem\": { \"tableName\": \"my-table\" } } }</code> </p> <p>Each attribute in the message payload will be written to a separate column in the DynamoDB database.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPutItem",
        "getterDocumentation" : "/**<p>Specifies the DynamoDB table to which the message data will be written. For example:</p> <p> <code>{ \"dynamoDBv2\": { \"roleArn\": \"aws:iam:12341251:my-role\" \"putItem\": { \"tableName\": \"my-table\" } } }</code> </p> <p>Each attribute in the message payload will be written to a separate column in the DynamoDB database.</p>\n@return Specifies the DynamoDB table to which the message data will be written. For example:</p> <p> <code>{ \"dynamoDBv2\": { \"roleArn\": \"aws:iam:12341251:my-role\" \"putItem\": { \"tableName\": \"my-table\" } } }</code> </p> <p>Each attribute in the message payload will be written to a separate column in the DynamoDB database.*/",
        "getterMethodName" : "getPutItem",
        "getterModel" : {
          "returnType" : "PutItemInput",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "putItem",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "putItem",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "PutItem",
        "setterDocumentation" : "/**<p>Specifies the DynamoDB table to which the message data will be written. For example:</p> <p> <code>{ \"dynamoDBv2\": { \"roleArn\": \"aws:iam:12341251:my-role\" \"putItem\": { \"tableName\": \"my-table\" } } }</code> </p> <p>Each attribute in the message payload will be written to a separate column in the DynamoDB database.</p>\n@param putItem Specifies the DynamoDB table to which the message data will be written. For example:</p> <p> <code>{ \"dynamoDBv2\": { \"roleArn\": \"aws:iam:12341251:my-role\" \"putItem\": { \"tableName\": \"my-table\" } } }</code> </p> <p>Each attribute in the message payload will be written to a separate column in the DynamoDB database.*/",
        "setterMethodName" : "setPutItem",
        "setterModel" : {
          "variableDeclarationType" : "PutItemInput",
          "variableName" : "putItem",
          "variableType" : "PutItemInput",
          "documentation" : "",
          "simpleType" : "PutItemInput",
          "variableSetterType" : "PutItemInput"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Specifies the DynamoDB table to which the message data will be written. For example:</p> <p> <code>{ \"dynamoDBv2\": { \"roleArn\": \"aws:iam:12341251:my-role\" \"putItem\": { \"tableName\": \"my-table\" } } }</code> </p> <p>Each attribute in the message payload will be written to a separate column in the DynamoDB database.</p>\n@param putItem Specifies the DynamoDB table to which the message data will be written. For example:</p> <p> <code>{ \"dynamoDBv2\": { \"roleArn\": \"aws:iam:12341251:my-role\" \"putItem\": { \"tableName\": \"my-table\" } } }</code> </p> <p>Each attribute in the message payload will be written to a separate column in the DynamoDB database.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "PutItemInput",
          "variableName" : "putItem",
          "variableType" : "PutItemInput",
          "documentation" : "<p>Specifies the DynamoDB table to which the message data will be written. For example:</p> <p> <code>{ \"dynamoDBv2\": { \"roleArn\": \"aws:iam:12341251:my-role\" \"putItem\": { \"tableName\": \"my-table\" } } }</code> </p> <p>Each attribute in the message payload will be written to a separate column in the DynamoDB database.</p>",
          "simpleType" : "PutItemInput",
          "variableSetterType" : "PutItemInput"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "PutItem" : {
          "c2jName" : "putItem",
          "c2jShape" : "PutItemInput",
          "deprecated" : false,
          "documentation" : "<p>Specifies the DynamoDB table to which the message data will be written. For example:</p> <p> <code>{ \"dynamoDBv2\": { \"roleArn\": \"aws:iam:12341251:my-role\" \"putItem\": { \"tableName\": \"my-table\" } } }</code> </p> <p>Each attribute in the message payload will be written to a separate column in the DynamoDB database.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Specifies the DynamoDB table to which the message data will be written. For example:</p> <p> <code>{ \"dynamoDBv2\": { \"roleArn\": \"aws:iam:12341251:my-role\" \"putItem\": { \"tableName\": \"my-table\" } } }</code> </p> <p>Each attribute in the message payload will be written to a separate column in the DynamoDB database.</p>\n@param putItem Specifies the DynamoDB table to which the message data will be written. For example:</p> <p> <code>{ \"dynamoDBv2\": { \"roleArn\": \"aws:iam:12341251:my-role\" \"putItem\": { \"tableName\": \"my-table\" } } }</code> </p> <p>Each attribute in the message payload will be written to a separate column in the DynamoDB database.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPutItem",
          "getterDocumentation" : "/**<p>Specifies the DynamoDB table to which the message data will be written. For example:</p> <p> <code>{ \"dynamoDBv2\": { \"roleArn\": \"aws:iam:12341251:my-role\" \"putItem\": { \"tableName\": \"my-table\" } } }</code> </p> <p>Each attribute in the message payload will be written to a separate column in the DynamoDB database.</p>\n@return Specifies the DynamoDB table to which the message data will be written. For example:</p> <p> <code>{ \"dynamoDBv2\": { \"roleArn\": \"aws:iam:12341251:my-role\" \"putItem\": { \"tableName\": \"my-table\" } } }</code> </p> <p>Each attribute in the message payload will be written to a separate column in the DynamoDB database.*/",
          "getterMethodName" : "getPutItem",
          "getterModel" : {
            "returnType" : "PutItemInput",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "putItem",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "putItem",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "PutItem",
          "setterDocumentation" : "/**<p>Specifies the DynamoDB table to which the message data will be written. For example:</p> <p> <code>{ \"dynamoDBv2\": { \"roleArn\": \"aws:iam:12341251:my-role\" \"putItem\": { \"tableName\": \"my-table\" } } }</code> </p> <p>Each attribute in the message payload will be written to a separate column in the DynamoDB database.</p>\n@param putItem Specifies the DynamoDB table to which the message data will be written. For example:</p> <p> <code>{ \"dynamoDBv2\": { \"roleArn\": \"aws:iam:12341251:my-role\" \"putItem\": { \"tableName\": \"my-table\" } } }</code> </p> <p>Each attribute in the message payload will be written to a separate column in the DynamoDB database.*/",
          "setterMethodName" : "setPutItem",
          "setterModel" : {
            "variableDeclarationType" : "PutItemInput",
            "variableName" : "putItem",
            "variableType" : "PutItemInput",
            "documentation" : "",
            "simpleType" : "PutItemInput",
            "variableSetterType" : "PutItemInput"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Specifies the DynamoDB table to which the message data will be written. For example:</p> <p> <code>{ \"dynamoDBv2\": { \"roleArn\": \"aws:iam:12341251:my-role\" \"putItem\": { \"tableName\": \"my-table\" } } }</code> </p> <p>Each attribute in the message payload will be written to a separate column in the DynamoDB database.</p>\n@param putItem Specifies the DynamoDB table to which the message data will be written. For example:</p> <p> <code>{ \"dynamoDBv2\": { \"roleArn\": \"aws:iam:12341251:my-role\" \"putItem\": { \"tableName\": \"my-table\" } } }</code> </p> <p>Each attribute in the message payload will be written to a separate column in the DynamoDB database.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "PutItemInput",
            "variableName" : "putItem",
            "variableType" : "PutItemInput",
            "documentation" : "<p>Specifies the DynamoDB table to which the message data will be written. For example:</p> <p> <code>{ \"dynamoDBv2\": { \"roleArn\": \"aws:iam:12341251:my-role\" \"putItem\": { \"tableName\": \"my-table\" } } }</code> </p> <p>Each attribute in the message payload will be written to a separate column in the DynamoDB database.</p>",
            "simpleType" : "PutItemInput",
            "variableSetterType" : "PutItemInput"
          },
          "xmlNameSpaceUri" : null
        },
        "RoleArn" : {
          "c2jName" : "roleArn",
          "c2jShape" : "AwsArn",
          "deprecated" : false,
          "documentation" : "<p>The ARN of the IAM role that grants access to the DynamoDB table.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access to the DynamoDB table.</p>\n@param roleArn The ARN of the IAM role that grants access to the DynamoDB table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRoleArn",
          "getterDocumentation" : "/**<p>The ARN of the IAM role that grants access to the DynamoDB table.</p>\n@return The ARN of the IAM role that grants access to the DynamoDB table.*/",
          "getterMethodName" : "getRoleArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "roleArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "roleArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RoleArn",
          "setterDocumentation" : "/**<p>The ARN of the IAM role that grants access to the DynamoDB table.</p>\n@param roleArn The ARN of the IAM role that grants access to the DynamoDB table.*/",
          "setterMethodName" : "setRoleArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "roleArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access to the DynamoDB table.</p>\n@param roleArn The ARN of the IAM role that grants access to the DynamoDB table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "roleArn",
            "variableType" : "String",
            "documentation" : "<p>The ARN of the IAM role that grants access to the DynamoDB table.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DynamoDBv2Action",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "DynamoDBv2Action",
        "variableName" : "dynamoDBv2Action",
        "variableType" : "DynamoDBv2Action",
        "documentation" : null,
        "simpleType" : "DynamoDBv2Action",
        "variableSetterType" : "DynamoDBv2Action"
      },
      "wrapper" : false
    },
    "DynamoKeyType" : {
      "c2jName" : "DynamoKeyType",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "STRING",
        "value" : "STRING"
      }, {
        "name" : "NUMBER",
        "value" : "NUMBER"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DynamoKeyType",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "DynamoKeyType",
        "variableName" : "dynamoKeyType",
        "variableType" : "DynamoKeyType",
        "documentation" : null,
        "simpleType" : "DynamoKeyType",
        "variableSetterType" : "DynamoKeyType"
      },
      "wrapper" : false
    },
    "ElasticsearchAction" : {
      "c2jName" : "ElasticsearchAction",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Describes an action that writes data to an Amazon Elasticsearch Service domain.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "roleArn",
        "c2jShape" : "AwsArn",
        "deprecated" : false,
        "documentation" : "<p>The IAM role ARN that has access to Elasticsearch.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The IAM role ARN that has access to Elasticsearch.</p>\n@param roleArn The IAM role ARN that has access to Elasticsearch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRoleArn",
        "getterDocumentation" : "/**<p>The IAM role ARN that has access to Elasticsearch.</p>\n@return The IAM role ARN that has access to Elasticsearch.*/",
        "getterMethodName" : "getRoleArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "roleArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "roleArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RoleArn",
        "setterDocumentation" : "/**<p>The IAM role ARN that has access to Elasticsearch.</p>\n@param roleArn The IAM role ARN that has access to Elasticsearch.*/",
        "setterMethodName" : "setRoleArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "roleArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The IAM role ARN that has access to Elasticsearch.</p>\n@param roleArn The IAM role ARN that has access to Elasticsearch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "roleArn",
          "variableType" : "String",
          "documentation" : "<p>The IAM role ARN that has access to Elasticsearch.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "endpoint",
        "c2jShape" : "ElasticsearchEndpoint",
        "deprecated" : false,
        "documentation" : "<p>The endpoint of your Elasticsearch domain.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The endpoint of your Elasticsearch domain.</p>\n@param endpoint The endpoint of your Elasticsearch domain.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withEndpoint",
        "getterDocumentation" : "/**<p>The endpoint of your Elasticsearch domain.</p>\n@return The endpoint of your Elasticsearch domain.*/",
        "getterMethodName" : "getEndpoint",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "endpoint",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "endpoint",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Endpoint",
        "setterDocumentation" : "/**<p>The endpoint of your Elasticsearch domain.</p>\n@param endpoint The endpoint of your Elasticsearch domain.*/",
        "setterMethodName" : "setEndpoint",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "endpoint",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The endpoint of your Elasticsearch domain.</p>\n@param endpoint The endpoint of your Elasticsearch domain.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "endpoint",
          "variableType" : "String",
          "documentation" : "<p>The endpoint of your Elasticsearch domain.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "index",
        "c2jShape" : "ElasticsearchIndex",
        "deprecated" : false,
        "documentation" : "<p>The Elasticsearch index where you want to store your data.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The Elasticsearch index where you want to store your data.</p>\n@param index The Elasticsearch index where you want to store your data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withIndex",
        "getterDocumentation" : "/**<p>The Elasticsearch index where you want to store your data.</p>\n@return The Elasticsearch index where you want to store your data.*/",
        "getterMethodName" : "getIndex",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "index",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "index",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Index",
        "setterDocumentation" : "/**<p>The Elasticsearch index where you want to store your data.</p>\n@param index The Elasticsearch index where you want to store your data.*/",
        "setterMethodName" : "setIndex",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "index",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The Elasticsearch index where you want to store your data.</p>\n@param index The Elasticsearch index where you want to store your data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "index",
          "variableType" : "String",
          "documentation" : "<p>The Elasticsearch index where you want to store your data.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "type",
        "c2jShape" : "ElasticsearchType",
        "deprecated" : false,
        "documentation" : "<p>The type of document you are storing.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The type of document you are storing.</p>\n@param type The type of document you are storing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withType",
        "getterDocumentation" : "/**<p>The type of document you are storing.</p>\n@return The type of document you are storing.*/",
        "getterMethodName" : "getType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "type",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "type",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Type",
        "setterDocumentation" : "/**<p>The type of document you are storing.</p>\n@param type The type of document you are storing.*/",
        "setterMethodName" : "setType",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "type",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The type of document you are storing.</p>\n@param type The type of document you are storing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "type",
          "variableType" : "String",
          "documentation" : "<p>The type of document you are storing.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "id",
        "c2jShape" : "ElasticsearchId",
        "deprecated" : false,
        "documentation" : "<p>The unique identifier for the document you are storing.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The unique identifier for the document you are storing.</p>\n@param id The unique identifier for the document you are storing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withId",
        "getterDocumentation" : "/**<p>The unique identifier for the document you are storing.</p>\n@return The unique identifier for the document you are storing.*/",
        "getterMethodName" : "getId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "id",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "id",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Id",
        "setterDocumentation" : "/**<p>The unique identifier for the document you are storing.</p>\n@param id The unique identifier for the document you are storing.*/",
        "setterMethodName" : "setId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "id",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The unique identifier for the document you are storing.</p>\n@param id The unique identifier for the document you are storing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "id",
          "variableType" : "String",
          "documentation" : "<p>The unique identifier for the document you are storing.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Endpoint" : {
          "c2jName" : "endpoint",
          "c2jShape" : "ElasticsearchEndpoint",
          "deprecated" : false,
          "documentation" : "<p>The endpoint of your Elasticsearch domain.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The endpoint of your Elasticsearch domain.</p>\n@param endpoint The endpoint of your Elasticsearch domain.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withEndpoint",
          "getterDocumentation" : "/**<p>The endpoint of your Elasticsearch domain.</p>\n@return The endpoint of your Elasticsearch domain.*/",
          "getterMethodName" : "getEndpoint",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "endpoint",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "endpoint",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Endpoint",
          "setterDocumentation" : "/**<p>The endpoint of your Elasticsearch domain.</p>\n@param endpoint The endpoint of your Elasticsearch domain.*/",
          "setterMethodName" : "setEndpoint",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "endpoint",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The endpoint of your Elasticsearch domain.</p>\n@param endpoint The endpoint of your Elasticsearch domain.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "endpoint",
            "variableType" : "String",
            "documentation" : "<p>The endpoint of your Elasticsearch domain.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Id" : {
          "c2jName" : "id",
          "c2jShape" : "ElasticsearchId",
          "deprecated" : false,
          "documentation" : "<p>The unique identifier for the document you are storing.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The unique identifier for the document you are storing.</p>\n@param id The unique identifier for the document you are storing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withId",
          "getterDocumentation" : "/**<p>The unique identifier for the document you are storing.</p>\n@return The unique identifier for the document you are storing.*/",
          "getterMethodName" : "getId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "id",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "id",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Id",
          "setterDocumentation" : "/**<p>The unique identifier for the document you are storing.</p>\n@param id The unique identifier for the document you are storing.*/",
          "setterMethodName" : "setId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "id",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The unique identifier for the document you are storing.</p>\n@param id The unique identifier for the document you are storing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "id",
            "variableType" : "String",
            "documentation" : "<p>The unique identifier for the document you are storing.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Index" : {
          "c2jName" : "index",
          "c2jShape" : "ElasticsearchIndex",
          "deprecated" : false,
          "documentation" : "<p>The Elasticsearch index where you want to store your data.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The Elasticsearch index where you want to store your data.</p>\n@param index The Elasticsearch index where you want to store your data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withIndex",
          "getterDocumentation" : "/**<p>The Elasticsearch index where you want to store your data.</p>\n@return The Elasticsearch index where you want to store your data.*/",
          "getterMethodName" : "getIndex",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "index",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "index",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Index",
          "setterDocumentation" : "/**<p>The Elasticsearch index where you want to store your data.</p>\n@param index The Elasticsearch index where you want to store your data.*/",
          "setterMethodName" : "setIndex",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "index",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The Elasticsearch index where you want to store your data.</p>\n@param index The Elasticsearch index where you want to store your data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "index",
            "variableType" : "String",
            "documentation" : "<p>The Elasticsearch index where you want to store your data.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RoleArn" : {
          "c2jName" : "roleArn",
          "c2jShape" : "AwsArn",
          "deprecated" : false,
          "documentation" : "<p>The IAM role ARN that has access to Elasticsearch.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The IAM role ARN that has access to Elasticsearch.</p>\n@param roleArn The IAM role ARN that has access to Elasticsearch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRoleArn",
          "getterDocumentation" : "/**<p>The IAM role ARN that has access to Elasticsearch.</p>\n@return The IAM role ARN that has access to Elasticsearch.*/",
          "getterMethodName" : "getRoleArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "roleArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "roleArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RoleArn",
          "setterDocumentation" : "/**<p>The IAM role ARN that has access to Elasticsearch.</p>\n@param roleArn The IAM role ARN that has access to Elasticsearch.*/",
          "setterMethodName" : "setRoleArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "roleArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The IAM role ARN that has access to Elasticsearch.</p>\n@param roleArn The IAM role ARN that has access to Elasticsearch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "roleArn",
            "variableType" : "String",
            "documentation" : "<p>The IAM role ARN that has access to Elasticsearch.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Type" : {
          "c2jName" : "type",
          "c2jShape" : "ElasticsearchType",
          "deprecated" : false,
          "documentation" : "<p>The type of document you are storing.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The type of document you are storing.</p>\n@param type The type of document you are storing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withType",
          "getterDocumentation" : "/**<p>The type of document you are storing.</p>\n@return The type of document you are storing.*/",
          "getterMethodName" : "getType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "type",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "type",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Type",
          "setterDocumentation" : "/**<p>The type of document you are storing.</p>\n@param type The type of document you are storing.*/",
          "setterMethodName" : "setType",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "type",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The type of document you are storing.</p>\n@param type The type of document you are storing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "type",
            "variableType" : "String",
            "documentation" : "<p>The type of document you are storing.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "roleArn", "endpoint", "index", "type", "id" ],
      "shapeName" : "ElasticsearchAction",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "ElasticsearchAction",
        "variableName" : "elasticsearchAction",
        "variableType" : "ElasticsearchAction",
        "documentation" : null,
        "simpleType" : "ElasticsearchAction",
        "variableSetterType" : "ElasticsearchAction"
      },
      "wrapper" : false
    },
    "EnableTopicRuleRequest" : {
      "c2jName" : "EnableTopicRuleRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the EnableTopicRuleRequest operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "EnableTopicRule",
        "locationName" : null,
        "requestUri" : "/rules/{ruleName}/enable",
        "target" : null,
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ruleName",
        "c2jShape" : "RuleName",
        "deprecated" : false,
        "documentation" : "<p>The name of the topic rule to enable.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the topic rule to enable.</p>\n@param ruleName The name of the topic rule to enable.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRuleName",
        "getterDocumentation" : "/**<p>The name of the topic rule to enable.</p>\n@return The name of the topic rule to enable.*/",
        "getterMethodName" : "getRuleName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "ruleName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ruleName",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RuleName",
        "setterDocumentation" : "/**<p>The name of the topic rule to enable.</p>\n@param ruleName The name of the topic rule to enable.*/",
        "setterMethodName" : "setRuleName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "ruleName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the topic rule to enable.</p>\n@param ruleName The name of the topic rule to enable.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "ruleName",
          "variableType" : "String",
          "documentation" : "<p>The name of the topic rule to enable.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "RuleName" : {
          "c2jName" : "ruleName",
          "c2jShape" : "RuleName",
          "deprecated" : false,
          "documentation" : "<p>The name of the topic rule to enable.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the topic rule to enable.</p>\n@param ruleName The name of the topic rule to enable.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRuleName",
          "getterDocumentation" : "/**<p>The name of the topic rule to enable.</p>\n@return The name of the topic rule to enable.*/",
          "getterMethodName" : "getRuleName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "ruleName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ruleName",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RuleName",
          "setterDocumentation" : "/**<p>The name of the topic rule to enable.</p>\n@param ruleName The name of the topic rule to enable.*/",
          "setterMethodName" : "setRuleName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "ruleName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the topic rule to enable.</p>\n@param ruleName The name of the topic rule to enable.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "ruleName",
            "variableType" : "String",
            "documentation" : "<p>The name of the topic rule to enable.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ruleName" ],
      "shapeName" : "EnableTopicRuleRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "EnableTopicRuleRequest",
        "variableName" : "enableTopicRuleRequest",
        "variableType" : "EnableTopicRuleRequest",
        "documentation" : null,
        "simpleType" : "EnableTopicRuleRequest",
        "variableSetterType" : "EnableTopicRuleRequest"
      },
      "wrapper" : false
    },
    "EnableTopicRuleResult" : {
      "c2jName" : "EnableTopicRuleResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : null,
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "EnableTopicRuleResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "EnableTopicRuleResult",
        "variableName" : "enableTopicRuleResult",
        "variableType" : "EnableTopicRuleResult",
        "documentation" : null,
        "simpleType" : "EnableTopicRuleResult",
        "variableSetterType" : "EnableTopicRuleResult"
      },
      "wrapper" : false
    },
    "FirehoseAction" : {
      "c2jName" : "FirehoseAction",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Describes an action that writes data to an Amazon Kinesis Firehose stream.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "roleArn",
        "c2jShape" : "AwsArn",
        "deprecated" : false,
        "documentation" : "<p>The IAM role that grants access to the Amazon Kinesis Firehost stream.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The IAM role that grants access to the Amazon Kinesis Firehost stream.</p>\n@param roleArn The IAM role that grants access to the Amazon Kinesis Firehost stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRoleArn",
        "getterDocumentation" : "/**<p>The IAM role that grants access to the Amazon Kinesis Firehost stream.</p>\n@return The IAM role that grants access to the Amazon Kinesis Firehost stream.*/",
        "getterMethodName" : "getRoleArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "roleArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "roleArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RoleArn",
        "setterDocumentation" : "/**<p>The IAM role that grants access to the Amazon Kinesis Firehost stream.</p>\n@param roleArn The IAM role that grants access to the Amazon Kinesis Firehost stream.*/",
        "setterMethodName" : "setRoleArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "roleArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The IAM role that grants access to the Amazon Kinesis Firehost stream.</p>\n@param roleArn The IAM role that grants access to the Amazon Kinesis Firehost stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "roleArn",
          "variableType" : "String",
          "documentation" : "<p>The IAM role that grants access to the Amazon Kinesis Firehost stream.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "deliveryStreamName",
        "c2jShape" : "DeliveryStreamName",
        "deprecated" : false,
        "documentation" : "<p>The delivery stream name.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The delivery stream name.</p>\n@param deliveryStreamName The delivery stream name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDeliveryStreamName",
        "getterDocumentation" : "/**<p>The delivery stream name.</p>\n@return The delivery stream name.*/",
        "getterMethodName" : "getDeliveryStreamName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "deliveryStreamName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "deliveryStreamName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "DeliveryStreamName",
        "setterDocumentation" : "/**<p>The delivery stream name.</p>\n@param deliveryStreamName The delivery stream name.*/",
        "setterMethodName" : "setDeliveryStreamName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "deliveryStreamName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The delivery stream name.</p>\n@param deliveryStreamName The delivery stream name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "deliveryStreamName",
          "variableType" : "String",
          "documentation" : "<p>The delivery stream name.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "separator",
        "c2jShape" : "FirehoseSeparator",
        "deprecated" : false,
        "documentation" : "<p>A character separator that will be used to separate records written to the Firehose stream. Valid values are: '\\n' (newline), '\\t' (tab), '\\r\\n' (Windows newline), ',' (comma).</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A character separator that will be used to separate records written to the Firehose stream. Valid values are: '\\n' (newline), '\\t' (tab), '\\r\\n' (Windows newline), ',' (comma).</p>\n@param separator A character separator that will be used to separate records written to the Firehose stream. Valid values are: '\\n' (newline), '\\t' (tab), '\\r\\n' (Windows newline), ',' (comma).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSeparator",
        "getterDocumentation" : "/**<p>A character separator that will be used to separate records written to the Firehose stream. Valid values are: '\\n' (newline), '\\t' (tab), '\\r\\n' (Windows newline), ',' (comma).</p>\n@return A character separator that will be used to separate records written to the Firehose stream. Valid values are: '\\n' (newline), '\\t' (tab), '\\r\\n' (Windows newline), ',' (comma).*/",
        "getterMethodName" : "getSeparator",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "separator",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "separator",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Separator",
        "setterDocumentation" : "/**<p>A character separator that will be used to separate records written to the Firehose stream. Valid values are: '\\n' (newline), '\\t' (tab), '\\r\\n' (Windows newline), ',' (comma).</p>\n@param separator A character separator that will be used to separate records written to the Firehose stream. Valid values are: '\\n' (newline), '\\t' (tab), '\\r\\n' (Windows newline), ',' (comma).*/",
        "setterMethodName" : "setSeparator",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "separator",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A character separator that will be used to separate records written to the Firehose stream. Valid values are: '\\n' (newline), '\\t' (tab), '\\r\\n' (Windows newline), ',' (comma).</p>\n@param separator A character separator that will be used to separate records written to the Firehose stream. Valid values are: '\\n' (newline), '\\t' (tab), '\\r\\n' (Windows newline), ',' (comma).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "separator",
          "variableType" : "String",
          "documentation" : "<p>A character separator that will be used to separate records written to the Firehose stream. Valid values are: '\\n' (newline), '\\t' (tab), '\\r\\n' (Windows newline), ',' (comma).</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "DeliveryStreamName" : {
          "c2jName" : "deliveryStreamName",
          "c2jShape" : "DeliveryStreamName",
          "deprecated" : false,
          "documentation" : "<p>The delivery stream name.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The delivery stream name.</p>\n@param deliveryStreamName The delivery stream name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDeliveryStreamName",
          "getterDocumentation" : "/**<p>The delivery stream name.</p>\n@return The delivery stream name.*/",
          "getterMethodName" : "getDeliveryStreamName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "deliveryStreamName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "deliveryStreamName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "DeliveryStreamName",
          "setterDocumentation" : "/**<p>The delivery stream name.</p>\n@param deliveryStreamName The delivery stream name.*/",
          "setterMethodName" : "setDeliveryStreamName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "deliveryStreamName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The delivery stream name.</p>\n@param deliveryStreamName The delivery stream name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "deliveryStreamName",
            "variableType" : "String",
            "documentation" : "<p>The delivery stream name.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RoleArn" : {
          "c2jName" : "roleArn",
          "c2jShape" : "AwsArn",
          "deprecated" : false,
          "documentation" : "<p>The IAM role that grants access to the Amazon Kinesis Firehost stream.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The IAM role that grants access to the Amazon Kinesis Firehost stream.</p>\n@param roleArn The IAM role that grants access to the Amazon Kinesis Firehost stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRoleArn",
          "getterDocumentation" : "/**<p>The IAM role that grants access to the Amazon Kinesis Firehost stream.</p>\n@return The IAM role that grants access to the Amazon Kinesis Firehost stream.*/",
          "getterMethodName" : "getRoleArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "roleArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "roleArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RoleArn",
          "setterDocumentation" : "/**<p>The IAM role that grants access to the Amazon Kinesis Firehost stream.</p>\n@param roleArn The IAM role that grants access to the Amazon Kinesis Firehost stream.*/",
          "setterMethodName" : "setRoleArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "roleArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The IAM role that grants access to the Amazon Kinesis Firehost stream.</p>\n@param roleArn The IAM role that grants access to the Amazon Kinesis Firehost stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "roleArn",
            "variableType" : "String",
            "documentation" : "<p>The IAM role that grants access to the Amazon Kinesis Firehost stream.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Separator" : {
          "c2jName" : "separator",
          "c2jShape" : "FirehoseSeparator",
          "deprecated" : false,
          "documentation" : "<p>A character separator that will be used to separate records written to the Firehose stream. Valid values are: '\\n' (newline), '\\t' (tab), '\\r\\n' (Windows newline), ',' (comma).</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A character separator that will be used to separate records written to the Firehose stream. Valid values are: '\\n' (newline), '\\t' (tab), '\\r\\n' (Windows newline), ',' (comma).</p>\n@param separator A character separator that will be used to separate records written to the Firehose stream. Valid values are: '\\n' (newline), '\\t' (tab), '\\r\\n' (Windows newline), ',' (comma).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSeparator",
          "getterDocumentation" : "/**<p>A character separator that will be used to separate records written to the Firehose stream. Valid values are: '\\n' (newline), '\\t' (tab), '\\r\\n' (Windows newline), ',' (comma).</p>\n@return A character separator that will be used to separate records written to the Firehose stream. Valid values are: '\\n' (newline), '\\t' (tab), '\\r\\n' (Windows newline), ',' (comma).*/",
          "getterMethodName" : "getSeparator",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "separator",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "separator",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Separator",
          "setterDocumentation" : "/**<p>A character separator that will be used to separate records written to the Firehose stream. Valid values are: '\\n' (newline), '\\t' (tab), '\\r\\n' (Windows newline), ',' (comma).</p>\n@param separator A character separator that will be used to separate records written to the Firehose stream. Valid values are: '\\n' (newline), '\\t' (tab), '\\r\\n' (Windows newline), ',' (comma).*/",
          "setterMethodName" : "setSeparator",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "separator",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A character separator that will be used to separate records written to the Firehose stream. Valid values are: '\\n' (newline), '\\t' (tab), '\\r\\n' (Windows newline), ',' (comma).</p>\n@param separator A character separator that will be used to separate records written to the Firehose stream. Valid values are: '\\n' (newline), '\\t' (tab), '\\r\\n' (Windows newline), ',' (comma).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "separator",
            "variableType" : "String",
            "documentation" : "<p>A character separator that will be used to separate records written to the Firehose stream. Valid values are: '\\n' (newline), '\\t' (tab), '\\r\\n' (Windows newline), ',' (comma).</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "roleArn", "deliveryStreamName" ],
      "shapeName" : "FirehoseAction",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "FirehoseAction",
        "variableName" : "firehoseAction",
        "variableType" : "FirehoseAction",
        "documentation" : null,
        "simpleType" : "FirehoseAction",
        "variableSetterType" : "FirehoseAction"
      },
      "wrapper" : false
    },
    "GetLoggingOptionsRequest" : {
      "c2jName" : "GetLoggingOptionsRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the GetLoggingOptions operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetLoggingOptions",
        "locationName" : null,
        "requestUri" : "/loggingOptions",
        "target" : null,
        "verb" : "GET",
        "xmlNameSpaceUri" : null
      },
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetLoggingOptionsRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "GetLoggingOptionsRequest",
        "variableName" : "getLoggingOptionsRequest",
        "variableType" : "GetLoggingOptionsRequest",
        "documentation" : null,
        "simpleType" : "GetLoggingOptionsRequest",
        "variableSetterType" : "GetLoggingOptionsRequest"
      },
      "wrapper" : false
    },
    "GetLoggingOptionsResult" : {
      "c2jName" : "GetLoggingOptionsResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The output from the GetLoggingOptions operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "roleArn",
        "c2jShape" : "AwsArn",
        "deprecated" : false,
        "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRoleArn",
        "getterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@return The ARN of the IAM role that grants access.*/",
        "getterMethodName" : "getRoleArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "roleArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "roleArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RoleArn",
        "setterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.*/",
        "setterMethodName" : "setRoleArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "roleArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "roleArn",
          "variableType" : "String",
          "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "logLevel",
        "c2jShape" : "LogLevel",
        "deprecated" : false,
        "documentation" : "<p>The logging level.</p>",
        "enumType" : "LogLevel",
        "fluentSetterDocumentation" : "/**<p>The logging level.</p>\n@param logLevel The logging level.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LogLevel*/",
        "fluentSetterMethodName" : "withLogLevel",
        "getterDocumentation" : "/**<p>The logging level.</p>\n@return The logging level.\n@see LogLevel*/",
        "getterMethodName" : "getLogLevel",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "logLevel",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "logLevel",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LogLevel",
        "setterDocumentation" : "/**<p>The logging level.</p>\n@param logLevel The logging level.\n@see LogLevel*/",
        "setterMethodName" : "setLogLevel",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "logLevel",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The logging level.</p>\n@param logLevel The logging level.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LogLevel*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "logLevel",
          "variableType" : "String",
          "documentation" : "<p>The logging level.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "LogLevel" : {
          "c2jName" : "logLevel",
          "c2jShape" : "LogLevel",
          "deprecated" : false,
          "documentation" : "<p>The logging level.</p>",
          "enumType" : "LogLevel",
          "fluentSetterDocumentation" : "/**<p>The logging level.</p>\n@param logLevel The logging level.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LogLevel*/",
          "fluentSetterMethodName" : "withLogLevel",
          "getterDocumentation" : "/**<p>The logging level.</p>\n@return The logging level.\n@see LogLevel*/",
          "getterMethodName" : "getLogLevel",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "logLevel",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "logLevel",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LogLevel",
          "setterDocumentation" : "/**<p>The logging level.</p>\n@param logLevel The logging level.\n@see LogLevel*/",
          "setterMethodName" : "setLogLevel",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "logLevel",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The logging level.</p>\n@param logLevel The logging level.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LogLevel*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "logLevel",
            "variableType" : "String",
            "documentation" : "<p>The logging level.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RoleArn" : {
          "c2jName" : "roleArn",
          "c2jShape" : "AwsArn",
          "deprecated" : false,
          "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRoleArn",
          "getterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@return The ARN of the IAM role that grants access.*/",
          "getterMethodName" : "getRoleArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "roleArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "roleArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RoleArn",
          "setterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.*/",
          "setterMethodName" : "setRoleArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "roleArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "roleArn",
            "variableType" : "String",
            "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetLoggingOptionsResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "GetLoggingOptionsResult",
        "variableName" : "getLoggingOptionsResult",
        "variableType" : "GetLoggingOptionsResult",
        "documentation" : null,
        "simpleType" : "GetLoggingOptionsResult",
        "variableSetterType" : "GetLoggingOptionsResult"
      },
      "wrapper" : false
    },
    "GetPolicyRequest" : {
      "c2jName" : "GetPolicyRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the GetPolicy operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetPolicy",
        "locationName" : null,
        "requestUri" : "/policies/{policyName}",
        "target" : null,
        "verb" : "GET",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "policyName",
        "c2jShape" : "PolicyName",
        "deprecated" : false,
        "documentation" : "<p>The name of the policy.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the policy.</p>\n@param policyName The name of the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicyName",
        "getterDocumentation" : "/**<p>The name of the policy.</p>\n@return The name of the policy.*/",
        "getterMethodName" : "getPolicyName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "policyName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "policyName",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PolicyName",
        "setterDocumentation" : "/**<p>The name of the policy.</p>\n@param policyName The name of the policy.*/",
        "setterMethodName" : "setPolicyName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the policy.</p>\n@param policyName The name of the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyName",
          "variableType" : "String",
          "documentation" : "<p>The name of the policy.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "PolicyName" : {
          "c2jName" : "policyName",
          "c2jShape" : "PolicyName",
          "deprecated" : false,
          "documentation" : "<p>The name of the policy.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the policy.</p>\n@param policyName The name of the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicyName",
          "getterDocumentation" : "/**<p>The name of the policy.</p>\n@return The name of the policy.*/",
          "getterMethodName" : "getPolicyName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "policyName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "policyName",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PolicyName",
          "setterDocumentation" : "/**<p>The name of the policy.</p>\n@param policyName The name of the policy.*/",
          "setterMethodName" : "setPolicyName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the policy.</p>\n@param policyName The name of the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyName",
            "variableType" : "String",
            "documentation" : "<p>The name of the policy.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "policyName" ],
      "shapeName" : "GetPolicyRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "GetPolicyRequest",
        "variableName" : "getPolicyRequest",
        "variableType" : "GetPolicyRequest",
        "documentation" : null,
        "simpleType" : "GetPolicyRequest",
        "variableSetterType" : "GetPolicyRequest"
      },
      "wrapper" : false
    },
    "GetPolicyResult" : {
      "c2jName" : "GetPolicyResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The output from the GetPolicy operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "policyName",
        "c2jShape" : "PolicyName",
        "deprecated" : false,
        "documentation" : "<p>The policy name.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicyName",
        "getterDocumentation" : "/**<p>The policy name.</p>\n@return The policy name.*/",
        "getterMethodName" : "getPolicyName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "policyName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "policyName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PolicyName",
        "setterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.*/",
        "setterMethodName" : "setPolicyName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyName",
          "variableType" : "String",
          "documentation" : "<p>The policy name.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "policyArn",
        "c2jShape" : "PolicyArn",
        "deprecated" : false,
        "documentation" : "<p>The policy ARN.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicyArn",
        "getterDocumentation" : "/**<p>The policy ARN.</p>\n@return The policy ARN.*/",
        "getterMethodName" : "getPolicyArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "policyArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "policyArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PolicyArn",
        "setterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.*/",
        "setterMethodName" : "setPolicyArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyArn",
          "variableType" : "String",
          "documentation" : "<p>The policy ARN.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "policyDocument",
        "c2jShape" : "PolicyDocument",
        "deprecated" : false,
        "documentation" : "<p>The JSON document that describes the policy.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicyDocument",
        "getterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@return The JSON document that describes the policy.*/",
        "getterMethodName" : "getPolicyDocument",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "policyDocument",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "policyDocument",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PolicyDocument",
        "setterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.*/",
        "setterMethodName" : "setPolicyDocument",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyDocument",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyDocument",
          "variableType" : "String",
          "documentation" : "<p>The JSON document that describes the policy.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "defaultVersionId",
        "c2jShape" : "PolicyVersionId",
        "deprecated" : false,
        "documentation" : "<p>The default policy version ID.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The default policy version ID.</p>\n@param defaultVersionId The default policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDefaultVersionId",
        "getterDocumentation" : "/**<p>The default policy version ID.</p>\n@return The default policy version ID.*/",
        "getterMethodName" : "getDefaultVersionId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "defaultVersionId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "defaultVersionId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "DefaultVersionId",
        "setterDocumentation" : "/**<p>The default policy version ID.</p>\n@param defaultVersionId The default policy version ID.*/",
        "setterMethodName" : "setDefaultVersionId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "defaultVersionId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The default policy version ID.</p>\n@param defaultVersionId The default policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "defaultVersionId",
          "variableType" : "String",
          "documentation" : "<p>The default policy version ID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "DefaultVersionId" : {
          "c2jName" : "defaultVersionId",
          "c2jShape" : "PolicyVersionId",
          "deprecated" : false,
          "documentation" : "<p>The default policy version ID.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The default policy version ID.</p>\n@param defaultVersionId The default policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDefaultVersionId",
          "getterDocumentation" : "/**<p>The default policy version ID.</p>\n@return The default policy version ID.*/",
          "getterMethodName" : "getDefaultVersionId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "defaultVersionId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "defaultVersionId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "DefaultVersionId",
          "setterDocumentation" : "/**<p>The default policy version ID.</p>\n@param defaultVersionId The default policy version ID.*/",
          "setterMethodName" : "setDefaultVersionId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "defaultVersionId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The default policy version ID.</p>\n@param defaultVersionId The default policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "defaultVersionId",
            "variableType" : "String",
            "documentation" : "<p>The default policy version ID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "PolicyArn" : {
          "c2jName" : "policyArn",
          "c2jShape" : "PolicyArn",
          "deprecated" : false,
          "documentation" : "<p>The policy ARN.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicyArn",
          "getterDocumentation" : "/**<p>The policy ARN.</p>\n@return The policy ARN.*/",
          "getterMethodName" : "getPolicyArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "policyArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "policyArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PolicyArn",
          "setterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.*/",
          "setterMethodName" : "setPolicyArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyArn",
            "variableType" : "String",
            "documentation" : "<p>The policy ARN.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "PolicyDocument" : {
          "c2jName" : "policyDocument",
          "c2jShape" : "PolicyDocument",
          "deprecated" : false,
          "documentation" : "<p>The JSON document that describes the policy.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicyDocument",
          "getterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@return The JSON document that describes the policy.*/",
          "getterMethodName" : "getPolicyDocument",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "policyDocument",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "policyDocument",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PolicyDocument",
          "setterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.*/",
          "setterMethodName" : "setPolicyDocument",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyDocument",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyDocument",
            "variableType" : "String",
            "documentation" : "<p>The JSON document that describes the policy.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "PolicyName" : {
          "c2jName" : "policyName",
          "c2jShape" : "PolicyName",
          "deprecated" : false,
          "documentation" : "<p>The policy name.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicyName",
          "getterDocumentation" : "/**<p>The policy name.</p>\n@return The policy name.*/",
          "getterMethodName" : "getPolicyName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "policyName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "policyName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PolicyName",
          "setterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.*/",
          "setterMethodName" : "setPolicyName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyName",
            "variableType" : "String",
            "documentation" : "<p>The policy name.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetPolicyResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "GetPolicyResult",
        "variableName" : "getPolicyResult",
        "variableType" : "GetPolicyResult",
        "documentation" : null,
        "simpleType" : "GetPolicyResult",
        "variableSetterType" : "GetPolicyResult"
      },
      "wrapper" : false
    },
    "GetPolicyVersionRequest" : {
      "c2jName" : "GetPolicyVersionRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the GetPolicyVersion operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetPolicyVersion",
        "locationName" : null,
        "requestUri" : "/policies/{policyName}/version/{policyVersionId}",
        "target" : null,
        "verb" : "GET",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "policyName",
        "c2jShape" : "PolicyName",
        "deprecated" : false,
        "documentation" : "<p>The name of the policy.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the policy.</p>\n@param policyName The name of the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicyName",
        "getterDocumentation" : "/**<p>The name of the policy.</p>\n@return The name of the policy.*/",
        "getterMethodName" : "getPolicyName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "policyName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "policyName",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PolicyName",
        "setterDocumentation" : "/**<p>The name of the policy.</p>\n@param policyName The name of the policy.*/",
        "setterMethodName" : "setPolicyName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the policy.</p>\n@param policyName The name of the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyName",
          "variableType" : "String",
          "documentation" : "<p>The name of the policy.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "policyVersionId",
        "c2jShape" : "PolicyVersionId",
        "deprecated" : false,
        "documentation" : "<p>The policy version ID.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicyVersionId",
        "getterDocumentation" : "/**<p>The policy version ID.</p>\n@return The policy version ID.*/",
        "getterMethodName" : "getPolicyVersionId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "policyVersionId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "policyVersionId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PolicyVersionId",
        "setterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.*/",
        "setterMethodName" : "setPolicyVersionId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyVersionId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyVersionId",
          "variableType" : "String",
          "documentation" : "<p>The policy version ID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "PolicyName" : {
          "c2jName" : "policyName",
          "c2jShape" : "PolicyName",
          "deprecated" : false,
          "documentation" : "<p>The name of the policy.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the policy.</p>\n@param policyName The name of the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicyName",
          "getterDocumentation" : "/**<p>The name of the policy.</p>\n@return The name of the policy.*/",
          "getterMethodName" : "getPolicyName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "policyName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "policyName",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PolicyName",
          "setterDocumentation" : "/**<p>The name of the policy.</p>\n@param policyName The name of the policy.*/",
          "setterMethodName" : "setPolicyName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the policy.</p>\n@param policyName The name of the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyName",
            "variableType" : "String",
            "documentation" : "<p>The name of the policy.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "PolicyVersionId" : {
          "c2jName" : "policyVersionId",
          "c2jShape" : "PolicyVersionId",
          "deprecated" : false,
          "documentation" : "<p>The policy version ID.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicyVersionId",
          "getterDocumentation" : "/**<p>The policy version ID.</p>\n@return The policy version ID.*/",
          "getterMethodName" : "getPolicyVersionId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "policyVersionId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "policyVersionId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PolicyVersionId",
          "setterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.*/",
          "setterMethodName" : "setPolicyVersionId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyVersionId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyVersionId",
            "variableType" : "String",
            "documentation" : "<p>The policy version ID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "policyName", "policyVersionId" ],
      "shapeName" : "GetPolicyVersionRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "GetPolicyVersionRequest",
        "variableName" : "getPolicyVersionRequest",
        "variableType" : "GetPolicyVersionRequest",
        "documentation" : null,
        "simpleType" : "GetPolicyVersionRequest",
        "variableSetterType" : "GetPolicyVersionRequest"
      },
      "wrapper" : false
    },
    "GetPolicyVersionResult" : {
      "c2jName" : "GetPolicyVersionResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The output from the GetPolicyVersion operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "policyArn",
        "c2jShape" : "PolicyArn",
        "deprecated" : false,
        "documentation" : "<p>The policy ARN.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicyArn",
        "getterDocumentation" : "/**<p>The policy ARN.</p>\n@return The policy ARN.*/",
        "getterMethodName" : "getPolicyArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "policyArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "policyArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PolicyArn",
        "setterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.*/",
        "setterMethodName" : "setPolicyArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyArn",
          "variableType" : "String",
          "documentation" : "<p>The policy ARN.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "policyName",
        "c2jShape" : "PolicyName",
        "deprecated" : false,
        "documentation" : "<p>The policy name.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicyName",
        "getterDocumentation" : "/**<p>The policy name.</p>\n@return The policy name.*/",
        "getterMethodName" : "getPolicyName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "policyName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "policyName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PolicyName",
        "setterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.*/",
        "setterMethodName" : "setPolicyName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyName",
          "variableType" : "String",
          "documentation" : "<p>The policy name.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "policyDocument",
        "c2jShape" : "PolicyDocument",
        "deprecated" : false,
        "documentation" : "<p>The JSON document that describes the policy.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicyDocument",
        "getterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@return The JSON document that describes the policy.*/",
        "getterMethodName" : "getPolicyDocument",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "policyDocument",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "policyDocument",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PolicyDocument",
        "setterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.*/",
        "setterMethodName" : "setPolicyDocument",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyDocument",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyDocument",
          "variableType" : "String",
          "documentation" : "<p>The JSON document that describes the policy.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "policyVersionId",
        "c2jShape" : "PolicyVersionId",
        "deprecated" : false,
        "documentation" : "<p>The policy version ID.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicyVersionId",
        "getterDocumentation" : "/**<p>The policy version ID.</p>\n@return The policy version ID.*/",
        "getterMethodName" : "getPolicyVersionId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "policyVersionId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "policyVersionId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PolicyVersionId",
        "setterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.*/",
        "setterMethodName" : "setPolicyVersionId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyVersionId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyVersionId",
          "variableType" : "String",
          "documentation" : "<p>The policy version ID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "isDefaultVersion",
        "c2jShape" : "IsDefaultVersion",
        "deprecated" : false,
        "documentation" : "<p>Specifies whether the policy version is the default.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@param isDefaultVersion Specifies whether the policy version is the default.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withIsDefaultVersion",
        "getterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@return Specifies whether the policy version is the default.*/",
        "getterMethodName" : "getIsDefaultVersion",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "isDefaultVersion",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "isDefaultVersion",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "IsDefaultVersion",
        "setterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@param isDefaultVersion Specifies whether the policy version is the default.*/",
        "setterMethodName" : "setIsDefaultVersion",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "isDefaultVersion",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@param isDefaultVersion Specifies whether the policy version is the default.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "isDefaultVersion",
          "variableType" : "Boolean",
          "documentation" : "<p>Specifies whether the policy version is the default.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "IsDefaultVersion" : {
          "c2jName" : "isDefaultVersion",
          "c2jShape" : "IsDefaultVersion",
          "deprecated" : false,
          "documentation" : "<p>Specifies whether the policy version is the default.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@param isDefaultVersion Specifies whether the policy version is the default.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withIsDefaultVersion",
          "getterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@return Specifies whether the policy version is the default.*/",
          "getterMethodName" : "getIsDefaultVersion",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "isDefaultVersion",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "isDefaultVersion",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "IsDefaultVersion",
          "setterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@param isDefaultVersion Specifies whether the policy version is the default.*/",
          "setterMethodName" : "setIsDefaultVersion",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "isDefaultVersion",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@param isDefaultVersion Specifies whether the policy version is the default.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "isDefaultVersion",
            "variableType" : "Boolean",
            "documentation" : "<p>Specifies whether the policy version is the default.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        },
        "PolicyArn" : {
          "c2jName" : "policyArn",
          "c2jShape" : "PolicyArn",
          "deprecated" : false,
          "documentation" : "<p>The policy ARN.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicyArn",
          "getterDocumentation" : "/**<p>The policy ARN.</p>\n@return The policy ARN.*/",
          "getterMethodName" : "getPolicyArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "policyArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "policyArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PolicyArn",
          "setterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.*/",
          "setterMethodName" : "setPolicyArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyArn",
            "variableType" : "String",
            "documentation" : "<p>The policy ARN.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "PolicyDocument" : {
          "c2jName" : "policyDocument",
          "c2jShape" : "PolicyDocument",
          "deprecated" : false,
          "documentation" : "<p>The JSON document that describes the policy.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicyDocument",
          "getterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@return The JSON document that describes the policy.*/",
          "getterMethodName" : "getPolicyDocument",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "policyDocument",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "policyDocument",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PolicyDocument",
          "setterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.*/",
          "setterMethodName" : "setPolicyDocument",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyDocument",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyDocument",
            "variableType" : "String",
            "documentation" : "<p>The JSON document that describes the policy.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "PolicyName" : {
          "c2jName" : "policyName",
          "c2jShape" : "PolicyName",
          "deprecated" : false,
          "documentation" : "<p>The policy name.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicyName",
          "getterDocumentation" : "/**<p>The policy name.</p>\n@return The policy name.*/",
          "getterMethodName" : "getPolicyName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "policyName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "policyName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PolicyName",
          "setterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.*/",
          "setterMethodName" : "setPolicyName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyName",
            "variableType" : "String",
            "documentation" : "<p>The policy name.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "PolicyVersionId" : {
          "c2jName" : "policyVersionId",
          "c2jShape" : "PolicyVersionId",
          "deprecated" : false,
          "documentation" : "<p>The policy version ID.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicyVersionId",
          "getterDocumentation" : "/**<p>The policy version ID.</p>\n@return The policy version ID.*/",
          "getterMethodName" : "getPolicyVersionId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "policyVersionId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "policyVersionId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PolicyVersionId",
          "setterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.*/",
          "setterMethodName" : "setPolicyVersionId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyVersionId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyVersionId",
            "variableType" : "String",
            "documentation" : "<p>The policy version ID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetPolicyVersionResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "GetPolicyVersionResult",
        "variableName" : "getPolicyVersionResult",
        "variableType" : "GetPolicyVersionResult",
        "documentation" : null,
        "simpleType" : "GetPolicyVersionResult",
        "variableSetterType" : "GetPolicyVersionResult"
      },
      "wrapper" : false
    },
    "GetRegistrationCodeRequest" : {
      "c2jName" : "GetRegistrationCodeRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input to the GetRegistrationCode operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetRegistrationCode",
        "locationName" : null,
        "requestUri" : "/registrationcode",
        "target" : null,
        "verb" : "GET",
        "xmlNameSpaceUri" : null
      },
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetRegistrationCodeRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "GetRegistrationCodeRequest",
        "variableName" : "getRegistrationCodeRequest",
        "variableType" : "GetRegistrationCodeRequest",
        "documentation" : null,
        "simpleType" : "GetRegistrationCodeRequest",
        "variableSetterType" : "GetRegistrationCodeRequest"
      },
      "wrapper" : false
    },
    "GetRegistrationCodeResult" : {
      "c2jName" : "GetRegistrationCodeResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The output from the GetRegistrationCode operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "registrationCode",
        "c2jShape" : "RegistrationCode",
        "deprecated" : false,
        "documentation" : "<p>The CA certificate registration code.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The CA certificate registration code.</p>\n@param registrationCode The CA certificate registration code.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRegistrationCode",
        "getterDocumentation" : "/**<p>The CA certificate registration code.</p>\n@return The CA certificate registration code.*/",
        "getterMethodName" : "getRegistrationCode",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "registrationCode",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "registrationCode",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RegistrationCode",
        "setterDocumentation" : "/**<p>The CA certificate registration code.</p>\n@param registrationCode The CA certificate registration code.*/",
        "setterMethodName" : "setRegistrationCode",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "registrationCode",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The CA certificate registration code.</p>\n@param registrationCode The CA certificate registration code.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "registrationCode",
          "variableType" : "String",
          "documentation" : "<p>The CA certificate registration code.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "RegistrationCode" : {
          "c2jName" : "registrationCode",
          "c2jShape" : "RegistrationCode",
          "deprecated" : false,
          "documentation" : "<p>The CA certificate registration code.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The CA certificate registration code.</p>\n@param registrationCode The CA certificate registration code.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRegistrationCode",
          "getterDocumentation" : "/**<p>The CA certificate registration code.</p>\n@return The CA certificate registration code.*/",
          "getterMethodName" : "getRegistrationCode",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "registrationCode",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "registrationCode",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RegistrationCode",
          "setterDocumentation" : "/**<p>The CA certificate registration code.</p>\n@param registrationCode The CA certificate registration code.*/",
          "setterMethodName" : "setRegistrationCode",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "registrationCode",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The CA certificate registration code.</p>\n@param registrationCode The CA certificate registration code.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "registrationCode",
            "variableType" : "String",
            "documentation" : "<p>The CA certificate registration code.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetRegistrationCodeResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "GetRegistrationCodeResult",
        "variableName" : "getRegistrationCodeResult",
        "variableType" : "GetRegistrationCodeResult",
        "documentation" : null,
        "simpleType" : "GetRegistrationCodeResult",
        "variableSetterType" : "GetRegistrationCodeResult"
      },
      "wrapper" : false
    },
    "GetTopicRuleRequest" : {
      "c2jName" : "GetTopicRuleRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the GetTopicRule operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetTopicRule",
        "locationName" : null,
        "requestUri" : "/rules/{ruleName}",
        "target" : null,
        "verb" : "GET",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ruleName",
        "c2jShape" : "RuleName",
        "deprecated" : false,
        "documentation" : "<p>The name of the rule.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRuleName",
        "getterDocumentation" : "/**<p>The name of the rule.</p>\n@return The name of the rule.*/",
        "getterMethodName" : "getRuleName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "ruleName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ruleName",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RuleName",
        "setterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.*/",
        "setterMethodName" : "setRuleName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "ruleName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "ruleName",
          "variableType" : "String",
          "documentation" : "<p>The name of the rule.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "RuleName" : {
          "c2jName" : "ruleName",
          "c2jShape" : "RuleName",
          "deprecated" : false,
          "documentation" : "<p>The name of the rule.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRuleName",
          "getterDocumentation" : "/**<p>The name of the rule.</p>\n@return The name of the rule.*/",
          "getterMethodName" : "getRuleName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "ruleName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ruleName",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RuleName",
          "setterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.*/",
          "setterMethodName" : "setRuleName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "ruleName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "ruleName",
            "variableType" : "String",
            "documentation" : "<p>The name of the rule.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ruleName" ],
      "shapeName" : "GetTopicRuleRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "GetTopicRuleRequest",
        "variableName" : "getTopicRuleRequest",
        "variableType" : "GetTopicRuleRequest",
        "documentation" : null,
        "simpleType" : "GetTopicRuleRequest",
        "variableSetterType" : "GetTopicRuleRequest"
      },
      "wrapper" : false
    },
    "GetTopicRuleResult" : {
      "c2jName" : "GetTopicRuleResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The output from the GetTopicRule operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ruleArn",
        "c2jShape" : "RuleArn",
        "deprecated" : false,
        "documentation" : "<p>The rule ARN.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The rule ARN.</p>\n@param ruleArn The rule ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRuleArn",
        "getterDocumentation" : "/**<p>The rule ARN.</p>\n@return The rule ARN.*/",
        "getterMethodName" : "getRuleArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ruleArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ruleArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RuleArn",
        "setterDocumentation" : "/**<p>The rule ARN.</p>\n@param ruleArn The rule ARN.*/",
        "setterMethodName" : "setRuleArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "ruleArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The rule ARN.</p>\n@param ruleArn The rule ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "ruleArn",
          "variableType" : "String",
          "documentation" : "<p>The rule ARN.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "rule",
        "c2jShape" : "TopicRule",
        "deprecated" : false,
        "documentation" : "<p>The rule.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The rule.</p>\n@param rule The rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRule",
        "getterDocumentation" : "/**<p>The rule.</p>\n@return The rule.*/",
        "getterMethodName" : "getRule",
        "getterModel" : {
          "returnType" : "TopicRule",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "rule",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "rule",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Rule",
        "setterDocumentation" : "/**<p>The rule.</p>\n@param rule The rule.*/",
        "setterMethodName" : "setRule",
        "setterModel" : {
          "variableDeclarationType" : "TopicRule",
          "variableName" : "rule",
          "variableType" : "TopicRule",
          "documentation" : "",
          "simpleType" : "TopicRule",
          "variableSetterType" : "TopicRule"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The rule.</p>\n@param rule The rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "TopicRule",
          "variableName" : "rule",
          "variableType" : "TopicRule",
          "documentation" : "<p>The rule.</p>",
          "simpleType" : "TopicRule",
          "variableSetterType" : "TopicRule"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Rule" : {
          "c2jName" : "rule",
          "c2jShape" : "TopicRule",
          "deprecated" : false,
          "documentation" : "<p>The rule.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The rule.</p>\n@param rule The rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRule",
          "getterDocumentation" : "/**<p>The rule.</p>\n@return The rule.*/",
          "getterMethodName" : "getRule",
          "getterModel" : {
            "returnType" : "TopicRule",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "rule",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "rule",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Rule",
          "setterDocumentation" : "/**<p>The rule.</p>\n@param rule The rule.*/",
          "setterMethodName" : "setRule",
          "setterModel" : {
            "variableDeclarationType" : "TopicRule",
            "variableName" : "rule",
            "variableType" : "TopicRule",
            "documentation" : "",
            "simpleType" : "TopicRule",
            "variableSetterType" : "TopicRule"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The rule.</p>\n@param rule The rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "TopicRule",
            "variableName" : "rule",
            "variableType" : "TopicRule",
            "documentation" : "<p>The rule.</p>",
            "simpleType" : "TopicRule",
            "variableSetterType" : "TopicRule"
          },
          "xmlNameSpaceUri" : null
        },
        "RuleArn" : {
          "c2jName" : "ruleArn",
          "c2jShape" : "RuleArn",
          "deprecated" : false,
          "documentation" : "<p>The rule ARN.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The rule ARN.</p>\n@param ruleArn The rule ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRuleArn",
          "getterDocumentation" : "/**<p>The rule ARN.</p>\n@return The rule ARN.*/",
          "getterMethodName" : "getRuleArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ruleArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ruleArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RuleArn",
          "setterDocumentation" : "/**<p>The rule ARN.</p>\n@param ruleArn The rule ARN.*/",
          "setterMethodName" : "setRuleArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "ruleArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The rule ARN.</p>\n@param ruleArn The rule ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "ruleArn",
            "variableType" : "String",
            "documentation" : "<p>The rule ARN.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetTopicRuleResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "GetTopicRuleResult",
        "variableName" : "getTopicRuleResult",
        "variableType" : "GetTopicRuleResult",
        "documentation" : null,
        "simpleType" : "GetTopicRuleResult",
        "variableSetterType" : "GetTopicRuleResult"
      },
      "wrapper" : false
    },
    "InternalException" : {
      "c2jName" : "InternalException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>An unexpected error has occurred.</p>",
      "enums" : null,
      "errorCode" : "InternalException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InternalException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InternalException",
        "variableName" : "internalException",
        "variableType" : "InternalException",
        "documentation" : null,
        "simpleType" : "InternalException",
        "variableSetterType" : "InternalException"
      },
      "wrapper" : false
    },
    "InternalFailureException" : {
      "c2jName" : "InternalFailureException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>An unexpected error has occurred.</p>",
      "enums" : null,
      "errorCode" : "InternalFailureException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InternalFailureException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InternalFailureException",
        "variableName" : "internalFailureException",
        "variableType" : "InternalFailureException",
        "documentation" : null,
        "simpleType" : "InternalFailureException",
        "variableSetterType" : "InternalFailureException"
      },
      "wrapper" : false
    },
    "InvalidRequestException" : {
      "c2jName" : "InvalidRequestException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The request is not valid.</p>",
      "enums" : null,
      "errorCode" : "InvalidRequestException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidRequestException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidRequestException",
        "variableName" : "invalidRequestException",
        "variableType" : "InvalidRequestException",
        "documentation" : null,
        "simpleType" : "InvalidRequestException",
        "variableSetterType" : "InvalidRequestException"
      },
      "wrapper" : false
    },
    "KeyPair" : {
      "c2jName" : "KeyPair",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Describes a key pair.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "PublicKey",
        "c2jShape" : "PublicKey",
        "deprecated" : false,
        "documentation" : "<p>The public key.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The public key.</p>\n@param publicKey The public key.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPublicKey",
        "getterDocumentation" : "/**<p>The public key.</p>\n@return The public key.*/",
        "getterMethodName" : "getPublicKey",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "PublicKey",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "PublicKey",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PublicKey",
        "setterDocumentation" : "/**<p>The public key.</p>\n@param publicKey The public key.*/",
        "setterMethodName" : "setPublicKey",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "publicKey",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The public key.</p>\n@param publicKey The public key.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "publicKey",
          "variableType" : "String",
          "documentation" : "<p>The public key.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "PrivateKey",
        "c2jShape" : "PrivateKey",
        "deprecated" : false,
        "documentation" : "<p>The private key.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The private key.</p>\n@param privateKey The private key.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPrivateKey",
        "getterDocumentation" : "/**<p>The private key.</p>\n@return The private key.*/",
        "getterMethodName" : "getPrivateKey",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "PrivateKey",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "PrivateKey",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PrivateKey",
        "setterDocumentation" : "/**<p>The private key.</p>\n@param privateKey The private key.*/",
        "setterMethodName" : "setPrivateKey",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "privateKey",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The private key.</p>\n@param privateKey The private key.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "privateKey",
          "variableType" : "String",
          "documentation" : "<p>The private key.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "PrivateKey" : {
          "c2jName" : "PrivateKey",
          "c2jShape" : "PrivateKey",
          "deprecated" : false,
          "documentation" : "<p>The private key.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The private key.</p>\n@param privateKey The private key.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPrivateKey",
          "getterDocumentation" : "/**<p>The private key.</p>\n@return The private key.*/",
          "getterMethodName" : "getPrivateKey",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "PrivateKey",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "PrivateKey",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PrivateKey",
          "setterDocumentation" : "/**<p>The private key.</p>\n@param privateKey The private key.*/",
          "setterMethodName" : "setPrivateKey",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "privateKey",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The private key.</p>\n@param privateKey The private key.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "privateKey",
            "variableType" : "String",
            "documentation" : "<p>The private key.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "PublicKey" : {
          "c2jName" : "PublicKey",
          "c2jShape" : "PublicKey",
          "deprecated" : false,
          "documentation" : "<p>The public key.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The public key.</p>\n@param publicKey The public key.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPublicKey",
          "getterDocumentation" : "/**<p>The public key.</p>\n@return The public key.*/",
          "getterMethodName" : "getPublicKey",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "PublicKey",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "PublicKey",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PublicKey",
          "setterDocumentation" : "/**<p>The public key.</p>\n@param publicKey The public key.*/",
          "setterMethodName" : "setPublicKey",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "publicKey",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The public key.</p>\n@param publicKey The public key.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "publicKey",
            "variableType" : "String",
            "documentation" : "<p>The public key.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "KeyPair",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "KeyPair",
        "variableName" : "keyPair",
        "variableType" : "KeyPair",
        "documentation" : null,
        "simpleType" : "KeyPair",
        "variableSetterType" : "KeyPair"
      },
      "wrapper" : false
    },
    "KinesisAction" : {
      "c2jName" : "KinesisAction",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Describes an action to write data to an Amazon Kinesis stream.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "roleArn",
        "c2jShape" : "AwsArn",
        "deprecated" : false,
        "documentation" : "<p>The ARN of the IAM role that grants access to the Amazon Kinesis stream.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access to the Amazon Kinesis stream.</p>\n@param roleArn The ARN of the IAM role that grants access to the Amazon Kinesis stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRoleArn",
        "getterDocumentation" : "/**<p>The ARN of the IAM role that grants access to the Amazon Kinesis stream.</p>\n@return The ARN of the IAM role that grants access to the Amazon Kinesis stream.*/",
        "getterMethodName" : "getRoleArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "roleArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "roleArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RoleArn",
        "setterDocumentation" : "/**<p>The ARN of the IAM role that grants access to the Amazon Kinesis stream.</p>\n@param roleArn The ARN of the IAM role that grants access to the Amazon Kinesis stream.*/",
        "setterMethodName" : "setRoleArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "roleArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access to the Amazon Kinesis stream.</p>\n@param roleArn The ARN of the IAM role that grants access to the Amazon Kinesis stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "roleArn",
          "variableType" : "String",
          "documentation" : "<p>The ARN of the IAM role that grants access to the Amazon Kinesis stream.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "streamName",
        "c2jShape" : "StreamName",
        "deprecated" : false,
        "documentation" : "<p>The name of the Amazon Kinesis stream.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the Amazon Kinesis stream.</p>\n@param streamName The name of the Amazon Kinesis stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withStreamName",
        "getterDocumentation" : "/**<p>The name of the Amazon Kinesis stream.</p>\n@return The name of the Amazon Kinesis stream.*/",
        "getterMethodName" : "getStreamName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "streamName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "streamName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "StreamName",
        "setterDocumentation" : "/**<p>The name of the Amazon Kinesis stream.</p>\n@param streamName The name of the Amazon Kinesis stream.*/",
        "setterMethodName" : "setStreamName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "streamName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the Amazon Kinesis stream.</p>\n@param streamName The name of the Amazon Kinesis stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "streamName",
          "variableType" : "String",
          "documentation" : "<p>The name of the Amazon Kinesis stream.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "partitionKey",
        "c2jShape" : "PartitionKey",
        "deprecated" : false,
        "documentation" : "<p>The partition key.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The partition key.</p>\n@param partitionKey The partition key.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPartitionKey",
        "getterDocumentation" : "/**<p>The partition key.</p>\n@return The partition key.*/",
        "getterMethodName" : "getPartitionKey",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "partitionKey",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "partitionKey",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PartitionKey",
        "setterDocumentation" : "/**<p>The partition key.</p>\n@param partitionKey The partition key.*/",
        "setterMethodName" : "setPartitionKey",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "partitionKey",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The partition key.</p>\n@param partitionKey The partition key.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "partitionKey",
          "variableType" : "String",
          "documentation" : "<p>The partition key.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "PartitionKey" : {
          "c2jName" : "partitionKey",
          "c2jShape" : "PartitionKey",
          "deprecated" : false,
          "documentation" : "<p>The partition key.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The partition key.</p>\n@param partitionKey The partition key.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPartitionKey",
          "getterDocumentation" : "/**<p>The partition key.</p>\n@return The partition key.*/",
          "getterMethodName" : "getPartitionKey",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "partitionKey",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "partitionKey",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PartitionKey",
          "setterDocumentation" : "/**<p>The partition key.</p>\n@param partitionKey The partition key.*/",
          "setterMethodName" : "setPartitionKey",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "partitionKey",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The partition key.</p>\n@param partitionKey The partition key.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "partitionKey",
            "variableType" : "String",
            "documentation" : "<p>The partition key.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RoleArn" : {
          "c2jName" : "roleArn",
          "c2jShape" : "AwsArn",
          "deprecated" : false,
          "documentation" : "<p>The ARN of the IAM role that grants access to the Amazon Kinesis stream.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access to the Amazon Kinesis stream.</p>\n@param roleArn The ARN of the IAM role that grants access to the Amazon Kinesis stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRoleArn",
          "getterDocumentation" : "/**<p>The ARN of the IAM role that grants access to the Amazon Kinesis stream.</p>\n@return The ARN of the IAM role that grants access to the Amazon Kinesis stream.*/",
          "getterMethodName" : "getRoleArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "roleArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "roleArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RoleArn",
          "setterDocumentation" : "/**<p>The ARN of the IAM role that grants access to the Amazon Kinesis stream.</p>\n@param roleArn The ARN of the IAM role that grants access to the Amazon Kinesis stream.*/",
          "setterMethodName" : "setRoleArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "roleArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access to the Amazon Kinesis stream.</p>\n@param roleArn The ARN of the IAM role that grants access to the Amazon Kinesis stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "roleArn",
            "variableType" : "String",
            "documentation" : "<p>The ARN of the IAM role that grants access to the Amazon Kinesis stream.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "StreamName" : {
          "c2jName" : "streamName",
          "c2jShape" : "StreamName",
          "deprecated" : false,
          "documentation" : "<p>The name of the Amazon Kinesis stream.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the Amazon Kinesis stream.</p>\n@param streamName The name of the Amazon Kinesis stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withStreamName",
          "getterDocumentation" : "/**<p>The name of the Amazon Kinesis stream.</p>\n@return The name of the Amazon Kinesis stream.*/",
          "getterMethodName" : "getStreamName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "streamName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "streamName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "StreamName",
          "setterDocumentation" : "/**<p>The name of the Amazon Kinesis stream.</p>\n@param streamName The name of the Amazon Kinesis stream.*/",
          "setterMethodName" : "setStreamName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "streamName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the Amazon Kinesis stream.</p>\n@param streamName The name of the Amazon Kinesis stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "streamName",
            "variableType" : "String",
            "documentation" : "<p>The name of the Amazon Kinesis stream.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "roleArn", "streamName" ],
      "shapeName" : "KinesisAction",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "KinesisAction",
        "variableName" : "kinesisAction",
        "variableType" : "KinesisAction",
        "documentation" : null,
        "simpleType" : "KinesisAction",
        "variableSetterType" : "KinesisAction"
      },
      "wrapper" : false
    },
    "LambdaAction" : {
      "c2jName" : "LambdaAction",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Describes an action to invoke a Lambda function.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "functionArn",
        "c2jShape" : "FunctionArn",
        "deprecated" : false,
        "documentation" : "<p>The ARN of the Lambda function.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ARN of the Lambda function.</p>\n@param functionArn The ARN of the Lambda function.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFunctionArn",
        "getterDocumentation" : "/**<p>The ARN of the Lambda function.</p>\n@return The ARN of the Lambda function.*/",
        "getterMethodName" : "getFunctionArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "functionArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "functionArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "FunctionArn",
        "setterDocumentation" : "/**<p>The ARN of the Lambda function.</p>\n@param functionArn The ARN of the Lambda function.*/",
        "setterMethodName" : "setFunctionArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "functionArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ARN of the Lambda function.</p>\n@param functionArn The ARN of the Lambda function.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "functionArn",
          "variableType" : "String",
          "documentation" : "<p>The ARN of the Lambda function.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "FunctionArn" : {
          "c2jName" : "functionArn",
          "c2jShape" : "FunctionArn",
          "deprecated" : false,
          "documentation" : "<p>The ARN of the Lambda function.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ARN of the Lambda function.</p>\n@param functionArn The ARN of the Lambda function.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFunctionArn",
          "getterDocumentation" : "/**<p>The ARN of the Lambda function.</p>\n@return The ARN of the Lambda function.*/",
          "getterMethodName" : "getFunctionArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "functionArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "functionArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "FunctionArn",
          "setterDocumentation" : "/**<p>The ARN of the Lambda function.</p>\n@param functionArn The ARN of the Lambda function.*/",
          "setterMethodName" : "setFunctionArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "functionArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ARN of the Lambda function.</p>\n@param functionArn The ARN of the Lambda function.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "functionArn",
            "variableType" : "String",
            "documentation" : "<p>The ARN of the Lambda function.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "functionArn" ],
      "shapeName" : "LambdaAction",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "LambdaAction",
        "variableName" : "lambdaAction",
        "variableType" : "LambdaAction",
        "documentation" : null,
        "simpleType" : "LambdaAction",
        "variableSetterType" : "LambdaAction"
      },
      "wrapper" : false
    },
    "LimitExceededException" : {
      "c2jName" : "LimitExceededException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The number of attached entities exceeds the limit.</p>",
      "enums" : null,
      "errorCode" : "LimitExceededException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "LimitExceededException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "LimitExceededException",
        "variableName" : "limitExceededException",
        "variableType" : "LimitExceededException",
        "documentation" : null,
        "simpleType" : "LimitExceededException",
        "variableSetterType" : "LimitExceededException"
      },
      "wrapper" : false
    },
    "ListCACertificatesRequest" : {
      "c2jName" : "ListCACertificatesRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Input for the ListCACertificates operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListCACertificates",
        "locationName" : null,
        "requestUri" : "/cacertificates",
        "target" : null,
        "verb" : "GET",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "pageSize",
        "c2jShape" : "PageSize",
        "deprecated" : false,
        "documentation" : "<p>The result page size.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPageSize",
        "getterDocumentation" : "/**<p>The result page size.</p>\n@return The result page size.*/",
        "getterMethodName" : "getPageSize",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "pageSize",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "pageSize",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "PageSize",
        "setterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.*/",
        "setterMethodName" : "setPageSize",
        "setterModel" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "pageSize",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "pageSize",
          "variableType" : "Integer",
          "documentation" : "<p>The result page size.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "marker",
        "c2jShape" : "Marker",
        "deprecated" : false,
        "documentation" : "<p>The marker for the next set of results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMarker",
        "getterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@return The marker for the next set of results.*/",
        "getterMethodName" : "getMarker",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "marker",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "marker",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Marker",
        "setterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.*/",
        "setterMethodName" : "setMarker",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "marker",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "marker",
          "variableType" : "String",
          "documentation" : "<p>The marker for the next set of results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ascendingOrder",
        "c2jShape" : "AscendingOrder",
        "deprecated" : false,
        "documentation" : "<p>Determines the order of the results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Determines the order of the results.</p>\n@param ascendingOrder Determines the order of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAscendingOrder",
        "getterDocumentation" : "/**<p>Determines the order of the results.</p>\n@return Determines the order of the results.*/",
        "getterMethodName" : "getAscendingOrder",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "isAscendingOrder",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "isAscendingOrder",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "AscendingOrder",
        "setterDocumentation" : "/**<p>Determines the order of the results.</p>\n@param ascendingOrder Determines the order of the results.*/",
        "setterMethodName" : "setAscendingOrder",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "ascendingOrder",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Determines the order of the results.</p>\n@param ascendingOrder Determines the order of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "ascendingOrder",
          "variableType" : "Boolean",
          "documentation" : "<p>Determines the order of the results.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AscendingOrder" : {
          "c2jName" : "ascendingOrder",
          "c2jShape" : "AscendingOrder",
          "deprecated" : false,
          "documentation" : "<p>Determines the order of the results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Determines the order of the results.</p>\n@param ascendingOrder Determines the order of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAscendingOrder",
          "getterDocumentation" : "/**<p>Determines the order of the results.</p>\n@return Determines the order of the results.*/",
          "getterMethodName" : "getAscendingOrder",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "isAscendingOrder",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "isAscendingOrder",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "AscendingOrder",
          "setterDocumentation" : "/**<p>Determines the order of the results.</p>\n@param ascendingOrder Determines the order of the results.*/",
          "setterMethodName" : "setAscendingOrder",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "ascendingOrder",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Determines the order of the results.</p>\n@param ascendingOrder Determines the order of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "ascendingOrder",
            "variableType" : "Boolean",
            "documentation" : "<p>Determines the order of the results.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        },
        "Marker" : {
          "c2jName" : "marker",
          "c2jShape" : "Marker",
          "deprecated" : false,
          "documentation" : "<p>The marker for the next set of results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMarker",
          "getterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@return The marker for the next set of results.*/",
          "getterMethodName" : "getMarker",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "marker",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "marker",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Marker",
          "setterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.*/",
          "setterMethodName" : "setMarker",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "marker",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "marker",
            "variableType" : "String",
            "documentation" : "<p>The marker for the next set of results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "PageSize" : {
          "c2jName" : "pageSize",
          "c2jShape" : "PageSize",
          "deprecated" : false,
          "documentation" : "<p>The result page size.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPageSize",
          "getterDocumentation" : "/**<p>The result page size.</p>\n@return The result page size.*/",
          "getterMethodName" : "getPageSize",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "pageSize",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "pageSize",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "PageSize",
          "setterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.*/",
          "setterMethodName" : "setPageSize",
          "setterModel" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "pageSize",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "pageSize",
            "variableType" : "Integer",
            "documentation" : "<p>The result page size.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListCACertificatesRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ListCACertificatesRequest",
        "variableName" : "listCACertificatesRequest",
        "variableType" : "ListCACertificatesRequest",
        "documentation" : null,
        "simpleType" : "ListCACertificatesRequest",
        "variableSetterType" : "ListCACertificatesRequest"
      },
      "wrapper" : false
    },
    "ListCACertificatesResult" : {
      "c2jName" : "ListCACertificatesResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The output from the ListCACertificates operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "certificates",
        "c2jShape" : "CACertificates",
        "deprecated" : false,
        "documentation" : "<p>The CA certificates registered in your AWS account.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The CA certificates registered in your AWS account.</p>\n@param certificates The CA certificates registered in your AWS account.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCertificates",
        "getterDocumentation" : "/**<p>The CA certificates registered in your AWS account.</p>\n@return The CA certificates registered in your AWS account.*/",
        "getterMethodName" : "getCertificates",
        "getterModel" : {
          "returnType" : "java.util.List<CACertificate>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "certificates",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "certificates",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "CACertificate",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "CACertificate",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "CACertificate",
              "variableName" : "member",
              "variableType" : "CACertificate",
              "documentation" : "",
              "simpleType" : "CACertificate",
              "variableSetterType" : "CACertificate"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "CACertificate",
              "variableName" : "member",
              "variableType" : "CACertificate",
              "documentation" : "",
              "simpleType" : "CACertificate",
              "variableSetterType" : "CACertificate"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "CACertificate",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "CACertificate",
          "templateImplType" : "java.util.ArrayList<CACertificate>",
          "templateType" : "java.util.List<CACertificate>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Certificates",
        "setterDocumentation" : "/**<p>The CA certificates registered in your AWS account.</p>\n@param certificates The CA certificates registered in your AWS account.*/",
        "setterMethodName" : "setCertificates",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<CACertificate>",
          "variableName" : "certificates",
          "variableType" : "java.util.List<CACertificate>",
          "documentation" : "",
          "simpleType" : "List<CACertificate>",
          "variableSetterType" : "java.util.Collection<CACertificate>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The CA certificates registered in your AWS account.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setCertificates(java.util.Collection)} or {@link #withCertificates(java.util.Collection)} if you want to override the existing values.</p>\n@param certificates The CA certificates registered in your AWS account.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<CACertificate>",
          "variableName" : "certificates",
          "variableType" : "java.util.List<CACertificate>",
          "documentation" : "<p>The CA certificates registered in your AWS account.</p>",
          "simpleType" : "List<CACertificate>",
          "variableSetterType" : "java.util.Collection<CACertificate>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextMarker",
        "c2jShape" : "Marker",
        "deprecated" : false,
        "documentation" : "<p>The current position within the list of CA certificates.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The current position within the list of CA certificates.</p>\n@param nextMarker The current position within the list of CA certificates.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextMarker",
        "getterDocumentation" : "/**<p>The current position within the list of CA certificates.</p>\n@return The current position within the list of CA certificates.*/",
        "getterMethodName" : "getNextMarker",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextMarker",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextMarker",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextMarker",
        "setterDocumentation" : "/**<p>The current position within the list of CA certificates.</p>\n@param nextMarker The current position within the list of CA certificates.*/",
        "setterMethodName" : "setNextMarker",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextMarker",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The current position within the list of CA certificates.</p>\n@param nextMarker The current position within the list of CA certificates.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextMarker",
          "variableType" : "String",
          "documentation" : "<p>The current position within the list of CA certificates.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Certificates" : {
          "c2jName" : "certificates",
          "c2jShape" : "CACertificates",
          "deprecated" : false,
          "documentation" : "<p>The CA certificates registered in your AWS account.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The CA certificates registered in your AWS account.</p>\n@param certificates The CA certificates registered in your AWS account.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCertificates",
          "getterDocumentation" : "/**<p>The CA certificates registered in your AWS account.</p>\n@return The CA certificates registered in your AWS account.*/",
          "getterMethodName" : "getCertificates",
          "getterModel" : {
            "returnType" : "java.util.List<CACertificate>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "certificates",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "certificates",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "CACertificate",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "CACertificate",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "CACertificate",
                "variableName" : "member",
                "variableType" : "CACertificate",
                "documentation" : "",
                "simpleType" : "CACertificate",
                "variableSetterType" : "CACertificate"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "CACertificate",
                "variableName" : "member",
                "variableType" : "CACertificate",
                "documentation" : "",
                "simpleType" : "CACertificate",
                "variableSetterType" : "CACertificate"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "CACertificate",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "CACertificate",
            "templateImplType" : "java.util.ArrayList<CACertificate>",
            "templateType" : "java.util.List<CACertificate>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Certificates",
          "setterDocumentation" : "/**<p>The CA certificates registered in your AWS account.</p>\n@param certificates The CA certificates registered in your AWS account.*/",
          "setterMethodName" : "setCertificates",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<CACertificate>",
            "variableName" : "certificates",
            "variableType" : "java.util.List<CACertificate>",
            "documentation" : "",
            "simpleType" : "List<CACertificate>",
            "variableSetterType" : "java.util.Collection<CACertificate>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The CA certificates registered in your AWS account.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setCertificates(java.util.Collection)} or {@link #withCertificates(java.util.Collection)} if you want to override the existing values.</p>\n@param certificates The CA certificates registered in your AWS account.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<CACertificate>",
            "variableName" : "certificates",
            "variableType" : "java.util.List<CACertificate>",
            "documentation" : "<p>The CA certificates registered in your AWS account.</p>",
            "simpleType" : "List<CACertificate>",
            "variableSetterType" : "java.util.Collection<CACertificate>"
          },
          "xmlNameSpaceUri" : null
        },
        "NextMarker" : {
          "c2jName" : "nextMarker",
          "c2jShape" : "Marker",
          "deprecated" : false,
          "documentation" : "<p>The current position within the list of CA certificates.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The current position within the list of CA certificates.</p>\n@param nextMarker The current position within the list of CA certificates.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextMarker",
          "getterDocumentation" : "/**<p>The current position within the list of CA certificates.</p>\n@return The current position within the list of CA certificates.*/",
          "getterMethodName" : "getNextMarker",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextMarker",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextMarker",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextMarker",
          "setterDocumentation" : "/**<p>The current position within the list of CA certificates.</p>\n@param nextMarker The current position within the list of CA certificates.*/",
          "setterMethodName" : "setNextMarker",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextMarker",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The current position within the list of CA certificates.</p>\n@param nextMarker The current position within the list of CA certificates.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextMarker",
            "variableType" : "String",
            "documentation" : "<p>The current position within the list of CA certificates.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListCACertificatesResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "ListCACertificatesResult",
        "variableName" : "listCACertificatesResult",
        "variableType" : "ListCACertificatesResult",
        "documentation" : null,
        "simpleType" : "ListCACertificatesResult",
        "variableSetterType" : "ListCACertificatesResult"
      },
      "wrapper" : false
    },
    "ListCertificatesByCARequest" : {
      "c2jName" : "ListCertificatesByCARequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input to the ListCertificatesByCA operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListCertificatesByCA",
        "locationName" : null,
        "requestUri" : "/certificates-by-ca/{caCertificateId}",
        "target" : null,
        "verb" : "GET",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "caCertificateId",
        "c2jShape" : "CertificateId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the CA certificate. This operation will list all registered device certificate that were signed by this CA certificate.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the CA certificate. This operation will list all registered device certificate that were signed by this CA certificate.</p>\n@param caCertificateId The ID of the CA certificate. This operation will list all registered device certificate that were signed by this CA certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCaCertificateId",
        "getterDocumentation" : "/**<p>The ID of the CA certificate. This operation will list all registered device certificate that were signed by this CA certificate.</p>\n@return The ID of the CA certificate. This operation will list all registered device certificate that were signed by this CA certificate.*/",
        "getterMethodName" : "getCaCertificateId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "caCertificateId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "caCertificateId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CaCertificateId",
        "setterDocumentation" : "/**<p>The ID of the CA certificate. This operation will list all registered device certificate that were signed by this CA certificate.</p>\n@param caCertificateId The ID of the CA certificate. This operation will list all registered device certificate that were signed by this CA certificate.*/",
        "setterMethodName" : "setCaCertificateId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "caCertificateId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the CA certificate. This operation will list all registered device certificate that were signed by this CA certificate.</p>\n@param caCertificateId The ID of the CA certificate. This operation will list all registered device certificate that were signed by this CA certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "caCertificateId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the CA certificate. This operation will list all registered device certificate that were signed by this CA certificate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "pageSize",
        "c2jShape" : "PageSize",
        "deprecated" : false,
        "documentation" : "<p>The result page size.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPageSize",
        "getterDocumentation" : "/**<p>The result page size.</p>\n@return The result page size.*/",
        "getterMethodName" : "getPageSize",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "pageSize",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "pageSize",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "PageSize",
        "setterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.*/",
        "setterMethodName" : "setPageSize",
        "setterModel" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "pageSize",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "pageSize",
          "variableType" : "Integer",
          "documentation" : "<p>The result page size.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "marker",
        "c2jShape" : "Marker",
        "deprecated" : false,
        "documentation" : "<p>The marker for the next set of results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMarker",
        "getterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@return The marker for the next set of results.*/",
        "getterMethodName" : "getMarker",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "marker",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "marker",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Marker",
        "setterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.*/",
        "setterMethodName" : "setMarker",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "marker",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "marker",
          "variableType" : "String",
          "documentation" : "<p>The marker for the next set of results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ascendingOrder",
        "c2jShape" : "AscendingOrder",
        "deprecated" : false,
        "documentation" : "<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>\n@param ascendingOrder Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAscendingOrder",
        "getterDocumentation" : "/**<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>\n@return Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.*/",
        "getterMethodName" : "getAscendingOrder",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "isAscendingOrder",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "isAscendingOrder",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "AscendingOrder",
        "setterDocumentation" : "/**<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>\n@param ascendingOrder Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.*/",
        "setterMethodName" : "setAscendingOrder",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "ascendingOrder",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>\n@param ascendingOrder Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "ascendingOrder",
          "variableType" : "Boolean",
          "documentation" : "<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AscendingOrder" : {
          "c2jName" : "ascendingOrder",
          "c2jShape" : "AscendingOrder",
          "deprecated" : false,
          "documentation" : "<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>\n@param ascendingOrder Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAscendingOrder",
          "getterDocumentation" : "/**<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>\n@return Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.*/",
          "getterMethodName" : "getAscendingOrder",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "isAscendingOrder",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "isAscendingOrder",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "AscendingOrder",
          "setterDocumentation" : "/**<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>\n@param ascendingOrder Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.*/",
          "setterMethodName" : "setAscendingOrder",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "ascendingOrder",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>\n@param ascendingOrder Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "ascendingOrder",
            "variableType" : "Boolean",
            "documentation" : "<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        },
        "CaCertificateId" : {
          "c2jName" : "caCertificateId",
          "c2jShape" : "CertificateId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the CA certificate. This operation will list all registered device certificate that were signed by this CA certificate.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the CA certificate. This operation will list all registered device certificate that were signed by this CA certificate.</p>\n@param caCertificateId The ID of the CA certificate. This operation will list all registered device certificate that were signed by this CA certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCaCertificateId",
          "getterDocumentation" : "/**<p>The ID of the CA certificate. This operation will list all registered device certificate that were signed by this CA certificate.</p>\n@return The ID of the CA certificate. This operation will list all registered device certificate that were signed by this CA certificate.*/",
          "getterMethodName" : "getCaCertificateId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "caCertificateId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "caCertificateId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CaCertificateId",
          "setterDocumentation" : "/**<p>The ID of the CA certificate. This operation will list all registered device certificate that were signed by this CA certificate.</p>\n@param caCertificateId The ID of the CA certificate. This operation will list all registered device certificate that were signed by this CA certificate.*/",
          "setterMethodName" : "setCaCertificateId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "caCertificateId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the CA certificate. This operation will list all registered device certificate that were signed by this CA certificate.</p>\n@param caCertificateId The ID of the CA certificate. This operation will list all registered device certificate that were signed by this CA certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "caCertificateId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the CA certificate. This operation will list all registered device certificate that were signed by this CA certificate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Marker" : {
          "c2jName" : "marker",
          "c2jShape" : "Marker",
          "deprecated" : false,
          "documentation" : "<p>The marker for the next set of results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMarker",
          "getterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@return The marker for the next set of results.*/",
          "getterMethodName" : "getMarker",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "marker",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "marker",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Marker",
          "setterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.*/",
          "setterMethodName" : "setMarker",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "marker",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "marker",
            "variableType" : "String",
            "documentation" : "<p>The marker for the next set of results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "PageSize" : {
          "c2jName" : "pageSize",
          "c2jShape" : "PageSize",
          "deprecated" : false,
          "documentation" : "<p>The result page size.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPageSize",
          "getterDocumentation" : "/**<p>The result page size.</p>\n@return The result page size.*/",
          "getterMethodName" : "getPageSize",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "pageSize",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "pageSize",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "PageSize",
          "setterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.*/",
          "setterMethodName" : "setPageSize",
          "setterModel" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "pageSize",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "pageSize",
            "variableType" : "Integer",
            "documentation" : "<p>The result page size.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "caCertificateId" ],
      "shapeName" : "ListCertificatesByCARequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ListCertificatesByCARequest",
        "variableName" : "listCertificatesByCARequest",
        "variableType" : "ListCertificatesByCARequest",
        "documentation" : null,
        "simpleType" : "ListCertificatesByCARequest",
        "variableSetterType" : "ListCertificatesByCARequest"
      },
      "wrapper" : false
    },
    "ListCertificatesByCAResult" : {
      "c2jName" : "ListCertificatesByCAResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The output of the ListCertificatesByCA operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "certificates",
        "c2jShape" : "Certificates",
        "deprecated" : false,
        "documentation" : "<p>The device certificates signed by the specified CA certificate.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The device certificates signed by the specified CA certificate.</p>\n@param certificates The device certificates signed by the specified CA certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCertificates",
        "getterDocumentation" : "/**<p>The device certificates signed by the specified CA certificate.</p>\n@return The device certificates signed by the specified CA certificate.*/",
        "getterMethodName" : "getCertificates",
        "getterModel" : {
          "returnType" : "java.util.List<Certificate>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "certificates",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "certificates",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Certificate",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Certificate",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "Certificate",
              "variableName" : "member",
              "variableType" : "Certificate",
              "documentation" : "",
              "simpleType" : "Certificate",
              "variableSetterType" : "Certificate"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "Certificate",
              "variableName" : "member",
              "variableType" : "Certificate",
              "documentation" : "",
              "simpleType" : "Certificate",
              "variableSetterType" : "Certificate"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Certificate",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Certificate",
          "templateImplType" : "java.util.ArrayList<Certificate>",
          "templateType" : "java.util.List<Certificate>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Certificates",
        "setterDocumentation" : "/**<p>The device certificates signed by the specified CA certificate.</p>\n@param certificates The device certificates signed by the specified CA certificate.*/",
        "setterMethodName" : "setCertificates",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<Certificate>",
          "variableName" : "certificates",
          "variableType" : "java.util.List<Certificate>",
          "documentation" : "",
          "simpleType" : "List<Certificate>",
          "variableSetterType" : "java.util.Collection<Certificate>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The device certificates signed by the specified CA certificate.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setCertificates(java.util.Collection)} or {@link #withCertificates(java.util.Collection)} if you want to override the existing values.</p>\n@param certificates The device certificates signed by the specified CA certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<Certificate>",
          "variableName" : "certificates",
          "variableType" : "java.util.List<Certificate>",
          "documentation" : "<p>The device certificates signed by the specified CA certificate.</p>",
          "simpleType" : "List<Certificate>",
          "variableSetterType" : "java.util.Collection<Certificate>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextMarker",
        "c2jShape" : "Marker",
        "deprecated" : false,
        "documentation" : "<p>The marker for the next set of results, or null if there are no additional results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextMarker",
        "getterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@return The marker for the next set of results, or null if there are no additional results.*/",
        "getterMethodName" : "getNextMarker",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextMarker",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextMarker",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextMarker",
        "setterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.*/",
        "setterMethodName" : "setNextMarker",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextMarker",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextMarker",
          "variableType" : "String",
          "documentation" : "<p>The marker for the next set of results, or null if there are no additional results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Certificates" : {
          "c2jName" : "certificates",
          "c2jShape" : "Certificates",
          "deprecated" : false,
          "documentation" : "<p>The device certificates signed by the specified CA certificate.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The device certificates signed by the specified CA certificate.</p>\n@param certificates The device certificates signed by the specified CA certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCertificates",
          "getterDocumentation" : "/**<p>The device certificates signed by the specified CA certificate.</p>\n@return The device certificates signed by the specified CA certificate.*/",
          "getterMethodName" : "getCertificates",
          "getterModel" : {
            "returnType" : "java.util.List<Certificate>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "certificates",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "certificates",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Certificate",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Certificate",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "Certificate",
                "variableName" : "member",
                "variableType" : "Certificate",
                "documentation" : "",
                "simpleType" : "Certificate",
                "variableSetterType" : "Certificate"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "Certificate",
                "variableName" : "member",
                "variableType" : "Certificate",
                "documentation" : "",
                "simpleType" : "Certificate",
                "variableSetterType" : "Certificate"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Certificate",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Certificate",
            "templateImplType" : "java.util.ArrayList<Certificate>",
            "templateType" : "java.util.List<Certificate>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Certificates",
          "setterDocumentation" : "/**<p>The device certificates signed by the specified CA certificate.</p>\n@param certificates The device certificates signed by the specified CA certificate.*/",
          "setterMethodName" : "setCertificates",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<Certificate>",
            "variableName" : "certificates",
            "variableType" : "java.util.List<Certificate>",
            "documentation" : "",
            "simpleType" : "List<Certificate>",
            "variableSetterType" : "java.util.Collection<Certificate>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The device certificates signed by the specified CA certificate.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setCertificates(java.util.Collection)} or {@link #withCertificates(java.util.Collection)} if you want to override the existing values.</p>\n@param certificates The device certificates signed by the specified CA certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<Certificate>",
            "variableName" : "certificates",
            "variableType" : "java.util.List<Certificate>",
            "documentation" : "<p>The device certificates signed by the specified CA certificate.</p>",
            "simpleType" : "List<Certificate>",
            "variableSetterType" : "java.util.Collection<Certificate>"
          },
          "xmlNameSpaceUri" : null
        },
        "NextMarker" : {
          "c2jName" : "nextMarker",
          "c2jShape" : "Marker",
          "deprecated" : false,
          "documentation" : "<p>The marker for the next set of results, or null if there are no additional results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextMarker",
          "getterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@return The marker for the next set of results, or null if there are no additional results.*/",
          "getterMethodName" : "getNextMarker",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextMarker",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextMarker",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextMarker",
          "setterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.*/",
          "setterMethodName" : "setNextMarker",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextMarker",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextMarker",
            "variableType" : "String",
            "documentation" : "<p>The marker for the next set of results, or null if there are no additional results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListCertificatesByCAResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "ListCertificatesByCAResult",
        "variableName" : "listCertificatesByCAResult",
        "variableType" : "ListCertificatesByCAResult",
        "documentation" : null,
        "simpleType" : "ListCertificatesByCAResult",
        "variableSetterType" : "ListCertificatesByCAResult"
      },
      "wrapper" : false
    },
    "ListCertificatesRequest" : {
      "c2jName" : "ListCertificatesRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the ListCertificates operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListCertificates",
        "locationName" : null,
        "requestUri" : "/certificates",
        "target" : null,
        "verb" : "GET",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "pageSize",
        "c2jShape" : "PageSize",
        "deprecated" : false,
        "documentation" : "<p>The result page size.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPageSize",
        "getterDocumentation" : "/**<p>The result page size.</p>\n@return The result page size.*/",
        "getterMethodName" : "getPageSize",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "pageSize",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "pageSize",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "PageSize",
        "setterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.*/",
        "setterMethodName" : "setPageSize",
        "setterModel" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "pageSize",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "pageSize",
          "variableType" : "Integer",
          "documentation" : "<p>The result page size.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "marker",
        "c2jShape" : "Marker",
        "deprecated" : false,
        "documentation" : "<p>The marker for the next set of results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMarker",
        "getterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@return The marker for the next set of results.*/",
        "getterMethodName" : "getMarker",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "marker",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "marker",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Marker",
        "setterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.*/",
        "setterMethodName" : "setMarker",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "marker",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "marker",
          "variableType" : "String",
          "documentation" : "<p>The marker for the next set of results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ascendingOrder",
        "c2jShape" : "AscendingOrder",
        "deprecated" : false,
        "documentation" : "<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>\n@param ascendingOrder Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAscendingOrder",
        "getterDocumentation" : "/**<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>\n@return Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.*/",
        "getterMethodName" : "getAscendingOrder",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "isAscendingOrder",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "isAscendingOrder",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "AscendingOrder",
        "setterDocumentation" : "/**<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>\n@param ascendingOrder Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.*/",
        "setterMethodName" : "setAscendingOrder",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "ascendingOrder",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>\n@param ascendingOrder Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "ascendingOrder",
          "variableType" : "Boolean",
          "documentation" : "<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AscendingOrder" : {
          "c2jName" : "ascendingOrder",
          "c2jShape" : "AscendingOrder",
          "deprecated" : false,
          "documentation" : "<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>\n@param ascendingOrder Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAscendingOrder",
          "getterDocumentation" : "/**<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>\n@return Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.*/",
          "getterMethodName" : "getAscendingOrder",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "isAscendingOrder",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "isAscendingOrder",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "AscendingOrder",
          "setterDocumentation" : "/**<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>\n@param ascendingOrder Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.*/",
          "setterMethodName" : "setAscendingOrder",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "ascendingOrder",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>\n@param ascendingOrder Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "ascendingOrder",
            "variableType" : "Boolean",
            "documentation" : "<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        },
        "Marker" : {
          "c2jName" : "marker",
          "c2jShape" : "Marker",
          "deprecated" : false,
          "documentation" : "<p>The marker for the next set of results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMarker",
          "getterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@return The marker for the next set of results.*/",
          "getterMethodName" : "getMarker",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "marker",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "marker",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Marker",
          "setterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.*/",
          "setterMethodName" : "setMarker",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "marker",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "marker",
            "variableType" : "String",
            "documentation" : "<p>The marker for the next set of results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "PageSize" : {
          "c2jName" : "pageSize",
          "c2jShape" : "PageSize",
          "deprecated" : false,
          "documentation" : "<p>The result page size.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPageSize",
          "getterDocumentation" : "/**<p>The result page size.</p>\n@return The result page size.*/",
          "getterMethodName" : "getPageSize",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "pageSize",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "pageSize",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "PageSize",
          "setterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.*/",
          "setterMethodName" : "setPageSize",
          "setterModel" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "pageSize",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "pageSize",
            "variableType" : "Integer",
            "documentation" : "<p>The result page size.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListCertificatesRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ListCertificatesRequest",
        "variableName" : "listCertificatesRequest",
        "variableType" : "ListCertificatesRequest",
        "documentation" : null,
        "simpleType" : "ListCertificatesRequest",
        "variableSetterType" : "ListCertificatesRequest"
      },
      "wrapper" : false
    },
    "ListCertificatesResult" : {
      "c2jName" : "ListCertificatesResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The output of the ListCertificates operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "certificates",
        "c2jShape" : "Certificates",
        "deprecated" : false,
        "documentation" : "<p>The descriptions of the certificates.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The descriptions of the certificates.</p>\n@param certificates The descriptions of the certificates.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCertificates",
        "getterDocumentation" : "/**<p>The descriptions of the certificates.</p>\n@return The descriptions of the certificates.*/",
        "getterMethodName" : "getCertificates",
        "getterModel" : {
          "returnType" : "java.util.List<Certificate>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "certificates",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "certificates",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Certificate",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Certificate",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "Certificate",
              "variableName" : "member",
              "variableType" : "Certificate",
              "documentation" : "",
              "simpleType" : "Certificate",
              "variableSetterType" : "Certificate"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "Certificate",
              "variableName" : "member",
              "variableType" : "Certificate",
              "documentation" : "",
              "simpleType" : "Certificate",
              "variableSetterType" : "Certificate"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Certificate",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Certificate",
          "templateImplType" : "java.util.ArrayList<Certificate>",
          "templateType" : "java.util.List<Certificate>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Certificates",
        "setterDocumentation" : "/**<p>The descriptions of the certificates.</p>\n@param certificates The descriptions of the certificates.*/",
        "setterMethodName" : "setCertificates",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<Certificate>",
          "variableName" : "certificates",
          "variableType" : "java.util.List<Certificate>",
          "documentation" : "",
          "simpleType" : "List<Certificate>",
          "variableSetterType" : "java.util.Collection<Certificate>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The descriptions of the certificates.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setCertificates(java.util.Collection)} or {@link #withCertificates(java.util.Collection)} if you want to override the existing values.</p>\n@param certificates The descriptions of the certificates.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<Certificate>",
          "variableName" : "certificates",
          "variableType" : "java.util.List<Certificate>",
          "documentation" : "<p>The descriptions of the certificates.</p>",
          "simpleType" : "List<Certificate>",
          "variableSetterType" : "java.util.Collection<Certificate>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextMarker",
        "c2jShape" : "Marker",
        "deprecated" : false,
        "documentation" : "<p>The marker for the next set of results, or null if there are no additional results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextMarker",
        "getterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@return The marker for the next set of results, or null if there are no additional results.*/",
        "getterMethodName" : "getNextMarker",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextMarker",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextMarker",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextMarker",
        "setterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.*/",
        "setterMethodName" : "setNextMarker",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextMarker",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextMarker",
          "variableType" : "String",
          "documentation" : "<p>The marker for the next set of results, or null if there are no additional results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Certificates" : {
          "c2jName" : "certificates",
          "c2jShape" : "Certificates",
          "deprecated" : false,
          "documentation" : "<p>The descriptions of the certificates.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The descriptions of the certificates.</p>\n@param certificates The descriptions of the certificates.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCertificates",
          "getterDocumentation" : "/**<p>The descriptions of the certificates.</p>\n@return The descriptions of the certificates.*/",
          "getterMethodName" : "getCertificates",
          "getterModel" : {
            "returnType" : "java.util.List<Certificate>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "certificates",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "certificates",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Certificate",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Certificate",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "Certificate",
                "variableName" : "member",
                "variableType" : "Certificate",
                "documentation" : "",
                "simpleType" : "Certificate",
                "variableSetterType" : "Certificate"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "Certificate",
                "variableName" : "member",
                "variableType" : "Certificate",
                "documentation" : "",
                "simpleType" : "Certificate",
                "variableSetterType" : "Certificate"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Certificate",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Certificate",
            "templateImplType" : "java.util.ArrayList<Certificate>",
            "templateType" : "java.util.List<Certificate>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Certificates",
          "setterDocumentation" : "/**<p>The descriptions of the certificates.</p>\n@param certificates The descriptions of the certificates.*/",
          "setterMethodName" : "setCertificates",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<Certificate>",
            "variableName" : "certificates",
            "variableType" : "java.util.List<Certificate>",
            "documentation" : "",
            "simpleType" : "List<Certificate>",
            "variableSetterType" : "java.util.Collection<Certificate>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The descriptions of the certificates.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setCertificates(java.util.Collection)} or {@link #withCertificates(java.util.Collection)} if you want to override the existing values.</p>\n@param certificates The descriptions of the certificates.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<Certificate>",
            "variableName" : "certificates",
            "variableType" : "java.util.List<Certificate>",
            "documentation" : "<p>The descriptions of the certificates.</p>",
            "simpleType" : "List<Certificate>",
            "variableSetterType" : "java.util.Collection<Certificate>"
          },
          "xmlNameSpaceUri" : null
        },
        "NextMarker" : {
          "c2jName" : "nextMarker",
          "c2jShape" : "Marker",
          "deprecated" : false,
          "documentation" : "<p>The marker for the next set of results, or null if there are no additional results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextMarker",
          "getterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@return The marker for the next set of results, or null if there are no additional results.*/",
          "getterMethodName" : "getNextMarker",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextMarker",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextMarker",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextMarker",
          "setterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.*/",
          "setterMethodName" : "setNextMarker",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextMarker",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextMarker",
            "variableType" : "String",
            "documentation" : "<p>The marker for the next set of results, or null if there are no additional results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListCertificatesResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "ListCertificatesResult",
        "variableName" : "listCertificatesResult",
        "variableType" : "ListCertificatesResult",
        "documentation" : null,
        "simpleType" : "ListCertificatesResult",
        "variableSetterType" : "ListCertificatesResult"
      },
      "wrapper" : false
    },
    "ListOutgoingCertificatesRequest" : {
      "c2jName" : "ListOutgoingCertificatesRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input to the ListOutgoingCertificates operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListOutgoingCertificates",
        "locationName" : null,
        "requestUri" : "/certificates-out-going",
        "target" : null,
        "verb" : "GET",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "pageSize",
        "c2jShape" : "PageSize",
        "deprecated" : false,
        "documentation" : "<p>The result page size.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPageSize",
        "getterDocumentation" : "/**<p>The result page size.</p>\n@return The result page size.*/",
        "getterMethodName" : "getPageSize",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "pageSize",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "pageSize",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "PageSize",
        "setterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.*/",
        "setterMethodName" : "setPageSize",
        "setterModel" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "pageSize",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "pageSize",
          "variableType" : "Integer",
          "documentation" : "<p>The result page size.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "marker",
        "c2jShape" : "Marker",
        "deprecated" : false,
        "documentation" : "<p>The marker for the next set of results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMarker",
        "getterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@return The marker for the next set of results.*/",
        "getterMethodName" : "getMarker",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "marker",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "marker",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Marker",
        "setterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.*/",
        "setterMethodName" : "setMarker",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "marker",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "marker",
          "variableType" : "String",
          "documentation" : "<p>The marker for the next set of results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ascendingOrder",
        "c2jShape" : "AscendingOrder",
        "deprecated" : false,
        "documentation" : "<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>\n@param ascendingOrder Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAscendingOrder",
        "getterDocumentation" : "/**<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>\n@return Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.*/",
        "getterMethodName" : "getAscendingOrder",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "isAscendingOrder",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "isAscendingOrder",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "AscendingOrder",
        "setterDocumentation" : "/**<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>\n@param ascendingOrder Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.*/",
        "setterMethodName" : "setAscendingOrder",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "ascendingOrder",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>\n@param ascendingOrder Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "ascendingOrder",
          "variableType" : "Boolean",
          "documentation" : "<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AscendingOrder" : {
          "c2jName" : "ascendingOrder",
          "c2jShape" : "AscendingOrder",
          "deprecated" : false,
          "documentation" : "<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>\n@param ascendingOrder Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAscendingOrder",
          "getterDocumentation" : "/**<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>\n@return Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.*/",
          "getterMethodName" : "getAscendingOrder",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "isAscendingOrder",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "isAscendingOrder",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "AscendingOrder",
          "setterDocumentation" : "/**<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>\n@param ascendingOrder Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.*/",
          "setterMethodName" : "setAscendingOrder",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "ascendingOrder",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>\n@param ascendingOrder Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "ascendingOrder",
            "variableType" : "Boolean",
            "documentation" : "<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        },
        "Marker" : {
          "c2jName" : "marker",
          "c2jShape" : "Marker",
          "deprecated" : false,
          "documentation" : "<p>The marker for the next set of results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMarker",
          "getterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@return The marker for the next set of results.*/",
          "getterMethodName" : "getMarker",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "marker",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "marker",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Marker",
          "setterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.*/",
          "setterMethodName" : "setMarker",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "marker",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "marker",
            "variableType" : "String",
            "documentation" : "<p>The marker for the next set of results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "PageSize" : {
          "c2jName" : "pageSize",
          "c2jShape" : "PageSize",
          "deprecated" : false,
          "documentation" : "<p>The result page size.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPageSize",
          "getterDocumentation" : "/**<p>The result page size.</p>\n@return The result page size.*/",
          "getterMethodName" : "getPageSize",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "pageSize",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "pageSize",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "PageSize",
          "setterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.*/",
          "setterMethodName" : "setPageSize",
          "setterModel" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "pageSize",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "pageSize",
            "variableType" : "Integer",
            "documentation" : "<p>The result page size.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListOutgoingCertificatesRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ListOutgoingCertificatesRequest",
        "variableName" : "listOutgoingCertificatesRequest",
        "variableType" : "ListOutgoingCertificatesRequest",
        "documentation" : null,
        "simpleType" : "ListOutgoingCertificatesRequest",
        "variableSetterType" : "ListOutgoingCertificatesRequest"
      },
      "wrapper" : false
    },
    "ListOutgoingCertificatesResult" : {
      "c2jName" : "ListOutgoingCertificatesResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The output from the ListOutgoingCertificates operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "outgoingCertificates",
        "c2jShape" : "OutgoingCertificates",
        "deprecated" : false,
        "documentation" : "<p>The certificates that are being transfered but not yet accepted.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The certificates that are being transfered but not yet accepted.</p>\n@param outgoingCertificates The certificates that are being transfered but not yet accepted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withOutgoingCertificates",
        "getterDocumentation" : "/**<p>The certificates that are being transfered but not yet accepted.</p>\n@return The certificates that are being transfered but not yet accepted.*/",
        "getterMethodName" : "getOutgoingCertificates",
        "getterModel" : {
          "returnType" : "java.util.List<OutgoingCertificate>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "outgoingCertificates",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "outgoingCertificates",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "OutgoingCertificate",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "OutgoingCertificate",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "OutgoingCertificate",
              "variableName" : "member",
              "variableType" : "OutgoingCertificate",
              "documentation" : "",
              "simpleType" : "OutgoingCertificate",
              "variableSetterType" : "OutgoingCertificate"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "OutgoingCertificate",
              "variableName" : "member",
              "variableType" : "OutgoingCertificate",
              "documentation" : "",
              "simpleType" : "OutgoingCertificate",
              "variableSetterType" : "OutgoingCertificate"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "OutgoingCertificate",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "OutgoingCertificate",
          "templateImplType" : "java.util.ArrayList<OutgoingCertificate>",
          "templateType" : "java.util.List<OutgoingCertificate>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "OutgoingCertificates",
        "setterDocumentation" : "/**<p>The certificates that are being transfered but not yet accepted.</p>\n@param outgoingCertificates The certificates that are being transfered but not yet accepted.*/",
        "setterMethodName" : "setOutgoingCertificates",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<OutgoingCertificate>",
          "variableName" : "outgoingCertificates",
          "variableType" : "java.util.List<OutgoingCertificate>",
          "documentation" : "",
          "simpleType" : "List<OutgoingCertificate>",
          "variableSetterType" : "java.util.Collection<OutgoingCertificate>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The certificates that are being transfered but not yet accepted.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setOutgoingCertificates(java.util.Collection)} or {@link #withOutgoingCertificates(java.util.Collection)} if you want to override the existing values.</p>\n@param outgoingCertificates The certificates that are being transfered but not yet accepted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<OutgoingCertificate>",
          "variableName" : "outgoingCertificates",
          "variableType" : "java.util.List<OutgoingCertificate>",
          "documentation" : "<p>The certificates that are being transfered but not yet accepted.</p>",
          "simpleType" : "List<OutgoingCertificate>",
          "variableSetterType" : "java.util.Collection<OutgoingCertificate>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextMarker",
        "c2jShape" : "Marker",
        "deprecated" : false,
        "documentation" : "<p>The marker for the next set of results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param nextMarker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextMarker",
        "getterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@return The marker for the next set of results.*/",
        "getterMethodName" : "getNextMarker",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextMarker",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextMarker",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextMarker",
        "setterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param nextMarker The marker for the next set of results.*/",
        "setterMethodName" : "setNextMarker",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextMarker",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param nextMarker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextMarker",
          "variableType" : "String",
          "documentation" : "<p>The marker for the next set of results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "NextMarker" : {
          "c2jName" : "nextMarker",
          "c2jShape" : "Marker",
          "deprecated" : false,
          "documentation" : "<p>The marker for the next set of results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param nextMarker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextMarker",
          "getterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@return The marker for the next set of results.*/",
          "getterMethodName" : "getNextMarker",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextMarker",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextMarker",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextMarker",
          "setterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param nextMarker The marker for the next set of results.*/",
          "setterMethodName" : "setNextMarker",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextMarker",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param nextMarker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextMarker",
            "variableType" : "String",
            "documentation" : "<p>The marker for the next set of results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "OutgoingCertificates" : {
          "c2jName" : "outgoingCertificates",
          "c2jShape" : "OutgoingCertificates",
          "deprecated" : false,
          "documentation" : "<p>The certificates that are being transfered but not yet accepted.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The certificates that are being transfered but not yet accepted.</p>\n@param outgoingCertificates The certificates that are being transfered but not yet accepted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withOutgoingCertificates",
          "getterDocumentation" : "/**<p>The certificates that are being transfered but not yet accepted.</p>\n@return The certificates that are being transfered but not yet accepted.*/",
          "getterMethodName" : "getOutgoingCertificates",
          "getterModel" : {
            "returnType" : "java.util.List<OutgoingCertificate>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "outgoingCertificates",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "outgoingCertificates",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "OutgoingCertificate",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "OutgoingCertificate",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "OutgoingCertificate",
                "variableName" : "member",
                "variableType" : "OutgoingCertificate",
                "documentation" : "",
                "simpleType" : "OutgoingCertificate",
                "variableSetterType" : "OutgoingCertificate"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "OutgoingCertificate",
                "variableName" : "member",
                "variableType" : "OutgoingCertificate",
                "documentation" : "",
                "simpleType" : "OutgoingCertificate",
                "variableSetterType" : "OutgoingCertificate"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "OutgoingCertificate",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "OutgoingCertificate",
            "templateImplType" : "java.util.ArrayList<OutgoingCertificate>",
            "templateType" : "java.util.List<OutgoingCertificate>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "OutgoingCertificates",
          "setterDocumentation" : "/**<p>The certificates that are being transfered but not yet accepted.</p>\n@param outgoingCertificates The certificates that are being transfered but not yet accepted.*/",
          "setterMethodName" : "setOutgoingCertificates",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<OutgoingCertificate>",
            "variableName" : "outgoingCertificates",
            "variableType" : "java.util.List<OutgoingCertificate>",
            "documentation" : "",
            "simpleType" : "List<OutgoingCertificate>",
            "variableSetterType" : "java.util.Collection<OutgoingCertificate>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The certificates that are being transfered but not yet accepted.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setOutgoingCertificates(java.util.Collection)} or {@link #withOutgoingCertificates(java.util.Collection)} if you want to override the existing values.</p>\n@param outgoingCertificates The certificates that are being transfered but not yet accepted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<OutgoingCertificate>",
            "variableName" : "outgoingCertificates",
            "variableType" : "java.util.List<OutgoingCertificate>",
            "documentation" : "<p>The certificates that are being transfered but not yet accepted.</p>",
            "simpleType" : "List<OutgoingCertificate>",
            "variableSetterType" : "java.util.Collection<OutgoingCertificate>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListOutgoingCertificatesResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "ListOutgoingCertificatesResult",
        "variableName" : "listOutgoingCertificatesResult",
        "variableType" : "ListOutgoingCertificatesResult",
        "documentation" : null,
        "simpleType" : "ListOutgoingCertificatesResult",
        "variableSetterType" : "ListOutgoingCertificatesResult"
      },
      "wrapper" : false
    },
    "ListPoliciesRequest" : {
      "c2jName" : "ListPoliciesRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the ListPolicies operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListPolicies",
        "locationName" : null,
        "requestUri" : "/policies",
        "target" : null,
        "verb" : "GET",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "marker",
        "c2jShape" : "Marker",
        "deprecated" : false,
        "documentation" : "<p>The marker for the next set of results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMarker",
        "getterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@return The marker for the next set of results.*/",
        "getterMethodName" : "getMarker",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "marker",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "marker",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Marker",
        "setterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.*/",
        "setterMethodName" : "setMarker",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "marker",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "marker",
          "variableType" : "String",
          "documentation" : "<p>The marker for the next set of results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "pageSize",
        "c2jShape" : "PageSize",
        "deprecated" : false,
        "documentation" : "<p>The result page size.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPageSize",
        "getterDocumentation" : "/**<p>The result page size.</p>\n@return The result page size.*/",
        "getterMethodName" : "getPageSize",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "pageSize",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "pageSize",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "PageSize",
        "setterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.*/",
        "setterMethodName" : "setPageSize",
        "setterModel" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "pageSize",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "pageSize",
          "variableType" : "Integer",
          "documentation" : "<p>The result page size.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ascendingOrder",
        "c2jShape" : "AscendingOrder",
        "deprecated" : false,
        "documentation" : "<p>Specifies the order for results. If true, the results are returned in ascending creation order.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Specifies the order for results. If true, the results are returned in ascending creation order.</p>\n@param ascendingOrder Specifies the order for results. If true, the results are returned in ascending creation order.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAscendingOrder",
        "getterDocumentation" : "/**<p>Specifies the order for results. If true, the results are returned in ascending creation order.</p>\n@return Specifies the order for results. If true, the results are returned in ascending creation order.*/",
        "getterMethodName" : "getAscendingOrder",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "isAscendingOrder",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "isAscendingOrder",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "AscendingOrder",
        "setterDocumentation" : "/**<p>Specifies the order for results. If true, the results are returned in ascending creation order.</p>\n@param ascendingOrder Specifies the order for results. If true, the results are returned in ascending creation order.*/",
        "setterMethodName" : "setAscendingOrder",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "ascendingOrder",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Specifies the order for results. If true, the results are returned in ascending creation order.</p>\n@param ascendingOrder Specifies the order for results. If true, the results are returned in ascending creation order.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "ascendingOrder",
          "variableType" : "Boolean",
          "documentation" : "<p>Specifies the order for results. If true, the results are returned in ascending creation order.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AscendingOrder" : {
          "c2jName" : "ascendingOrder",
          "c2jShape" : "AscendingOrder",
          "deprecated" : false,
          "documentation" : "<p>Specifies the order for results. If true, the results are returned in ascending creation order.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Specifies the order for results. If true, the results are returned in ascending creation order.</p>\n@param ascendingOrder Specifies the order for results. If true, the results are returned in ascending creation order.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAscendingOrder",
          "getterDocumentation" : "/**<p>Specifies the order for results. If true, the results are returned in ascending creation order.</p>\n@return Specifies the order for results. If true, the results are returned in ascending creation order.*/",
          "getterMethodName" : "getAscendingOrder",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "isAscendingOrder",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "isAscendingOrder",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "AscendingOrder",
          "setterDocumentation" : "/**<p>Specifies the order for results. If true, the results are returned in ascending creation order.</p>\n@param ascendingOrder Specifies the order for results. If true, the results are returned in ascending creation order.*/",
          "setterMethodName" : "setAscendingOrder",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "ascendingOrder",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Specifies the order for results. If true, the results are returned in ascending creation order.</p>\n@param ascendingOrder Specifies the order for results. If true, the results are returned in ascending creation order.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "ascendingOrder",
            "variableType" : "Boolean",
            "documentation" : "<p>Specifies the order for results. If true, the results are returned in ascending creation order.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        },
        "Marker" : {
          "c2jName" : "marker",
          "c2jShape" : "Marker",
          "deprecated" : false,
          "documentation" : "<p>The marker for the next set of results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMarker",
          "getterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@return The marker for the next set of results.*/",
          "getterMethodName" : "getMarker",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "marker",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "marker",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Marker",
          "setterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.*/",
          "setterMethodName" : "setMarker",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "marker",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "marker",
            "variableType" : "String",
            "documentation" : "<p>The marker for the next set of results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "PageSize" : {
          "c2jName" : "pageSize",
          "c2jShape" : "PageSize",
          "deprecated" : false,
          "documentation" : "<p>The result page size.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPageSize",
          "getterDocumentation" : "/**<p>The result page size.</p>\n@return The result page size.*/",
          "getterMethodName" : "getPageSize",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "pageSize",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "pageSize",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "PageSize",
          "setterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.*/",
          "setterMethodName" : "setPageSize",
          "setterModel" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "pageSize",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "pageSize",
            "variableType" : "Integer",
            "documentation" : "<p>The result page size.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListPoliciesRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ListPoliciesRequest",
        "variableName" : "listPoliciesRequest",
        "variableType" : "ListPoliciesRequest",
        "documentation" : null,
        "simpleType" : "ListPoliciesRequest",
        "variableSetterType" : "ListPoliciesRequest"
      },
      "wrapper" : false
    },
    "ListPoliciesResult" : {
      "c2jName" : "ListPoliciesResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The output from the ListPolicies operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "policies",
        "c2jShape" : "Policies",
        "deprecated" : false,
        "documentation" : "<p>The descriptions of the policies.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The descriptions of the policies.</p>\n@param policies The descriptions of the policies.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicies",
        "getterDocumentation" : "/**<p>The descriptions of the policies.</p>\n@return The descriptions of the policies.*/",
        "getterMethodName" : "getPolicies",
        "getterModel" : {
          "returnType" : "java.util.List<Policy>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "policies",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "policies",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Policy",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Policy",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "Policy",
              "variableName" : "member",
              "variableType" : "Policy",
              "documentation" : "",
              "simpleType" : "Policy",
              "variableSetterType" : "Policy"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "Policy",
              "variableName" : "member",
              "variableType" : "Policy",
              "documentation" : "",
              "simpleType" : "Policy",
              "variableSetterType" : "Policy"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Policy",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Policy",
          "templateImplType" : "java.util.ArrayList<Policy>",
          "templateType" : "java.util.List<Policy>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Policies",
        "setterDocumentation" : "/**<p>The descriptions of the policies.</p>\n@param policies The descriptions of the policies.*/",
        "setterMethodName" : "setPolicies",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<Policy>",
          "variableName" : "policies",
          "variableType" : "java.util.List<Policy>",
          "documentation" : "",
          "simpleType" : "List<Policy>",
          "variableSetterType" : "java.util.Collection<Policy>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The descriptions of the policies.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setPolicies(java.util.Collection)} or {@link #withPolicies(java.util.Collection)} if you want to override the existing values.</p>\n@param policies The descriptions of the policies.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<Policy>",
          "variableName" : "policies",
          "variableType" : "java.util.List<Policy>",
          "documentation" : "<p>The descriptions of the policies.</p>",
          "simpleType" : "List<Policy>",
          "variableSetterType" : "java.util.Collection<Policy>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextMarker",
        "c2jShape" : "Marker",
        "deprecated" : false,
        "documentation" : "<p>The marker for the next set of results, or null if there are no additional results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextMarker",
        "getterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@return The marker for the next set of results, or null if there are no additional results.*/",
        "getterMethodName" : "getNextMarker",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextMarker",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextMarker",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextMarker",
        "setterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.*/",
        "setterMethodName" : "setNextMarker",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextMarker",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextMarker",
          "variableType" : "String",
          "documentation" : "<p>The marker for the next set of results, or null if there are no additional results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "NextMarker" : {
          "c2jName" : "nextMarker",
          "c2jShape" : "Marker",
          "deprecated" : false,
          "documentation" : "<p>The marker for the next set of results, or null if there are no additional results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextMarker",
          "getterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@return The marker for the next set of results, or null if there are no additional results.*/",
          "getterMethodName" : "getNextMarker",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextMarker",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextMarker",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextMarker",
          "setterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.*/",
          "setterMethodName" : "setNextMarker",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextMarker",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextMarker",
            "variableType" : "String",
            "documentation" : "<p>The marker for the next set of results, or null if there are no additional results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Policies" : {
          "c2jName" : "policies",
          "c2jShape" : "Policies",
          "deprecated" : false,
          "documentation" : "<p>The descriptions of the policies.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The descriptions of the policies.</p>\n@param policies The descriptions of the policies.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicies",
          "getterDocumentation" : "/**<p>The descriptions of the policies.</p>\n@return The descriptions of the policies.*/",
          "getterMethodName" : "getPolicies",
          "getterModel" : {
            "returnType" : "java.util.List<Policy>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "policies",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "policies",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Policy",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Policy",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "Policy",
                "variableName" : "member",
                "variableType" : "Policy",
                "documentation" : "",
                "simpleType" : "Policy",
                "variableSetterType" : "Policy"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "Policy",
                "variableName" : "member",
                "variableType" : "Policy",
                "documentation" : "",
                "simpleType" : "Policy",
                "variableSetterType" : "Policy"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Policy",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Policy",
            "templateImplType" : "java.util.ArrayList<Policy>",
            "templateType" : "java.util.List<Policy>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Policies",
          "setterDocumentation" : "/**<p>The descriptions of the policies.</p>\n@param policies The descriptions of the policies.*/",
          "setterMethodName" : "setPolicies",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<Policy>",
            "variableName" : "policies",
            "variableType" : "java.util.List<Policy>",
            "documentation" : "",
            "simpleType" : "List<Policy>",
            "variableSetterType" : "java.util.Collection<Policy>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The descriptions of the policies.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setPolicies(java.util.Collection)} or {@link #withPolicies(java.util.Collection)} if you want to override the existing values.</p>\n@param policies The descriptions of the policies.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<Policy>",
            "variableName" : "policies",
            "variableType" : "java.util.List<Policy>",
            "documentation" : "<p>The descriptions of the policies.</p>",
            "simpleType" : "List<Policy>",
            "variableSetterType" : "java.util.Collection<Policy>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListPoliciesResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "ListPoliciesResult",
        "variableName" : "listPoliciesResult",
        "variableType" : "ListPoliciesResult",
        "documentation" : null,
        "simpleType" : "ListPoliciesResult",
        "variableSetterType" : "ListPoliciesResult"
      },
      "wrapper" : false
    },
    "ListPolicyPrincipalsRequest" : {
      "c2jName" : "ListPolicyPrincipalsRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the ListPolicyPrincipals operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : true,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListPolicyPrincipals",
        "locationName" : null,
        "requestUri" : "/policy-principals",
        "target" : null,
        "verb" : "GET",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "policyName",
        "c2jShape" : "PolicyName",
        "deprecated" : false,
        "documentation" : "<p>The policy name.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicyName",
        "getterDocumentation" : "/**<p>The policy name.</p>\n@return The policy name.*/",
        "getterMethodName" : "getPolicyName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "x-amzn-iot-policy",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "x-amzn-iot-policy",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PolicyName",
        "setterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.*/",
        "setterMethodName" : "setPolicyName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyName",
          "variableType" : "String",
          "documentation" : "<p>The policy name.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "marker",
        "c2jShape" : "Marker",
        "deprecated" : false,
        "documentation" : "<p>The marker for the next set of results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMarker",
        "getterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@return The marker for the next set of results.*/",
        "getterMethodName" : "getMarker",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "marker",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "marker",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Marker",
        "setterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.*/",
        "setterMethodName" : "setMarker",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "marker",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "marker",
          "variableType" : "String",
          "documentation" : "<p>The marker for the next set of results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "pageSize",
        "c2jShape" : "PageSize",
        "deprecated" : false,
        "documentation" : "<p>The result page size.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPageSize",
        "getterDocumentation" : "/**<p>The result page size.</p>\n@return The result page size.*/",
        "getterMethodName" : "getPageSize",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "pageSize",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "pageSize",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "PageSize",
        "setterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.*/",
        "setterMethodName" : "setPageSize",
        "setterModel" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "pageSize",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "pageSize",
          "variableType" : "Integer",
          "documentation" : "<p>The result page size.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ascendingOrder",
        "c2jShape" : "AscendingOrder",
        "deprecated" : false,
        "documentation" : "<p>Specifies the order for results. If true, the results are returned in ascending creation order.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Specifies the order for results. If true, the results are returned in ascending creation order.</p>\n@param ascendingOrder Specifies the order for results. If true, the results are returned in ascending creation order.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAscendingOrder",
        "getterDocumentation" : "/**<p>Specifies the order for results. If true, the results are returned in ascending creation order.</p>\n@return Specifies the order for results. If true, the results are returned in ascending creation order.*/",
        "getterMethodName" : "getAscendingOrder",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "isAscendingOrder",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "isAscendingOrder",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "AscendingOrder",
        "setterDocumentation" : "/**<p>Specifies the order for results. If true, the results are returned in ascending creation order.</p>\n@param ascendingOrder Specifies the order for results. If true, the results are returned in ascending creation order.*/",
        "setterMethodName" : "setAscendingOrder",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "ascendingOrder",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Specifies the order for results. If true, the results are returned in ascending creation order.</p>\n@param ascendingOrder Specifies the order for results. If true, the results are returned in ascending creation order.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "ascendingOrder",
          "variableType" : "Boolean",
          "documentation" : "<p>Specifies the order for results. If true, the results are returned in ascending creation order.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AscendingOrder" : {
          "c2jName" : "ascendingOrder",
          "c2jShape" : "AscendingOrder",
          "deprecated" : false,
          "documentation" : "<p>Specifies the order for results. If true, the results are returned in ascending creation order.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Specifies the order for results. If true, the results are returned in ascending creation order.</p>\n@param ascendingOrder Specifies the order for results. If true, the results are returned in ascending creation order.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAscendingOrder",
          "getterDocumentation" : "/**<p>Specifies the order for results. If true, the results are returned in ascending creation order.</p>\n@return Specifies the order for results. If true, the results are returned in ascending creation order.*/",
          "getterMethodName" : "getAscendingOrder",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "isAscendingOrder",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "isAscendingOrder",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "AscendingOrder",
          "setterDocumentation" : "/**<p>Specifies the order for results. If true, the results are returned in ascending creation order.</p>\n@param ascendingOrder Specifies the order for results. If true, the results are returned in ascending creation order.*/",
          "setterMethodName" : "setAscendingOrder",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "ascendingOrder",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Specifies the order for results. If true, the results are returned in ascending creation order.</p>\n@param ascendingOrder Specifies the order for results. If true, the results are returned in ascending creation order.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "ascendingOrder",
            "variableType" : "Boolean",
            "documentation" : "<p>Specifies the order for results. If true, the results are returned in ascending creation order.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        },
        "Marker" : {
          "c2jName" : "marker",
          "c2jShape" : "Marker",
          "deprecated" : false,
          "documentation" : "<p>The marker for the next set of results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMarker",
          "getterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@return The marker for the next set of results.*/",
          "getterMethodName" : "getMarker",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "marker",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "marker",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Marker",
          "setterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.*/",
          "setterMethodName" : "setMarker",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "marker",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "marker",
            "variableType" : "String",
            "documentation" : "<p>The marker for the next set of results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "PageSize" : {
          "c2jName" : "pageSize",
          "c2jShape" : "PageSize",
          "deprecated" : false,
          "documentation" : "<p>The result page size.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPageSize",
          "getterDocumentation" : "/**<p>The result page size.</p>\n@return The result page size.*/",
          "getterMethodName" : "getPageSize",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "pageSize",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "pageSize",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "PageSize",
          "setterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.*/",
          "setterMethodName" : "setPageSize",
          "setterModel" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "pageSize",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "pageSize",
            "variableType" : "Integer",
            "documentation" : "<p>The result page size.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "PolicyName" : {
          "c2jName" : "policyName",
          "c2jShape" : "PolicyName",
          "deprecated" : false,
          "documentation" : "<p>The policy name.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicyName",
          "getterDocumentation" : "/**<p>The policy name.</p>\n@return The policy name.*/",
          "getterMethodName" : "getPolicyName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "x-amzn-iot-policy",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "x-amzn-iot-policy",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PolicyName",
          "setterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.*/",
          "setterMethodName" : "setPolicyName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyName",
            "variableType" : "String",
            "documentation" : "<p>The policy name.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "policyName" ],
      "shapeName" : "ListPolicyPrincipalsRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ListPolicyPrincipalsRequest",
        "variableName" : "listPolicyPrincipalsRequest",
        "variableType" : "ListPolicyPrincipalsRequest",
        "documentation" : null,
        "simpleType" : "ListPolicyPrincipalsRequest",
        "variableSetterType" : "ListPolicyPrincipalsRequest"
      },
      "wrapper" : false
    },
    "ListPolicyPrincipalsResult" : {
      "c2jName" : "ListPolicyPrincipalsResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The output from the ListPolicyPrincipals operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "principals",
        "c2jShape" : "Principals",
        "deprecated" : false,
        "documentation" : "<p>The descriptions of the principals.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The descriptions of the principals.</p>\n@param principals The descriptions of the principals.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPrincipals",
        "getterDocumentation" : "/**<p>The descriptions of the principals.</p>\n@return The descriptions of the principals.*/",
        "getterMethodName" : "getPrincipals",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "principals",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "principals",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "PrincipalArn",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Principals",
        "setterDocumentation" : "/**<p>The descriptions of the principals.</p>\n@param principals The descriptions of the principals.*/",
        "setterMethodName" : "setPrincipals",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "principals",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The descriptions of the principals.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setPrincipals(java.util.Collection)} or {@link #withPrincipals(java.util.Collection)} if you want to override the existing values.</p>\n@param principals The descriptions of the principals.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "principals",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>The descriptions of the principals.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextMarker",
        "c2jShape" : "Marker",
        "deprecated" : false,
        "documentation" : "<p>The marker for the next set of results, or null if there are no additional results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextMarker",
        "getterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@return The marker for the next set of results, or null if there are no additional results.*/",
        "getterMethodName" : "getNextMarker",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextMarker",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextMarker",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextMarker",
        "setterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.*/",
        "setterMethodName" : "setNextMarker",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextMarker",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextMarker",
          "variableType" : "String",
          "documentation" : "<p>The marker for the next set of results, or null if there are no additional results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "NextMarker" : {
          "c2jName" : "nextMarker",
          "c2jShape" : "Marker",
          "deprecated" : false,
          "documentation" : "<p>The marker for the next set of results, or null if there are no additional results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextMarker",
          "getterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@return The marker for the next set of results, or null if there are no additional results.*/",
          "getterMethodName" : "getNextMarker",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextMarker",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextMarker",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextMarker",
          "setterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.*/",
          "setterMethodName" : "setNextMarker",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextMarker",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextMarker",
            "variableType" : "String",
            "documentation" : "<p>The marker for the next set of results, or null if there are no additional results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Principals" : {
          "c2jName" : "principals",
          "c2jShape" : "Principals",
          "deprecated" : false,
          "documentation" : "<p>The descriptions of the principals.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The descriptions of the principals.</p>\n@param principals The descriptions of the principals.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPrincipals",
          "getterDocumentation" : "/**<p>The descriptions of the principals.</p>\n@return The descriptions of the principals.*/",
          "getterMethodName" : "getPrincipals",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "principals",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "principals",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "PrincipalArn",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Principals",
          "setterDocumentation" : "/**<p>The descriptions of the principals.</p>\n@param principals The descriptions of the principals.*/",
          "setterMethodName" : "setPrincipals",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "principals",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The descriptions of the principals.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setPrincipals(java.util.Collection)} or {@link #withPrincipals(java.util.Collection)} if you want to override the existing values.</p>\n@param principals The descriptions of the principals.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "principals",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>The descriptions of the principals.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListPolicyPrincipalsResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "ListPolicyPrincipalsResult",
        "variableName" : "listPolicyPrincipalsResult",
        "variableType" : "ListPolicyPrincipalsResult",
        "documentation" : null,
        "simpleType" : "ListPolicyPrincipalsResult",
        "variableSetterType" : "ListPolicyPrincipalsResult"
      },
      "wrapper" : false
    },
    "ListPolicyVersionsRequest" : {
      "c2jName" : "ListPolicyVersionsRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the ListPolicyVersions operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListPolicyVersions",
        "locationName" : null,
        "requestUri" : "/policies/{policyName}/version",
        "target" : null,
        "verb" : "GET",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "policyName",
        "c2jShape" : "PolicyName",
        "deprecated" : false,
        "documentation" : "<p>The policy name.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicyName",
        "getterDocumentation" : "/**<p>The policy name.</p>\n@return The policy name.*/",
        "getterMethodName" : "getPolicyName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "policyName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "policyName",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PolicyName",
        "setterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.*/",
        "setterMethodName" : "setPolicyName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyName",
          "variableType" : "String",
          "documentation" : "<p>The policy name.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "PolicyName" : {
          "c2jName" : "policyName",
          "c2jShape" : "PolicyName",
          "deprecated" : false,
          "documentation" : "<p>The policy name.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicyName",
          "getterDocumentation" : "/**<p>The policy name.</p>\n@return The policy name.*/",
          "getterMethodName" : "getPolicyName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "policyName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "policyName",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PolicyName",
          "setterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.*/",
          "setterMethodName" : "setPolicyName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyName",
            "variableType" : "String",
            "documentation" : "<p>The policy name.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "policyName" ],
      "shapeName" : "ListPolicyVersionsRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ListPolicyVersionsRequest",
        "variableName" : "listPolicyVersionsRequest",
        "variableType" : "ListPolicyVersionsRequest",
        "documentation" : null,
        "simpleType" : "ListPolicyVersionsRequest",
        "variableSetterType" : "ListPolicyVersionsRequest"
      },
      "wrapper" : false
    },
    "ListPolicyVersionsResult" : {
      "c2jName" : "ListPolicyVersionsResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The output from the ListPolicyVersions operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "policyVersions",
        "c2jShape" : "PolicyVersions",
        "deprecated" : false,
        "documentation" : "<p>The policy versions.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The policy versions.</p>\n@param policyVersions The policy versions.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicyVersions",
        "getterDocumentation" : "/**<p>The policy versions.</p>\n@return The policy versions.*/",
        "getterMethodName" : "getPolicyVersions",
        "getterModel" : {
          "returnType" : "java.util.List<PolicyVersion>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "policyVersions",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "policyVersions",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "PolicyVersion",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "PolicyVersion",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "PolicyVersion",
              "variableName" : "member",
              "variableType" : "PolicyVersion",
              "documentation" : "",
              "simpleType" : "PolicyVersion",
              "variableSetterType" : "PolicyVersion"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "PolicyVersion",
              "variableName" : "member",
              "variableType" : "PolicyVersion",
              "documentation" : "",
              "simpleType" : "PolicyVersion",
              "variableSetterType" : "PolicyVersion"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "PolicyVersion",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "PolicyVersion",
          "templateImplType" : "java.util.ArrayList<PolicyVersion>",
          "templateType" : "java.util.List<PolicyVersion>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "PolicyVersions",
        "setterDocumentation" : "/**<p>The policy versions.</p>\n@param policyVersions The policy versions.*/",
        "setterMethodName" : "setPolicyVersions",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<PolicyVersion>",
          "variableName" : "policyVersions",
          "variableType" : "java.util.List<PolicyVersion>",
          "documentation" : "",
          "simpleType" : "List<PolicyVersion>",
          "variableSetterType" : "java.util.Collection<PolicyVersion>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The policy versions.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setPolicyVersions(java.util.Collection)} or {@link #withPolicyVersions(java.util.Collection)} if you want to override the existing values.</p>\n@param policyVersions The policy versions.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<PolicyVersion>",
          "variableName" : "policyVersions",
          "variableType" : "java.util.List<PolicyVersion>",
          "documentation" : "<p>The policy versions.</p>",
          "simpleType" : "List<PolicyVersion>",
          "variableSetterType" : "java.util.Collection<PolicyVersion>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "PolicyVersions" : {
          "c2jName" : "policyVersions",
          "c2jShape" : "PolicyVersions",
          "deprecated" : false,
          "documentation" : "<p>The policy versions.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The policy versions.</p>\n@param policyVersions The policy versions.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicyVersions",
          "getterDocumentation" : "/**<p>The policy versions.</p>\n@return The policy versions.*/",
          "getterMethodName" : "getPolicyVersions",
          "getterModel" : {
            "returnType" : "java.util.List<PolicyVersion>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "policyVersions",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "policyVersions",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "PolicyVersion",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "PolicyVersion",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "PolicyVersion",
                "variableName" : "member",
                "variableType" : "PolicyVersion",
                "documentation" : "",
                "simpleType" : "PolicyVersion",
                "variableSetterType" : "PolicyVersion"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "PolicyVersion",
                "variableName" : "member",
                "variableType" : "PolicyVersion",
                "documentation" : "",
                "simpleType" : "PolicyVersion",
                "variableSetterType" : "PolicyVersion"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "PolicyVersion",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "PolicyVersion",
            "templateImplType" : "java.util.ArrayList<PolicyVersion>",
            "templateType" : "java.util.List<PolicyVersion>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "PolicyVersions",
          "setterDocumentation" : "/**<p>The policy versions.</p>\n@param policyVersions The policy versions.*/",
          "setterMethodName" : "setPolicyVersions",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<PolicyVersion>",
            "variableName" : "policyVersions",
            "variableType" : "java.util.List<PolicyVersion>",
            "documentation" : "",
            "simpleType" : "List<PolicyVersion>",
            "variableSetterType" : "java.util.Collection<PolicyVersion>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The policy versions.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setPolicyVersions(java.util.Collection)} or {@link #withPolicyVersions(java.util.Collection)} if you want to override the existing values.</p>\n@param policyVersions The policy versions.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<PolicyVersion>",
            "variableName" : "policyVersions",
            "variableType" : "java.util.List<PolicyVersion>",
            "documentation" : "<p>The policy versions.</p>",
            "simpleType" : "List<PolicyVersion>",
            "variableSetterType" : "java.util.Collection<PolicyVersion>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListPolicyVersionsResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "ListPolicyVersionsResult",
        "variableName" : "listPolicyVersionsResult",
        "variableType" : "ListPolicyVersionsResult",
        "documentation" : null,
        "simpleType" : "ListPolicyVersionsResult",
        "variableSetterType" : "ListPolicyVersionsResult"
      },
      "wrapper" : false
    },
    "ListPrincipalPoliciesRequest" : {
      "c2jName" : "ListPrincipalPoliciesRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the ListPrincipalPolicies operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : true,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListPrincipalPolicies",
        "locationName" : null,
        "requestUri" : "/principal-policies",
        "target" : null,
        "verb" : "GET",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "principal",
        "c2jShape" : "Principal",
        "deprecated" : false,
        "documentation" : "<p>The principal.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The principal.</p>\n@param principal The principal.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPrincipal",
        "getterDocumentation" : "/**<p>The principal.</p>\n@return The principal.*/",
        "getterMethodName" : "getPrincipal",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "x-amzn-iot-principal",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "x-amzn-iot-principal",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Principal",
        "setterDocumentation" : "/**<p>The principal.</p>\n@param principal The principal.*/",
        "setterMethodName" : "setPrincipal",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "principal",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The principal.</p>\n@param principal The principal.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "principal",
          "variableType" : "String",
          "documentation" : "<p>The principal.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "marker",
        "c2jShape" : "Marker",
        "deprecated" : false,
        "documentation" : "<p>The marker for the next set of results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMarker",
        "getterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@return The marker for the next set of results.*/",
        "getterMethodName" : "getMarker",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "marker",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "marker",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Marker",
        "setterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.*/",
        "setterMethodName" : "setMarker",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "marker",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "marker",
          "variableType" : "String",
          "documentation" : "<p>The marker for the next set of results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "pageSize",
        "c2jShape" : "PageSize",
        "deprecated" : false,
        "documentation" : "<p>The result page size.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPageSize",
        "getterDocumentation" : "/**<p>The result page size.</p>\n@return The result page size.*/",
        "getterMethodName" : "getPageSize",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "pageSize",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "pageSize",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "PageSize",
        "setterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.*/",
        "setterMethodName" : "setPageSize",
        "setterModel" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "pageSize",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "pageSize",
          "variableType" : "Integer",
          "documentation" : "<p>The result page size.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ascendingOrder",
        "c2jShape" : "AscendingOrder",
        "deprecated" : false,
        "documentation" : "<p>Specifies the order for results. If true, results are returned in ascending creation order.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Specifies the order for results. If true, results are returned in ascending creation order.</p>\n@param ascendingOrder Specifies the order for results. If true, results are returned in ascending creation order.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAscendingOrder",
        "getterDocumentation" : "/**<p>Specifies the order for results. If true, results are returned in ascending creation order.</p>\n@return Specifies the order for results. If true, results are returned in ascending creation order.*/",
        "getterMethodName" : "getAscendingOrder",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "isAscendingOrder",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "isAscendingOrder",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "AscendingOrder",
        "setterDocumentation" : "/**<p>Specifies the order for results. If true, results are returned in ascending creation order.</p>\n@param ascendingOrder Specifies the order for results. If true, results are returned in ascending creation order.*/",
        "setterMethodName" : "setAscendingOrder",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "ascendingOrder",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Specifies the order for results. If true, results are returned in ascending creation order.</p>\n@param ascendingOrder Specifies the order for results. If true, results are returned in ascending creation order.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "ascendingOrder",
          "variableType" : "Boolean",
          "documentation" : "<p>Specifies the order for results. If true, results are returned in ascending creation order.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AscendingOrder" : {
          "c2jName" : "ascendingOrder",
          "c2jShape" : "AscendingOrder",
          "deprecated" : false,
          "documentation" : "<p>Specifies the order for results. If true, results are returned in ascending creation order.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Specifies the order for results. If true, results are returned in ascending creation order.</p>\n@param ascendingOrder Specifies the order for results. If true, results are returned in ascending creation order.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAscendingOrder",
          "getterDocumentation" : "/**<p>Specifies the order for results. If true, results are returned in ascending creation order.</p>\n@return Specifies the order for results. If true, results are returned in ascending creation order.*/",
          "getterMethodName" : "getAscendingOrder",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "isAscendingOrder",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "isAscendingOrder",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "AscendingOrder",
          "setterDocumentation" : "/**<p>Specifies the order for results. If true, results are returned in ascending creation order.</p>\n@param ascendingOrder Specifies the order for results. If true, results are returned in ascending creation order.*/",
          "setterMethodName" : "setAscendingOrder",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "ascendingOrder",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Specifies the order for results. If true, results are returned in ascending creation order.</p>\n@param ascendingOrder Specifies the order for results. If true, results are returned in ascending creation order.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "ascendingOrder",
            "variableType" : "Boolean",
            "documentation" : "<p>Specifies the order for results. If true, results are returned in ascending creation order.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        },
        "Marker" : {
          "c2jName" : "marker",
          "c2jShape" : "Marker",
          "deprecated" : false,
          "documentation" : "<p>The marker for the next set of results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMarker",
          "getterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@return The marker for the next set of results.*/",
          "getterMethodName" : "getMarker",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "marker",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "marker",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Marker",
          "setterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.*/",
          "setterMethodName" : "setMarker",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "marker",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "marker",
            "variableType" : "String",
            "documentation" : "<p>The marker for the next set of results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "PageSize" : {
          "c2jName" : "pageSize",
          "c2jShape" : "PageSize",
          "deprecated" : false,
          "documentation" : "<p>The result page size.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPageSize",
          "getterDocumentation" : "/**<p>The result page size.</p>\n@return The result page size.*/",
          "getterMethodName" : "getPageSize",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "pageSize",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "pageSize",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "PageSize",
          "setterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.*/",
          "setterMethodName" : "setPageSize",
          "setterModel" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "pageSize",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "pageSize",
            "variableType" : "Integer",
            "documentation" : "<p>The result page size.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "Principal" : {
          "c2jName" : "principal",
          "c2jShape" : "Principal",
          "deprecated" : false,
          "documentation" : "<p>The principal.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The principal.</p>\n@param principal The principal.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPrincipal",
          "getterDocumentation" : "/**<p>The principal.</p>\n@return The principal.*/",
          "getterMethodName" : "getPrincipal",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "x-amzn-iot-principal",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "x-amzn-iot-principal",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Principal",
          "setterDocumentation" : "/**<p>The principal.</p>\n@param principal The principal.*/",
          "setterMethodName" : "setPrincipal",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "principal",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The principal.</p>\n@param principal The principal.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "principal",
            "variableType" : "String",
            "documentation" : "<p>The principal.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "principal" ],
      "shapeName" : "ListPrincipalPoliciesRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ListPrincipalPoliciesRequest",
        "variableName" : "listPrincipalPoliciesRequest",
        "variableType" : "ListPrincipalPoliciesRequest",
        "documentation" : null,
        "simpleType" : "ListPrincipalPoliciesRequest",
        "variableSetterType" : "ListPrincipalPoliciesRequest"
      },
      "wrapper" : false
    },
    "ListPrincipalPoliciesResult" : {
      "c2jName" : "ListPrincipalPoliciesResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The output from the ListPrincipalPolicies operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "policies",
        "c2jShape" : "Policies",
        "deprecated" : false,
        "documentation" : "<p>The policies.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The policies.</p>\n@param policies The policies.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicies",
        "getterDocumentation" : "/**<p>The policies.</p>\n@return The policies.*/",
        "getterMethodName" : "getPolicies",
        "getterModel" : {
          "returnType" : "java.util.List<Policy>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "policies",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "policies",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Policy",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Policy",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "Policy",
              "variableName" : "member",
              "variableType" : "Policy",
              "documentation" : "",
              "simpleType" : "Policy",
              "variableSetterType" : "Policy"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "Policy",
              "variableName" : "member",
              "variableType" : "Policy",
              "documentation" : "",
              "simpleType" : "Policy",
              "variableSetterType" : "Policy"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Policy",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Policy",
          "templateImplType" : "java.util.ArrayList<Policy>",
          "templateType" : "java.util.List<Policy>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Policies",
        "setterDocumentation" : "/**<p>The policies.</p>\n@param policies The policies.*/",
        "setterMethodName" : "setPolicies",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<Policy>",
          "variableName" : "policies",
          "variableType" : "java.util.List<Policy>",
          "documentation" : "",
          "simpleType" : "List<Policy>",
          "variableSetterType" : "java.util.Collection<Policy>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The policies.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setPolicies(java.util.Collection)} or {@link #withPolicies(java.util.Collection)} if you want to override the existing values.</p>\n@param policies The policies.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<Policy>",
          "variableName" : "policies",
          "variableType" : "java.util.List<Policy>",
          "documentation" : "<p>The policies.</p>",
          "simpleType" : "List<Policy>",
          "variableSetterType" : "java.util.Collection<Policy>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextMarker",
        "c2jShape" : "Marker",
        "deprecated" : false,
        "documentation" : "<p>The marker for the next set of results, or null if there are no additional results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextMarker",
        "getterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@return The marker for the next set of results, or null if there are no additional results.*/",
        "getterMethodName" : "getNextMarker",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextMarker",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextMarker",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextMarker",
        "setterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.*/",
        "setterMethodName" : "setNextMarker",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextMarker",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextMarker",
          "variableType" : "String",
          "documentation" : "<p>The marker for the next set of results, or null if there are no additional results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "NextMarker" : {
          "c2jName" : "nextMarker",
          "c2jShape" : "Marker",
          "deprecated" : false,
          "documentation" : "<p>The marker for the next set of results, or null if there are no additional results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextMarker",
          "getterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@return The marker for the next set of results, or null if there are no additional results.*/",
          "getterMethodName" : "getNextMarker",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextMarker",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextMarker",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextMarker",
          "setterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.*/",
          "setterMethodName" : "setNextMarker",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextMarker",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextMarker",
            "variableType" : "String",
            "documentation" : "<p>The marker for the next set of results, or null if there are no additional results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Policies" : {
          "c2jName" : "policies",
          "c2jShape" : "Policies",
          "deprecated" : false,
          "documentation" : "<p>The policies.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The policies.</p>\n@param policies The policies.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicies",
          "getterDocumentation" : "/**<p>The policies.</p>\n@return The policies.*/",
          "getterMethodName" : "getPolicies",
          "getterModel" : {
            "returnType" : "java.util.List<Policy>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "policies",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "policies",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Policy",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Policy",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "Policy",
                "variableName" : "member",
                "variableType" : "Policy",
                "documentation" : "",
                "simpleType" : "Policy",
                "variableSetterType" : "Policy"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "Policy",
                "variableName" : "member",
                "variableType" : "Policy",
                "documentation" : "",
                "simpleType" : "Policy",
                "variableSetterType" : "Policy"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Policy",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Policy",
            "templateImplType" : "java.util.ArrayList<Policy>",
            "templateType" : "java.util.List<Policy>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Policies",
          "setterDocumentation" : "/**<p>The policies.</p>\n@param policies The policies.*/",
          "setterMethodName" : "setPolicies",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<Policy>",
            "variableName" : "policies",
            "variableType" : "java.util.List<Policy>",
            "documentation" : "",
            "simpleType" : "List<Policy>",
            "variableSetterType" : "java.util.Collection<Policy>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The policies.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setPolicies(java.util.Collection)} or {@link #withPolicies(java.util.Collection)} if you want to override the existing values.</p>\n@param policies The policies.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<Policy>",
            "variableName" : "policies",
            "variableType" : "java.util.List<Policy>",
            "documentation" : "<p>The policies.</p>",
            "simpleType" : "List<Policy>",
            "variableSetterType" : "java.util.Collection<Policy>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListPrincipalPoliciesResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "ListPrincipalPoliciesResult",
        "variableName" : "listPrincipalPoliciesResult",
        "variableType" : "ListPrincipalPoliciesResult",
        "documentation" : null,
        "simpleType" : "ListPrincipalPoliciesResult",
        "variableSetterType" : "ListPrincipalPoliciesResult"
      },
      "wrapper" : false
    },
    "ListPrincipalThingsRequest" : {
      "c2jName" : "ListPrincipalThingsRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the ListPrincipalThings operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : true,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListPrincipalThings",
        "locationName" : null,
        "requestUri" : "/principals/things",
        "target" : null,
        "verb" : "GET",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "nextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@param nextToken The token for the next set of results, or <b>null</b> if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@return The token for the next set of results, or <b>null</b> if there are no additional results.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "nextToken",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "nextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "setterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@param nextToken The token for the next set of results, or <b>null</b> if there are no additional results.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@param nextToken The token for the next set of results, or <b>null</b> if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "maxResults",
        "c2jShape" : "RegistryMaxResults",
        "deprecated" : false,
        "documentation" : "<p>The maximum number of results to return in this operation.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The maximum number of results to return in this operation.</p>\n@param maxResults The maximum number of results to return in this operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>The maximum number of results to return in this operation.</p>\n@return The maximum number of results to return in this operation.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "maxResults",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "maxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "setterDocumentation" : "/**<p>The maximum number of results to return in this operation.</p>\n@param maxResults The maximum number of results to return in this operation.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The maximum number of results to return in this operation.</p>\n@param maxResults The maximum number of results to return in this operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>The maximum number of results to return in this operation.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "principal",
        "c2jShape" : "Principal",
        "deprecated" : false,
        "documentation" : "<p>The principal.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The principal.</p>\n@param principal The principal.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPrincipal",
        "getterDocumentation" : "/**<p>The principal.</p>\n@return The principal.*/",
        "getterMethodName" : "getPrincipal",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "x-amzn-principal",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "x-amzn-principal",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Principal",
        "setterDocumentation" : "/**<p>The principal.</p>\n@param principal The principal.*/",
        "setterMethodName" : "setPrincipal",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "principal",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The principal.</p>\n@param principal The principal.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "principal",
          "variableType" : "String",
          "documentation" : "<p>The principal.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "MaxResults" : {
          "c2jName" : "maxResults",
          "c2jShape" : "RegistryMaxResults",
          "deprecated" : false,
          "documentation" : "<p>The maximum number of results to return in this operation.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The maximum number of results to return in this operation.</p>\n@param maxResults The maximum number of results to return in this operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>The maximum number of results to return in this operation.</p>\n@return The maximum number of results to return in this operation.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "maxResults",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "maxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "setterDocumentation" : "/**<p>The maximum number of results to return in this operation.</p>\n@param maxResults The maximum number of results to return in this operation.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The maximum number of results to return in this operation.</p>\n@param maxResults The maximum number of results to return in this operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>The maximum number of results to return in this operation.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "nextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@param nextToken The token for the next set of results, or <b>null</b> if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@return The token for the next set of results, or <b>null</b> if there are no additional results.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "nextToken",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "nextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "setterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@param nextToken The token for the next set of results, or <b>null</b> if there are no additional results.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@param nextToken The token for the next set of results, or <b>null</b> if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Principal" : {
          "c2jName" : "principal",
          "c2jShape" : "Principal",
          "deprecated" : false,
          "documentation" : "<p>The principal.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The principal.</p>\n@param principal The principal.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPrincipal",
          "getterDocumentation" : "/**<p>The principal.</p>\n@return The principal.*/",
          "getterMethodName" : "getPrincipal",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "x-amzn-principal",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "x-amzn-principal",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Principal",
          "setterDocumentation" : "/**<p>The principal.</p>\n@param principal The principal.*/",
          "setterMethodName" : "setPrincipal",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "principal",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The principal.</p>\n@param principal The principal.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "principal",
            "variableType" : "String",
            "documentation" : "<p>The principal.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "principal" ],
      "shapeName" : "ListPrincipalThingsRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ListPrincipalThingsRequest",
        "variableName" : "listPrincipalThingsRequest",
        "variableType" : "ListPrincipalThingsRequest",
        "documentation" : null,
        "simpleType" : "ListPrincipalThingsRequest",
        "variableSetterType" : "ListPrincipalThingsRequest"
      },
      "wrapper" : false
    },
    "ListPrincipalThingsResult" : {
      "c2jName" : "ListPrincipalThingsResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The output from the ListPrincipalThings operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "things",
        "c2jShape" : "ThingNameList",
        "deprecated" : false,
        "documentation" : "<p>The things.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The things.</p>\n@param things The things.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withThings",
        "getterDocumentation" : "/**<p>The things.</p>\n@return The things.*/",
        "getterMethodName" : "getThings",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "things",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "things",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ThingName",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Things",
        "setterDocumentation" : "/**<p>The things.</p>\n@param things The things.*/",
        "setterMethodName" : "setThings",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "things",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The things.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setThings(java.util.Collection)} or {@link #withThings(java.util.Collection)} if you want to override the existing values.</p>\n@param things The things.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "things",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>The things.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@param nextToken The token for the next set of results, or <b>null</b> if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@return The token for the next set of results, or <b>null</b> if there are no additional results.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "setterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@param nextToken The token for the next set of results, or <b>null</b> if there are no additional results.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@param nextToken The token for the next set of results, or <b>null</b> if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "NextToken" : {
          "c2jName" : "nextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@param nextToken The token for the next set of results, or <b>null</b> if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@return The token for the next set of results, or <b>null</b> if there are no additional results.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "setterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@param nextToken The token for the next set of results, or <b>null</b> if there are no additional results.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@param nextToken The token for the next set of results, or <b>null</b> if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Things" : {
          "c2jName" : "things",
          "c2jShape" : "ThingNameList",
          "deprecated" : false,
          "documentation" : "<p>The things.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The things.</p>\n@param things The things.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withThings",
          "getterDocumentation" : "/**<p>The things.</p>\n@return The things.*/",
          "getterMethodName" : "getThings",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "things",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "things",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ThingName",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Things",
          "setterDocumentation" : "/**<p>The things.</p>\n@param things The things.*/",
          "setterMethodName" : "setThings",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "things",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The things.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setThings(java.util.Collection)} or {@link #withThings(java.util.Collection)} if you want to override the existing values.</p>\n@param things The things.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "things",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>The things.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListPrincipalThingsResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "ListPrincipalThingsResult",
        "variableName" : "listPrincipalThingsResult",
        "variableType" : "ListPrincipalThingsResult",
        "documentation" : null,
        "simpleType" : "ListPrincipalThingsResult",
        "variableSetterType" : "ListPrincipalThingsResult"
      },
      "wrapper" : false
    },
    "ListThingPrincipalsRequest" : {
      "c2jName" : "ListThingPrincipalsRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the ListThingPrincipal operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListThingPrincipals",
        "locationName" : null,
        "requestUri" : "/things/{thingName}/principals",
        "target" : null,
        "verb" : "GET",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "thingName",
        "c2jShape" : "ThingName",
        "deprecated" : false,
        "documentation" : "<p>The name of the thing.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withThingName",
        "getterDocumentation" : "/**<p>The name of the thing.</p>\n@return The name of the thing.*/",
        "getterMethodName" : "getThingName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "thingName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "thingName",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ThingName",
        "setterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.*/",
        "setterMethodName" : "setThingName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingName",
          "variableType" : "String",
          "documentation" : "<p>The name of the thing.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ThingName" : {
          "c2jName" : "thingName",
          "c2jShape" : "ThingName",
          "deprecated" : false,
          "documentation" : "<p>The name of the thing.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withThingName",
          "getterDocumentation" : "/**<p>The name of the thing.</p>\n@return The name of the thing.*/",
          "getterMethodName" : "getThingName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "thingName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "thingName",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ThingName",
          "setterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.*/",
          "setterMethodName" : "setThingName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingName",
            "variableType" : "String",
            "documentation" : "<p>The name of the thing.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "thingName" ],
      "shapeName" : "ListThingPrincipalsRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ListThingPrincipalsRequest",
        "variableName" : "listThingPrincipalsRequest",
        "variableType" : "ListThingPrincipalsRequest",
        "documentation" : null,
        "simpleType" : "ListThingPrincipalsRequest",
        "variableSetterType" : "ListThingPrincipalsRequest"
      },
      "wrapper" : false
    },
    "ListThingPrincipalsResult" : {
      "c2jName" : "ListThingPrincipalsResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The output from the ListThingPrincipals operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "principals",
        "c2jShape" : "Principals",
        "deprecated" : false,
        "documentation" : "<p>The principals associated with the thing.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The principals associated with the thing.</p>\n@param principals The principals associated with the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPrincipals",
        "getterDocumentation" : "/**<p>The principals associated with the thing.</p>\n@return The principals associated with the thing.*/",
        "getterMethodName" : "getPrincipals",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "principals",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "principals",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "PrincipalArn",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Principals",
        "setterDocumentation" : "/**<p>The principals associated with the thing.</p>\n@param principals The principals associated with the thing.*/",
        "setterMethodName" : "setPrincipals",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "principals",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The principals associated with the thing.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setPrincipals(java.util.Collection)} or {@link #withPrincipals(java.util.Collection)} if you want to override the existing values.</p>\n@param principals The principals associated with the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "principals",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>The principals associated with the thing.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Principals" : {
          "c2jName" : "principals",
          "c2jShape" : "Principals",
          "deprecated" : false,
          "documentation" : "<p>The principals associated with the thing.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The principals associated with the thing.</p>\n@param principals The principals associated with the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPrincipals",
          "getterDocumentation" : "/**<p>The principals associated with the thing.</p>\n@return The principals associated with the thing.*/",
          "getterMethodName" : "getPrincipals",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "principals",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "principals",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "PrincipalArn",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Principals",
          "setterDocumentation" : "/**<p>The principals associated with the thing.</p>\n@param principals The principals associated with the thing.*/",
          "setterMethodName" : "setPrincipals",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "principals",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The principals associated with the thing.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setPrincipals(java.util.Collection)} or {@link #withPrincipals(java.util.Collection)} if you want to override the existing values.</p>\n@param principals The principals associated with the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "principals",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>The principals associated with the thing.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListThingPrincipalsResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "ListThingPrincipalsResult",
        "variableName" : "listThingPrincipalsResult",
        "variableType" : "ListThingPrincipalsResult",
        "documentation" : null,
        "simpleType" : "ListThingPrincipalsResult",
        "variableSetterType" : "ListThingPrincipalsResult"
      },
      "wrapper" : false
    },
    "ListThingTypesRequest" : {
      "c2jName" : "ListThingTypesRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the ListThingTypes operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListThingTypes",
        "locationName" : null,
        "requestUri" : "/thing-types",
        "target" : null,
        "verb" : "GET",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "nextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@param nextToken The token for the next set of results, or <b>null</b> if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@return The token for the next set of results, or <b>null</b> if there are no additional results.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "nextToken",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "nextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "setterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@param nextToken The token for the next set of results, or <b>null</b> if there are no additional results.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@param nextToken The token for the next set of results, or <b>null</b> if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "maxResults",
        "c2jShape" : "RegistryMaxResults",
        "deprecated" : false,
        "documentation" : "<p>The maximum number of results to return in this operation.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The maximum number of results to return in this operation.</p>\n@param maxResults The maximum number of results to return in this operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>The maximum number of results to return in this operation.</p>\n@return The maximum number of results to return in this operation.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "maxResults",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "maxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "setterDocumentation" : "/**<p>The maximum number of results to return in this operation.</p>\n@param maxResults The maximum number of results to return in this operation.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The maximum number of results to return in this operation.</p>\n@param maxResults The maximum number of results to return in this operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>The maximum number of results to return in this operation.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "thingTypeName",
        "c2jShape" : "ThingTypeName",
        "deprecated" : false,
        "documentation" : "<p>The name of the thing type.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withThingTypeName",
        "getterDocumentation" : "/**<p>The name of the thing type.</p>\n@return The name of the thing type.*/",
        "getterMethodName" : "getThingTypeName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "thingTypeName",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "thingTypeName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ThingTypeName",
        "setterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.*/",
        "setterMethodName" : "setThingTypeName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingTypeName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingTypeName",
          "variableType" : "String",
          "documentation" : "<p>The name of the thing type.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "MaxResults" : {
          "c2jName" : "maxResults",
          "c2jShape" : "RegistryMaxResults",
          "deprecated" : false,
          "documentation" : "<p>The maximum number of results to return in this operation.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The maximum number of results to return in this operation.</p>\n@param maxResults The maximum number of results to return in this operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>The maximum number of results to return in this operation.</p>\n@return The maximum number of results to return in this operation.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "maxResults",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "maxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "setterDocumentation" : "/**<p>The maximum number of results to return in this operation.</p>\n@param maxResults The maximum number of results to return in this operation.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The maximum number of results to return in this operation.</p>\n@param maxResults The maximum number of results to return in this operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>The maximum number of results to return in this operation.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "nextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@param nextToken The token for the next set of results, or <b>null</b> if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@return The token for the next set of results, or <b>null</b> if there are no additional results.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "nextToken",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "nextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "setterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@param nextToken The token for the next set of results, or <b>null</b> if there are no additional results.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@param nextToken The token for the next set of results, or <b>null</b> if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ThingTypeName" : {
          "c2jName" : "thingTypeName",
          "c2jShape" : "ThingTypeName",
          "deprecated" : false,
          "documentation" : "<p>The name of the thing type.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withThingTypeName",
          "getterDocumentation" : "/**<p>The name of the thing type.</p>\n@return The name of the thing type.*/",
          "getterMethodName" : "getThingTypeName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "thingTypeName",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "thingTypeName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ThingTypeName",
          "setterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.*/",
          "setterMethodName" : "setThingTypeName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingTypeName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingTypeName",
            "variableType" : "String",
            "documentation" : "<p>The name of the thing type.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListThingTypesRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ListThingTypesRequest",
        "variableName" : "listThingTypesRequest",
        "variableType" : "ListThingTypesRequest",
        "documentation" : null,
        "simpleType" : "ListThingTypesRequest",
        "variableSetterType" : "ListThingTypesRequest"
      },
      "wrapper" : false
    },
    "ListThingTypesResult" : {
      "c2jName" : "ListThingTypesResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The output for the ListThingTypes operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "thingTypes",
        "c2jShape" : "ThingTypeList",
        "deprecated" : false,
        "documentation" : "<p>The thing types.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The thing types.</p>\n@param thingTypes The thing types.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withThingTypes",
        "getterDocumentation" : "/**<p>The thing types.</p>\n@return The thing types.*/",
        "getterMethodName" : "getThingTypes",
        "getterModel" : {
          "returnType" : "java.util.List<ThingTypeDefinition>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "thingTypes",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "thingTypes",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ThingTypeDefinition",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "ThingTypeDefinition",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "ThingTypeDefinition",
              "variableName" : "member",
              "variableType" : "ThingTypeDefinition",
              "documentation" : "",
              "simpleType" : "ThingTypeDefinition",
              "variableSetterType" : "ThingTypeDefinition"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "ThingTypeDefinition",
              "variableName" : "member",
              "variableType" : "ThingTypeDefinition",
              "documentation" : "",
              "simpleType" : "ThingTypeDefinition",
              "variableSetterType" : "ThingTypeDefinition"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "ThingTypeDefinition",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "ThingTypeDefinition",
          "templateImplType" : "java.util.ArrayList<ThingTypeDefinition>",
          "templateType" : "java.util.List<ThingTypeDefinition>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "ThingTypes",
        "setterDocumentation" : "/**<p>The thing types.</p>\n@param thingTypes The thing types.*/",
        "setterMethodName" : "setThingTypes",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<ThingTypeDefinition>",
          "variableName" : "thingTypes",
          "variableType" : "java.util.List<ThingTypeDefinition>",
          "documentation" : "",
          "simpleType" : "List<ThingTypeDefinition>",
          "variableSetterType" : "java.util.Collection<ThingTypeDefinition>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The thing types.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setThingTypes(java.util.Collection)} or {@link #withThingTypes(java.util.Collection)} if you want to override the existing values.</p>\n@param thingTypes The thing types.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<ThingTypeDefinition>",
          "variableName" : "thingTypes",
          "variableType" : "java.util.List<ThingTypeDefinition>",
          "documentation" : "<p>The thing types.</p>",
          "simpleType" : "List<ThingTypeDefinition>",
          "variableSetterType" : "java.util.Collection<ThingTypeDefinition>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@param nextToken The token for the next set of results, or <b>null</b> if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@return The token for the next set of results, or <b>null</b> if there are no additional results.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "setterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@param nextToken The token for the next set of results, or <b>null</b> if there are no additional results.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@param nextToken The token for the next set of results, or <b>null</b> if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "NextToken" : {
          "c2jName" : "nextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@param nextToken The token for the next set of results, or <b>null</b> if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@return The token for the next set of results, or <b>null</b> if there are no additional results.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "setterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@param nextToken The token for the next set of results, or <b>null</b> if there are no additional results.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@param nextToken The token for the next set of results, or <b>null</b> if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ThingTypes" : {
          "c2jName" : "thingTypes",
          "c2jShape" : "ThingTypeList",
          "deprecated" : false,
          "documentation" : "<p>The thing types.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The thing types.</p>\n@param thingTypes The thing types.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withThingTypes",
          "getterDocumentation" : "/**<p>The thing types.</p>\n@return The thing types.*/",
          "getterMethodName" : "getThingTypes",
          "getterModel" : {
            "returnType" : "java.util.List<ThingTypeDefinition>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "thingTypes",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "thingTypes",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ThingTypeDefinition",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "ThingTypeDefinition",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "ThingTypeDefinition",
                "variableName" : "member",
                "variableType" : "ThingTypeDefinition",
                "documentation" : "",
                "simpleType" : "ThingTypeDefinition",
                "variableSetterType" : "ThingTypeDefinition"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "ThingTypeDefinition",
                "variableName" : "member",
                "variableType" : "ThingTypeDefinition",
                "documentation" : "",
                "simpleType" : "ThingTypeDefinition",
                "variableSetterType" : "ThingTypeDefinition"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "ThingTypeDefinition",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "ThingTypeDefinition",
            "templateImplType" : "java.util.ArrayList<ThingTypeDefinition>",
            "templateType" : "java.util.List<ThingTypeDefinition>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "ThingTypes",
          "setterDocumentation" : "/**<p>The thing types.</p>\n@param thingTypes The thing types.*/",
          "setterMethodName" : "setThingTypes",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<ThingTypeDefinition>",
            "variableName" : "thingTypes",
            "variableType" : "java.util.List<ThingTypeDefinition>",
            "documentation" : "",
            "simpleType" : "List<ThingTypeDefinition>",
            "variableSetterType" : "java.util.Collection<ThingTypeDefinition>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The thing types.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setThingTypes(java.util.Collection)} or {@link #withThingTypes(java.util.Collection)} if you want to override the existing values.</p>\n@param thingTypes The thing types.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<ThingTypeDefinition>",
            "variableName" : "thingTypes",
            "variableType" : "java.util.List<ThingTypeDefinition>",
            "documentation" : "<p>The thing types.</p>",
            "simpleType" : "List<ThingTypeDefinition>",
            "variableSetterType" : "java.util.Collection<ThingTypeDefinition>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListThingTypesResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "ListThingTypesResult",
        "variableName" : "listThingTypesResult",
        "variableType" : "ListThingTypesResult",
        "documentation" : null,
        "simpleType" : "ListThingTypesResult",
        "variableSetterType" : "ListThingTypesResult"
      },
      "wrapper" : false
    },
    "ListThingsRequest" : {
      "c2jName" : "ListThingsRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the ListThings operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListThings",
        "locationName" : null,
        "requestUri" : "/things",
        "target" : null,
        "verb" : "GET",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "nextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@param nextToken The token for the next set of results, or <b>null</b> if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@return The token for the next set of results, or <b>null</b> if there are no additional results.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "nextToken",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "nextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "setterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@param nextToken The token for the next set of results, or <b>null</b> if there are no additional results.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@param nextToken The token for the next set of results, or <b>null</b> if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "maxResults",
        "c2jShape" : "RegistryMaxResults",
        "deprecated" : false,
        "documentation" : "<p>The maximum number of results to return in this operation.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The maximum number of results to return in this operation.</p>\n@param maxResults The maximum number of results to return in this operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>The maximum number of results to return in this operation.</p>\n@return The maximum number of results to return in this operation.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "maxResults",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "maxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "setterDocumentation" : "/**<p>The maximum number of results to return in this operation.</p>\n@param maxResults The maximum number of results to return in this operation.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The maximum number of results to return in this operation.</p>\n@param maxResults The maximum number of results to return in this operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>The maximum number of results to return in this operation.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "attributeName",
        "c2jShape" : "AttributeName",
        "deprecated" : false,
        "documentation" : "<p>The attribute name used to search for things.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The attribute name used to search for things.</p>\n@param attributeName The attribute name used to search for things.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAttributeName",
        "getterDocumentation" : "/**<p>The attribute name used to search for things.</p>\n@return The attribute name used to search for things.*/",
        "getterMethodName" : "getAttributeName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "attributeName",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "attributeName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "AttributeName",
        "setterDocumentation" : "/**<p>The attribute name used to search for things.</p>\n@param attributeName The attribute name used to search for things.*/",
        "setterMethodName" : "setAttributeName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "attributeName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The attribute name used to search for things.</p>\n@param attributeName The attribute name used to search for things.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "attributeName",
          "variableType" : "String",
          "documentation" : "<p>The attribute name used to search for things.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "attributeValue",
        "c2jShape" : "AttributeValue",
        "deprecated" : false,
        "documentation" : "<p>The attribute value used to search for things.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The attribute value used to search for things.</p>\n@param attributeValue The attribute value used to search for things.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAttributeValue",
        "getterDocumentation" : "/**<p>The attribute value used to search for things.</p>\n@return The attribute value used to search for things.*/",
        "getterMethodName" : "getAttributeValue",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "attributeValue",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "attributeValue",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "AttributeValue",
        "setterDocumentation" : "/**<p>The attribute value used to search for things.</p>\n@param attributeValue The attribute value used to search for things.*/",
        "setterMethodName" : "setAttributeValue",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "attributeValue",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The attribute value used to search for things.</p>\n@param attributeValue The attribute value used to search for things.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "attributeValue",
          "variableType" : "String",
          "documentation" : "<p>The attribute value used to search for things.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "thingTypeName",
        "c2jShape" : "ThingTypeName",
        "deprecated" : false,
        "documentation" : "<p>The name of the thing type used to search for things.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the thing type used to search for things.</p>\n@param thingTypeName The name of the thing type used to search for things.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withThingTypeName",
        "getterDocumentation" : "/**<p>The name of the thing type used to search for things.</p>\n@return The name of the thing type used to search for things.*/",
        "getterMethodName" : "getThingTypeName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "thingTypeName",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "thingTypeName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ThingTypeName",
        "setterDocumentation" : "/**<p>The name of the thing type used to search for things.</p>\n@param thingTypeName The name of the thing type used to search for things.*/",
        "setterMethodName" : "setThingTypeName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingTypeName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the thing type used to search for things.</p>\n@param thingTypeName The name of the thing type used to search for things.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingTypeName",
          "variableType" : "String",
          "documentation" : "<p>The name of the thing type used to search for things.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AttributeName" : {
          "c2jName" : "attributeName",
          "c2jShape" : "AttributeName",
          "deprecated" : false,
          "documentation" : "<p>The attribute name used to search for things.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The attribute name used to search for things.</p>\n@param attributeName The attribute name used to search for things.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAttributeName",
          "getterDocumentation" : "/**<p>The attribute name used to search for things.</p>\n@return The attribute name used to search for things.*/",
          "getterMethodName" : "getAttributeName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "attributeName",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "attributeName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "AttributeName",
          "setterDocumentation" : "/**<p>The attribute name used to search for things.</p>\n@param attributeName The attribute name used to search for things.*/",
          "setterMethodName" : "setAttributeName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "attributeName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The attribute name used to search for things.</p>\n@param attributeName The attribute name used to search for things.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "attributeName",
            "variableType" : "String",
            "documentation" : "<p>The attribute name used to search for things.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "AttributeValue" : {
          "c2jName" : "attributeValue",
          "c2jShape" : "AttributeValue",
          "deprecated" : false,
          "documentation" : "<p>The attribute value used to search for things.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The attribute value used to search for things.</p>\n@param attributeValue The attribute value used to search for things.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAttributeValue",
          "getterDocumentation" : "/**<p>The attribute value used to search for things.</p>\n@return The attribute value used to search for things.*/",
          "getterMethodName" : "getAttributeValue",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "attributeValue",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "attributeValue",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "AttributeValue",
          "setterDocumentation" : "/**<p>The attribute value used to search for things.</p>\n@param attributeValue The attribute value used to search for things.*/",
          "setterMethodName" : "setAttributeValue",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "attributeValue",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The attribute value used to search for things.</p>\n@param attributeValue The attribute value used to search for things.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "attributeValue",
            "variableType" : "String",
            "documentation" : "<p>The attribute value used to search for things.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "MaxResults" : {
          "c2jName" : "maxResults",
          "c2jShape" : "RegistryMaxResults",
          "deprecated" : false,
          "documentation" : "<p>The maximum number of results to return in this operation.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The maximum number of results to return in this operation.</p>\n@param maxResults The maximum number of results to return in this operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>The maximum number of results to return in this operation.</p>\n@return The maximum number of results to return in this operation.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "maxResults",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "maxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "setterDocumentation" : "/**<p>The maximum number of results to return in this operation.</p>\n@param maxResults The maximum number of results to return in this operation.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The maximum number of results to return in this operation.</p>\n@param maxResults The maximum number of results to return in this operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>The maximum number of results to return in this operation.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "nextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@param nextToken The token for the next set of results, or <b>null</b> if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@return The token for the next set of results, or <b>null</b> if there are no additional results.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "nextToken",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "nextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "setterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@param nextToken The token for the next set of results, or <b>null</b> if there are no additional results.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@param nextToken The token for the next set of results, or <b>null</b> if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ThingTypeName" : {
          "c2jName" : "thingTypeName",
          "c2jShape" : "ThingTypeName",
          "deprecated" : false,
          "documentation" : "<p>The name of the thing type used to search for things.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the thing type used to search for things.</p>\n@param thingTypeName The name of the thing type used to search for things.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withThingTypeName",
          "getterDocumentation" : "/**<p>The name of the thing type used to search for things.</p>\n@return The name of the thing type used to search for things.*/",
          "getterMethodName" : "getThingTypeName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "thingTypeName",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "thingTypeName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ThingTypeName",
          "setterDocumentation" : "/**<p>The name of the thing type used to search for things.</p>\n@param thingTypeName The name of the thing type used to search for things.*/",
          "setterMethodName" : "setThingTypeName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingTypeName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the thing type used to search for things.</p>\n@param thingTypeName The name of the thing type used to search for things.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingTypeName",
            "variableType" : "String",
            "documentation" : "<p>The name of the thing type used to search for things.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListThingsRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ListThingsRequest",
        "variableName" : "listThingsRequest",
        "variableType" : "ListThingsRequest",
        "documentation" : null,
        "simpleType" : "ListThingsRequest",
        "variableSetterType" : "ListThingsRequest"
      },
      "wrapper" : false
    },
    "ListThingsResult" : {
      "c2jName" : "ListThingsResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The output from the ListThings operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "things",
        "c2jShape" : "ThingAttributeList",
        "deprecated" : false,
        "documentation" : "<p>The things.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The things.</p>\n@param things The things.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withThings",
        "getterDocumentation" : "/**<p>The things.</p>\n@return The things.*/",
        "getterMethodName" : "getThings",
        "getterModel" : {
          "returnType" : "java.util.List<ThingAttribute>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "things",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "things",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ThingAttribute",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "ThingAttribute",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "ThingAttribute",
              "variableName" : "member",
              "variableType" : "ThingAttribute",
              "documentation" : "",
              "simpleType" : "ThingAttribute",
              "variableSetterType" : "ThingAttribute"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "ThingAttribute",
              "variableName" : "member",
              "variableType" : "ThingAttribute",
              "documentation" : "",
              "simpleType" : "ThingAttribute",
              "variableSetterType" : "ThingAttribute"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "ThingAttribute",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "ThingAttribute",
          "templateImplType" : "java.util.ArrayList<ThingAttribute>",
          "templateType" : "java.util.List<ThingAttribute>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Things",
        "setterDocumentation" : "/**<p>The things.</p>\n@param things The things.*/",
        "setterMethodName" : "setThings",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<ThingAttribute>",
          "variableName" : "things",
          "variableType" : "java.util.List<ThingAttribute>",
          "documentation" : "",
          "simpleType" : "List<ThingAttribute>",
          "variableSetterType" : "java.util.Collection<ThingAttribute>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The things.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setThings(java.util.Collection)} or {@link #withThings(java.util.Collection)} if you want to override the existing values.</p>\n@param things The things.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<ThingAttribute>",
          "variableName" : "things",
          "variableType" : "java.util.List<ThingAttribute>",
          "documentation" : "<p>The things.</p>",
          "simpleType" : "List<ThingAttribute>",
          "variableSetterType" : "java.util.Collection<ThingAttribute>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@param nextToken The token for the next set of results, or <b>null</b> if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@return The token for the next set of results, or <b>null</b> if there are no additional results.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "setterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@param nextToken The token for the next set of results, or <b>null</b> if there are no additional results.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@param nextToken The token for the next set of results, or <b>null</b> if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "NextToken" : {
          "c2jName" : "nextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@param nextToken The token for the next set of results, or <b>null</b> if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@return The token for the next set of results, or <b>null</b> if there are no additional results.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "setterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@param nextToken The token for the next set of results, or <b>null</b> if there are no additional results.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>\n@param nextToken The token for the next set of results, or <b>null</b> if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Things" : {
          "c2jName" : "things",
          "c2jShape" : "ThingAttributeList",
          "deprecated" : false,
          "documentation" : "<p>The things.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The things.</p>\n@param things The things.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withThings",
          "getterDocumentation" : "/**<p>The things.</p>\n@return The things.*/",
          "getterMethodName" : "getThings",
          "getterModel" : {
            "returnType" : "java.util.List<ThingAttribute>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "things",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "things",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ThingAttribute",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "ThingAttribute",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "ThingAttribute",
                "variableName" : "member",
                "variableType" : "ThingAttribute",
                "documentation" : "",
                "simpleType" : "ThingAttribute",
                "variableSetterType" : "ThingAttribute"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "ThingAttribute",
                "variableName" : "member",
                "variableType" : "ThingAttribute",
                "documentation" : "",
                "simpleType" : "ThingAttribute",
                "variableSetterType" : "ThingAttribute"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "ThingAttribute",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "ThingAttribute",
            "templateImplType" : "java.util.ArrayList<ThingAttribute>",
            "templateType" : "java.util.List<ThingAttribute>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Things",
          "setterDocumentation" : "/**<p>The things.</p>\n@param things The things.*/",
          "setterMethodName" : "setThings",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<ThingAttribute>",
            "variableName" : "things",
            "variableType" : "java.util.List<ThingAttribute>",
            "documentation" : "",
            "simpleType" : "List<ThingAttribute>",
            "variableSetterType" : "java.util.Collection<ThingAttribute>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The things.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setThings(java.util.Collection)} or {@link #withThings(java.util.Collection)} if you want to override the existing values.</p>\n@param things The things.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<ThingAttribute>",
            "variableName" : "things",
            "variableType" : "java.util.List<ThingAttribute>",
            "documentation" : "<p>The things.</p>",
            "simpleType" : "List<ThingAttribute>",
            "variableSetterType" : "java.util.Collection<ThingAttribute>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListThingsResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "ListThingsResult",
        "variableName" : "listThingsResult",
        "variableType" : "ListThingsResult",
        "documentation" : null,
        "simpleType" : "ListThingsResult",
        "variableSetterType" : "ListThingsResult"
      },
      "wrapper" : false
    },
    "ListTopicRulesRequest" : {
      "c2jName" : "ListTopicRulesRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the ListTopicRules operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListTopicRules",
        "locationName" : null,
        "requestUri" : "/rules",
        "target" : null,
        "verb" : "GET",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "topic",
        "c2jShape" : "Topic",
        "deprecated" : false,
        "documentation" : "<p>The topic.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The topic.</p>\n@param topic The topic.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTopic",
        "getterDocumentation" : "/**<p>The topic.</p>\n@return The topic.*/",
        "getterMethodName" : "getTopic",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "topic",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "topic",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Topic",
        "setterDocumentation" : "/**<p>The topic.</p>\n@param topic The topic.*/",
        "setterMethodName" : "setTopic",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "topic",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The topic.</p>\n@param topic The topic.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "topic",
          "variableType" : "String",
          "documentation" : "<p>The topic.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "maxResults",
        "c2jShape" : "MaxResults",
        "deprecated" : false,
        "documentation" : "<p>The maximum number of results to return.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The maximum number of results to return.</p>\n@param maxResults The maximum number of results to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>The maximum number of results to return.</p>\n@return The maximum number of results to return.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "maxResults",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "maxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "setterDocumentation" : "/**<p>The maximum number of results to return.</p>\n@param maxResults The maximum number of results to return.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The maximum number of results to return.</p>\n@param maxResults The maximum number of results to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>The maximum number of results to return.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>A token used to retrieve the next value.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@param nextToken A token used to retrieve the next value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@return A token used to retrieve the next value.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "nextToken",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "nextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "setterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@param nextToken A token used to retrieve the next value.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@param nextToken A token used to retrieve the next value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>A token used to retrieve the next value.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ruleDisabled",
        "c2jShape" : "IsDisabled",
        "deprecated" : false,
        "documentation" : "<p>Specifies whether the rule is disabled.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRuleDisabled",
        "getterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@return Specifies whether the rule is disabled.*/",
        "getterMethodName" : "getRuleDisabled",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "ruleDisabled",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "ruleDisabled",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "RuleDisabled",
        "setterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.*/",
        "setterMethodName" : "setRuleDisabled",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "ruleDisabled",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "ruleDisabled",
          "variableType" : "Boolean",
          "documentation" : "<p>Specifies whether the rule is disabled.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "MaxResults" : {
          "c2jName" : "maxResults",
          "c2jShape" : "MaxResults",
          "deprecated" : false,
          "documentation" : "<p>The maximum number of results to return.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The maximum number of results to return.</p>\n@param maxResults The maximum number of results to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>The maximum number of results to return.</p>\n@return The maximum number of results to return.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "maxResults",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "maxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "setterDocumentation" : "/**<p>The maximum number of results to return.</p>\n@param maxResults The maximum number of results to return.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The maximum number of results to return.</p>\n@param maxResults The maximum number of results to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>The maximum number of results to return.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "nextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>A token used to retrieve the next value.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@param nextToken A token used to retrieve the next value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@return A token used to retrieve the next value.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "nextToken",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "nextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "setterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@param nextToken A token used to retrieve the next value.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@param nextToken A token used to retrieve the next value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>A token used to retrieve the next value.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RuleDisabled" : {
          "c2jName" : "ruleDisabled",
          "c2jShape" : "IsDisabled",
          "deprecated" : false,
          "documentation" : "<p>Specifies whether the rule is disabled.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRuleDisabled",
          "getterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@return Specifies whether the rule is disabled.*/",
          "getterMethodName" : "getRuleDisabled",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "ruleDisabled",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "ruleDisabled",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "RuleDisabled",
          "setterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.*/",
          "setterMethodName" : "setRuleDisabled",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "ruleDisabled",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "ruleDisabled",
            "variableType" : "Boolean",
            "documentation" : "<p>Specifies whether the rule is disabled.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        },
        "Topic" : {
          "c2jName" : "topic",
          "c2jShape" : "Topic",
          "deprecated" : false,
          "documentation" : "<p>The topic.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The topic.</p>\n@param topic The topic.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTopic",
          "getterDocumentation" : "/**<p>The topic.</p>\n@return The topic.*/",
          "getterMethodName" : "getTopic",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "topic",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "topic",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Topic",
          "setterDocumentation" : "/**<p>The topic.</p>\n@param topic The topic.*/",
          "setterMethodName" : "setTopic",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "topic",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The topic.</p>\n@param topic The topic.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "topic",
            "variableType" : "String",
            "documentation" : "<p>The topic.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListTopicRulesRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ListTopicRulesRequest",
        "variableName" : "listTopicRulesRequest",
        "variableType" : "ListTopicRulesRequest",
        "documentation" : null,
        "simpleType" : "ListTopicRulesRequest",
        "variableSetterType" : "ListTopicRulesRequest"
      },
      "wrapper" : false
    },
    "ListTopicRulesResult" : {
      "c2jName" : "ListTopicRulesResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The output from the ListTopicRules operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "rules",
        "c2jShape" : "TopicRuleList",
        "deprecated" : false,
        "documentation" : "<p>The rules.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The rules.</p>\n@param rules The rules.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRules",
        "getterDocumentation" : "/**<p>The rules.</p>\n@return The rules.*/",
        "getterMethodName" : "getRules",
        "getterModel" : {
          "returnType" : "java.util.List<TopicRuleListItem>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "rules",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "rules",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "TopicRuleListItem",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "TopicRuleListItem",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "TopicRuleListItem",
              "variableName" : "member",
              "variableType" : "TopicRuleListItem",
              "documentation" : "",
              "simpleType" : "TopicRuleListItem",
              "variableSetterType" : "TopicRuleListItem"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "TopicRuleListItem",
              "variableName" : "member",
              "variableType" : "TopicRuleListItem",
              "documentation" : "",
              "simpleType" : "TopicRuleListItem",
              "variableSetterType" : "TopicRuleListItem"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "TopicRuleListItem",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "TopicRuleListItem",
          "templateImplType" : "java.util.ArrayList<TopicRuleListItem>",
          "templateType" : "java.util.List<TopicRuleListItem>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Rules",
        "setterDocumentation" : "/**<p>The rules.</p>\n@param rules The rules.*/",
        "setterMethodName" : "setRules",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<TopicRuleListItem>",
          "variableName" : "rules",
          "variableType" : "java.util.List<TopicRuleListItem>",
          "documentation" : "",
          "simpleType" : "List<TopicRuleListItem>",
          "variableSetterType" : "java.util.Collection<TopicRuleListItem>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The rules.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRules(java.util.Collection)} or {@link #withRules(java.util.Collection)} if you want to override the existing values.</p>\n@param rules The rules.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<TopicRuleListItem>",
          "variableName" : "rules",
          "variableType" : "java.util.List<TopicRuleListItem>",
          "documentation" : "<p>The rules.</p>",
          "simpleType" : "List<TopicRuleListItem>",
          "variableSetterType" : "java.util.Collection<TopicRuleListItem>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>A token used to retrieve the next value.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@param nextToken A token used to retrieve the next value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@return A token used to retrieve the next value.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "setterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@param nextToken A token used to retrieve the next value.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@param nextToken A token used to retrieve the next value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>A token used to retrieve the next value.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "NextToken" : {
          "c2jName" : "nextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>A token used to retrieve the next value.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@param nextToken A token used to retrieve the next value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@return A token used to retrieve the next value.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "setterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@param nextToken A token used to retrieve the next value.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@param nextToken A token used to retrieve the next value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>A token used to retrieve the next value.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Rules" : {
          "c2jName" : "rules",
          "c2jShape" : "TopicRuleList",
          "deprecated" : false,
          "documentation" : "<p>The rules.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The rules.</p>\n@param rules The rules.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRules",
          "getterDocumentation" : "/**<p>The rules.</p>\n@return The rules.*/",
          "getterMethodName" : "getRules",
          "getterModel" : {
            "returnType" : "java.util.List<TopicRuleListItem>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "rules",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "rules",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "TopicRuleListItem",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "TopicRuleListItem",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "TopicRuleListItem",
                "variableName" : "member",
                "variableType" : "TopicRuleListItem",
                "documentation" : "",
                "simpleType" : "TopicRuleListItem",
                "variableSetterType" : "TopicRuleListItem"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "TopicRuleListItem",
                "variableName" : "member",
                "variableType" : "TopicRuleListItem",
                "documentation" : "",
                "simpleType" : "TopicRuleListItem",
                "variableSetterType" : "TopicRuleListItem"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "TopicRuleListItem",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "TopicRuleListItem",
            "templateImplType" : "java.util.ArrayList<TopicRuleListItem>",
            "templateType" : "java.util.List<TopicRuleListItem>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Rules",
          "setterDocumentation" : "/**<p>The rules.</p>\n@param rules The rules.*/",
          "setterMethodName" : "setRules",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<TopicRuleListItem>",
            "variableName" : "rules",
            "variableType" : "java.util.List<TopicRuleListItem>",
            "documentation" : "",
            "simpleType" : "List<TopicRuleListItem>",
            "variableSetterType" : "java.util.Collection<TopicRuleListItem>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The rules.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRules(java.util.Collection)} or {@link #withRules(java.util.Collection)} if you want to override the existing values.</p>\n@param rules The rules.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<TopicRuleListItem>",
            "variableName" : "rules",
            "variableType" : "java.util.List<TopicRuleListItem>",
            "documentation" : "<p>The rules.</p>",
            "simpleType" : "List<TopicRuleListItem>",
            "variableSetterType" : "java.util.Collection<TopicRuleListItem>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListTopicRulesResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "ListTopicRulesResult",
        "variableName" : "listTopicRulesResult",
        "variableType" : "ListTopicRulesResult",
        "documentation" : null,
        "simpleType" : "ListTopicRulesResult",
        "variableSetterType" : "ListTopicRulesResult"
      },
      "wrapper" : false
    },
    "LogLevel" : {
      "c2jName" : "LogLevel",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "DEBUG",
        "value" : "DEBUG"
      }, {
        "name" : "INFO",
        "value" : "INFO"
      }, {
        "name" : "ERROR",
        "value" : "ERROR"
      }, {
        "name" : "WARN",
        "value" : "WARN"
      }, {
        "name" : "DISABLED",
        "value" : "DISABLED"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "LogLevel",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "LogLevel",
        "variableName" : "logLevel",
        "variableType" : "LogLevel",
        "documentation" : null,
        "simpleType" : "LogLevel",
        "variableSetterType" : "LogLevel"
      },
      "wrapper" : false
    },
    "LoggingOptionsPayload" : {
      "c2jName" : "LoggingOptionsPayload",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Describes the logging options payload.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "roleArn",
        "c2jShape" : "AwsArn",
        "deprecated" : false,
        "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRoleArn",
        "getterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@return The ARN of the IAM role that grants access.*/",
        "getterMethodName" : "getRoleArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "roleArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "roleArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RoleArn",
        "setterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.*/",
        "setterMethodName" : "setRoleArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "roleArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "roleArn",
          "variableType" : "String",
          "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "logLevel",
        "c2jShape" : "LogLevel",
        "deprecated" : false,
        "documentation" : "<p>The logging level.</p>",
        "enumType" : "LogLevel",
        "fluentSetterDocumentation" : "/**<p>The logging level.</p>\n@param logLevel The logging level.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LogLevel*/",
        "fluentSetterMethodName" : "withLogLevel",
        "getterDocumentation" : "/**<p>The logging level.</p>\n@return The logging level.\n@see LogLevel*/",
        "getterMethodName" : "getLogLevel",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "logLevel",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "logLevel",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LogLevel",
        "setterDocumentation" : "/**<p>The logging level.</p>\n@param logLevel The logging level.\n@see LogLevel*/",
        "setterMethodName" : "setLogLevel",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "logLevel",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The logging level.</p>\n@param logLevel The logging level.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LogLevel*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "logLevel",
          "variableType" : "String",
          "documentation" : "<p>The logging level.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "LogLevel" : {
          "c2jName" : "logLevel",
          "c2jShape" : "LogLevel",
          "deprecated" : false,
          "documentation" : "<p>The logging level.</p>",
          "enumType" : "LogLevel",
          "fluentSetterDocumentation" : "/**<p>The logging level.</p>\n@param logLevel The logging level.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LogLevel*/",
          "fluentSetterMethodName" : "withLogLevel",
          "getterDocumentation" : "/**<p>The logging level.</p>\n@return The logging level.\n@see LogLevel*/",
          "getterMethodName" : "getLogLevel",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "logLevel",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "logLevel",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LogLevel",
          "setterDocumentation" : "/**<p>The logging level.</p>\n@param logLevel The logging level.\n@see LogLevel*/",
          "setterMethodName" : "setLogLevel",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "logLevel",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The logging level.</p>\n@param logLevel The logging level.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LogLevel*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "logLevel",
            "variableType" : "String",
            "documentation" : "<p>The logging level.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RoleArn" : {
          "c2jName" : "roleArn",
          "c2jShape" : "AwsArn",
          "deprecated" : false,
          "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRoleArn",
          "getterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@return The ARN of the IAM role that grants access.*/",
          "getterMethodName" : "getRoleArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "roleArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "roleArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RoleArn",
          "setterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.*/",
          "setterMethodName" : "setRoleArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "roleArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "roleArn",
            "variableType" : "String",
            "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "roleArn" ],
      "shapeName" : "LoggingOptionsPayload",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "LoggingOptionsPayload",
        "variableName" : "loggingOptionsPayload",
        "variableType" : "LoggingOptionsPayload",
        "documentation" : null,
        "simpleType" : "LoggingOptionsPayload",
        "variableSetterType" : "LoggingOptionsPayload"
      },
      "wrapper" : false
    },
    "MalformedPolicyException" : {
      "c2jName" : "MalformedPolicyException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The policy documentation is not valid.</p>",
      "enums" : null,
      "errorCode" : "MalformedPolicyException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "MalformedPolicyException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "MalformedPolicyException",
        "variableName" : "malformedPolicyException",
        "variableType" : "MalformedPolicyException",
        "documentation" : null,
        "simpleType" : "MalformedPolicyException",
        "variableSetterType" : "MalformedPolicyException"
      },
      "wrapper" : false
    },
    "MessageFormat" : {
      "c2jName" : "MessageFormat",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "RAW",
        "value" : "RAW"
      }, {
        "name" : "JSON",
        "value" : "JSON"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "MessageFormat",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "MessageFormat",
        "variableName" : "messageFormat",
        "variableType" : "MessageFormat",
        "documentation" : null,
        "simpleType" : "MessageFormat",
        "variableSetterType" : "MessageFormat"
      },
      "wrapper" : false
    },
    "OutgoingCertificate" : {
      "c2jName" : "OutgoingCertificate",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A certificate that has been transfered but not yet accepted.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "certificateArn",
        "c2jShape" : "CertificateArn",
        "deprecated" : false,
        "documentation" : "<p>The certificate ARN.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The certificate ARN.</p>\n@param certificateArn The certificate ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCertificateArn",
        "getterDocumentation" : "/**<p>The certificate ARN.</p>\n@return The certificate ARN.*/",
        "getterMethodName" : "getCertificateArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "certificateArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "certificateArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CertificateArn",
        "setterDocumentation" : "/**<p>The certificate ARN.</p>\n@param certificateArn The certificate ARN.*/",
        "setterMethodName" : "setCertificateArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The certificate ARN.</p>\n@param certificateArn The certificate ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateArn",
          "variableType" : "String",
          "documentation" : "<p>The certificate ARN.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "certificateId",
        "c2jShape" : "CertificateId",
        "deprecated" : false,
        "documentation" : "<p>The certificate ID.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The certificate ID.</p>\n@param certificateId The certificate ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCertificateId",
        "getterDocumentation" : "/**<p>The certificate ID.</p>\n@return The certificate ID.*/",
        "getterMethodName" : "getCertificateId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "certificateId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "certificateId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CertificateId",
        "setterDocumentation" : "/**<p>The certificate ID.</p>\n@param certificateId The certificate ID.*/",
        "setterMethodName" : "setCertificateId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The certificate ID.</p>\n@param certificateId The certificate ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateId",
          "variableType" : "String",
          "documentation" : "<p>The certificate ID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "transferredTo",
        "c2jShape" : "AwsAccountId",
        "deprecated" : false,
        "documentation" : "<p>The AWS account to which the transfer was made.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The AWS account to which the transfer was made.</p>\n@param transferredTo The AWS account to which the transfer was made.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTransferredTo",
        "getterDocumentation" : "/**<p>The AWS account to which the transfer was made.</p>\n@return The AWS account to which the transfer was made.*/",
        "getterMethodName" : "getTransferredTo",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "transferredTo",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "transferredTo",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TransferredTo",
        "setterDocumentation" : "/**<p>The AWS account to which the transfer was made.</p>\n@param transferredTo The AWS account to which the transfer was made.*/",
        "setterMethodName" : "setTransferredTo",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "transferredTo",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The AWS account to which the transfer was made.</p>\n@param transferredTo The AWS account to which the transfer was made.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "transferredTo",
          "variableType" : "String",
          "documentation" : "<p>The AWS account to which the transfer was made.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "transferDate",
        "c2jShape" : "DateType",
        "deprecated" : false,
        "documentation" : "<p>The date the transfer was initiated.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date the transfer was initiated.</p>\n@param transferDate The date the transfer was initiated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTransferDate",
        "getterDocumentation" : "/**<p>The date the transfer was initiated.</p>\n@return The date the transfer was initiated.*/",
        "getterMethodName" : "getTransferDate",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "transferDate",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "transferDate",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "TransferDate",
        "setterDocumentation" : "/**<p>The date the transfer was initiated.</p>\n@param transferDate The date the transfer was initiated.*/",
        "setterMethodName" : "setTransferDate",
        "setterModel" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "transferDate",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date the transfer was initiated.</p>\n@param transferDate The date the transfer was initiated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "transferDate",
          "variableType" : "java.util.Date",
          "documentation" : "<p>The date the transfer was initiated.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "transferMessage",
        "c2jShape" : "Message",
        "deprecated" : false,
        "documentation" : "<p>The transfer message.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The transfer message.</p>\n@param transferMessage The transfer message.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTransferMessage",
        "getterDocumentation" : "/**<p>The transfer message.</p>\n@return The transfer message.*/",
        "getterMethodName" : "getTransferMessage",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "transferMessage",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "transferMessage",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TransferMessage",
        "setterDocumentation" : "/**<p>The transfer message.</p>\n@param transferMessage The transfer message.*/",
        "setterMethodName" : "setTransferMessage",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "transferMessage",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The transfer message.</p>\n@param transferMessage The transfer message.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "transferMessage",
          "variableType" : "String",
          "documentation" : "<p>The transfer message.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "creationDate",
        "c2jShape" : "DateType",
        "deprecated" : false,
        "documentation" : "<p>The certificate creation date.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The certificate creation date.</p>\n@param creationDate The certificate creation date.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCreationDate",
        "getterDocumentation" : "/**<p>The certificate creation date.</p>\n@return The certificate creation date.*/",
        "getterMethodName" : "getCreationDate",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "creationDate",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "creationDate",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "CreationDate",
        "setterDocumentation" : "/**<p>The certificate creation date.</p>\n@param creationDate The certificate creation date.*/",
        "setterMethodName" : "setCreationDate",
        "setterModel" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "creationDate",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The certificate creation date.</p>\n@param creationDate The certificate creation date.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "creationDate",
          "variableType" : "java.util.Date",
          "documentation" : "<p>The certificate creation date.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CertificateArn" : {
          "c2jName" : "certificateArn",
          "c2jShape" : "CertificateArn",
          "deprecated" : false,
          "documentation" : "<p>The certificate ARN.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The certificate ARN.</p>\n@param certificateArn The certificate ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCertificateArn",
          "getterDocumentation" : "/**<p>The certificate ARN.</p>\n@return The certificate ARN.*/",
          "getterMethodName" : "getCertificateArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "certificateArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "certificateArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CertificateArn",
          "setterDocumentation" : "/**<p>The certificate ARN.</p>\n@param certificateArn The certificate ARN.*/",
          "setterMethodName" : "setCertificateArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The certificate ARN.</p>\n@param certificateArn The certificate ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateArn",
            "variableType" : "String",
            "documentation" : "<p>The certificate ARN.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CertificateId" : {
          "c2jName" : "certificateId",
          "c2jShape" : "CertificateId",
          "deprecated" : false,
          "documentation" : "<p>The certificate ID.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The certificate ID.</p>\n@param certificateId The certificate ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCertificateId",
          "getterDocumentation" : "/**<p>The certificate ID.</p>\n@return The certificate ID.*/",
          "getterMethodName" : "getCertificateId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "certificateId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "certificateId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CertificateId",
          "setterDocumentation" : "/**<p>The certificate ID.</p>\n@param certificateId The certificate ID.*/",
          "setterMethodName" : "setCertificateId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The certificate ID.</p>\n@param certificateId The certificate ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateId",
            "variableType" : "String",
            "documentation" : "<p>The certificate ID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CreationDate" : {
          "c2jName" : "creationDate",
          "c2jShape" : "DateType",
          "deprecated" : false,
          "documentation" : "<p>The certificate creation date.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The certificate creation date.</p>\n@param creationDate The certificate creation date.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCreationDate",
          "getterDocumentation" : "/**<p>The certificate creation date.</p>\n@return The certificate creation date.*/",
          "getterMethodName" : "getCreationDate",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "creationDate",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "creationDate",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "CreationDate",
          "setterDocumentation" : "/**<p>The certificate creation date.</p>\n@param creationDate The certificate creation date.*/",
          "setterMethodName" : "setCreationDate",
          "setterModel" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "creationDate",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The certificate creation date.</p>\n@param creationDate The certificate creation date.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "creationDate",
            "variableType" : "java.util.Date",
            "documentation" : "<p>The certificate creation date.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "TransferDate" : {
          "c2jName" : "transferDate",
          "c2jShape" : "DateType",
          "deprecated" : false,
          "documentation" : "<p>The date the transfer was initiated.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date the transfer was initiated.</p>\n@param transferDate The date the transfer was initiated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTransferDate",
          "getterDocumentation" : "/**<p>The date the transfer was initiated.</p>\n@return The date the transfer was initiated.*/",
          "getterMethodName" : "getTransferDate",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "transferDate",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "transferDate",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "TransferDate",
          "setterDocumentation" : "/**<p>The date the transfer was initiated.</p>\n@param transferDate The date the transfer was initiated.*/",
          "setterMethodName" : "setTransferDate",
          "setterModel" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "transferDate",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date the transfer was initiated.</p>\n@param transferDate The date the transfer was initiated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "transferDate",
            "variableType" : "java.util.Date",
            "documentation" : "<p>The date the transfer was initiated.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "TransferMessage" : {
          "c2jName" : "transferMessage",
          "c2jShape" : "Message",
          "deprecated" : false,
          "documentation" : "<p>The transfer message.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The transfer message.</p>\n@param transferMessage The transfer message.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTransferMessage",
          "getterDocumentation" : "/**<p>The transfer message.</p>\n@return The transfer message.*/",
          "getterMethodName" : "getTransferMessage",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "transferMessage",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "transferMessage",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TransferMessage",
          "setterDocumentation" : "/**<p>The transfer message.</p>\n@param transferMessage The transfer message.*/",
          "setterMethodName" : "setTransferMessage",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "transferMessage",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The transfer message.</p>\n@param transferMessage The transfer message.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "transferMessage",
            "variableType" : "String",
            "documentation" : "<p>The transfer message.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TransferredTo" : {
          "c2jName" : "transferredTo",
          "c2jShape" : "AwsAccountId",
          "deprecated" : false,
          "documentation" : "<p>The AWS account to which the transfer was made.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The AWS account to which the transfer was made.</p>\n@param transferredTo The AWS account to which the transfer was made.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTransferredTo",
          "getterDocumentation" : "/**<p>The AWS account to which the transfer was made.</p>\n@return The AWS account to which the transfer was made.*/",
          "getterMethodName" : "getTransferredTo",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "transferredTo",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "transferredTo",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TransferredTo",
          "setterDocumentation" : "/**<p>The AWS account to which the transfer was made.</p>\n@param transferredTo The AWS account to which the transfer was made.*/",
          "setterMethodName" : "setTransferredTo",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "transferredTo",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The AWS account to which the transfer was made.</p>\n@param transferredTo The AWS account to which the transfer was made.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "transferredTo",
            "variableType" : "String",
            "documentation" : "<p>The AWS account to which the transfer was made.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "OutgoingCertificate",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "OutgoingCertificate",
        "variableName" : "outgoingCertificate",
        "variableType" : "OutgoingCertificate",
        "documentation" : null,
        "simpleType" : "OutgoingCertificate",
        "variableSetterType" : "OutgoingCertificate"
      },
      "wrapper" : false
    },
    "Policy" : {
      "c2jName" : "Policy",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Describes an AWS IoT policy.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "policyName",
        "c2jShape" : "PolicyName",
        "deprecated" : false,
        "documentation" : "<p>The policy name.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicyName",
        "getterDocumentation" : "/**<p>The policy name.</p>\n@return The policy name.*/",
        "getterMethodName" : "getPolicyName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "policyName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "policyName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PolicyName",
        "setterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.*/",
        "setterMethodName" : "setPolicyName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyName",
          "variableType" : "String",
          "documentation" : "<p>The policy name.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "policyArn",
        "c2jShape" : "PolicyArn",
        "deprecated" : false,
        "documentation" : "<p>The policy ARN.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicyArn",
        "getterDocumentation" : "/**<p>The policy ARN.</p>\n@return The policy ARN.*/",
        "getterMethodName" : "getPolicyArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "policyArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "policyArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PolicyArn",
        "setterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.*/",
        "setterMethodName" : "setPolicyArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyArn",
          "variableType" : "String",
          "documentation" : "<p>The policy ARN.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "PolicyArn" : {
          "c2jName" : "policyArn",
          "c2jShape" : "PolicyArn",
          "deprecated" : false,
          "documentation" : "<p>The policy ARN.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicyArn",
          "getterDocumentation" : "/**<p>The policy ARN.</p>\n@return The policy ARN.*/",
          "getterMethodName" : "getPolicyArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "policyArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "policyArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PolicyArn",
          "setterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.*/",
          "setterMethodName" : "setPolicyArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyArn",
            "variableType" : "String",
            "documentation" : "<p>The policy ARN.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "PolicyName" : {
          "c2jName" : "policyName",
          "c2jShape" : "PolicyName",
          "deprecated" : false,
          "documentation" : "<p>The policy name.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicyName",
          "getterDocumentation" : "/**<p>The policy name.</p>\n@return The policy name.*/",
          "getterMethodName" : "getPolicyName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "policyName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "policyName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PolicyName",
          "setterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.*/",
          "setterMethodName" : "setPolicyName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyName",
            "variableType" : "String",
            "documentation" : "<p>The policy name.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Policy",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "Policy",
        "variableName" : "policy",
        "variableType" : "Policy",
        "documentation" : null,
        "simpleType" : "Policy",
        "variableSetterType" : "Policy"
      },
      "wrapper" : false
    },
    "PolicyVersion" : {
      "c2jName" : "PolicyVersion",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Describes a policy version.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "versionId",
        "c2jShape" : "PolicyVersionId",
        "deprecated" : false,
        "documentation" : "<p>The policy version ID.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param versionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withVersionId",
        "getterDocumentation" : "/**<p>The policy version ID.</p>\n@return The policy version ID.*/",
        "getterMethodName" : "getVersionId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "versionId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "versionId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "VersionId",
        "setterDocumentation" : "/**<p>The policy version ID.</p>\n@param versionId The policy version ID.*/",
        "setterMethodName" : "setVersionId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "versionId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param versionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "versionId",
          "variableType" : "String",
          "documentation" : "<p>The policy version ID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "isDefaultVersion",
        "c2jShape" : "IsDefaultVersion",
        "deprecated" : false,
        "documentation" : "<p>Specifies whether the policy version is the default.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@param isDefaultVersion Specifies whether the policy version is the default.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withIsDefaultVersion",
        "getterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@return Specifies whether the policy version is the default.*/",
        "getterMethodName" : "getIsDefaultVersion",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "isDefaultVersion",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "isDefaultVersion",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "IsDefaultVersion",
        "setterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@param isDefaultVersion Specifies whether the policy version is the default.*/",
        "setterMethodName" : "setIsDefaultVersion",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "isDefaultVersion",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@param isDefaultVersion Specifies whether the policy version is the default.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "isDefaultVersion",
          "variableType" : "Boolean",
          "documentation" : "<p>Specifies whether the policy version is the default.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "createDate",
        "c2jShape" : "DateType",
        "deprecated" : false,
        "documentation" : "<p>The date and time the policy was created.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date and time the policy was created.</p>\n@param createDate The date and time the policy was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCreateDate",
        "getterDocumentation" : "/**<p>The date and time the policy was created.</p>\n@return The date and time the policy was created.*/",
        "getterMethodName" : "getCreateDate",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "createDate",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "createDate",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "CreateDate",
        "setterDocumentation" : "/**<p>The date and time the policy was created.</p>\n@param createDate The date and time the policy was created.*/",
        "setterMethodName" : "setCreateDate",
        "setterModel" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "createDate",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date and time the policy was created.</p>\n@param createDate The date and time the policy was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "createDate",
          "variableType" : "java.util.Date",
          "documentation" : "<p>The date and time the policy was created.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CreateDate" : {
          "c2jName" : "createDate",
          "c2jShape" : "DateType",
          "deprecated" : false,
          "documentation" : "<p>The date and time the policy was created.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date and time the policy was created.</p>\n@param createDate The date and time the policy was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCreateDate",
          "getterDocumentation" : "/**<p>The date and time the policy was created.</p>\n@return The date and time the policy was created.*/",
          "getterMethodName" : "getCreateDate",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "createDate",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "createDate",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "CreateDate",
          "setterDocumentation" : "/**<p>The date and time the policy was created.</p>\n@param createDate The date and time the policy was created.*/",
          "setterMethodName" : "setCreateDate",
          "setterModel" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "createDate",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date and time the policy was created.</p>\n@param createDate The date and time the policy was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "createDate",
            "variableType" : "java.util.Date",
            "documentation" : "<p>The date and time the policy was created.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "IsDefaultVersion" : {
          "c2jName" : "isDefaultVersion",
          "c2jShape" : "IsDefaultVersion",
          "deprecated" : false,
          "documentation" : "<p>Specifies whether the policy version is the default.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@param isDefaultVersion Specifies whether the policy version is the default.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withIsDefaultVersion",
          "getterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@return Specifies whether the policy version is the default.*/",
          "getterMethodName" : "getIsDefaultVersion",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "isDefaultVersion",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "isDefaultVersion",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "IsDefaultVersion",
          "setterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@param isDefaultVersion Specifies whether the policy version is the default.*/",
          "setterMethodName" : "setIsDefaultVersion",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "isDefaultVersion",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@param isDefaultVersion Specifies whether the policy version is the default.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "isDefaultVersion",
            "variableType" : "Boolean",
            "documentation" : "<p>Specifies whether the policy version is the default.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        },
        "VersionId" : {
          "c2jName" : "versionId",
          "c2jShape" : "PolicyVersionId",
          "deprecated" : false,
          "documentation" : "<p>The policy version ID.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param versionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withVersionId",
          "getterDocumentation" : "/**<p>The policy version ID.</p>\n@return The policy version ID.*/",
          "getterMethodName" : "getVersionId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "versionId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "versionId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "VersionId",
          "setterDocumentation" : "/**<p>The policy version ID.</p>\n@param versionId The policy version ID.*/",
          "setterMethodName" : "setVersionId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "versionId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param versionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "versionId",
            "variableType" : "String",
            "documentation" : "<p>The policy version ID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "PolicyVersion",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "PolicyVersion",
        "variableName" : "policyVersion",
        "variableType" : "PolicyVersion",
        "documentation" : null,
        "simpleType" : "PolicyVersion",
        "variableSetterType" : "PolicyVersion"
      },
      "wrapper" : false
    },
    "PutItemInput" : {
      "c2jName" : "PutItemInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the DynamoActionVS action that specifies the DynamoDB table to which the message data will be written.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "tableName",
        "c2jShape" : "TableName",
        "deprecated" : false,
        "documentation" : "<p>The table where the message data will be written</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The table where the message data will be written</p>\n@param tableName The table where the message data will be written\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTableName",
        "getterDocumentation" : "/**<p>The table where the message data will be written</p>\n@return The table where the message data will be written*/",
        "getterMethodName" : "getTableName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "tableName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "tableName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TableName",
        "setterDocumentation" : "/**<p>The table where the message data will be written</p>\n@param tableName The table where the message data will be written*/",
        "setterMethodName" : "setTableName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "tableName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The table where the message data will be written</p>\n@param tableName The table where the message data will be written\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "tableName",
          "variableType" : "String",
          "documentation" : "<p>The table where the message data will be written</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "TableName" : {
          "c2jName" : "tableName",
          "c2jShape" : "TableName",
          "deprecated" : false,
          "documentation" : "<p>The table where the message data will be written</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The table where the message data will be written</p>\n@param tableName The table where the message data will be written\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTableName",
          "getterDocumentation" : "/**<p>The table where the message data will be written</p>\n@return The table where the message data will be written*/",
          "getterMethodName" : "getTableName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "tableName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "tableName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TableName",
          "setterDocumentation" : "/**<p>The table where the message data will be written</p>\n@param tableName The table where the message data will be written*/",
          "setterMethodName" : "setTableName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "tableName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The table where the message data will be written</p>\n@param tableName The table where the message data will be written\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "tableName",
            "variableType" : "String",
            "documentation" : "<p>The table where the message data will be written</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "tableName" ],
      "shapeName" : "PutItemInput",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "PutItemInput",
        "variableName" : "putItemInput",
        "variableType" : "PutItemInput",
        "documentation" : null,
        "simpleType" : "PutItemInput",
        "variableSetterType" : "PutItemInput"
      },
      "wrapper" : false
    },
    "RegisterCACertificateRequest" : {
      "c2jName" : "RegisterCACertificateRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input to the RegisterCACertificate operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "RegisterCACertificate",
        "locationName" : null,
        "requestUri" : "/cacertificate",
        "target" : null,
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "caCertificate",
        "c2jShape" : "CertificatePem",
        "deprecated" : false,
        "documentation" : "<p>The CA certificate.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The CA certificate.</p>\n@param caCertificate The CA certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCaCertificate",
        "getterDocumentation" : "/**<p>The CA certificate.</p>\n@return The CA certificate.*/",
        "getterMethodName" : "getCaCertificate",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "caCertificate",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "caCertificate",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CaCertificate",
        "setterDocumentation" : "/**<p>The CA certificate.</p>\n@param caCertificate The CA certificate.*/",
        "setterMethodName" : "setCaCertificate",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "caCertificate",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The CA certificate.</p>\n@param caCertificate The CA certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "caCertificate",
          "variableType" : "String",
          "documentation" : "<p>The CA certificate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "verificationCertificate",
        "c2jShape" : "CertificatePem",
        "deprecated" : false,
        "documentation" : "<p>The private key verification certificate.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The private key verification certificate.</p>\n@param verificationCertificate The private key verification certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withVerificationCertificate",
        "getterDocumentation" : "/**<p>The private key verification certificate.</p>\n@return The private key verification certificate.*/",
        "getterMethodName" : "getVerificationCertificate",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "verificationCertificate",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "verificationCertificate",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "VerificationCertificate",
        "setterDocumentation" : "/**<p>The private key verification certificate.</p>\n@param verificationCertificate The private key verification certificate.*/",
        "setterMethodName" : "setVerificationCertificate",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "verificationCertificate",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The private key verification certificate.</p>\n@param verificationCertificate The private key verification certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "verificationCertificate",
          "variableType" : "String",
          "documentation" : "<p>The private key verification certificate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "setAsActive",
        "c2jShape" : "SetAsActive",
        "deprecated" : false,
        "documentation" : "<p>A boolean value that specifies if the CA certificate is set to active.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A boolean value that specifies if the CA certificate is set to active.</p>\n@param setAsActive A boolean value that specifies if the CA certificate is set to active.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSetAsActive",
        "getterDocumentation" : "/**<p>A boolean value that specifies if the CA certificate is set to active.</p>\n@return A boolean value that specifies if the CA certificate is set to active.*/",
        "getterMethodName" : "getSetAsActive",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "setAsActive",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "setAsActive",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "SetAsActive",
        "setterDocumentation" : "/**<p>A boolean value that specifies if the CA certificate is set to active.</p>\n@param setAsActive A boolean value that specifies if the CA certificate is set to active.*/",
        "setterMethodName" : "setSetAsActive",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "setAsActive",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A boolean value that specifies if the CA certificate is set to active.</p>\n@param setAsActive A boolean value that specifies if the CA certificate is set to active.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "setAsActive",
          "variableType" : "Boolean",
          "documentation" : "<p>A boolean value that specifies if the CA certificate is set to active.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "allowAutoRegistration",
        "c2jShape" : "AllowAutoRegistration",
        "deprecated" : false,
        "documentation" : "<p>Allows this CA certificate to be used for auto registration of device certificates.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Allows this CA certificate to be used for auto registration of device certificates.</p>\n@param allowAutoRegistration Allows this CA certificate to be used for auto registration of device certificates.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAllowAutoRegistration",
        "getterDocumentation" : "/**<p>Allows this CA certificate to be used for auto registration of device certificates.</p>\n@return Allows this CA certificate to be used for auto registration of device certificates.*/",
        "getterMethodName" : "getAllowAutoRegistration",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "allowAutoRegistration",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "allowAutoRegistration",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "AllowAutoRegistration",
        "setterDocumentation" : "/**<p>Allows this CA certificate to be used for auto registration of device certificates.</p>\n@param allowAutoRegistration Allows this CA certificate to be used for auto registration of device certificates.*/",
        "setterMethodName" : "setAllowAutoRegistration",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "allowAutoRegistration",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Allows this CA certificate to be used for auto registration of device certificates.</p>\n@param allowAutoRegistration Allows this CA certificate to be used for auto registration of device certificates.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "allowAutoRegistration",
          "variableType" : "Boolean",
          "documentation" : "<p>Allows this CA certificate to be used for auto registration of device certificates.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AllowAutoRegistration" : {
          "c2jName" : "allowAutoRegistration",
          "c2jShape" : "AllowAutoRegistration",
          "deprecated" : false,
          "documentation" : "<p>Allows this CA certificate to be used for auto registration of device certificates.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Allows this CA certificate to be used for auto registration of device certificates.</p>\n@param allowAutoRegistration Allows this CA certificate to be used for auto registration of device certificates.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAllowAutoRegistration",
          "getterDocumentation" : "/**<p>Allows this CA certificate to be used for auto registration of device certificates.</p>\n@return Allows this CA certificate to be used for auto registration of device certificates.*/",
          "getterMethodName" : "getAllowAutoRegistration",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "allowAutoRegistration",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "allowAutoRegistration",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "AllowAutoRegistration",
          "setterDocumentation" : "/**<p>Allows this CA certificate to be used for auto registration of device certificates.</p>\n@param allowAutoRegistration Allows this CA certificate to be used for auto registration of device certificates.*/",
          "setterMethodName" : "setAllowAutoRegistration",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "allowAutoRegistration",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Allows this CA certificate to be used for auto registration of device certificates.</p>\n@param allowAutoRegistration Allows this CA certificate to be used for auto registration of device certificates.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "allowAutoRegistration",
            "variableType" : "Boolean",
            "documentation" : "<p>Allows this CA certificate to be used for auto registration of device certificates.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        },
        "CaCertificate" : {
          "c2jName" : "caCertificate",
          "c2jShape" : "CertificatePem",
          "deprecated" : false,
          "documentation" : "<p>The CA certificate.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The CA certificate.</p>\n@param caCertificate The CA certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCaCertificate",
          "getterDocumentation" : "/**<p>The CA certificate.</p>\n@return The CA certificate.*/",
          "getterMethodName" : "getCaCertificate",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "caCertificate",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "caCertificate",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CaCertificate",
          "setterDocumentation" : "/**<p>The CA certificate.</p>\n@param caCertificate The CA certificate.*/",
          "setterMethodName" : "setCaCertificate",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "caCertificate",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The CA certificate.</p>\n@param caCertificate The CA certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "caCertificate",
            "variableType" : "String",
            "documentation" : "<p>The CA certificate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SetAsActive" : {
          "c2jName" : "setAsActive",
          "c2jShape" : "SetAsActive",
          "deprecated" : false,
          "documentation" : "<p>A boolean value that specifies if the CA certificate is set to active.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A boolean value that specifies if the CA certificate is set to active.</p>\n@param setAsActive A boolean value that specifies if the CA certificate is set to active.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSetAsActive",
          "getterDocumentation" : "/**<p>A boolean value that specifies if the CA certificate is set to active.</p>\n@return A boolean value that specifies if the CA certificate is set to active.*/",
          "getterMethodName" : "getSetAsActive",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "setAsActive",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "setAsActive",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "SetAsActive",
          "setterDocumentation" : "/**<p>A boolean value that specifies if the CA certificate is set to active.</p>\n@param setAsActive A boolean value that specifies if the CA certificate is set to active.*/",
          "setterMethodName" : "setSetAsActive",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "setAsActive",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A boolean value that specifies if the CA certificate is set to active.</p>\n@param setAsActive A boolean value that specifies if the CA certificate is set to active.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "setAsActive",
            "variableType" : "Boolean",
            "documentation" : "<p>A boolean value that specifies if the CA certificate is set to active.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        },
        "VerificationCertificate" : {
          "c2jName" : "verificationCertificate",
          "c2jShape" : "CertificatePem",
          "deprecated" : false,
          "documentation" : "<p>The private key verification certificate.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The private key verification certificate.</p>\n@param verificationCertificate The private key verification certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withVerificationCertificate",
          "getterDocumentation" : "/**<p>The private key verification certificate.</p>\n@return The private key verification certificate.*/",
          "getterMethodName" : "getVerificationCertificate",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "verificationCertificate",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "verificationCertificate",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "VerificationCertificate",
          "setterDocumentation" : "/**<p>The private key verification certificate.</p>\n@param verificationCertificate The private key verification certificate.*/",
          "setterMethodName" : "setVerificationCertificate",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "verificationCertificate",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The private key verification certificate.</p>\n@param verificationCertificate The private key verification certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "verificationCertificate",
            "variableType" : "String",
            "documentation" : "<p>The private key verification certificate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "caCertificate", "verificationCertificate" ],
      "shapeName" : "RegisterCACertificateRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "RegisterCACertificateRequest",
        "variableName" : "registerCACertificateRequest",
        "variableType" : "RegisterCACertificateRequest",
        "documentation" : null,
        "simpleType" : "RegisterCACertificateRequest",
        "variableSetterType" : "RegisterCACertificateRequest"
      },
      "wrapper" : false
    },
    "RegisterCACertificateResult" : {
      "c2jName" : "RegisterCACertificateResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The output from the RegisterCACertificateResponse operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "certificateArn",
        "c2jShape" : "CertificateArn",
        "deprecated" : false,
        "documentation" : "<p>The CA certificate ARN.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The CA certificate ARN.</p>\n@param certificateArn The CA certificate ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCertificateArn",
        "getterDocumentation" : "/**<p>The CA certificate ARN.</p>\n@return The CA certificate ARN.*/",
        "getterMethodName" : "getCertificateArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "certificateArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "certificateArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CertificateArn",
        "setterDocumentation" : "/**<p>The CA certificate ARN.</p>\n@param certificateArn The CA certificate ARN.*/",
        "setterMethodName" : "setCertificateArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The CA certificate ARN.</p>\n@param certificateArn The CA certificate ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateArn",
          "variableType" : "String",
          "documentation" : "<p>The CA certificate ARN.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "certificateId",
        "c2jShape" : "CertificateId",
        "deprecated" : false,
        "documentation" : "<p>The CA certificate identifier.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The CA certificate identifier.</p>\n@param certificateId The CA certificate identifier.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCertificateId",
        "getterDocumentation" : "/**<p>The CA certificate identifier.</p>\n@return The CA certificate identifier.*/",
        "getterMethodName" : "getCertificateId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "certificateId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "certificateId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CertificateId",
        "setterDocumentation" : "/**<p>The CA certificate identifier.</p>\n@param certificateId The CA certificate identifier.*/",
        "setterMethodName" : "setCertificateId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The CA certificate identifier.</p>\n@param certificateId The CA certificate identifier.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateId",
          "variableType" : "String",
          "documentation" : "<p>The CA certificate identifier.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CertificateArn" : {
          "c2jName" : "certificateArn",
          "c2jShape" : "CertificateArn",
          "deprecated" : false,
          "documentation" : "<p>The CA certificate ARN.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The CA certificate ARN.</p>\n@param certificateArn The CA certificate ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCertificateArn",
          "getterDocumentation" : "/**<p>The CA certificate ARN.</p>\n@return The CA certificate ARN.*/",
          "getterMethodName" : "getCertificateArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "certificateArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "certificateArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CertificateArn",
          "setterDocumentation" : "/**<p>The CA certificate ARN.</p>\n@param certificateArn The CA certificate ARN.*/",
          "setterMethodName" : "setCertificateArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The CA certificate ARN.</p>\n@param certificateArn The CA certificate ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateArn",
            "variableType" : "String",
            "documentation" : "<p>The CA certificate ARN.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CertificateId" : {
          "c2jName" : "certificateId",
          "c2jShape" : "CertificateId",
          "deprecated" : false,
          "documentation" : "<p>The CA certificate identifier.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The CA certificate identifier.</p>\n@param certificateId The CA certificate identifier.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCertificateId",
          "getterDocumentation" : "/**<p>The CA certificate identifier.</p>\n@return The CA certificate identifier.*/",
          "getterMethodName" : "getCertificateId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "certificateId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "certificateId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CertificateId",
          "setterDocumentation" : "/**<p>The CA certificate identifier.</p>\n@param certificateId The CA certificate identifier.*/",
          "setterMethodName" : "setCertificateId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The CA certificate identifier.</p>\n@param certificateId The CA certificate identifier.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateId",
            "variableType" : "String",
            "documentation" : "<p>The CA certificate identifier.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RegisterCACertificateResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "RegisterCACertificateResult",
        "variableName" : "registerCACertificateResult",
        "variableType" : "RegisterCACertificateResult",
        "documentation" : null,
        "simpleType" : "RegisterCACertificateResult",
        "variableSetterType" : "RegisterCACertificateResult"
      },
      "wrapper" : false
    },
    "RegisterCertificateRequest" : {
      "c2jName" : "RegisterCertificateRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input to the RegisterCertificate operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "RegisterCertificate",
        "locationName" : null,
        "requestUri" : "/certificate/register",
        "target" : null,
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "certificatePem",
        "c2jShape" : "CertificatePem",
        "deprecated" : false,
        "documentation" : "<p>The certificate data, in PEM format.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@param certificatePem The certificate data, in PEM format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCertificatePem",
        "getterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@return The certificate data, in PEM format.*/",
        "getterMethodName" : "getCertificatePem",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "certificatePem",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "certificatePem",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CertificatePem",
        "setterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@param certificatePem The certificate data, in PEM format.*/",
        "setterMethodName" : "setCertificatePem",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificatePem",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@param certificatePem The certificate data, in PEM format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificatePem",
          "variableType" : "String",
          "documentation" : "<p>The certificate data, in PEM format.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "caCertificatePem",
        "c2jShape" : "CertificatePem",
        "deprecated" : false,
        "documentation" : "<p>The CA certificate used to sign the device certificate being registered.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The CA certificate used to sign the device certificate being registered.</p>\n@param caCertificatePem The CA certificate used to sign the device certificate being registered.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCaCertificatePem",
        "getterDocumentation" : "/**<p>The CA certificate used to sign the device certificate being registered.</p>\n@return The CA certificate used to sign the device certificate being registered.*/",
        "getterMethodName" : "getCaCertificatePem",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "caCertificatePem",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "caCertificatePem",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CaCertificatePem",
        "setterDocumentation" : "/**<p>The CA certificate used to sign the device certificate being registered.</p>\n@param caCertificatePem The CA certificate used to sign the device certificate being registered.*/",
        "setterMethodName" : "setCaCertificatePem",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "caCertificatePem",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The CA certificate used to sign the device certificate being registered.</p>\n@param caCertificatePem The CA certificate used to sign the device certificate being registered.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "caCertificatePem",
          "variableType" : "String",
          "documentation" : "<p>The CA certificate used to sign the device certificate being registered.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "setAsActive",
        "c2jShape" : "SetAsActiveFlag",
        "deprecated" : true,
        "documentation" : "<p>A boolean value that specifies if the CA certificate is set to active.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A boolean value that specifies if the CA certificate is set to active.</p>\n@param setAsActive A boolean value that specifies if the CA certificate is set to active.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSetAsActive",
        "getterDocumentation" : "/**<p>A boolean value that specifies if the CA certificate is set to active.</p>\n@return A boolean value that specifies if the CA certificate is set to active.*/",
        "getterMethodName" : "getSetAsActive",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "setAsActive",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "setAsActive",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "SetAsActive",
        "setterDocumentation" : "/**<p>A boolean value that specifies if the CA certificate is set to active.</p>\n@param setAsActive A boolean value that specifies if the CA certificate is set to active.*/",
        "setterMethodName" : "setSetAsActive",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "setAsActive",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A boolean value that specifies if the CA certificate is set to active.</p>\n@param setAsActive A boolean value that specifies if the CA certificate is set to active.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "setAsActive",
          "variableType" : "Boolean",
          "documentation" : "<p>A boolean value that specifies if the CA certificate is set to active.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "status",
        "c2jShape" : "CertificateStatus",
        "deprecated" : false,
        "documentation" : "<p>The status of the register certificate request.</p>",
        "enumType" : "CertificateStatus",
        "fluentSetterDocumentation" : "/**<p>The status of the register certificate request.</p>\n@param status The status of the register certificate request.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CertificateStatus*/",
        "fluentSetterMethodName" : "withStatus",
        "getterDocumentation" : "/**<p>The status of the register certificate request.</p>\n@return The status of the register certificate request.\n@see CertificateStatus*/",
        "getterMethodName" : "getStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "status",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "status",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Status",
        "setterDocumentation" : "/**<p>The status of the register certificate request.</p>\n@param status The status of the register certificate request.\n@see CertificateStatus*/",
        "setterMethodName" : "setStatus",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The status of the register certificate request.</p>\n@param status The status of the register certificate request.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CertificateStatus*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "status",
          "variableType" : "String",
          "documentation" : "<p>The status of the register certificate request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CaCertificatePem" : {
          "c2jName" : "caCertificatePem",
          "c2jShape" : "CertificatePem",
          "deprecated" : false,
          "documentation" : "<p>The CA certificate used to sign the device certificate being registered.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The CA certificate used to sign the device certificate being registered.</p>\n@param caCertificatePem The CA certificate used to sign the device certificate being registered.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCaCertificatePem",
          "getterDocumentation" : "/**<p>The CA certificate used to sign the device certificate being registered.</p>\n@return The CA certificate used to sign the device certificate being registered.*/",
          "getterMethodName" : "getCaCertificatePem",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "caCertificatePem",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "caCertificatePem",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CaCertificatePem",
          "setterDocumentation" : "/**<p>The CA certificate used to sign the device certificate being registered.</p>\n@param caCertificatePem The CA certificate used to sign the device certificate being registered.*/",
          "setterMethodName" : "setCaCertificatePem",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "caCertificatePem",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The CA certificate used to sign the device certificate being registered.</p>\n@param caCertificatePem The CA certificate used to sign the device certificate being registered.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "caCertificatePem",
            "variableType" : "String",
            "documentation" : "<p>The CA certificate used to sign the device certificate being registered.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CertificatePem" : {
          "c2jName" : "certificatePem",
          "c2jShape" : "CertificatePem",
          "deprecated" : false,
          "documentation" : "<p>The certificate data, in PEM format.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@param certificatePem The certificate data, in PEM format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCertificatePem",
          "getterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@return The certificate data, in PEM format.*/",
          "getterMethodName" : "getCertificatePem",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "certificatePem",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "certificatePem",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CertificatePem",
          "setterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@param certificatePem The certificate data, in PEM format.*/",
          "setterMethodName" : "setCertificatePem",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificatePem",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@param certificatePem The certificate data, in PEM format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificatePem",
            "variableType" : "String",
            "documentation" : "<p>The certificate data, in PEM format.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SetAsActive" : {
          "c2jName" : "setAsActive",
          "c2jShape" : "SetAsActiveFlag",
          "deprecated" : true,
          "documentation" : "<p>A boolean value that specifies if the CA certificate is set to active.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A boolean value that specifies if the CA certificate is set to active.</p>\n@param setAsActive A boolean value that specifies if the CA certificate is set to active.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSetAsActive",
          "getterDocumentation" : "/**<p>A boolean value that specifies if the CA certificate is set to active.</p>\n@return A boolean value that specifies if the CA certificate is set to active.*/",
          "getterMethodName" : "getSetAsActive",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "setAsActive",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "setAsActive",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "SetAsActive",
          "setterDocumentation" : "/**<p>A boolean value that specifies if the CA certificate is set to active.</p>\n@param setAsActive A boolean value that specifies if the CA certificate is set to active.*/",
          "setterMethodName" : "setSetAsActive",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "setAsActive",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A boolean value that specifies if the CA certificate is set to active.</p>\n@param setAsActive A boolean value that specifies if the CA certificate is set to active.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "setAsActive",
            "variableType" : "Boolean",
            "documentation" : "<p>A boolean value that specifies if the CA certificate is set to active.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        },
        "Status" : {
          "c2jName" : "status",
          "c2jShape" : "CertificateStatus",
          "deprecated" : false,
          "documentation" : "<p>The status of the register certificate request.</p>",
          "enumType" : "CertificateStatus",
          "fluentSetterDocumentation" : "/**<p>The status of the register certificate request.</p>\n@param status The status of the register certificate request.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CertificateStatus*/",
          "fluentSetterMethodName" : "withStatus",
          "getterDocumentation" : "/**<p>The status of the register certificate request.</p>\n@return The status of the register certificate request.\n@see CertificateStatus*/",
          "getterMethodName" : "getStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "status",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "status",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Status",
          "setterDocumentation" : "/**<p>The status of the register certificate request.</p>\n@param status The status of the register certificate request.\n@see CertificateStatus*/",
          "setterMethodName" : "setStatus",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The status of the register certificate request.</p>\n@param status The status of the register certificate request.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CertificateStatus*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "status",
            "variableType" : "String",
            "documentation" : "<p>The status of the register certificate request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "certificatePem" ],
      "shapeName" : "RegisterCertificateRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "RegisterCertificateRequest",
        "variableName" : "registerCertificateRequest",
        "variableType" : "RegisterCertificateRequest",
        "documentation" : null,
        "simpleType" : "RegisterCertificateRequest",
        "variableSetterType" : "RegisterCertificateRequest"
      },
      "wrapper" : false
    },
    "RegisterCertificateResult" : {
      "c2jName" : "RegisterCertificateResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The output from the RegisterCertificate operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "certificateArn",
        "c2jShape" : "CertificateArn",
        "deprecated" : false,
        "documentation" : "<p>The certificate ARN.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The certificate ARN.</p>\n@param certificateArn The certificate ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCertificateArn",
        "getterDocumentation" : "/**<p>The certificate ARN.</p>\n@return The certificate ARN.*/",
        "getterMethodName" : "getCertificateArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "certificateArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "certificateArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CertificateArn",
        "setterDocumentation" : "/**<p>The certificate ARN.</p>\n@param certificateArn The certificate ARN.*/",
        "setterMethodName" : "setCertificateArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The certificate ARN.</p>\n@param certificateArn The certificate ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateArn",
          "variableType" : "String",
          "documentation" : "<p>The certificate ARN.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "certificateId",
        "c2jShape" : "CertificateId",
        "deprecated" : false,
        "documentation" : "<p>The certificate identifier.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The certificate identifier.</p>\n@param certificateId The certificate identifier.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCertificateId",
        "getterDocumentation" : "/**<p>The certificate identifier.</p>\n@return The certificate identifier.*/",
        "getterMethodName" : "getCertificateId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "certificateId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "certificateId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CertificateId",
        "setterDocumentation" : "/**<p>The certificate identifier.</p>\n@param certificateId The certificate identifier.*/",
        "setterMethodName" : "setCertificateId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The certificate identifier.</p>\n@param certificateId The certificate identifier.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateId",
          "variableType" : "String",
          "documentation" : "<p>The certificate identifier.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CertificateArn" : {
          "c2jName" : "certificateArn",
          "c2jShape" : "CertificateArn",
          "deprecated" : false,
          "documentation" : "<p>The certificate ARN.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The certificate ARN.</p>\n@param certificateArn The certificate ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCertificateArn",
          "getterDocumentation" : "/**<p>The certificate ARN.</p>\n@return The certificate ARN.*/",
          "getterMethodName" : "getCertificateArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "certificateArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "certificateArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CertificateArn",
          "setterDocumentation" : "/**<p>The certificate ARN.</p>\n@param certificateArn The certificate ARN.*/",
          "setterMethodName" : "setCertificateArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The certificate ARN.</p>\n@param certificateArn The certificate ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateArn",
            "variableType" : "String",
            "documentation" : "<p>The certificate ARN.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CertificateId" : {
          "c2jName" : "certificateId",
          "c2jShape" : "CertificateId",
          "deprecated" : false,
          "documentation" : "<p>The certificate identifier.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The certificate identifier.</p>\n@param certificateId The certificate identifier.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCertificateId",
          "getterDocumentation" : "/**<p>The certificate identifier.</p>\n@return The certificate identifier.*/",
          "getterMethodName" : "getCertificateId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "certificateId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "certificateId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CertificateId",
          "setterDocumentation" : "/**<p>The certificate identifier.</p>\n@param certificateId The certificate identifier.*/",
          "setterMethodName" : "setCertificateId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The certificate identifier.</p>\n@param certificateId The certificate identifier.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateId",
            "variableType" : "String",
            "documentation" : "<p>The certificate identifier.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RegisterCertificateResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "RegisterCertificateResult",
        "variableName" : "registerCertificateResult",
        "variableType" : "RegisterCertificateResult",
        "documentation" : null,
        "simpleType" : "RegisterCertificateResult",
        "variableSetterType" : "RegisterCertificateResult"
      },
      "wrapper" : false
    },
    "RegistrationCodeValidationException" : {
      "c2jName" : "RegistrationCodeValidationException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The registration code is invalid.</p>",
      "enums" : null,
      "errorCode" : "RegistrationCodeValidationException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RegistrationCodeValidationException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "RegistrationCodeValidationException",
        "variableName" : "registrationCodeValidationException",
        "variableType" : "RegistrationCodeValidationException",
        "documentation" : null,
        "simpleType" : "RegistrationCodeValidationException",
        "variableSetterType" : "RegistrationCodeValidationException"
      },
      "wrapper" : false
    },
    "RejectCertificateTransferRequest" : {
      "c2jName" : "RejectCertificateTransferRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the RejectCertificateTransfer operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "RejectCertificateTransfer",
        "locationName" : null,
        "requestUri" : "/reject-certificate-transfer/{certificateId}",
        "target" : null,
        "verb" : "PATCH",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "certificateId",
        "c2jShape" : "CertificateId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the certificate.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCertificateId",
        "getterDocumentation" : "/**<p>The ID of the certificate.</p>\n@return The ID of the certificate.*/",
        "getterMethodName" : "getCertificateId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "certificateId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "certificateId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CertificateId",
        "setterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.*/",
        "setterMethodName" : "setCertificateId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the certificate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "rejectReason",
        "c2jShape" : "Message",
        "deprecated" : false,
        "documentation" : "<p>The reason the certificate transfer was rejected.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The reason the certificate transfer was rejected.</p>\n@param rejectReason The reason the certificate transfer was rejected.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRejectReason",
        "getterDocumentation" : "/**<p>The reason the certificate transfer was rejected.</p>\n@return The reason the certificate transfer was rejected.*/",
        "getterMethodName" : "getRejectReason",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "rejectReason",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "rejectReason",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RejectReason",
        "setterDocumentation" : "/**<p>The reason the certificate transfer was rejected.</p>\n@param rejectReason The reason the certificate transfer was rejected.*/",
        "setterMethodName" : "setRejectReason",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "rejectReason",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The reason the certificate transfer was rejected.</p>\n@param rejectReason The reason the certificate transfer was rejected.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "rejectReason",
          "variableType" : "String",
          "documentation" : "<p>The reason the certificate transfer was rejected.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CertificateId" : {
          "c2jName" : "certificateId",
          "c2jShape" : "CertificateId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the certificate.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCertificateId",
          "getterDocumentation" : "/**<p>The ID of the certificate.</p>\n@return The ID of the certificate.*/",
          "getterMethodName" : "getCertificateId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "certificateId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "certificateId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CertificateId",
          "setterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.*/",
          "setterMethodName" : "setCertificateId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the certificate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RejectReason" : {
          "c2jName" : "rejectReason",
          "c2jShape" : "Message",
          "deprecated" : false,
          "documentation" : "<p>The reason the certificate transfer was rejected.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The reason the certificate transfer was rejected.</p>\n@param rejectReason The reason the certificate transfer was rejected.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRejectReason",
          "getterDocumentation" : "/**<p>The reason the certificate transfer was rejected.</p>\n@return The reason the certificate transfer was rejected.*/",
          "getterMethodName" : "getRejectReason",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "rejectReason",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "rejectReason",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RejectReason",
          "setterDocumentation" : "/**<p>The reason the certificate transfer was rejected.</p>\n@param rejectReason The reason the certificate transfer was rejected.*/",
          "setterMethodName" : "setRejectReason",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "rejectReason",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The reason the certificate transfer was rejected.</p>\n@param rejectReason The reason the certificate transfer was rejected.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "rejectReason",
            "variableType" : "String",
            "documentation" : "<p>The reason the certificate transfer was rejected.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "certificateId" ],
      "shapeName" : "RejectCertificateTransferRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "RejectCertificateTransferRequest",
        "variableName" : "rejectCertificateTransferRequest",
        "variableType" : "RejectCertificateTransferRequest",
        "documentation" : null,
        "simpleType" : "RejectCertificateTransferRequest",
        "variableSetterType" : "RejectCertificateTransferRequest"
      },
      "wrapper" : false
    },
    "RejectCertificateTransferResult" : {
      "c2jName" : "RejectCertificateTransferResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : null,
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RejectCertificateTransferResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "RejectCertificateTransferResult",
        "variableName" : "rejectCertificateTransferResult",
        "variableType" : "RejectCertificateTransferResult",
        "documentation" : null,
        "simpleType" : "RejectCertificateTransferResult",
        "variableSetterType" : "RejectCertificateTransferResult"
      },
      "wrapper" : false
    },
    "ReplaceTopicRuleRequest" : {
      "c2jName" : "ReplaceTopicRuleRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the ReplaceTopicRule operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : true,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ReplaceTopicRule",
        "locationName" : null,
        "requestUri" : "/rules/{ruleName}",
        "target" : null,
        "verb" : "PATCH",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "ruleName",
        "c2jShape" : "RuleName",
        "deprecated" : false,
        "documentation" : "<p>The name of the rule.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRuleName",
        "getterDocumentation" : "/**<p>The name of the rule.</p>\n@return The name of the rule.*/",
        "getterMethodName" : "getRuleName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "ruleName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ruleName",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RuleName",
        "setterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.*/",
        "setterMethodName" : "setRuleName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "ruleName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "ruleName",
          "variableType" : "String",
          "documentation" : "<p>The name of the rule.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "topicRulePayload",
        "c2jShape" : "TopicRulePayload",
        "deprecated" : false,
        "documentation" : "<p>The rule payload.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The rule payload.</p>\n@param topicRulePayload The rule payload.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTopicRulePayload",
        "getterDocumentation" : "/**<p>The rule payload.</p>\n@return The rule payload.*/",
        "getterMethodName" : "getTopicRulePayload",
        "getterModel" : {
          "returnType" : "TopicRulePayload",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : true,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "topicRulePayload",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "topicRulePayload",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "TopicRulePayload",
        "setterDocumentation" : "/**<p>The rule payload.</p>\n@param topicRulePayload The rule payload.*/",
        "setterMethodName" : "setTopicRulePayload",
        "setterModel" : {
          "variableDeclarationType" : "TopicRulePayload",
          "variableName" : "topicRulePayload",
          "variableType" : "TopicRulePayload",
          "documentation" : "",
          "simpleType" : "TopicRulePayload",
          "variableSetterType" : "TopicRulePayload"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The rule payload.</p>\n@param topicRulePayload The rule payload.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "TopicRulePayload",
          "variableName" : "topicRulePayload",
          "variableType" : "TopicRulePayload",
          "documentation" : "<p>The rule payload.</p>",
          "simpleType" : "TopicRulePayload",
          "variableSetterType" : "TopicRulePayload"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "RuleName" : {
          "c2jName" : "ruleName",
          "c2jShape" : "RuleName",
          "deprecated" : false,
          "documentation" : "<p>The name of the rule.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRuleName",
          "getterDocumentation" : "/**<p>The name of the rule.</p>\n@return The name of the rule.*/",
          "getterMethodName" : "getRuleName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "ruleName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ruleName",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RuleName",
          "setterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.*/",
          "setterMethodName" : "setRuleName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "ruleName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "ruleName",
            "variableType" : "String",
            "documentation" : "<p>The name of the rule.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TopicRulePayload" : {
          "c2jName" : "topicRulePayload",
          "c2jShape" : "TopicRulePayload",
          "deprecated" : false,
          "documentation" : "<p>The rule payload.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The rule payload.</p>\n@param topicRulePayload The rule payload.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTopicRulePayload",
          "getterDocumentation" : "/**<p>The rule payload.</p>\n@return The rule payload.*/",
          "getterMethodName" : "getTopicRulePayload",
          "getterModel" : {
            "returnType" : "TopicRulePayload",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : true,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "topicRulePayload",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "topicRulePayload",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "TopicRulePayload",
          "setterDocumentation" : "/**<p>The rule payload.</p>\n@param topicRulePayload The rule payload.*/",
          "setterMethodName" : "setTopicRulePayload",
          "setterModel" : {
            "variableDeclarationType" : "TopicRulePayload",
            "variableName" : "topicRulePayload",
            "variableType" : "TopicRulePayload",
            "documentation" : "",
            "simpleType" : "TopicRulePayload",
            "variableSetterType" : "TopicRulePayload"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The rule payload.</p>\n@param topicRulePayload The rule payload.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "TopicRulePayload",
            "variableName" : "topicRulePayload",
            "variableType" : "TopicRulePayload",
            "documentation" : "<p>The rule payload.</p>",
            "simpleType" : "TopicRulePayload",
            "variableSetterType" : "TopicRulePayload"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "ruleName", "topicRulePayload" ],
      "shapeName" : "ReplaceTopicRuleRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ReplaceTopicRuleRequest",
        "variableName" : "replaceTopicRuleRequest",
        "variableType" : "ReplaceTopicRuleRequest",
        "documentation" : null,
        "simpleType" : "ReplaceTopicRuleRequest",
        "variableSetterType" : "ReplaceTopicRuleRequest"
      },
      "wrapper" : false
    },
    "ReplaceTopicRuleResult" : {
      "c2jName" : "ReplaceTopicRuleResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : null,
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ReplaceTopicRuleResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "ReplaceTopicRuleResult",
        "variableName" : "replaceTopicRuleResult",
        "variableType" : "ReplaceTopicRuleResult",
        "documentation" : null,
        "simpleType" : "ReplaceTopicRuleResult",
        "variableSetterType" : "ReplaceTopicRuleResult"
      },
      "wrapper" : false
    },
    "RepublishAction" : {
      "c2jName" : "RepublishAction",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Describes an action to republish to another topic.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "roleArn",
        "c2jShape" : "AwsArn",
        "deprecated" : false,
        "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRoleArn",
        "getterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@return The ARN of the IAM role that grants access.*/",
        "getterMethodName" : "getRoleArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "roleArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "roleArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RoleArn",
        "setterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.*/",
        "setterMethodName" : "setRoleArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "roleArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "roleArn",
          "variableType" : "String",
          "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "topic",
        "c2jShape" : "TopicPattern",
        "deprecated" : false,
        "documentation" : "<p>The name of the MQTT topic.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the MQTT topic.</p>\n@param topic The name of the MQTT topic.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTopic",
        "getterDocumentation" : "/**<p>The name of the MQTT topic.</p>\n@return The name of the MQTT topic.*/",
        "getterMethodName" : "getTopic",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "topic",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "topic",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Topic",
        "setterDocumentation" : "/**<p>The name of the MQTT topic.</p>\n@param topic The name of the MQTT topic.*/",
        "setterMethodName" : "setTopic",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "topic",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the MQTT topic.</p>\n@param topic The name of the MQTT topic.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "topic",
          "variableType" : "String",
          "documentation" : "<p>The name of the MQTT topic.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "RoleArn" : {
          "c2jName" : "roleArn",
          "c2jShape" : "AwsArn",
          "deprecated" : false,
          "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRoleArn",
          "getterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@return The ARN of the IAM role that grants access.*/",
          "getterMethodName" : "getRoleArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "roleArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "roleArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RoleArn",
          "setterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.*/",
          "setterMethodName" : "setRoleArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "roleArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "roleArn",
            "variableType" : "String",
            "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Topic" : {
          "c2jName" : "topic",
          "c2jShape" : "TopicPattern",
          "deprecated" : false,
          "documentation" : "<p>The name of the MQTT topic.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the MQTT topic.</p>\n@param topic The name of the MQTT topic.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTopic",
          "getterDocumentation" : "/**<p>The name of the MQTT topic.</p>\n@return The name of the MQTT topic.*/",
          "getterMethodName" : "getTopic",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "topic",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "topic",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Topic",
          "setterDocumentation" : "/**<p>The name of the MQTT topic.</p>\n@param topic The name of the MQTT topic.*/",
          "setterMethodName" : "setTopic",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "topic",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the MQTT topic.</p>\n@param topic The name of the MQTT topic.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "topic",
            "variableType" : "String",
            "documentation" : "<p>The name of the MQTT topic.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "roleArn", "topic" ],
      "shapeName" : "RepublishAction",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "RepublishAction",
        "variableName" : "republishAction",
        "variableType" : "RepublishAction",
        "documentation" : null,
        "simpleType" : "RepublishAction",
        "variableSetterType" : "RepublishAction"
      },
      "wrapper" : false
    },
    "ResourceAlreadyExistsException" : {
      "c2jName" : "ResourceAlreadyExistsException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The resource already exists.</p>",
      "enums" : null,
      "errorCode" : "ResourceAlreadyExistsException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "resourceId",
        "c2jShape" : "resourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the resource that caused the exception.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the resource that caused the exception.</p>\n@param resourceId The ID of the resource that caused the exception.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceId",
        "getterDocumentation" : "/**<p>The ID of the resource that caused the exception.</p>\n@return The ID of the resource that caused the exception.*/",
        "getterMethodName" : "getResourceId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "resourceId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "resourceId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceId",
        "setterDocumentation" : "/**<p>The ID of the resource that caused the exception.</p>\n@param resourceId The ID of the resource that caused the exception.*/",
        "setterMethodName" : "setResourceId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "resourceId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the resource that caused the exception.</p>\n@param resourceId The ID of the resource that caused the exception.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "resourceId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the resource that caused the exception.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "resourceArn",
        "c2jShape" : "resourceArn",
        "deprecated" : false,
        "documentation" : "<p>The ARN of the resource that caused the exception.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ARN of the resource that caused the exception.</p>\n@param resourceArn The ARN of the resource that caused the exception.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResourceArn",
        "getterDocumentation" : "/**<p>The ARN of the resource that caused the exception.</p>\n@return The ARN of the resource that caused the exception.*/",
        "getterMethodName" : "getResourceArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "resourceArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "resourceArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResourceArn",
        "setterDocumentation" : "/**<p>The ARN of the resource that caused the exception.</p>\n@param resourceArn The ARN of the resource that caused the exception.*/",
        "setterMethodName" : "setResourceArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "resourceArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ARN of the resource that caused the exception.</p>\n@param resourceArn The ARN of the resource that caused the exception.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "resourceArn",
          "variableType" : "String",
          "documentation" : "<p>The ARN of the resource that caused the exception.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ResourceArn" : {
          "c2jName" : "resourceArn",
          "c2jShape" : "resourceArn",
          "deprecated" : false,
          "documentation" : "<p>The ARN of the resource that caused the exception.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ARN of the resource that caused the exception.</p>\n@param resourceArn The ARN of the resource that caused the exception.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceArn",
          "getterDocumentation" : "/**<p>The ARN of the resource that caused the exception.</p>\n@return The ARN of the resource that caused the exception.*/",
          "getterMethodName" : "getResourceArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "resourceArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "resourceArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceArn",
          "setterDocumentation" : "/**<p>The ARN of the resource that caused the exception.</p>\n@param resourceArn The ARN of the resource that caused the exception.*/",
          "setterMethodName" : "setResourceArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "resourceArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ARN of the resource that caused the exception.</p>\n@param resourceArn The ARN of the resource that caused the exception.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "resourceArn",
            "variableType" : "String",
            "documentation" : "<p>The ARN of the resource that caused the exception.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResourceId" : {
          "c2jName" : "resourceId",
          "c2jShape" : "resourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the resource that caused the exception.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the resource that caused the exception.</p>\n@param resourceId The ID of the resource that caused the exception.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResourceId",
          "getterDocumentation" : "/**<p>The ID of the resource that caused the exception.</p>\n@return The ID of the resource that caused the exception.*/",
          "getterMethodName" : "getResourceId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "resourceId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "resourceId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResourceId",
          "setterDocumentation" : "/**<p>The ID of the resource that caused the exception.</p>\n@param resourceId The ID of the resource that caused the exception.*/",
          "setterMethodName" : "setResourceId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "resourceId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the resource that caused the exception.</p>\n@param resourceId The ID of the resource that caused the exception.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "resourceId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the resource that caused the exception.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ResourceAlreadyExistsException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ResourceAlreadyExistsException",
        "variableName" : "resourceAlreadyExistsException",
        "variableType" : "ResourceAlreadyExistsException",
        "documentation" : null,
        "simpleType" : "ResourceAlreadyExistsException",
        "variableSetterType" : "ResourceAlreadyExistsException"
      },
      "wrapper" : false
    },
    "ResourceNotFoundException" : {
      "c2jName" : "ResourceNotFoundException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified resource does not exist.</p>",
      "enums" : null,
      "errorCode" : "ResourceNotFoundException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ResourceNotFoundException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ResourceNotFoundException",
        "variableName" : "resourceNotFoundException",
        "variableType" : "ResourceNotFoundException",
        "documentation" : null,
        "simpleType" : "ResourceNotFoundException",
        "variableSetterType" : "ResourceNotFoundException"
      },
      "wrapper" : false
    },
    "S3Action" : {
      "c2jName" : "S3Action",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Describes an action to write data to an Amazon S3 bucket.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "roleArn",
        "c2jShape" : "AwsArn",
        "deprecated" : false,
        "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRoleArn",
        "getterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@return The ARN of the IAM role that grants access.*/",
        "getterMethodName" : "getRoleArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "roleArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "roleArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RoleArn",
        "setterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.*/",
        "setterMethodName" : "setRoleArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "roleArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "roleArn",
          "variableType" : "String",
          "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "bucketName",
        "c2jShape" : "BucketName",
        "deprecated" : false,
        "documentation" : "<p>The Amazon S3 bucket.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The Amazon S3 bucket.</p>\n@param bucketName The Amazon S3 bucket.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBucketName",
        "getterDocumentation" : "/**<p>The Amazon S3 bucket.</p>\n@return The Amazon S3 bucket.*/",
        "getterMethodName" : "getBucketName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "bucketName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "bucketName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BucketName",
        "setterDocumentation" : "/**<p>The Amazon S3 bucket.</p>\n@param bucketName The Amazon S3 bucket.*/",
        "setterMethodName" : "setBucketName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "bucketName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The Amazon S3 bucket.</p>\n@param bucketName The Amazon S3 bucket.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "bucketName",
          "variableType" : "String",
          "documentation" : "<p>The Amazon S3 bucket.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "key",
        "c2jShape" : "Key",
        "deprecated" : false,
        "documentation" : "<p>The object key.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The object key.</p>\n@param key The object key.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withKey",
        "getterDocumentation" : "/**<p>The object key.</p>\n@return The object key.*/",
        "getterMethodName" : "getKey",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "key",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "key",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Key",
        "setterDocumentation" : "/**<p>The object key.</p>\n@param key The object key.*/",
        "setterMethodName" : "setKey",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "key",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The object key.</p>\n@param key The object key.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "key",
          "variableType" : "String",
          "documentation" : "<p>The object key.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "cannedAcl",
        "c2jShape" : "CannedAccessControlList",
        "deprecated" : false,
        "documentation" : "<p>The Amazon S3 canned ACL that controls access to the object identified by the object key. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl\">S3 canned ACLs</a>.</p>",
        "enumType" : "CannedAccessControlList",
        "fluentSetterDocumentation" : "/**<p>The Amazon S3 canned ACL that controls access to the object identified by the object key. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl\">S3 canned ACLs</a>.</p>\n@param cannedAcl The Amazon S3 canned ACL that controls access to the object identified by the object key. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl\">S3 canned ACLs</a>.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CannedAccessControlList*/",
        "fluentSetterMethodName" : "withCannedAcl",
        "getterDocumentation" : "/**<p>The Amazon S3 canned ACL that controls access to the object identified by the object key. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl\">S3 canned ACLs</a>.</p>\n@return The Amazon S3 canned ACL that controls access to the object identified by the object key. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl\">S3 canned ACLs</a>.\n@see CannedAccessControlList*/",
        "getterMethodName" : "getCannedAcl",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "cannedAcl",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "cannedAcl",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CannedAcl",
        "setterDocumentation" : "/**<p>The Amazon S3 canned ACL that controls access to the object identified by the object key. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl\">S3 canned ACLs</a>.</p>\n@param cannedAcl The Amazon S3 canned ACL that controls access to the object identified by the object key. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl\">S3 canned ACLs</a>.\n@see CannedAccessControlList*/",
        "setterMethodName" : "setCannedAcl",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "cannedAcl",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The Amazon S3 canned ACL that controls access to the object identified by the object key. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl\">S3 canned ACLs</a>.</p>\n@param cannedAcl The Amazon S3 canned ACL that controls access to the object identified by the object key. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl\">S3 canned ACLs</a>.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CannedAccessControlList*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "cannedAcl",
          "variableType" : "String",
          "documentation" : "<p>The Amazon S3 canned ACL that controls access to the object identified by the object key. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl\">S3 canned ACLs</a>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "BucketName" : {
          "c2jName" : "bucketName",
          "c2jShape" : "BucketName",
          "deprecated" : false,
          "documentation" : "<p>The Amazon S3 bucket.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The Amazon S3 bucket.</p>\n@param bucketName The Amazon S3 bucket.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBucketName",
          "getterDocumentation" : "/**<p>The Amazon S3 bucket.</p>\n@return The Amazon S3 bucket.*/",
          "getterMethodName" : "getBucketName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "bucketName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "bucketName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BucketName",
          "setterDocumentation" : "/**<p>The Amazon S3 bucket.</p>\n@param bucketName The Amazon S3 bucket.*/",
          "setterMethodName" : "setBucketName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "bucketName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The Amazon S3 bucket.</p>\n@param bucketName The Amazon S3 bucket.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "bucketName",
            "variableType" : "String",
            "documentation" : "<p>The Amazon S3 bucket.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CannedAcl" : {
          "c2jName" : "cannedAcl",
          "c2jShape" : "CannedAccessControlList",
          "deprecated" : false,
          "documentation" : "<p>The Amazon S3 canned ACL that controls access to the object identified by the object key. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl\">S3 canned ACLs</a>.</p>",
          "enumType" : "CannedAccessControlList",
          "fluentSetterDocumentation" : "/**<p>The Amazon S3 canned ACL that controls access to the object identified by the object key. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl\">S3 canned ACLs</a>.</p>\n@param cannedAcl The Amazon S3 canned ACL that controls access to the object identified by the object key. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl\">S3 canned ACLs</a>.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CannedAccessControlList*/",
          "fluentSetterMethodName" : "withCannedAcl",
          "getterDocumentation" : "/**<p>The Amazon S3 canned ACL that controls access to the object identified by the object key. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl\">S3 canned ACLs</a>.</p>\n@return The Amazon S3 canned ACL that controls access to the object identified by the object key. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl\">S3 canned ACLs</a>.\n@see CannedAccessControlList*/",
          "getterMethodName" : "getCannedAcl",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "cannedAcl",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "cannedAcl",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CannedAcl",
          "setterDocumentation" : "/**<p>The Amazon S3 canned ACL that controls access to the object identified by the object key. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl\">S3 canned ACLs</a>.</p>\n@param cannedAcl The Amazon S3 canned ACL that controls access to the object identified by the object key. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl\">S3 canned ACLs</a>.\n@see CannedAccessControlList*/",
          "setterMethodName" : "setCannedAcl",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "cannedAcl",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The Amazon S3 canned ACL that controls access to the object identified by the object key. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl\">S3 canned ACLs</a>.</p>\n@param cannedAcl The Amazon S3 canned ACL that controls access to the object identified by the object key. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl\">S3 canned ACLs</a>.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CannedAccessControlList*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "cannedAcl",
            "variableType" : "String",
            "documentation" : "<p>The Amazon S3 canned ACL that controls access to the object identified by the object key. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl\">S3 canned ACLs</a>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Key" : {
          "c2jName" : "key",
          "c2jShape" : "Key",
          "deprecated" : false,
          "documentation" : "<p>The object key.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The object key.</p>\n@param key The object key.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withKey",
          "getterDocumentation" : "/**<p>The object key.</p>\n@return The object key.*/",
          "getterMethodName" : "getKey",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "key",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "key",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Key",
          "setterDocumentation" : "/**<p>The object key.</p>\n@param key The object key.*/",
          "setterMethodName" : "setKey",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "key",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The object key.</p>\n@param key The object key.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "key",
            "variableType" : "String",
            "documentation" : "<p>The object key.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RoleArn" : {
          "c2jName" : "roleArn",
          "c2jShape" : "AwsArn",
          "deprecated" : false,
          "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRoleArn",
          "getterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@return The ARN of the IAM role that grants access.*/",
          "getterMethodName" : "getRoleArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "roleArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "roleArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RoleArn",
          "setterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.*/",
          "setterMethodName" : "setRoleArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "roleArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "roleArn",
            "variableType" : "String",
            "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "roleArn", "bucketName", "key" ],
      "shapeName" : "S3Action",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "S3Action",
        "variableName" : "s3Action",
        "variableType" : "S3Action",
        "documentation" : null,
        "simpleType" : "S3Action",
        "variableSetterType" : "S3Action"
      },
      "wrapper" : false
    },
    "SalesforceAction" : {
      "c2jName" : "SalesforceAction",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Describes an action to write a message to a Salesforce IoT Cloud Input Stream.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "token",
        "c2jShape" : "SalesforceToken",
        "deprecated" : false,
        "documentation" : "<p>The token used to authenticate access to the Salesforce IoT Cloud Input Stream. The token is available from the Salesforce IoT Cloud platform after creation of the Input Stream.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The token used to authenticate access to the Salesforce IoT Cloud Input Stream. The token is available from the Salesforce IoT Cloud platform after creation of the Input Stream.</p>\n@param token The token used to authenticate access to the Salesforce IoT Cloud Input Stream. The token is available from the Salesforce IoT Cloud platform after creation of the Input Stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withToken",
        "getterDocumentation" : "/**<p>The token used to authenticate access to the Salesforce IoT Cloud Input Stream. The token is available from the Salesforce IoT Cloud platform after creation of the Input Stream.</p>\n@return The token used to authenticate access to the Salesforce IoT Cloud Input Stream. The token is available from the Salesforce IoT Cloud platform after creation of the Input Stream.*/",
        "getterMethodName" : "getToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "token",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "token",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Token",
        "setterDocumentation" : "/**<p>The token used to authenticate access to the Salesforce IoT Cloud Input Stream. The token is available from the Salesforce IoT Cloud platform after creation of the Input Stream.</p>\n@param token The token used to authenticate access to the Salesforce IoT Cloud Input Stream. The token is available from the Salesforce IoT Cloud platform after creation of the Input Stream.*/",
        "setterMethodName" : "setToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "token",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The token used to authenticate access to the Salesforce IoT Cloud Input Stream. The token is available from the Salesforce IoT Cloud platform after creation of the Input Stream.</p>\n@param token The token used to authenticate access to the Salesforce IoT Cloud Input Stream. The token is available from the Salesforce IoT Cloud platform after creation of the Input Stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "token",
          "variableType" : "String",
          "documentation" : "<p>The token used to authenticate access to the Salesforce IoT Cloud Input Stream. The token is available from the Salesforce IoT Cloud platform after creation of the Input Stream.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "url",
        "c2jShape" : "SalesforceEndpoint",
        "deprecated" : false,
        "documentation" : "<p>The URL exposed by the Salesforce IoT Cloud Input Stream. The URL is available from the Salesforce IoT Cloud platform after creation of the Input Stream.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The URL exposed by the Salesforce IoT Cloud Input Stream. The URL is available from the Salesforce IoT Cloud platform after creation of the Input Stream.</p>\n@param url The URL exposed by the Salesforce IoT Cloud Input Stream. The URL is available from the Salesforce IoT Cloud platform after creation of the Input Stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withUrl",
        "getterDocumentation" : "/**<p>The URL exposed by the Salesforce IoT Cloud Input Stream. The URL is available from the Salesforce IoT Cloud platform after creation of the Input Stream.</p>\n@return The URL exposed by the Salesforce IoT Cloud Input Stream. The URL is available from the Salesforce IoT Cloud platform after creation of the Input Stream.*/",
        "getterMethodName" : "getUrl",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "url",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "url",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Url",
        "setterDocumentation" : "/**<p>The URL exposed by the Salesforce IoT Cloud Input Stream. The URL is available from the Salesforce IoT Cloud platform after creation of the Input Stream.</p>\n@param url The URL exposed by the Salesforce IoT Cloud Input Stream. The URL is available from the Salesforce IoT Cloud platform after creation of the Input Stream.*/",
        "setterMethodName" : "setUrl",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "url",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The URL exposed by the Salesforce IoT Cloud Input Stream. The URL is available from the Salesforce IoT Cloud platform after creation of the Input Stream.</p>\n@param url The URL exposed by the Salesforce IoT Cloud Input Stream. The URL is available from the Salesforce IoT Cloud platform after creation of the Input Stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "url",
          "variableType" : "String",
          "documentation" : "<p>The URL exposed by the Salesforce IoT Cloud Input Stream. The URL is available from the Salesforce IoT Cloud platform after creation of the Input Stream.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Token" : {
          "c2jName" : "token",
          "c2jShape" : "SalesforceToken",
          "deprecated" : false,
          "documentation" : "<p>The token used to authenticate access to the Salesforce IoT Cloud Input Stream. The token is available from the Salesforce IoT Cloud platform after creation of the Input Stream.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The token used to authenticate access to the Salesforce IoT Cloud Input Stream. The token is available from the Salesforce IoT Cloud platform after creation of the Input Stream.</p>\n@param token The token used to authenticate access to the Salesforce IoT Cloud Input Stream. The token is available from the Salesforce IoT Cloud platform after creation of the Input Stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withToken",
          "getterDocumentation" : "/**<p>The token used to authenticate access to the Salesforce IoT Cloud Input Stream. The token is available from the Salesforce IoT Cloud platform after creation of the Input Stream.</p>\n@return The token used to authenticate access to the Salesforce IoT Cloud Input Stream. The token is available from the Salesforce IoT Cloud platform after creation of the Input Stream.*/",
          "getterMethodName" : "getToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "token",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "token",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Token",
          "setterDocumentation" : "/**<p>The token used to authenticate access to the Salesforce IoT Cloud Input Stream. The token is available from the Salesforce IoT Cloud platform after creation of the Input Stream.</p>\n@param token The token used to authenticate access to the Salesforce IoT Cloud Input Stream. The token is available from the Salesforce IoT Cloud platform after creation of the Input Stream.*/",
          "setterMethodName" : "setToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "token",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The token used to authenticate access to the Salesforce IoT Cloud Input Stream. The token is available from the Salesforce IoT Cloud platform after creation of the Input Stream.</p>\n@param token The token used to authenticate access to the Salesforce IoT Cloud Input Stream. The token is available from the Salesforce IoT Cloud platform after creation of the Input Stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "token",
            "variableType" : "String",
            "documentation" : "<p>The token used to authenticate access to the Salesforce IoT Cloud Input Stream. The token is available from the Salesforce IoT Cloud platform after creation of the Input Stream.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Url" : {
          "c2jName" : "url",
          "c2jShape" : "SalesforceEndpoint",
          "deprecated" : false,
          "documentation" : "<p>The URL exposed by the Salesforce IoT Cloud Input Stream. The URL is available from the Salesforce IoT Cloud platform after creation of the Input Stream.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The URL exposed by the Salesforce IoT Cloud Input Stream. The URL is available from the Salesforce IoT Cloud platform after creation of the Input Stream.</p>\n@param url The URL exposed by the Salesforce IoT Cloud Input Stream. The URL is available from the Salesforce IoT Cloud platform after creation of the Input Stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withUrl",
          "getterDocumentation" : "/**<p>The URL exposed by the Salesforce IoT Cloud Input Stream. The URL is available from the Salesforce IoT Cloud platform after creation of the Input Stream.</p>\n@return The URL exposed by the Salesforce IoT Cloud Input Stream. The URL is available from the Salesforce IoT Cloud platform after creation of the Input Stream.*/",
          "getterMethodName" : "getUrl",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "url",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "url",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Url",
          "setterDocumentation" : "/**<p>The URL exposed by the Salesforce IoT Cloud Input Stream. The URL is available from the Salesforce IoT Cloud platform after creation of the Input Stream.</p>\n@param url The URL exposed by the Salesforce IoT Cloud Input Stream. The URL is available from the Salesforce IoT Cloud platform after creation of the Input Stream.*/",
          "setterMethodName" : "setUrl",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "url",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The URL exposed by the Salesforce IoT Cloud Input Stream. The URL is available from the Salesforce IoT Cloud platform after creation of the Input Stream.</p>\n@param url The URL exposed by the Salesforce IoT Cloud Input Stream. The URL is available from the Salesforce IoT Cloud platform after creation of the Input Stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "url",
            "variableType" : "String",
            "documentation" : "<p>The URL exposed by the Salesforce IoT Cloud Input Stream. The URL is available from the Salesforce IoT Cloud platform after creation of the Input Stream.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "token", "url" ],
      "shapeName" : "SalesforceAction",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "SalesforceAction",
        "variableName" : "salesforceAction",
        "variableType" : "SalesforceAction",
        "documentation" : null,
        "simpleType" : "SalesforceAction",
        "variableSetterType" : "SalesforceAction"
      },
      "wrapper" : false
    },
    "ServiceUnavailableException" : {
      "c2jName" : "ServiceUnavailableException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The service is temporarily unavailable.</p>",
      "enums" : null,
      "errorCode" : "ServiceUnavailableException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ServiceUnavailableException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ServiceUnavailableException",
        "variableName" : "serviceUnavailableException",
        "variableType" : "ServiceUnavailableException",
        "documentation" : null,
        "simpleType" : "ServiceUnavailableException",
        "variableSetterType" : "ServiceUnavailableException"
      },
      "wrapper" : false
    },
    "SetDefaultPolicyVersionRequest" : {
      "c2jName" : "SetDefaultPolicyVersionRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the SetDefaultPolicyVersion operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "SetDefaultPolicyVersion",
        "locationName" : null,
        "requestUri" : "/policies/{policyName}/version/{policyVersionId}",
        "target" : null,
        "verb" : "PATCH",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "policyName",
        "c2jShape" : "PolicyName",
        "deprecated" : false,
        "documentation" : "<p>The policy name.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicyName",
        "getterDocumentation" : "/**<p>The policy name.</p>\n@return The policy name.*/",
        "getterMethodName" : "getPolicyName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "policyName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "policyName",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PolicyName",
        "setterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.*/",
        "setterMethodName" : "setPolicyName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyName",
          "variableType" : "String",
          "documentation" : "<p>The policy name.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "policyVersionId",
        "c2jShape" : "PolicyVersionId",
        "deprecated" : false,
        "documentation" : "<p>The policy version ID.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPolicyVersionId",
        "getterDocumentation" : "/**<p>The policy version ID.</p>\n@return The policy version ID.*/",
        "getterMethodName" : "getPolicyVersionId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "policyVersionId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "policyVersionId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "PolicyVersionId",
        "setterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.*/",
        "setterMethodName" : "setPolicyVersionId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyVersionId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "policyVersionId",
          "variableType" : "String",
          "documentation" : "<p>The policy version ID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "PolicyName" : {
          "c2jName" : "policyName",
          "c2jShape" : "PolicyName",
          "deprecated" : false,
          "documentation" : "<p>The policy name.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicyName",
          "getterDocumentation" : "/**<p>The policy name.</p>\n@return The policy name.*/",
          "getterMethodName" : "getPolicyName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "policyName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "policyName",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PolicyName",
          "setterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.*/",
          "setterMethodName" : "setPolicyName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyName",
            "variableType" : "String",
            "documentation" : "<p>The policy name.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "PolicyVersionId" : {
          "c2jName" : "policyVersionId",
          "c2jShape" : "PolicyVersionId",
          "deprecated" : false,
          "documentation" : "<p>The policy version ID.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPolicyVersionId",
          "getterDocumentation" : "/**<p>The policy version ID.</p>\n@return The policy version ID.*/",
          "getterMethodName" : "getPolicyVersionId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "policyVersionId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "policyVersionId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "PolicyVersionId",
          "setterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.*/",
          "setterMethodName" : "setPolicyVersionId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyVersionId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "policyVersionId",
            "variableType" : "String",
            "documentation" : "<p>The policy version ID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "policyName", "policyVersionId" ],
      "shapeName" : "SetDefaultPolicyVersionRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "SetDefaultPolicyVersionRequest",
        "variableName" : "setDefaultPolicyVersionRequest",
        "variableType" : "SetDefaultPolicyVersionRequest",
        "documentation" : null,
        "simpleType" : "SetDefaultPolicyVersionRequest",
        "variableSetterType" : "SetDefaultPolicyVersionRequest"
      },
      "wrapper" : false
    },
    "SetDefaultPolicyVersionResult" : {
      "c2jName" : "SetDefaultPolicyVersionResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : null,
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "SetDefaultPolicyVersionResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "SetDefaultPolicyVersionResult",
        "variableName" : "setDefaultPolicyVersionResult",
        "variableType" : "SetDefaultPolicyVersionResult",
        "documentation" : null,
        "simpleType" : "SetDefaultPolicyVersionResult",
        "variableSetterType" : "SetDefaultPolicyVersionResult"
      },
      "wrapper" : false
    },
    "SetLoggingOptionsRequest" : {
      "c2jName" : "SetLoggingOptionsRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the SetLoggingOptions operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : true,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "SetLoggingOptions",
        "locationName" : null,
        "requestUri" : "/loggingOptions",
        "target" : null,
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "loggingOptionsPayload",
        "c2jShape" : "LoggingOptionsPayload",
        "deprecated" : false,
        "documentation" : "<p>The logging options payload.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The logging options payload.</p>\n@param loggingOptionsPayload The logging options payload.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLoggingOptionsPayload",
        "getterDocumentation" : "/**<p>The logging options payload.</p>\n@return The logging options payload.*/",
        "getterMethodName" : "getLoggingOptionsPayload",
        "getterModel" : {
          "returnType" : "LoggingOptionsPayload",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : true,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "loggingOptionsPayload",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "loggingOptionsPayload",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "LoggingOptionsPayload",
        "setterDocumentation" : "/**<p>The logging options payload.</p>\n@param loggingOptionsPayload The logging options payload.*/",
        "setterMethodName" : "setLoggingOptionsPayload",
        "setterModel" : {
          "variableDeclarationType" : "LoggingOptionsPayload",
          "variableName" : "loggingOptionsPayload",
          "variableType" : "LoggingOptionsPayload",
          "documentation" : "",
          "simpleType" : "LoggingOptionsPayload",
          "variableSetterType" : "LoggingOptionsPayload"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The logging options payload.</p>\n@param loggingOptionsPayload The logging options payload.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "LoggingOptionsPayload",
          "variableName" : "loggingOptionsPayload",
          "variableType" : "LoggingOptionsPayload",
          "documentation" : "<p>The logging options payload.</p>",
          "simpleType" : "LoggingOptionsPayload",
          "variableSetterType" : "LoggingOptionsPayload"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "LoggingOptionsPayload" : {
          "c2jName" : "loggingOptionsPayload",
          "c2jShape" : "LoggingOptionsPayload",
          "deprecated" : false,
          "documentation" : "<p>The logging options payload.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The logging options payload.</p>\n@param loggingOptionsPayload The logging options payload.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLoggingOptionsPayload",
          "getterDocumentation" : "/**<p>The logging options payload.</p>\n@return The logging options payload.*/",
          "getterMethodName" : "getLoggingOptionsPayload",
          "getterModel" : {
            "returnType" : "LoggingOptionsPayload",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : true,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "loggingOptionsPayload",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "loggingOptionsPayload",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "LoggingOptionsPayload",
          "setterDocumentation" : "/**<p>The logging options payload.</p>\n@param loggingOptionsPayload The logging options payload.*/",
          "setterMethodName" : "setLoggingOptionsPayload",
          "setterModel" : {
            "variableDeclarationType" : "LoggingOptionsPayload",
            "variableName" : "loggingOptionsPayload",
            "variableType" : "LoggingOptionsPayload",
            "documentation" : "",
            "simpleType" : "LoggingOptionsPayload",
            "variableSetterType" : "LoggingOptionsPayload"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The logging options payload.</p>\n@param loggingOptionsPayload The logging options payload.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "LoggingOptionsPayload",
            "variableName" : "loggingOptionsPayload",
            "variableType" : "LoggingOptionsPayload",
            "documentation" : "<p>The logging options payload.</p>",
            "simpleType" : "LoggingOptionsPayload",
            "variableSetterType" : "LoggingOptionsPayload"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "loggingOptionsPayload" ],
      "shapeName" : "SetLoggingOptionsRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "SetLoggingOptionsRequest",
        "variableName" : "setLoggingOptionsRequest",
        "variableType" : "SetLoggingOptionsRequest",
        "documentation" : null,
        "simpleType" : "SetLoggingOptionsRequest",
        "variableSetterType" : "SetLoggingOptionsRequest"
      },
      "wrapper" : false
    },
    "SetLoggingOptionsResult" : {
      "c2jName" : "SetLoggingOptionsResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : null,
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "SetLoggingOptionsResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "SetLoggingOptionsResult",
        "variableName" : "setLoggingOptionsResult",
        "variableType" : "SetLoggingOptionsResult",
        "documentation" : null,
        "simpleType" : "SetLoggingOptionsResult",
        "variableSetterType" : "SetLoggingOptionsResult"
      },
      "wrapper" : false
    },
    "SnsAction" : {
      "c2jName" : "SnsAction",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Describes an action to publish to an Amazon SNS topic.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "targetArn",
        "c2jShape" : "AwsArn",
        "deprecated" : false,
        "documentation" : "<p>The ARN of the SNS topic.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ARN of the SNS topic.</p>\n@param targetArn The ARN of the SNS topic.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTargetArn",
        "getterDocumentation" : "/**<p>The ARN of the SNS topic.</p>\n@return The ARN of the SNS topic.*/",
        "getterMethodName" : "getTargetArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "targetArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "targetArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TargetArn",
        "setterDocumentation" : "/**<p>The ARN of the SNS topic.</p>\n@param targetArn The ARN of the SNS topic.*/",
        "setterMethodName" : "setTargetArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "targetArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ARN of the SNS topic.</p>\n@param targetArn The ARN of the SNS topic.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "targetArn",
          "variableType" : "String",
          "documentation" : "<p>The ARN of the SNS topic.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "roleArn",
        "c2jShape" : "AwsArn",
        "deprecated" : false,
        "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRoleArn",
        "getterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@return The ARN of the IAM role that grants access.*/",
        "getterMethodName" : "getRoleArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "roleArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "roleArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RoleArn",
        "setterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.*/",
        "setterMethodName" : "setRoleArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "roleArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "roleArn",
          "variableType" : "String",
          "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "messageFormat",
        "c2jShape" : "MessageFormat",
        "deprecated" : false,
        "documentation" : "<p>The message format of the message to publish. Optional. Accepted values are \"JSON\" and \"RAW\". The default value of the attribute is \"RAW\". SNS uses this setting to determine if the payload should be parsed and relevant platform-specific bits of the payload should be extracted. To read more about SNS message formats, see <a href=\"http://docs.aws.amazon.com/sns/latest/dg/json-formats.html\">http://docs.aws.amazon.com/sns/latest/dg/json-formats.html</a> refer to their official documentation.</p>",
        "enumType" : "MessageFormat",
        "fluentSetterDocumentation" : "/**<p>The message format of the message to publish. Optional. Accepted values are \"JSON\" and \"RAW\". The default value of the attribute is \"RAW\". SNS uses this setting to determine if the payload should be parsed and relevant platform-specific bits of the payload should be extracted. To read more about SNS message formats, see <a href=\"http://docs.aws.amazon.com/sns/latest/dg/json-formats.html\">http://docs.aws.amazon.com/sns/latest/dg/json-formats.html</a> refer to their official documentation.</p>\n@param messageFormat The message format of the message to publish. Optional. Accepted values are \"JSON\" and \"RAW\". The default value of the attribute is \"RAW\". SNS uses this setting to determine if the payload should be parsed and relevant platform-specific bits of the payload should be extracted. To read more about SNS message formats, see <a href=\"http://docs.aws.amazon.com/sns/latest/dg/json-formats.html\">http://docs.aws.amazon.com/sns/latest/dg/json-formats.html</a> refer to their official documentation.\n@return Returns a reference to this object so that method calls can be chained together.\n@see MessageFormat*/",
        "fluentSetterMethodName" : "withMessageFormat",
        "getterDocumentation" : "/**<p>The message format of the message to publish. Optional. Accepted values are \"JSON\" and \"RAW\". The default value of the attribute is \"RAW\". SNS uses this setting to determine if the payload should be parsed and relevant platform-specific bits of the payload should be extracted. To read more about SNS message formats, see <a href=\"http://docs.aws.amazon.com/sns/latest/dg/json-formats.html\">http://docs.aws.amazon.com/sns/latest/dg/json-formats.html</a> refer to their official documentation.</p>\n@return The message format of the message to publish. Optional. Accepted values are \"JSON\" and \"RAW\". The default value of the attribute is \"RAW\". SNS uses this setting to determine if the payload should be parsed and relevant platform-specific bits of the payload should be extracted. To read more about SNS message formats, see <a href=\"http://docs.aws.amazon.com/sns/latest/dg/json-formats.html\">http://docs.aws.amazon.com/sns/latest/dg/json-formats.html</a> refer to their official documentation.\n@see MessageFormat*/",
        "getterMethodName" : "getMessageFormat",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "messageFormat",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "messageFormat",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "MessageFormat",
        "setterDocumentation" : "/**<p>The message format of the message to publish. Optional. Accepted values are \"JSON\" and \"RAW\". The default value of the attribute is \"RAW\". SNS uses this setting to determine if the payload should be parsed and relevant platform-specific bits of the payload should be extracted. To read more about SNS message formats, see <a href=\"http://docs.aws.amazon.com/sns/latest/dg/json-formats.html\">http://docs.aws.amazon.com/sns/latest/dg/json-formats.html</a> refer to their official documentation.</p>\n@param messageFormat The message format of the message to publish. Optional. Accepted values are \"JSON\" and \"RAW\". The default value of the attribute is \"RAW\". SNS uses this setting to determine if the payload should be parsed and relevant platform-specific bits of the payload should be extracted. To read more about SNS message formats, see <a href=\"http://docs.aws.amazon.com/sns/latest/dg/json-formats.html\">http://docs.aws.amazon.com/sns/latest/dg/json-formats.html</a> refer to their official documentation.\n@see MessageFormat*/",
        "setterMethodName" : "setMessageFormat",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "messageFormat",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The message format of the message to publish. Optional. Accepted values are \"JSON\" and \"RAW\". The default value of the attribute is \"RAW\". SNS uses this setting to determine if the payload should be parsed and relevant platform-specific bits of the payload should be extracted. To read more about SNS message formats, see <a href=\"http://docs.aws.amazon.com/sns/latest/dg/json-formats.html\">http://docs.aws.amazon.com/sns/latest/dg/json-formats.html</a> refer to their official documentation.</p>\n@param messageFormat The message format of the message to publish. Optional. Accepted values are \"JSON\" and \"RAW\". The default value of the attribute is \"RAW\". SNS uses this setting to determine if the payload should be parsed and relevant platform-specific bits of the payload should be extracted. To read more about SNS message formats, see <a href=\"http://docs.aws.amazon.com/sns/latest/dg/json-formats.html\">http://docs.aws.amazon.com/sns/latest/dg/json-formats.html</a> refer to their official documentation.\n@return Returns a reference to this object so that method calls can be chained together.\n@see MessageFormat*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "messageFormat",
          "variableType" : "String",
          "documentation" : "<p>The message format of the message to publish. Optional. Accepted values are \"JSON\" and \"RAW\". The default value of the attribute is \"RAW\". SNS uses this setting to determine if the payload should be parsed and relevant platform-specific bits of the payload should be extracted. To read more about SNS message formats, see <a href=\"http://docs.aws.amazon.com/sns/latest/dg/json-formats.html\">http://docs.aws.amazon.com/sns/latest/dg/json-formats.html</a> refer to their official documentation.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "MessageFormat" : {
          "c2jName" : "messageFormat",
          "c2jShape" : "MessageFormat",
          "deprecated" : false,
          "documentation" : "<p>The message format of the message to publish. Optional. Accepted values are \"JSON\" and \"RAW\". The default value of the attribute is \"RAW\". SNS uses this setting to determine if the payload should be parsed and relevant platform-specific bits of the payload should be extracted. To read more about SNS message formats, see <a href=\"http://docs.aws.amazon.com/sns/latest/dg/json-formats.html\">http://docs.aws.amazon.com/sns/latest/dg/json-formats.html</a> refer to their official documentation.</p>",
          "enumType" : "MessageFormat",
          "fluentSetterDocumentation" : "/**<p>The message format of the message to publish. Optional. Accepted values are \"JSON\" and \"RAW\". The default value of the attribute is \"RAW\". SNS uses this setting to determine if the payload should be parsed and relevant platform-specific bits of the payload should be extracted. To read more about SNS message formats, see <a href=\"http://docs.aws.amazon.com/sns/latest/dg/json-formats.html\">http://docs.aws.amazon.com/sns/latest/dg/json-formats.html</a> refer to their official documentation.</p>\n@param messageFormat The message format of the message to publish. Optional. Accepted values are \"JSON\" and \"RAW\". The default value of the attribute is \"RAW\". SNS uses this setting to determine if the payload should be parsed and relevant platform-specific bits of the payload should be extracted. To read more about SNS message formats, see <a href=\"http://docs.aws.amazon.com/sns/latest/dg/json-formats.html\">http://docs.aws.amazon.com/sns/latest/dg/json-formats.html</a> refer to their official documentation.\n@return Returns a reference to this object so that method calls can be chained together.\n@see MessageFormat*/",
          "fluentSetterMethodName" : "withMessageFormat",
          "getterDocumentation" : "/**<p>The message format of the message to publish. Optional. Accepted values are \"JSON\" and \"RAW\". The default value of the attribute is \"RAW\". SNS uses this setting to determine if the payload should be parsed and relevant platform-specific bits of the payload should be extracted. To read more about SNS message formats, see <a href=\"http://docs.aws.amazon.com/sns/latest/dg/json-formats.html\">http://docs.aws.amazon.com/sns/latest/dg/json-formats.html</a> refer to their official documentation.</p>\n@return The message format of the message to publish. Optional. Accepted values are \"JSON\" and \"RAW\". The default value of the attribute is \"RAW\". SNS uses this setting to determine if the payload should be parsed and relevant platform-specific bits of the payload should be extracted. To read more about SNS message formats, see <a href=\"http://docs.aws.amazon.com/sns/latest/dg/json-formats.html\">http://docs.aws.amazon.com/sns/latest/dg/json-formats.html</a> refer to their official documentation.\n@see MessageFormat*/",
          "getterMethodName" : "getMessageFormat",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "messageFormat",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "messageFormat",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "MessageFormat",
          "setterDocumentation" : "/**<p>The message format of the message to publish. Optional. Accepted values are \"JSON\" and \"RAW\". The default value of the attribute is \"RAW\". SNS uses this setting to determine if the payload should be parsed and relevant platform-specific bits of the payload should be extracted. To read more about SNS message formats, see <a href=\"http://docs.aws.amazon.com/sns/latest/dg/json-formats.html\">http://docs.aws.amazon.com/sns/latest/dg/json-formats.html</a> refer to their official documentation.</p>\n@param messageFormat The message format of the message to publish. Optional. Accepted values are \"JSON\" and \"RAW\". The default value of the attribute is \"RAW\". SNS uses this setting to determine if the payload should be parsed and relevant platform-specific bits of the payload should be extracted. To read more about SNS message formats, see <a href=\"http://docs.aws.amazon.com/sns/latest/dg/json-formats.html\">http://docs.aws.amazon.com/sns/latest/dg/json-formats.html</a> refer to their official documentation.\n@see MessageFormat*/",
          "setterMethodName" : "setMessageFormat",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "messageFormat",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The message format of the message to publish. Optional. Accepted values are \"JSON\" and \"RAW\". The default value of the attribute is \"RAW\". SNS uses this setting to determine if the payload should be parsed and relevant platform-specific bits of the payload should be extracted. To read more about SNS message formats, see <a href=\"http://docs.aws.amazon.com/sns/latest/dg/json-formats.html\">http://docs.aws.amazon.com/sns/latest/dg/json-formats.html</a> refer to their official documentation.</p>\n@param messageFormat The message format of the message to publish. Optional. Accepted values are \"JSON\" and \"RAW\". The default value of the attribute is \"RAW\". SNS uses this setting to determine if the payload should be parsed and relevant platform-specific bits of the payload should be extracted. To read more about SNS message formats, see <a href=\"http://docs.aws.amazon.com/sns/latest/dg/json-formats.html\">http://docs.aws.amazon.com/sns/latest/dg/json-formats.html</a> refer to their official documentation.\n@return Returns a reference to this object so that method calls can be chained together.\n@see MessageFormat*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "messageFormat",
            "variableType" : "String",
            "documentation" : "<p>The message format of the message to publish. Optional. Accepted values are \"JSON\" and \"RAW\". The default value of the attribute is \"RAW\". SNS uses this setting to determine if the payload should be parsed and relevant platform-specific bits of the payload should be extracted. To read more about SNS message formats, see <a href=\"http://docs.aws.amazon.com/sns/latest/dg/json-formats.html\">http://docs.aws.amazon.com/sns/latest/dg/json-formats.html</a> refer to their official documentation.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RoleArn" : {
          "c2jName" : "roleArn",
          "c2jShape" : "AwsArn",
          "deprecated" : false,
          "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRoleArn",
          "getterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@return The ARN of the IAM role that grants access.*/",
          "getterMethodName" : "getRoleArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "roleArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "roleArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RoleArn",
          "setterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.*/",
          "setterMethodName" : "setRoleArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "roleArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "roleArn",
            "variableType" : "String",
            "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TargetArn" : {
          "c2jName" : "targetArn",
          "c2jShape" : "AwsArn",
          "deprecated" : false,
          "documentation" : "<p>The ARN of the SNS topic.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ARN of the SNS topic.</p>\n@param targetArn The ARN of the SNS topic.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTargetArn",
          "getterDocumentation" : "/**<p>The ARN of the SNS topic.</p>\n@return The ARN of the SNS topic.*/",
          "getterMethodName" : "getTargetArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "targetArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "targetArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TargetArn",
          "setterDocumentation" : "/**<p>The ARN of the SNS topic.</p>\n@param targetArn The ARN of the SNS topic.*/",
          "setterMethodName" : "setTargetArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "targetArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ARN of the SNS topic.</p>\n@param targetArn The ARN of the SNS topic.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "targetArn",
            "variableType" : "String",
            "documentation" : "<p>The ARN of the SNS topic.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "targetArn", "roleArn" ],
      "shapeName" : "SnsAction",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "SnsAction",
        "variableName" : "snsAction",
        "variableType" : "SnsAction",
        "documentation" : null,
        "simpleType" : "SnsAction",
        "variableSetterType" : "SnsAction"
      },
      "wrapper" : false
    },
    "SqlParseException" : {
      "c2jName" : "SqlParseException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The Rule-SQL expression can't be parsed correctly.</p>",
      "enums" : null,
      "errorCode" : "SqlParseException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "SqlParseException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "SqlParseException",
        "variableName" : "sqlParseException",
        "variableType" : "SqlParseException",
        "documentation" : null,
        "simpleType" : "SqlParseException",
        "variableSetterType" : "SqlParseException"
      },
      "wrapper" : false
    },
    "SqsAction" : {
      "c2jName" : "SqsAction",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Describes an action to publish data to an Amazon SQS queue.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "roleArn",
        "c2jShape" : "AwsArn",
        "deprecated" : false,
        "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRoleArn",
        "getterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@return The ARN of the IAM role that grants access.*/",
        "getterMethodName" : "getRoleArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "roleArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "roleArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RoleArn",
        "setterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.*/",
        "setterMethodName" : "setRoleArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "roleArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "roleArn",
          "variableType" : "String",
          "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "queueUrl",
        "c2jShape" : "QueueUrl",
        "deprecated" : false,
        "documentation" : "<p>The URL of the Amazon SQS queue.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The URL of the Amazon SQS queue.</p>\n@param queueUrl The URL of the Amazon SQS queue.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withQueueUrl",
        "getterDocumentation" : "/**<p>The URL of the Amazon SQS queue.</p>\n@return The URL of the Amazon SQS queue.*/",
        "getterMethodName" : "getQueueUrl",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "queueUrl",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "queueUrl",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "QueueUrl",
        "setterDocumentation" : "/**<p>The URL of the Amazon SQS queue.</p>\n@param queueUrl The URL of the Amazon SQS queue.*/",
        "setterMethodName" : "setQueueUrl",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "queueUrl",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The URL of the Amazon SQS queue.</p>\n@param queueUrl The URL of the Amazon SQS queue.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "queueUrl",
          "variableType" : "String",
          "documentation" : "<p>The URL of the Amazon SQS queue.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "useBase64",
        "c2jShape" : "UseBase64",
        "deprecated" : false,
        "documentation" : "<p>Specifies whether to use Base64 encoding.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Specifies whether to use Base64 encoding.</p>\n@param useBase64 Specifies whether to use Base64 encoding.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withUseBase64",
        "getterDocumentation" : "/**<p>Specifies whether to use Base64 encoding.</p>\n@return Specifies whether to use Base64 encoding.*/",
        "getterMethodName" : "getUseBase64",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "useBase64",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "useBase64",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "UseBase64",
        "setterDocumentation" : "/**<p>Specifies whether to use Base64 encoding.</p>\n@param useBase64 Specifies whether to use Base64 encoding.*/",
        "setterMethodName" : "setUseBase64",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "useBase64",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Specifies whether to use Base64 encoding.</p>\n@param useBase64 Specifies whether to use Base64 encoding.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "useBase64",
          "variableType" : "Boolean",
          "documentation" : "<p>Specifies whether to use Base64 encoding.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "QueueUrl" : {
          "c2jName" : "queueUrl",
          "c2jShape" : "QueueUrl",
          "deprecated" : false,
          "documentation" : "<p>The URL of the Amazon SQS queue.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The URL of the Amazon SQS queue.</p>\n@param queueUrl The URL of the Amazon SQS queue.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withQueueUrl",
          "getterDocumentation" : "/**<p>The URL of the Amazon SQS queue.</p>\n@return The URL of the Amazon SQS queue.*/",
          "getterMethodName" : "getQueueUrl",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "queueUrl",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "queueUrl",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "QueueUrl",
          "setterDocumentation" : "/**<p>The URL of the Amazon SQS queue.</p>\n@param queueUrl The URL of the Amazon SQS queue.*/",
          "setterMethodName" : "setQueueUrl",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "queueUrl",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The URL of the Amazon SQS queue.</p>\n@param queueUrl The URL of the Amazon SQS queue.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "queueUrl",
            "variableType" : "String",
            "documentation" : "<p>The URL of the Amazon SQS queue.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RoleArn" : {
          "c2jName" : "roleArn",
          "c2jShape" : "AwsArn",
          "deprecated" : false,
          "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRoleArn",
          "getterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@return The ARN of the IAM role that grants access.*/",
          "getterMethodName" : "getRoleArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "roleArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "roleArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RoleArn",
          "setterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.*/",
          "setterMethodName" : "setRoleArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "roleArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "roleArn",
            "variableType" : "String",
            "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "UseBase64" : {
          "c2jName" : "useBase64",
          "c2jShape" : "UseBase64",
          "deprecated" : false,
          "documentation" : "<p>Specifies whether to use Base64 encoding.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Specifies whether to use Base64 encoding.</p>\n@param useBase64 Specifies whether to use Base64 encoding.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withUseBase64",
          "getterDocumentation" : "/**<p>Specifies whether to use Base64 encoding.</p>\n@return Specifies whether to use Base64 encoding.*/",
          "getterMethodName" : "getUseBase64",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "useBase64",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "useBase64",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "UseBase64",
          "setterDocumentation" : "/**<p>Specifies whether to use Base64 encoding.</p>\n@param useBase64 Specifies whether to use Base64 encoding.*/",
          "setterMethodName" : "setUseBase64",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "useBase64",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Specifies whether to use Base64 encoding.</p>\n@param useBase64 Specifies whether to use Base64 encoding.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "useBase64",
            "variableType" : "Boolean",
            "documentation" : "<p>Specifies whether to use Base64 encoding.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "roleArn", "queueUrl" ],
      "shapeName" : "SqsAction",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "SqsAction",
        "variableName" : "sqsAction",
        "variableType" : "SqsAction",
        "documentation" : null,
        "simpleType" : "SqsAction",
        "variableSetterType" : "SqsAction"
      },
      "wrapper" : false
    },
    "ThingAttribute" : {
      "c2jName" : "ThingAttribute",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The properties of the thing, including thing name, thing type name, and a list of thing attributes.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "thingName",
        "c2jShape" : "ThingName",
        "deprecated" : false,
        "documentation" : "<p>The name of the thing.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withThingName",
        "getterDocumentation" : "/**<p>The name of the thing.</p>\n@return The name of the thing.*/",
        "getterMethodName" : "getThingName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "thingName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "thingName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ThingName",
        "setterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.*/",
        "setterMethodName" : "setThingName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingName",
          "variableType" : "String",
          "documentation" : "<p>The name of the thing.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "thingTypeName",
        "c2jShape" : "ThingTypeName",
        "deprecated" : false,
        "documentation" : "<p>The name of the thing type, if the thing has been associated with a type.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the thing type, if the thing has been associated with a type.</p>\n@param thingTypeName The name of the thing type, if the thing has been associated with a type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withThingTypeName",
        "getterDocumentation" : "/**<p>The name of the thing type, if the thing has been associated with a type.</p>\n@return The name of the thing type, if the thing has been associated with a type.*/",
        "getterMethodName" : "getThingTypeName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "thingTypeName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "thingTypeName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ThingTypeName",
        "setterDocumentation" : "/**<p>The name of the thing type, if the thing has been associated with a type.</p>\n@param thingTypeName The name of the thing type, if the thing has been associated with a type.*/",
        "setterMethodName" : "setThingTypeName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingTypeName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the thing type, if the thing has been associated with a type.</p>\n@param thingTypeName The name of the thing type, if the thing has been associated with a type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingTypeName",
          "variableType" : "String",
          "documentation" : "<p>The name of the thing type, if the thing has been associated with a type.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "attributes",
        "c2jShape" : "Attributes",
        "deprecated" : false,
        "documentation" : "<p>A list of thing attributes which are name-value pairs.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A list of thing attributes which are name-value pairs.</p>\n@param attributes A list of thing attributes which are name-value pairs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAttributes",
        "getterDocumentation" : "/**<p>A list of thing attributes which are name-value pairs.</p>\n@return A list of thing attributes which are name-value pairs.*/",
        "getterMethodName" : "getAttributes",
        "getterModel" : {
          "returnType" : "java.util.Map<String,String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "attributes",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "attributes",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : true,
        "mapModel" : {
          "implType" : "java.util.HashMap",
          "interfaceType" : "java.util.Map",
          "keyLocationName" : "key",
          "keyModel" : null,
          "keyType" : "String",
          "valueLocationName" : "value",
          "valueModel" : {
            "c2jName" : "value",
            "c2jShape" : "AttributeValue",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withValue",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getValue",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "value",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "value",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Value",
            "setterDocumentation" : "/**\n@param value */",
            "setterMethodName" : "setValue",
            "setterModel" : {
              "variableDeclarationType" : "String",
              "variableName" : "value",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "String",
              "variableName" : "value",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "valueType" : "String",
          "entryType" : "Map.Entry<String, String>",
          "keySimple" : true,
          "templateImplType" : "java.util.HashMap<String,String>",
          "templateType" : "java.util.Map<String,String>",
          "valueList" : false,
          "valueSimple" : true
        },
        "marshallingTargetClass" : "Map",
        "marshallingType" : "MAP",
        "name" : "Attributes",
        "setterDocumentation" : "/**<p>A list of thing attributes which are name-value pairs.</p>\n@param attributes A list of thing attributes which are name-value pairs.*/",
        "setterMethodName" : "setAttributes",
        "setterModel" : {
          "variableDeclarationType" : "java.util.Map<String,String>",
          "variableName" : "attributes",
          "variableType" : "java.util.Map<String,String>",
          "documentation" : "",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A list of thing attributes which are name-value pairs.</p>\n@param attributes A list of thing attributes which are name-value pairs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.Map<String,String>",
          "variableName" : "attributes",
          "variableType" : "java.util.Map<String,String>",
          "documentation" : "<p>A list of thing attributes which are name-value pairs.</p>",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "version",
        "c2jShape" : "Version",
        "deprecated" : false,
        "documentation" : "<p>The version of the thing record in the registry.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The version of the thing record in the registry.</p>\n@param version The version of the thing record in the registry.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withVersion",
        "getterDocumentation" : "/**<p>The version of the thing record in the registry.</p>\n@return The version of the thing record in the registry.*/",
        "getterMethodName" : "getVersion",
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "version",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "version",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Long",
        "marshallingType" : "LONG",
        "name" : "Version",
        "setterDocumentation" : "/**<p>The version of the thing record in the registry.</p>\n@param version The version of the thing record in the registry.*/",
        "setterMethodName" : "setVersion",
        "setterModel" : {
          "variableDeclarationType" : "Long",
          "variableName" : "version",
          "variableType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The version of the thing record in the registry.</p>\n@param version The version of the thing record in the registry.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Long",
          "variableName" : "version",
          "variableType" : "Long",
          "documentation" : "<p>The version of the thing record in the registry.</p>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Attributes" : {
          "c2jName" : "attributes",
          "c2jShape" : "Attributes",
          "deprecated" : false,
          "documentation" : "<p>A list of thing attributes which are name-value pairs.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A list of thing attributes which are name-value pairs.</p>\n@param attributes A list of thing attributes which are name-value pairs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAttributes",
          "getterDocumentation" : "/**<p>A list of thing attributes which are name-value pairs.</p>\n@return A list of thing attributes which are name-value pairs.*/",
          "getterMethodName" : "getAttributes",
          "getterModel" : {
            "returnType" : "java.util.Map<String,String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "attributes",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "attributes",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : true,
          "mapModel" : {
            "implType" : "java.util.HashMap",
            "interfaceType" : "java.util.Map",
            "keyLocationName" : "key",
            "keyModel" : null,
            "keyType" : "String",
            "valueLocationName" : "value",
            "valueModel" : {
              "c2jName" : "value",
              "c2jShape" : "AttributeValue",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withValue",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getValue",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "value",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "value",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Value",
              "setterDocumentation" : "/**\n@param value */",
              "setterMethodName" : "setValue",
              "setterModel" : {
                "variableDeclarationType" : "String",
                "variableName" : "value",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "String",
                "variableName" : "value",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "valueType" : "String",
            "entryType" : "Map.Entry<String, String>",
            "keySimple" : true,
            "templateImplType" : "java.util.HashMap<String,String>",
            "templateType" : "java.util.Map<String,String>",
            "valueList" : false,
            "valueSimple" : true
          },
          "marshallingTargetClass" : "Map",
          "marshallingType" : "MAP",
          "name" : "Attributes",
          "setterDocumentation" : "/**<p>A list of thing attributes which are name-value pairs.</p>\n@param attributes A list of thing attributes which are name-value pairs.*/",
          "setterMethodName" : "setAttributes",
          "setterModel" : {
            "variableDeclarationType" : "java.util.Map<String,String>",
            "variableName" : "attributes",
            "variableType" : "java.util.Map<String,String>",
            "documentation" : "",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A list of thing attributes which are name-value pairs.</p>\n@param attributes A list of thing attributes which are name-value pairs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.Map<String,String>",
            "variableName" : "attributes",
            "variableType" : "java.util.Map<String,String>",
            "documentation" : "<p>A list of thing attributes which are name-value pairs.</p>",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "xmlNameSpaceUri" : null
        },
        "ThingName" : {
          "c2jName" : "thingName",
          "c2jShape" : "ThingName",
          "deprecated" : false,
          "documentation" : "<p>The name of the thing.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withThingName",
          "getterDocumentation" : "/**<p>The name of the thing.</p>\n@return The name of the thing.*/",
          "getterMethodName" : "getThingName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "thingName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "thingName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ThingName",
          "setterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.*/",
          "setterMethodName" : "setThingName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingName",
            "variableType" : "String",
            "documentation" : "<p>The name of the thing.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ThingTypeName" : {
          "c2jName" : "thingTypeName",
          "c2jShape" : "ThingTypeName",
          "deprecated" : false,
          "documentation" : "<p>The name of the thing type, if the thing has been associated with a type.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the thing type, if the thing has been associated with a type.</p>\n@param thingTypeName The name of the thing type, if the thing has been associated with a type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withThingTypeName",
          "getterDocumentation" : "/**<p>The name of the thing type, if the thing has been associated with a type.</p>\n@return The name of the thing type, if the thing has been associated with a type.*/",
          "getterMethodName" : "getThingTypeName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "thingTypeName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "thingTypeName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ThingTypeName",
          "setterDocumentation" : "/**<p>The name of the thing type, if the thing has been associated with a type.</p>\n@param thingTypeName The name of the thing type, if the thing has been associated with a type.*/",
          "setterMethodName" : "setThingTypeName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingTypeName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the thing type, if the thing has been associated with a type.</p>\n@param thingTypeName The name of the thing type, if the thing has been associated with a type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingTypeName",
            "variableType" : "String",
            "documentation" : "<p>The name of the thing type, if the thing has been associated with a type.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Version" : {
          "c2jName" : "version",
          "c2jShape" : "Version",
          "deprecated" : false,
          "documentation" : "<p>The version of the thing record in the registry.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The version of the thing record in the registry.</p>\n@param version The version of the thing record in the registry.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withVersion",
          "getterDocumentation" : "/**<p>The version of the thing record in the registry.</p>\n@return The version of the thing record in the registry.*/",
          "getterMethodName" : "getVersion",
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "version",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "version",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Long",
          "marshallingType" : "LONG",
          "name" : "Version",
          "setterDocumentation" : "/**<p>The version of the thing record in the registry.</p>\n@param version The version of the thing record in the registry.*/",
          "setterMethodName" : "setVersion",
          "setterModel" : {
            "variableDeclarationType" : "Long",
            "variableName" : "version",
            "variableType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The version of the thing record in the registry.</p>\n@param version The version of the thing record in the registry.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Long",
            "variableName" : "version",
            "variableType" : "Long",
            "documentation" : "<p>The version of the thing record in the registry.</p>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ThingAttribute",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "ThingAttribute",
        "variableName" : "thingAttribute",
        "variableType" : "ThingAttribute",
        "documentation" : null,
        "simpleType" : "ThingAttribute",
        "variableSetterType" : "ThingAttribute"
      },
      "wrapper" : false
    },
    "ThingTypeDefinition" : {
      "c2jName" : "ThingTypeDefinition",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The definition of the thing type, including thing type name and description.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "thingTypeName",
        "c2jShape" : "ThingTypeName",
        "deprecated" : false,
        "documentation" : "<p>The name of the thing type.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withThingTypeName",
        "getterDocumentation" : "/**<p>The name of the thing type.</p>\n@return The name of the thing type.*/",
        "getterMethodName" : "getThingTypeName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "thingTypeName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "thingTypeName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ThingTypeName",
        "setterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.*/",
        "setterMethodName" : "setThingTypeName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingTypeName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingTypeName",
          "variableType" : "String",
          "documentation" : "<p>The name of the thing type.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "thingTypeProperties",
        "c2jShape" : "ThingTypeProperties",
        "deprecated" : false,
        "documentation" : "<p>The ThingTypeProperties for the thing type.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ThingTypeProperties for the thing type.</p>\n@param thingTypeProperties The ThingTypeProperties for the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withThingTypeProperties",
        "getterDocumentation" : "/**<p>The ThingTypeProperties for the thing type.</p>\n@return The ThingTypeProperties for the thing type.*/",
        "getterMethodName" : "getThingTypeProperties",
        "getterModel" : {
          "returnType" : "ThingTypeProperties",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "thingTypeProperties",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "thingTypeProperties",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ThingTypeProperties",
        "setterDocumentation" : "/**<p>The ThingTypeProperties for the thing type.</p>\n@param thingTypeProperties The ThingTypeProperties for the thing type.*/",
        "setterMethodName" : "setThingTypeProperties",
        "setterModel" : {
          "variableDeclarationType" : "ThingTypeProperties",
          "variableName" : "thingTypeProperties",
          "variableType" : "ThingTypeProperties",
          "documentation" : "",
          "simpleType" : "ThingTypeProperties",
          "variableSetterType" : "ThingTypeProperties"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ThingTypeProperties for the thing type.</p>\n@param thingTypeProperties The ThingTypeProperties for the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "ThingTypeProperties",
          "variableName" : "thingTypeProperties",
          "variableType" : "ThingTypeProperties",
          "documentation" : "<p>The ThingTypeProperties for the thing type.</p>",
          "simpleType" : "ThingTypeProperties",
          "variableSetterType" : "ThingTypeProperties"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "thingTypeMetadata",
        "c2jShape" : "ThingTypeMetadata",
        "deprecated" : false,
        "documentation" : "<p>The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.</p>\n@param thingTypeMetadata The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withThingTypeMetadata",
        "getterDocumentation" : "/**<p>The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.</p>\n@return The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.*/",
        "getterMethodName" : "getThingTypeMetadata",
        "getterModel" : {
          "returnType" : "ThingTypeMetadata",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "thingTypeMetadata",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "thingTypeMetadata",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ThingTypeMetadata",
        "setterDocumentation" : "/**<p>The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.</p>\n@param thingTypeMetadata The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.*/",
        "setterMethodName" : "setThingTypeMetadata",
        "setterModel" : {
          "variableDeclarationType" : "ThingTypeMetadata",
          "variableName" : "thingTypeMetadata",
          "variableType" : "ThingTypeMetadata",
          "documentation" : "",
          "simpleType" : "ThingTypeMetadata",
          "variableSetterType" : "ThingTypeMetadata"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.</p>\n@param thingTypeMetadata The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "ThingTypeMetadata",
          "variableName" : "thingTypeMetadata",
          "variableType" : "ThingTypeMetadata",
          "documentation" : "<p>The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.</p>",
          "simpleType" : "ThingTypeMetadata",
          "variableSetterType" : "ThingTypeMetadata"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ThingTypeMetadata" : {
          "c2jName" : "thingTypeMetadata",
          "c2jShape" : "ThingTypeMetadata",
          "deprecated" : false,
          "documentation" : "<p>The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.</p>\n@param thingTypeMetadata The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withThingTypeMetadata",
          "getterDocumentation" : "/**<p>The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.</p>\n@return The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.*/",
          "getterMethodName" : "getThingTypeMetadata",
          "getterModel" : {
            "returnType" : "ThingTypeMetadata",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "thingTypeMetadata",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "thingTypeMetadata",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ThingTypeMetadata",
          "setterDocumentation" : "/**<p>The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.</p>\n@param thingTypeMetadata The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.*/",
          "setterMethodName" : "setThingTypeMetadata",
          "setterModel" : {
            "variableDeclarationType" : "ThingTypeMetadata",
            "variableName" : "thingTypeMetadata",
            "variableType" : "ThingTypeMetadata",
            "documentation" : "",
            "simpleType" : "ThingTypeMetadata",
            "variableSetterType" : "ThingTypeMetadata"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.</p>\n@param thingTypeMetadata The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "ThingTypeMetadata",
            "variableName" : "thingTypeMetadata",
            "variableType" : "ThingTypeMetadata",
            "documentation" : "<p>The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.</p>",
            "simpleType" : "ThingTypeMetadata",
            "variableSetterType" : "ThingTypeMetadata"
          },
          "xmlNameSpaceUri" : null
        },
        "ThingTypeName" : {
          "c2jName" : "thingTypeName",
          "c2jShape" : "ThingTypeName",
          "deprecated" : false,
          "documentation" : "<p>The name of the thing type.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withThingTypeName",
          "getterDocumentation" : "/**<p>The name of the thing type.</p>\n@return The name of the thing type.*/",
          "getterMethodName" : "getThingTypeName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "thingTypeName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "thingTypeName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ThingTypeName",
          "setterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.*/",
          "setterMethodName" : "setThingTypeName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingTypeName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingTypeName",
            "variableType" : "String",
            "documentation" : "<p>The name of the thing type.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ThingTypeProperties" : {
          "c2jName" : "thingTypeProperties",
          "c2jShape" : "ThingTypeProperties",
          "deprecated" : false,
          "documentation" : "<p>The ThingTypeProperties for the thing type.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ThingTypeProperties for the thing type.</p>\n@param thingTypeProperties The ThingTypeProperties for the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withThingTypeProperties",
          "getterDocumentation" : "/**<p>The ThingTypeProperties for the thing type.</p>\n@return The ThingTypeProperties for the thing type.*/",
          "getterMethodName" : "getThingTypeProperties",
          "getterModel" : {
            "returnType" : "ThingTypeProperties",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "thingTypeProperties",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "thingTypeProperties",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ThingTypeProperties",
          "setterDocumentation" : "/**<p>The ThingTypeProperties for the thing type.</p>\n@param thingTypeProperties The ThingTypeProperties for the thing type.*/",
          "setterMethodName" : "setThingTypeProperties",
          "setterModel" : {
            "variableDeclarationType" : "ThingTypeProperties",
            "variableName" : "thingTypeProperties",
            "variableType" : "ThingTypeProperties",
            "documentation" : "",
            "simpleType" : "ThingTypeProperties",
            "variableSetterType" : "ThingTypeProperties"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ThingTypeProperties for the thing type.</p>\n@param thingTypeProperties The ThingTypeProperties for the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "ThingTypeProperties",
            "variableName" : "thingTypeProperties",
            "variableType" : "ThingTypeProperties",
            "documentation" : "<p>The ThingTypeProperties for the thing type.</p>",
            "simpleType" : "ThingTypeProperties",
            "variableSetterType" : "ThingTypeProperties"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ThingTypeDefinition",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "ThingTypeDefinition",
        "variableName" : "thingTypeDefinition",
        "variableType" : "ThingTypeDefinition",
        "documentation" : null,
        "simpleType" : "ThingTypeDefinition",
        "variableSetterType" : "ThingTypeDefinition"
      },
      "wrapper" : false
    },
    "ThingTypeMetadata" : {
      "c2jName" : "ThingTypeMetadata",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when time was deprecated.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "deprecated",
        "c2jShape" : "Boolean",
        "deprecated" : false,
        "documentation" : "<p>Whether the thing type is deprecated. If <b>true</b>, no new things could be associated with this type.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Whether the thing type is deprecated. If <b>true</b>, no new things could be associated with this type.</p>\n@param deprecated Whether the thing type is deprecated. If <b>true</b>, no new things could be associated with this type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDeprecated",
        "getterDocumentation" : "/**<p>Whether the thing type is deprecated. If <b>true</b>, no new things could be associated with this type.</p>\n@return Whether the thing type is deprecated. If <b>true</b>, no new things could be associated with this type.*/",
        "getterMethodName" : "getDeprecated",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "deprecated",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "deprecated",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "Deprecated",
        "setterDocumentation" : "/**<p>Whether the thing type is deprecated. If <b>true</b>, no new things could be associated with this type.</p>\n@param deprecated Whether the thing type is deprecated. If <b>true</b>, no new things could be associated with this type.*/",
        "setterMethodName" : "setDeprecated",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "deprecated",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Whether the thing type is deprecated. If <b>true</b>, no new things could be associated with this type.</p>\n@param deprecated Whether the thing type is deprecated. If <b>true</b>, no new things could be associated with this type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "deprecated",
          "variableType" : "Boolean",
          "documentation" : "<p>Whether the thing type is deprecated. If <b>true</b>, no new things could be associated with this type.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "deprecationDate",
        "c2jShape" : "DeprecationDate",
        "deprecated" : false,
        "documentation" : "<p>The date and time when the thing type was deprecated.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date and time when the thing type was deprecated.</p>\n@param deprecationDate The date and time when the thing type was deprecated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDeprecationDate",
        "getterDocumentation" : "/**<p>The date and time when the thing type was deprecated.</p>\n@return The date and time when the thing type was deprecated.*/",
        "getterMethodName" : "getDeprecationDate",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "deprecationDate",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "deprecationDate",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "DeprecationDate",
        "setterDocumentation" : "/**<p>The date and time when the thing type was deprecated.</p>\n@param deprecationDate The date and time when the thing type was deprecated.*/",
        "setterMethodName" : "setDeprecationDate",
        "setterModel" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "deprecationDate",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date and time when the thing type was deprecated.</p>\n@param deprecationDate The date and time when the thing type was deprecated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "deprecationDate",
          "variableType" : "java.util.Date",
          "documentation" : "<p>The date and time when the thing type was deprecated.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "creationDate",
        "c2jShape" : "CreationDate",
        "deprecated" : false,
        "documentation" : "<p>The date and time when the thing type was created.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date and time when the thing type was created.</p>\n@param creationDate The date and time when the thing type was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCreationDate",
        "getterDocumentation" : "/**<p>The date and time when the thing type was created.</p>\n@return The date and time when the thing type was created.*/",
        "getterMethodName" : "getCreationDate",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "creationDate",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "creationDate",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "CreationDate",
        "setterDocumentation" : "/**<p>The date and time when the thing type was created.</p>\n@param creationDate The date and time when the thing type was created.*/",
        "setterMethodName" : "setCreationDate",
        "setterModel" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "creationDate",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date and time when the thing type was created.</p>\n@param creationDate The date and time when the thing type was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "creationDate",
          "variableType" : "java.util.Date",
          "documentation" : "<p>The date and time when the thing type was created.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CreationDate" : {
          "c2jName" : "creationDate",
          "c2jShape" : "CreationDate",
          "deprecated" : false,
          "documentation" : "<p>The date and time when the thing type was created.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date and time when the thing type was created.</p>\n@param creationDate The date and time when the thing type was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCreationDate",
          "getterDocumentation" : "/**<p>The date and time when the thing type was created.</p>\n@return The date and time when the thing type was created.*/",
          "getterMethodName" : "getCreationDate",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "creationDate",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "creationDate",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "CreationDate",
          "setterDocumentation" : "/**<p>The date and time when the thing type was created.</p>\n@param creationDate The date and time when the thing type was created.*/",
          "setterMethodName" : "setCreationDate",
          "setterModel" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "creationDate",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date and time when the thing type was created.</p>\n@param creationDate The date and time when the thing type was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "creationDate",
            "variableType" : "java.util.Date",
            "documentation" : "<p>The date and time when the thing type was created.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "Deprecated" : {
          "c2jName" : "deprecated",
          "c2jShape" : "Boolean",
          "deprecated" : false,
          "documentation" : "<p>Whether the thing type is deprecated. If <b>true</b>, no new things could be associated with this type.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Whether the thing type is deprecated. If <b>true</b>, no new things could be associated with this type.</p>\n@param deprecated Whether the thing type is deprecated. If <b>true</b>, no new things could be associated with this type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDeprecated",
          "getterDocumentation" : "/**<p>Whether the thing type is deprecated. If <b>true</b>, no new things could be associated with this type.</p>\n@return Whether the thing type is deprecated. If <b>true</b>, no new things could be associated with this type.*/",
          "getterMethodName" : "getDeprecated",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "deprecated",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "deprecated",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "Deprecated",
          "setterDocumentation" : "/**<p>Whether the thing type is deprecated. If <b>true</b>, no new things could be associated with this type.</p>\n@param deprecated Whether the thing type is deprecated. If <b>true</b>, no new things could be associated with this type.*/",
          "setterMethodName" : "setDeprecated",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "deprecated",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Whether the thing type is deprecated. If <b>true</b>, no new things could be associated with this type.</p>\n@param deprecated Whether the thing type is deprecated. If <b>true</b>, no new things could be associated with this type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "deprecated",
            "variableType" : "Boolean",
            "documentation" : "<p>Whether the thing type is deprecated. If <b>true</b>, no new things could be associated with this type.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        },
        "DeprecationDate" : {
          "c2jName" : "deprecationDate",
          "c2jShape" : "DeprecationDate",
          "deprecated" : false,
          "documentation" : "<p>The date and time when the thing type was deprecated.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date and time when the thing type was deprecated.</p>\n@param deprecationDate The date and time when the thing type was deprecated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDeprecationDate",
          "getterDocumentation" : "/**<p>The date and time when the thing type was deprecated.</p>\n@return The date and time when the thing type was deprecated.*/",
          "getterMethodName" : "getDeprecationDate",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "deprecationDate",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "deprecationDate",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "DeprecationDate",
          "setterDocumentation" : "/**<p>The date and time when the thing type was deprecated.</p>\n@param deprecationDate The date and time when the thing type was deprecated.*/",
          "setterMethodName" : "setDeprecationDate",
          "setterModel" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "deprecationDate",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date and time when the thing type was deprecated.</p>\n@param deprecationDate The date and time when the thing type was deprecated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "deprecationDate",
            "variableType" : "java.util.Date",
            "documentation" : "<p>The date and time when the thing type was deprecated.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ThingTypeMetadata",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "ThingTypeMetadata",
        "variableName" : "thingTypeMetadata",
        "variableType" : "ThingTypeMetadata",
        "documentation" : null,
        "simpleType" : "ThingTypeMetadata",
        "variableSetterType" : "ThingTypeMetadata"
      },
      "wrapper" : false
    },
    "ThingTypeProperties" : {
      "c2jName" : "ThingTypeProperties",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The ThingTypeProperties contains information about the thing type including: a thing type description, and a list of searchable thing attribute names.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "thingTypeDescription",
        "c2jShape" : "ThingTypeDescription",
        "deprecated" : false,
        "documentation" : "<p>The description of the thing type.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The description of the thing type.</p>\n@param thingTypeDescription The description of the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withThingTypeDescription",
        "getterDocumentation" : "/**<p>The description of the thing type.</p>\n@return The description of the thing type.*/",
        "getterMethodName" : "getThingTypeDescription",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "thingTypeDescription",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "thingTypeDescription",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ThingTypeDescription",
        "setterDocumentation" : "/**<p>The description of the thing type.</p>\n@param thingTypeDescription The description of the thing type.*/",
        "setterMethodName" : "setThingTypeDescription",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingTypeDescription",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The description of the thing type.</p>\n@param thingTypeDescription The description of the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingTypeDescription",
          "variableType" : "String",
          "documentation" : "<p>The description of the thing type.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "searchableAttributes",
        "c2jShape" : "SearchableAttributes",
        "deprecated" : false,
        "documentation" : "<p>A list of searchable thing attribute names.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A list of searchable thing attribute names.</p>\n@param searchableAttributes A list of searchable thing attribute names.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSearchableAttributes",
        "getterDocumentation" : "/**<p>A list of searchable thing attribute names.</p>\n@return A list of searchable thing attribute names.*/",
        "getterMethodName" : "getSearchableAttributes",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "searchableAttributes",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "searchableAttributes",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "AttributeName",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "SearchableAttributes",
        "setterDocumentation" : "/**<p>A list of searchable thing attribute names.</p>\n@param searchableAttributes A list of searchable thing attribute names.*/",
        "setterMethodName" : "setSearchableAttributes",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "searchableAttributes",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A list of searchable thing attribute names.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setSearchableAttributes(java.util.Collection)} or {@link #withSearchableAttributes(java.util.Collection)} if you want to override the existing values.</p>\n@param searchableAttributes A list of searchable thing attribute names.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "searchableAttributes",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>A list of searchable thing attribute names.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "SearchableAttributes" : {
          "c2jName" : "searchableAttributes",
          "c2jShape" : "SearchableAttributes",
          "deprecated" : false,
          "documentation" : "<p>A list of searchable thing attribute names.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A list of searchable thing attribute names.</p>\n@param searchableAttributes A list of searchable thing attribute names.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSearchableAttributes",
          "getterDocumentation" : "/**<p>A list of searchable thing attribute names.</p>\n@return A list of searchable thing attribute names.*/",
          "getterMethodName" : "getSearchableAttributes",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "searchableAttributes",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "searchableAttributes",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "AttributeName",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "SearchableAttributes",
          "setterDocumentation" : "/**<p>A list of searchable thing attribute names.</p>\n@param searchableAttributes A list of searchable thing attribute names.*/",
          "setterMethodName" : "setSearchableAttributes",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "searchableAttributes",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A list of searchable thing attribute names.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setSearchableAttributes(java.util.Collection)} or {@link #withSearchableAttributes(java.util.Collection)} if you want to override the existing values.</p>\n@param searchableAttributes A list of searchable thing attribute names.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "searchableAttributes",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>A list of searchable thing attribute names.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        },
        "ThingTypeDescription" : {
          "c2jName" : "thingTypeDescription",
          "c2jShape" : "ThingTypeDescription",
          "deprecated" : false,
          "documentation" : "<p>The description of the thing type.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The description of the thing type.</p>\n@param thingTypeDescription The description of the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withThingTypeDescription",
          "getterDocumentation" : "/**<p>The description of the thing type.</p>\n@return The description of the thing type.*/",
          "getterMethodName" : "getThingTypeDescription",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "thingTypeDescription",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "thingTypeDescription",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ThingTypeDescription",
          "setterDocumentation" : "/**<p>The description of the thing type.</p>\n@param thingTypeDescription The description of the thing type.*/",
          "setterMethodName" : "setThingTypeDescription",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingTypeDescription",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The description of the thing type.</p>\n@param thingTypeDescription The description of the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingTypeDescription",
            "variableType" : "String",
            "documentation" : "<p>The description of the thing type.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ThingTypeProperties",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "ThingTypeProperties",
        "variableName" : "thingTypeProperties",
        "variableType" : "ThingTypeProperties",
        "documentation" : null,
        "simpleType" : "ThingTypeProperties",
        "variableSetterType" : "ThingTypeProperties"
      },
      "wrapper" : false
    },
    "ThrottlingException" : {
      "c2jName" : "ThrottlingException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The rate exceeds the limit.</p>",
      "enums" : null,
      "errorCode" : "ThrottlingException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ThrottlingException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ThrottlingException",
        "variableName" : "throttlingException",
        "variableType" : "ThrottlingException",
        "documentation" : null,
        "simpleType" : "ThrottlingException",
        "variableSetterType" : "ThrottlingException"
      },
      "wrapper" : false
    },
    "TopicRule" : {
      "c2jName" : "TopicRule",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Describes a rule.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ruleName",
        "c2jShape" : "RuleName",
        "deprecated" : false,
        "documentation" : "<p>The name of the rule.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRuleName",
        "getterDocumentation" : "/**<p>The name of the rule.</p>\n@return The name of the rule.*/",
        "getterMethodName" : "getRuleName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ruleName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ruleName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RuleName",
        "setterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.*/",
        "setterMethodName" : "setRuleName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "ruleName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "ruleName",
          "variableType" : "String",
          "documentation" : "<p>The name of the rule.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "sql",
        "c2jShape" : "SQL",
        "deprecated" : false,
        "documentation" : "<p>The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters.</p>\n@param sql The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSql",
        "getterDocumentation" : "/**<p>The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters.</p>\n@return The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters.*/",
        "getterMethodName" : "getSql",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "sql",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "sql",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Sql",
        "setterDocumentation" : "/**<p>The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters.</p>\n@param sql The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters.*/",
        "setterMethodName" : "setSql",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "sql",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters.</p>\n@param sql The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "sql",
          "variableType" : "String",
          "documentation" : "<p>The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "description",
        "c2jShape" : "Description",
        "deprecated" : false,
        "documentation" : "<p>The description of the rule.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The description of the rule.</p>\n@param description The description of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDescription",
        "getterDocumentation" : "/**<p>The description of the rule.</p>\n@return The description of the rule.*/",
        "getterMethodName" : "getDescription",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "description",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "description",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Description",
        "setterDocumentation" : "/**<p>The description of the rule.</p>\n@param description The description of the rule.*/",
        "setterMethodName" : "setDescription",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "description",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The description of the rule.</p>\n@param description The description of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "description",
          "variableType" : "String",
          "documentation" : "<p>The description of the rule.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "createdAt",
        "c2jShape" : "CreatedAtDate",
        "deprecated" : false,
        "documentation" : "<p>The date and time the rule was created.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date and time the rule was created.</p>\n@param createdAt The date and time the rule was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCreatedAt",
        "getterDocumentation" : "/**<p>The date and time the rule was created.</p>\n@return The date and time the rule was created.*/",
        "getterMethodName" : "getCreatedAt",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "createdAt",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "createdAt",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "CreatedAt",
        "setterDocumentation" : "/**<p>The date and time the rule was created.</p>\n@param createdAt The date and time the rule was created.*/",
        "setterMethodName" : "setCreatedAt",
        "setterModel" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "createdAt",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date and time the rule was created.</p>\n@param createdAt The date and time the rule was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "createdAt",
          "variableType" : "java.util.Date",
          "documentation" : "<p>The date and time the rule was created.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "actions",
        "c2jShape" : "ActionList",
        "deprecated" : false,
        "documentation" : "<p>The actions associated with the rule.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The actions associated with the rule.</p>\n@param actions The actions associated with the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withActions",
        "getterDocumentation" : "/**<p>The actions associated with the rule.</p>\n@return The actions associated with the rule.*/",
        "getterMethodName" : "getActions",
        "getterModel" : {
          "returnType" : "java.util.List<Action>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "actions",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "actions",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Action",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Action",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "Action",
              "variableName" : "member",
              "variableType" : "Action",
              "documentation" : "",
              "simpleType" : "Action",
              "variableSetterType" : "Action"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "Action",
              "variableName" : "member",
              "variableType" : "Action",
              "documentation" : "",
              "simpleType" : "Action",
              "variableSetterType" : "Action"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Action",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Action",
          "templateImplType" : "java.util.ArrayList<Action>",
          "templateType" : "java.util.List<Action>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Actions",
        "setterDocumentation" : "/**<p>The actions associated with the rule.</p>\n@param actions The actions associated with the rule.*/",
        "setterMethodName" : "setActions",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<Action>",
          "variableName" : "actions",
          "variableType" : "java.util.List<Action>",
          "documentation" : "",
          "simpleType" : "List<Action>",
          "variableSetterType" : "java.util.Collection<Action>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The actions associated with the rule.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setActions(java.util.Collection)} or {@link #withActions(java.util.Collection)} if you want to override the existing values.</p>\n@param actions The actions associated with the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<Action>",
          "variableName" : "actions",
          "variableType" : "java.util.List<Action>",
          "documentation" : "<p>The actions associated with the rule.</p>",
          "simpleType" : "List<Action>",
          "variableSetterType" : "java.util.Collection<Action>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ruleDisabled",
        "c2jShape" : "IsDisabled",
        "deprecated" : false,
        "documentation" : "<p>Specifies whether the rule is disabled.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRuleDisabled",
        "getterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@return Specifies whether the rule is disabled.*/",
        "getterMethodName" : "getRuleDisabled",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ruleDisabled",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ruleDisabled",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "RuleDisabled",
        "setterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.*/",
        "setterMethodName" : "setRuleDisabled",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "ruleDisabled",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "ruleDisabled",
          "variableType" : "Boolean",
          "documentation" : "<p>Specifies whether the rule is disabled.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "awsIotSqlVersion",
        "c2jShape" : "AwsIotSqlVersion",
        "deprecated" : false,
        "documentation" : "<p>The version of the SQL rules engine to use when evaluating the rule.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The version of the SQL rules engine to use when evaluating the rule.</p>\n@param awsIotSqlVersion The version of the SQL rules engine to use when evaluating the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAwsIotSqlVersion",
        "getterDocumentation" : "/**<p>The version of the SQL rules engine to use when evaluating the rule.</p>\n@return The version of the SQL rules engine to use when evaluating the rule.*/",
        "getterMethodName" : "getAwsIotSqlVersion",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "awsIotSqlVersion",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "awsIotSqlVersion",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "AwsIotSqlVersion",
        "setterDocumentation" : "/**<p>The version of the SQL rules engine to use when evaluating the rule.</p>\n@param awsIotSqlVersion The version of the SQL rules engine to use when evaluating the rule.*/",
        "setterMethodName" : "setAwsIotSqlVersion",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "awsIotSqlVersion",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The version of the SQL rules engine to use when evaluating the rule.</p>\n@param awsIotSqlVersion The version of the SQL rules engine to use when evaluating the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "awsIotSqlVersion",
          "variableType" : "String",
          "documentation" : "<p>The version of the SQL rules engine to use when evaluating the rule.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Actions" : {
          "c2jName" : "actions",
          "c2jShape" : "ActionList",
          "deprecated" : false,
          "documentation" : "<p>The actions associated with the rule.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The actions associated with the rule.</p>\n@param actions The actions associated with the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withActions",
          "getterDocumentation" : "/**<p>The actions associated with the rule.</p>\n@return The actions associated with the rule.*/",
          "getterMethodName" : "getActions",
          "getterModel" : {
            "returnType" : "java.util.List<Action>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "actions",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "actions",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Action",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Action",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "Action",
                "variableName" : "member",
                "variableType" : "Action",
                "documentation" : "",
                "simpleType" : "Action",
                "variableSetterType" : "Action"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "Action",
                "variableName" : "member",
                "variableType" : "Action",
                "documentation" : "",
                "simpleType" : "Action",
                "variableSetterType" : "Action"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Action",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Action",
            "templateImplType" : "java.util.ArrayList<Action>",
            "templateType" : "java.util.List<Action>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Actions",
          "setterDocumentation" : "/**<p>The actions associated with the rule.</p>\n@param actions The actions associated with the rule.*/",
          "setterMethodName" : "setActions",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<Action>",
            "variableName" : "actions",
            "variableType" : "java.util.List<Action>",
            "documentation" : "",
            "simpleType" : "List<Action>",
            "variableSetterType" : "java.util.Collection<Action>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The actions associated with the rule.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setActions(java.util.Collection)} or {@link #withActions(java.util.Collection)} if you want to override the existing values.</p>\n@param actions The actions associated with the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<Action>",
            "variableName" : "actions",
            "variableType" : "java.util.List<Action>",
            "documentation" : "<p>The actions associated with the rule.</p>",
            "simpleType" : "List<Action>",
            "variableSetterType" : "java.util.Collection<Action>"
          },
          "xmlNameSpaceUri" : null
        },
        "AwsIotSqlVersion" : {
          "c2jName" : "awsIotSqlVersion",
          "c2jShape" : "AwsIotSqlVersion",
          "deprecated" : false,
          "documentation" : "<p>The version of the SQL rules engine to use when evaluating the rule.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The version of the SQL rules engine to use when evaluating the rule.</p>\n@param awsIotSqlVersion The version of the SQL rules engine to use when evaluating the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAwsIotSqlVersion",
          "getterDocumentation" : "/**<p>The version of the SQL rules engine to use when evaluating the rule.</p>\n@return The version of the SQL rules engine to use when evaluating the rule.*/",
          "getterMethodName" : "getAwsIotSqlVersion",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "awsIotSqlVersion",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "awsIotSqlVersion",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "AwsIotSqlVersion",
          "setterDocumentation" : "/**<p>The version of the SQL rules engine to use when evaluating the rule.</p>\n@param awsIotSqlVersion The version of the SQL rules engine to use when evaluating the rule.*/",
          "setterMethodName" : "setAwsIotSqlVersion",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "awsIotSqlVersion",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The version of the SQL rules engine to use when evaluating the rule.</p>\n@param awsIotSqlVersion The version of the SQL rules engine to use when evaluating the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "awsIotSqlVersion",
            "variableType" : "String",
            "documentation" : "<p>The version of the SQL rules engine to use when evaluating the rule.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CreatedAt" : {
          "c2jName" : "createdAt",
          "c2jShape" : "CreatedAtDate",
          "deprecated" : false,
          "documentation" : "<p>The date and time the rule was created.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date and time the rule was created.</p>\n@param createdAt The date and time the rule was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCreatedAt",
          "getterDocumentation" : "/**<p>The date and time the rule was created.</p>\n@return The date and time the rule was created.*/",
          "getterMethodName" : "getCreatedAt",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "createdAt",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "createdAt",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "CreatedAt",
          "setterDocumentation" : "/**<p>The date and time the rule was created.</p>\n@param createdAt The date and time the rule was created.*/",
          "setterMethodName" : "setCreatedAt",
          "setterModel" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "createdAt",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date and time the rule was created.</p>\n@param createdAt The date and time the rule was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "createdAt",
            "variableType" : "java.util.Date",
            "documentation" : "<p>The date and time the rule was created.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "Description" : {
          "c2jName" : "description",
          "c2jShape" : "Description",
          "deprecated" : false,
          "documentation" : "<p>The description of the rule.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The description of the rule.</p>\n@param description The description of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDescription",
          "getterDocumentation" : "/**<p>The description of the rule.</p>\n@return The description of the rule.*/",
          "getterMethodName" : "getDescription",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "description",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "description",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Description",
          "setterDocumentation" : "/**<p>The description of the rule.</p>\n@param description The description of the rule.*/",
          "setterMethodName" : "setDescription",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "description",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The description of the rule.</p>\n@param description The description of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "description",
            "variableType" : "String",
            "documentation" : "<p>The description of the rule.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RuleDisabled" : {
          "c2jName" : "ruleDisabled",
          "c2jShape" : "IsDisabled",
          "deprecated" : false,
          "documentation" : "<p>Specifies whether the rule is disabled.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRuleDisabled",
          "getterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@return Specifies whether the rule is disabled.*/",
          "getterMethodName" : "getRuleDisabled",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ruleDisabled",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ruleDisabled",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "RuleDisabled",
          "setterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.*/",
          "setterMethodName" : "setRuleDisabled",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "ruleDisabled",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "ruleDisabled",
            "variableType" : "Boolean",
            "documentation" : "<p>Specifies whether the rule is disabled.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        },
        "RuleName" : {
          "c2jName" : "ruleName",
          "c2jShape" : "RuleName",
          "deprecated" : false,
          "documentation" : "<p>The name of the rule.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRuleName",
          "getterDocumentation" : "/**<p>The name of the rule.</p>\n@return The name of the rule.*/",
          "getterMethodName" : "getRuleName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ruleName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ruleName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RuleName",
          "setterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.*/",
          "setterMethodName" : "setRuleName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "ruleName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "ruleName",
            "variableType" : "String",
            "documentation" : "<p>The name of the rule.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Sql" : {
          "c2jName" : "sql",
          "c2jShape" : "SQL",
          "deprecated" : false,
          "documentation" : "<p>The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters.</p>\n@param sql The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSql",
          "getterDocumentation" : "/**<p>The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters.</p>\n@return The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters.*/",
          "getterMethodName" : "getSql",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "sql",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "sql",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Sql",
          "setterDocumentation" : "/**<p>The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters.</p>\n@param sql The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters.*/",
          "setterMethodName" : "setSql",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "sql",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters.</p>\n@param sql The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "sql",
            "variableType" : "String",
            "documentation" : "<p>The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "TopicRule",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "TopicRule",
        "variableName" : "topicRule",
        "variableType" : "TopicRule",
        "documentation" : null,
        "simpleType" : "TopicRule",
        "variableSetterType" : "TopicRule"
      },
      "wrapper" : false
    },
    "TopicRuleListItem" : {
      "c2jName" : "TopicRuleListItem",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Describes a rule.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ruleArn",
        "c2jShape" : "RuleArn",
        "deprecated" : false,
        "documentation" : "<p>The rule ARN.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The rule ARN.</p>\n@param ruleArn The rule ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRuleArn",
        "getterDocumentation" : "/**<p>The rule ARN.</p>\n@return The rule ARN.*/",
        "getterMethodName" : "getRuleArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ruleArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ruleArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RuleArn",
        "setterDocumentation" : "/**<p>The rule ARN.</p>\n@param ruleArn The rule ARN.*/",
        "setterMethodName" : "setRuleArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "ruleArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The rule ARN.</p>\n@param ruleArn The rule ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "ruleArn",
          "variableType" : "String",
          "documentation" : "<p>The rule ARN.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ruleName",
        "c2jShape" : "RuleName",
        "deprecated" : false,
        "documentation" : "<p>The name of the rule.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRuleName",
        "getterDocumentation" : "/**<p>The name of the rule.</p>\n@return The name of the rule.*/",
        "getterMethodName" : "getRuleName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ruleName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ruleName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RuleName",
        "setterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.*/",
        "setterMethodName" : "setRuleName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "ruleName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "ruleName",
          "variableType" : "String",
          "documentation" : "<p>The name of the rule.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "topicPattern",
        "c2jShape" : "TopicPattern",
        "deprecated" : false,
        "documentation" : "<p>The pattern for the topic names that apply.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The pattern for the topic names that apply.</p>\n@param topicPattern The pattern for the topic names that apply.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTopicPattern",
        "getterDocumentation" : "/**<p>The pattern for the topic names that apply.</p>\n@return The pattern for the topic names that apply.*/",
        "getterMethodName" : "getTopicPattern",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "topicPattern",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "topicPattern",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TopicPattern",
        "setterDocumentation" : "/**<p>The pattern for the topic names that apply.</p>\n@param topicPattern The pattern for the topic names that apply.*/",
        "setterMethodName" : "setTopicPattern",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "topicPattern",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The pattern for the topic names that apply.</p>\n@param topicPattern The pattern for the topic names that apply.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "topicPattern",
          "variableType" : "String",
          "documentation" : "<p>The pattern for the topic names that apply.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "createdAt",
        "c2jShape" : "CreatedAtDate",
        "deprecated" : false,
        "documentation" : "<p>The date and time the rule was created.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date and time the rule was created.</p>\n@param createdAt The date and time the rule was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCreatedAt",
        "getterDocumentation" : "/**<p>The date and time the rule was created.</p>\n@return The date and time the rule was created.*/",
        "getterMethodName" : "getCreatedAt",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "createdAt",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "createdAt",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "CreatedAt",
        "setterDocumentation" : "/**<p>The date and time the rule was created.</p>\n@param createdAt The date and time the rule was created.*/",
        "setterMethodName" : "setCreatedAt",
        "setterModel" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "createdAt",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date and time the rule was created.</p>\n@param createdAt The date and time the rule was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "createdAt",
          "variableType" : "java.util.Date",
          "documentation" : "<p>The date and time the rule was created.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ruleDisabled",
        "c2jShape" : "IsDisabled",
        "deprecated" : false,
        "documentation" : "<p>Specifies whether the rule is disabled.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRuleDisabled",
        "getterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@return Specifies whether the rule is disabled.*/",
        "getterMethodName" : "getRuleDisabled",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ruleDisabled",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ruleDisabled",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "RuleDisabled",
        "setterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.*/",
        "setterMethodName" : "setRuleDisabled",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "ruleDisabled",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "ruleDisabled",
          "variableType" : "Boolean",
          "documentation" : "<p>Specifies whether the rule is disabled.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CreatedAt" : {
          "c2jName" : "createdAt",
          "c2jShape" : "CreatedAtDate",
          "deprecated" : false,
          "documentation" : "<p>The date and time the rule was created.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date and time the rule was created.</p>\n@param createdAt The date and time the rule was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCreatedAt",
          "getterDocumentation" : "/**<p>The date and time the rule was created.</p>\n@return The date and time the rule was created.*/",
          "getterMethodName" : "getCreatedAt",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "createdAt",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "createdAt",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "CreatedAt",
          "setterDocumentation" : "/**<p>The date and time the rule was created.</p>\n@param createdAt The date and time the rule was created.*/",
          "setterMethodName" : "setCreatedAt",
          "setterModel" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "createdAt",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date and time the rule was created.</p>\n@param createdAt The date and time the rule was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "createdAt",
            "variableType" : "java.util.Date",
            "documentation" : "<p>The date and time the rule was created.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "RuleArn" : {
          "c2jName" : "ruleArn",
          "c2jShape" : "RuleArn",
          "deprecated" : false,
          "documentation" : "<p>The rule ARN.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The rule ARN.</p>\n@param ruleArn The rule ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRuleArn",
          "getterDocumentation" : "/**<p>The rule ARN.</p>\n@return The rule ARN.*/",
          "getterMethodName" : "getRuleArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ruleArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ruleArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RuleArn",
          "setterDocumentation" : "/**<p>The rule ARN.</p>\n@param ruleArn The rule ARN.*/",
          "setterMethodName" : "setRuleArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "ruleArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The rule ARN.</p>\n@param ruleArn The rule ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "ruleArn",
            "variableType" : "String",
            "documentation" : "<p>The rule ARN.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RuleDisabled" : {
          "c2jName" : "ruleDisabled",
          "c2jShape" : "IsDisabled",
          "deprecated" : false,
          "documentation" : "<p>Specifies whether the rule is disabled.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRuleDisabled",
          "getterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@return Specifies whether the rule is disabled.*/",
          "getterMethodName" : "getRuleDisabled",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ruleDisabled",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ruleDisabled",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "RuleDisabled",
          "setterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.*/",
          "setterMethodName" : "setRuleDisabled",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "ruleDisabled",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "ruleDisabled",
            "variableType" : "Boolean",
            "documentation" : "<p>Specifies whether the rule is disabled.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        },
        "RuleName" : {
          "c2jName" : "ruleName",
          "c2jShape" : "RuleName",
          "deprecated" : false,
          "documentation" : "<p>The name of the rule.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRuleName",
          "getterDocumentation" : "/**<p>The name of the rule.</p>\n@return The name of the rule.*/",
          "getterMethodName" : "getRuleName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ruleName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ruleName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RuleName",
          "setterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.*/",
          "setterMethodName" : "setRuleName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "ruleName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "ruleName",
            "variableType" : "String",
            "documentation" : "<p>The name of the rule.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TopicPattern" : {
          "c2jName" : "topicPattern",
          "c2jShape" : "TopicPattern",
          "deprecated" : false,
          "documentation" : "<p>The pattern for the topic names that apply.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The pattern for the topic names that apply.</p>\n@param topicPattern The pattern for the topic names that apply.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTopicPattern",
          "getterDocumentation" : "/**<p>The pattern for the topic names that apply.</p>\n@return The pattern for the topic names that apply.*/",
          "getterMethodName" : "getTopicPattern",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "topicPattern",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "topicPattern",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TopicPattern",
          "setterDocumentation" : "/**<p>The pattern for the topic names that apply.</p>\n@param topicPattern The pattern for the topic names that apply.*/",
          "setterMethodName" : "setTopicPattern",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "topicPattern",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The pattern for the topic names that apply.</p>\n@param topicPattern The pattern for the topic names that apply.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "topicPattern",
            "variableType" : "String",
            "documentation" : "<p>The pattern for the topic names that apply.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "TopicRuleListItem",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "TopicRuleListItem",
        "variableName" : "topicRuleListItem",
        "variableType" : "TopicRuleListItem",
        "documentation" : null,
        "simpleType" : "TopicRuleListItem",
        "variableSetterType" : "TopicRuleListItem"
      },
      "wrapper" : false
    },
    "TopicRulePayload" : {
      "c2jName" : "TopicRulePayload",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Describes a rule.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "sql",
        "c2jShape" : "SQL",
        "deprecated" : false,
        "documentation" : "<p>The SQL statement used to query the topic. For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The SQL statement used to query the topic. For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.</p>\n@param sql The SQL statement used to query the topic. For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSql",
        "getterDocumentation" : "/**<p>The SQL statement used to query the topic. For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.</p>\n@return The SQL statement used to query the topic. For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.*/",
        "getterMethodName" : "getSql",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "sql",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "sql",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Sql",
        "setterDocumentation" : "/**<p>The SQL statement used to query the topic. For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.</p>\n@param sql The SQL statement used to query the topic. For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.*/",
        "setterMethodName" : "setSql",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "sql",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The SQL statement used to query the topic. For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.</p>\n@param sql The SQL statement used to query the topic. For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "sql",
          "variableType" : "String",
          "documentation" : "<p>The SQL statement used to query the topic. For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "description",
        "c2jShape" : "Description",
        "deprecated" : false,
        "documentation" : "<p>The description of the rule.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The description of the rule.</p>\n@param description The description of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDescription",
        "getterDocumentation" : "/**<p>The description of the rule.</p>\n@return The description of the rule.*/",
        "getterMethodName" : "getDescription",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "description",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "description",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Description",
        "setterDocumentation" : "/**<p>The description of the rule.</p>\n@param description The description of the rule.*/",
        "setterMethodName" : "setDescription",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "description",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The description of the rule.</p>\n@param description The description of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "description",
          "variableType" : "String",
          "documentation" : "<p>The description of the rule.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "actions",
        "c2jShape" : "ActionList",
        "deprecated" : false,
        "documentation" : "<p>The actions associated with the rule.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The actions associated with the rule.</p>\n@param actions The actions associated with the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withActions",
        "getterDocumentation" : "/**<p>The actions associated with the rule.</p>\n@return The actions associated with the rule.*/",
        "getterMethodName" : "getActions",
        "getterModel" : {
          "returnType" : "java.util.List<Action>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "actions",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "actions",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Action",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Action",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "Action",
              "variableName" : "member",
              "variableType" : "Action",
              "documentation" : "",
              "simpleType" : "Action",
              "variableSetterType" : "Action"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "Action",
              "variableName" : "member",
              "variableType" : "Action",
              "documentation" : "",
              "simpleType" : "Action",
              "variableSetterType" : "Action"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Action",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Action",
          "templateImplType" : "java.util.ArrayList<Action>",
          "templateType" : "java.util.List<Action>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Actions",
        "setterDocumentation" : "/**<p>The actions associated with the rule.</p>\n@param actions The actions associated with the rule.*/",
        "setterMethodName" : "setActions",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<Action>",
          "variableName" : "actions",
          "variableType" : "java.util.List<Action>",
          "documentation" : "",
          "simpleType" : "List<Action>",
          "variableSetterType" : "java.util.Collection<Action>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The actions associated with the rule.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setActions(java.util.Collection)} or {@link #withActions(java.util.Collection)} if you want to override the existing values.</p>\n@param actions The actions associated with the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<Action>",
          "variableName" : "actions",
          "variableType" : "java.util.List<Action>",
          "documentation" : "<p>The actions associated with the rule.</p>",
          "simpleType" : "List<Action>",
          "variableSetterType" : "java.util.Collection<Action>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ruleDisabled",
        "c2jShape" : "IsDisabled",
        "deprecated" : false,
        "documentation" : "<p>Specifies whether the rule is disabled.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRuleDisabled",
        "getterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@return Specifies whether the rule is disabled.*/",
        "getterMethodName" : "getRuleDisabled",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ruleDisabled",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ruleDisabled",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "RuleDisabled",
        "setterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.*/",
        "setterMethodName" : "setRuleDisabled",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "ruleDisabled",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "ruleDisabled",
          "variableType" : "Boolean",
          "documentation" : "<p>Specifies whether the rule is disabled.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "awsIotSqlVersion",
        "c2jShape" : "AwsIotSqlVersion",
        "deprecated" : false,
        "documentation" : "<p>The version of the SQL rules engine to use when evaluating the rule.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The version of the SQL rules engine to use when evaluating the rule.</p>\n@param awsIotSqlVersion The version of the SQL rules engine to use when evaluating the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAwsIotSqlVersion",
        "getterDocumentation" : "/**<p>The version of the SQL rules engine to use when evaluating the rule.</p>\n@return The version of the SQL rules engine to use when evaluating the rule.*/",
        "getterMethodName" : "getAwsIotSqlVersion",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "awsIotSqlVersion",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "awsIotSqlVersion",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "AwsIotSqlVersion",
        "setterDocumentation" : "/**<p>The version of the SQL rules engine to use when evaluating the rule.</p>\n@param awsIotSqlVersion The version of the SQL rules engine to use when evaluating the rule.*/",
        "setterMethodName" : "setAwsIotSqlVersion",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "awsIotSqlVersion",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The version of the SQL rules engine to use when evaluating the rule.</p>\n@param awsIotSqlVersion The version of the SQL rules engine to use when evaluating the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "awsIotSqlVersion",
          "variableType" : "String",
          "documentation" : "<p>The version of the SQL rules engine to use when evaluating the rule.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Actions" : {
          "c2jName" : "actions",
          "c2jShape" : "ActionList",
          "deprecated" : false,
          "documentation" : "<p>The actions associated with the rule.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The actions associated with the rule.</p>\n@param actions The actions associated with the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withActions",
          "getterDocumentation" : "/**<p>The actions associated with the rule.</p>\n@return The actions associated with the rule.*/",
          "getterMethodName" : "getActions",
          "getterModel" : {
            "returnType" : "java.util.List<Action>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "actions",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "actions",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Action",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Action",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "Action",
                "variableName" : "member",
                "variableType" : "Action",
                "documentation" : "",
                "simpleType" : "Action",
                "variableSetterType" : "Action"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "Action",
                "variableName" : "member",
                "variableType" : "Action",
                "documentation" : "",
                "simpleType" : "Action",
                "variableSetterType" : "Action"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Action",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Action",
            "templateImplType" : "java.util.ArrayList<Action>",
            "templateType" : "java.util.List<Action>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Actions",
          "setterDocumentation" : "/**<p>The actions associated with the rule.</p>\n@param actions The actions associated with the rule.*/",
          "setterMethodName" : "setActions",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<Action>",
            "variableName" : "actions",
            "variableType" : "java.util.List<Action>",
            "documentation" : "",
            "simpleType" : "List<Action>",
            "variableSetterType" : "java.util.Collection<Action>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The actions associated with the rule.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setActions(java.util.Collection)} or {@link #withActions(java.util.Collection)} if you want to override the existing values.</p>\n@param actions The actions associated with the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<Action>",
            "variableName" : "actions",
            "variableType" : "java.util.List<Action>",
            "documentation" : "<p>The actions associated with the rule.</p>",
            "simpleType" : "List<Action>",
            "variableSetterType" : "java.util.Collection<Action>"
          },
          "xmlNameSpaceUri" : null
        },
        "AwsIotSqlVersion" : {
          "c2jName" : "awsIotSqlVersion",
          "c2jShape" : "AwsIotSqlVersion",
          "deprecated" : false,
          "documentation" : "<p>The version of the SQL rules engine to use when evaluating the rule.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The version of the SQL rules engine to use when evaluating the rule.</p>\n@param awsIotSqlVersion The version of the SQL rules engine to use when evaluating the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAwsIotSqlVersion",
          "getterDocumentation" : "/**<p>The version of the SQL rules engine to use when evaluating the rule.</p>\n@return The version of the SQL rules engine to use when evaluating the rule.*/",
          "getterMethodName" : "getAwsIotSqlVersion",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "awsIotSqlVersion",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "awsIotSqlVersion",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "AwsIotSqlVersion",
          "setterDocumentation" : "/**<p>The version of the SQL rules engine to use when evaluating the rule.</p>\n@param awsIotSqlVersion The version of the SQL rules engine to use when evaluating the rule.*/",
          "setterMethodName" : "setAwsIotSqlVersion",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "awsIotSqlVersion",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The version of the SQL rules engine to use when evaluating the rule.</p>\n@param awsIotSqlVersion The version of the SQL rules engine to use when evaluating the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "awsIotSqlVersion",
            "variableType" : "String",
            "documentation" : "<p>The version of the SQL rules engine to use when evaluating the rule.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Description" : {
          "c2jName" : "description",
          "c2jShape" : "Description",
          "deprecated" : false,
          "documentation" : "<p>The description of the rule.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The description of the rule.</p>\n@param description The description of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDescription",
          "getterDocumentation" : "/**<p>The description of the rule.</p>\n@return The description of the rule.*/",
          "getterMethodName" : "getDescription",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "description",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "description",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Description",
          "setterDocumentation" : "/**<p>The description of the rule.</p>\n@param description The description of the rule.*/",
          "setterMethodName" : "setDescription",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "description",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The description of the rule.</p>\n@param description The description of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "description",
            "variableType" : "String",
            "documentation" : "<p>The description of the rule.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RuleDisabled" : {
          "c2jName" : "ruleDisabled",
          "c2jShape" : "IsDisabled",
          "deprecated" : false,
          "documentation" : "<p>Specifies whether the rule is disabled.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRuleDisabled",
          "getterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@return Specifies whether the rule is disabled.*/",
          "getterMethodName" : "getRuleDisabled",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ruleDisabled",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ruleDisabled",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "RuleDisabled",
          "setterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.*/",
          "setterMethodName" : "setRuleDisabled",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "ruleDisabled",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "ruleDisabled",
            "variableType" : "Boolean",
            "documentation" : "<p>Specifies whether the rule is disabled.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        },
        "Sql" : {
          "c2jName" : "sql",
          "c2jShape" : "SQL",
          "deprecated" : false,
          "documentation" : "<p>The SQL statement used to query the topic. For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The SQL statement used to query the topic. For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.</p>\n@param sql The SQL statement used to query the topic. For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSql",
          "getterDocumentation" : "/**<p>The SQL statement used to query the topic. For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.</p>\n@return The SQL statement used to query the topic. For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.*/",
          "getterMethodName" : "getSql",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "sql",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "sql",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Sql",
          "setterDocumentation" : "/**<p>The SQL statement used to query the topic. For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.</p>\n@param sql The SQL statement used to query the topic. For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.*/",
          "setterMethodName" : "setSql",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "sql",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The SQL statement used to query the topic. For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.</p>\n@param sql The SQL statement used to query the topic. For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "sql",
            "variableType" : "String",
            "documentation" : "<p>The SQL statement used to query the topic. For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "sql", "actions" ],
      "shapeName" : "TopicRulePayload",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "TopicRulePayload",
        "variableName" : "topicRulePayload",
        "variableType" : "TopicRulePayload",
        "documentation" : null,
        "simpleType" : "TopicRulePayload",
        "variableSetterType" : "TopicRulePayload"
      },
      "wrapper" : false
    },
    "TransferAlreadyCompletedException" : {
      "c2jName" : "TransferAlreadyCompletedException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>You can't revert the certificate transfer because the transfer is already complete.</p>",
      "enums" : null,
      "errorCode" : "TransferAlreadyCompletedException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "TransferAlreadyCompletedException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "TransferAlreadyCompletedException",
        "variableName" : "transferAlreadyCompletedException",
        "variableType" : "TransferAlreadyCompletedException",
        "documentation" : null,
        "simpleType" : "TransferAlreadyCompletedException",
        "variableSetterType" : "TransferAlreadyCompletedException"
      },
      "wrapper" : false
    },
    "TransferCertificateRequest" : {
      "c2jName" : "TransferCertificateRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the TransferCertificate operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "TransferCertificate",
        "locationName" : null,
        "requestUri" : "/transfer-certificate/{certificateId}",
        "target" : null,
        "verb" : "PATCH",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "certificateId",
        "c2jShape" : "CertificateId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the certificate.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCertificateId",
        "getterDocumentation" : "/**<p>The ID of the certificate.</p>\n@return The ID of the certificate.*/",
        "getterMethodName" : "getCertificateId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "certificateId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "certificateId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CertificateId",
        "setterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.*/",
        "setterMethodName" : "setCertificateId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the certificate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "targetAwsAccount",
        "c2jShape" : "AwsAccountId",
        "deprecated" : false,
        "documentation" : "<p>The AWS account.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The AWS account.</p>\n@param targetAwsAccount The AWS account.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTargetAwsAccount",
        "getterDocumentation" : "/**<p>The AWS account.</p>\n@return The AWS account.*/",
        "getterMethodName" : "getTargetAwsAccount",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "targetAwsAccount",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "targetAwsAccount",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TargetAwsAccount",
        "setterDocumentation" : "/**<p>The AWS account.</p>\n@param targetAwsAccount The AWS account.*/",
        "setterMethodName" : "setTargetAwsAccount",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "targetAwsAccount",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The AWS account.</p>\n@param targetAwsAccount The AWS account.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "targetAwsAccount",
          "variableType" : "String",
          "documentation" : "<p>The AWS account.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "transferMessage",
        "c2jShape" : "Message",
        "deprecated" : false,
        "documentation" : "<p>The transfer message.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The transfer message.</p>\n@param transferMessage The transfer message.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTransferMessage",
        "getterDocumentation" : "/**<p>The transfer message.</p>\n@return The transfer message.*/",
        "getterMethodName" : "getTransferMessage",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "transferMessage",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "transferMessage",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TransferMessage",
        "setterDocumentation" : "/**<p>The transfer message.</p>\n@param transferMessage The transfer message.*/",
        "setterMethodName" : "setTransferMessage",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "transferMessage",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The transfer message.</p>\n@param transferMessage The transfer message.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "transferMessage",
          "variableType" : "String",
          "documentation" : "<p>The transfer message.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CertificateId" : {
          "c2jName" : "certificateId",
          "c2jShape" : "CertificateId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the certificate.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCertificateId",
          "getterDocumentation" : "/**<p>The ID of the certificate.</p>\n@return The ID of the certificate.*/",
          "getterMethodName" : "getCertificateId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "certificateId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "certificateId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CertificateId",
          "setterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.*/",
          "setterMethodName" : "setCertificateId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the certificate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TargetAwsAccount" : {
          "c2jName" : "targetAwsAccount",
          "c2jShape" : "AwsAccountId",
          "deprecated" : false,
          "documentation" : "<p>The AWS account.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The AWS account.</p>\n@param targetAwsAccount The AWS account.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTargetAwsAccount",
          "getterDocumentation" : "/**<p>The AWS account.</p>\n@return The AWS account.*/",
          "getterMethodName" : "getTargetAwsAccount",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "targetAwsAccount",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "targetAwsAccount",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TargetAwsAccount",
          "setterDocumentation" : "/**<p>The AWS account.</p>\n@param targetAwsAccount The AWS account.*/",
          "setterMethodName" : "setTargetAwsAccount",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "targetAwsAccount",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The AWS account.</p>\n@param targetAwsAccount The AWS account.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "targetAwsAccount",
            "variableType" : "String",
            "documentation" : "<p>The AWS account.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TransferMessage" : {
          "c2jName" : "transferMessage",
          "c2jShape" : "Message",
          "deprecated" : false,
          "documentation" : "<p>The transfer message.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The transfer message.</p>\n@param transferMessage The transfer message.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTransferMessage",
          "getterDocumentation" : "/**<p>The transfer message.</p>\n@return The transfer message.*/",
          "getterMethodName" : "getTransferMessage",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "transferMessage",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "transferMessage",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TransferMessage",
          "setterDocumentation" : "/**<p>The transfer message.</p>\n@param transferMessage The transfer message.*/",
          "setterMethodName" : "setTransferMessage",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "transferMessage",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The transfer message.</p>\n@param transferMessage The transfer message.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "transferMessage",
            "variableType" : "String",
            "documentation" : "<p>The transfer message.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "certificateId", "targetAwsAccount" ],
      "shapeName" : "TransferCertificateRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "TransferCertificateRequest",
        "variableName" : "transferCertificateRequest",
        "variableType" : "TransferCertificateRequest",
        "documentation" : null,
        "simpleType" : "TransferCertificateRequest",
        "variableSetterType" : "TransferCertificateRequest"
      },
      "wrapper" : false
    },
    "TransferCertificateResult" : {
      "c2jName" : "TransferCertificateResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The output from the TransferCertificate operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "transferredCertificateArn",
        "c2jShape" : "CertificateArn",
        "deprecated" : false,
        "documentation" : "<p>The ARN of the certificate.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param transferredCertificateArn The ARN of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTransferredCertificateArn",
        "getterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@return The ARN of the certificate.*/",
        "getterMethodName" : "getTransferredCertificateArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "transferredCertificateArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "transferredCertificateArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TransferredCertificateArn",
        "setterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param transferredCertificateArn The ARN of the certificate.*/",
        "setterMethodName" : "setTransferredCertificateArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "transferredCertificateArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param transferredCertificateArn The ARN of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "transferredCertificateArn",
          "variableType" : "String",
          "documentation" : "<p>The ARN of the certificate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "TransferredCertificateArn" : {
          "c2jName" : "transferredCertificateArn",
          "c2jShape" : "CertificateArn",
          "deprecated" : false,
          "documentation" : "<p>The ARN of the certificate.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param transferredCertificateArn The ARN of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTransferredCertificateArn",
          "getterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@return The ARN of the certificate.*/",
          "getterMethodName" : "getTransferredCertificateArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "transferredCertificateArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "transferredCertificateArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TransferredCertificateArn",
          "setterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param transferredCertificateArn The ARN of the certificate.*/",
          "setterMethodName" : "setTransferredCertificateArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "transferredCertificateArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param transferredCertificateArn The ARN of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "transferredCertificateArn",
            "variableType" : "String",
            "documentation" : "<p>The ARN of the certificate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "TransferCertificateResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "TransferCertificateResult",
        "variableName" : "transferCertificateResult",
        "variableType" : "TransferCertificateResult",
        "documentation" : null,
        "simpleType" : "TransferCertificateResult",
        "variableSetterType" : "TransferCertificateResult"
      },
      "wrapper" : false
    },
    "TransferConflictException" : {
      "c2jName" : "TransferConflictException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>You can't transfer the certificate because authorization policies are still attached.</p>",
      "enums" : null,
      "errorCode" : "TransferConflictException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "TransferConflictException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "TransferConflictException",
        "variableName" : "transferConflictException",
        "variableType" : "TransferConflictException",
        "documentation" : null,
        "simpleType" : "TransferConflictException",
        "variableSetterType" : "TransferConflictException"
      },
      "wrapper" : false
    },
    "TransferData" : {
      "c2jName" : "TransferData",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Data used to transfer a certificate to an AWS account.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "transferMessage",
        "c2jShape" : "Message",
        "deprecated" : false,
        "documentation" : "<p>The transfer message.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The transfer message.</p>\n@param transferMessage The transfer message.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTransferMessage",
        "getterDocumentation" : "/**<p>The transfer message.</p>\n@return The transfer message.*/",
        "getterMethodName" : "getTransferMessage",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "transferMessage",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "transferMessage",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TransferMessage",
        "setterDocumentation" : "/**<p>The transfer message.</p>\n@param transferMessage The transfer message.*/",
        "setterMethodName" : "setTransferMessage",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "transferMessage",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The transfer message.</p>\n@param transferMessage The transfer message.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "transferMessage",
          "variableType" : "String",
          "documentation" : "<p>The transfer message.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "rejectReason",
        "c2jShape" : "Message",
        "deprecated" : false,
        "documentation" : "<p>The reason why the transfer was rejected.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The reason why the transfer was rejected.</p>\n@param rejectReason The reason why the transfer was rejected.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRejectReason",
        "getterDocumentation" : "/**<p>The reason why the transfer was rejected.</p>\n@return The reason why the transfer was rejected.*/",
        "getterMethodName" : "getRejectReason",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "rejectReason",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "rejectReason",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RejectReason",
        "setterDocumentation" : "/**<p>The reason why the transfer was rejected.</p>\n@param rejectReason The reason why the transfer was rejected.*/",
        "setterMethodName" : "setRejectReason",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "rejectReason",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The reason why the transfer was rejected.</p>\n@param rejectReason The reason why the transfer was rejected.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "rejectReason",
          "variableType" : "String",
          "documentation" : "<p>The reason why the transfer was rejected.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "transferDate",
        "c2jShape" : "DateType",
        "deprecated" : false,
        "documentation" : "<p>The date the transfer took place.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date the transfer took place.</p>\n@param transferDate The date the transfer took place.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTransferDate",
        "getterDocumentation" : "/**<p>The date the transfer took place.</p>\n@return The date the transfer took place.*/",
        "getterMethodName" : "getTransferDate",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "transferDate",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "transferDate",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "TransferDate",
        "setterDocumentation" : "/**<p>The date the transfer took place.</p>\n@param transferDate The date the transfer took place.*/",
        "setterMethodName" : "setTransferDate",
        "setterModel" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "transferDate",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date the transfer took place.</p>\n@param transferDate The date the transfer took place.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "transferDate",
          "variableType" : "java.util.Date",
          "documentation" : "<p>The date the transfer took place.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "acceptDate",
        "c2jShape" : "DateType",
        "deprecated" : false,
        "documentation" : "<p>The date the transfer was accepted.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date the transfer was accepted.</p>\n@param acceptDate The date the transfer was accepted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAcceptDate",
        "getterDocumentation" : "/**<p>The date the transfer was accepted.</p>\n@return The date the transfer was accepted.*/",
        "getterMethodName" : "getAcceptDate",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "acceptDate",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "acceptDate",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "AcceptDate",
        "setterDocumentation" : "/**<p>The date the transfer was accepted.</p>\n@param acceptDate The date the transfer was accepted.*/",
        "setterMethodName" : "setAcceptDate",
        "setterModel" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "acceptDate",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date the transfer was accepted.</p>\n@param acceptDate The date the transfer was accepted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "acceptDate",
          "variableType" : "java.util.Date",
          "documentation" : "<p>The date the transfer was accepted.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "rejectDate",
        "c2jShape" : "DateType",
        "deprecated" : false,
        "documentation" : "<p>The date the transfer was rejected.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date the transfer was rejected.</p>\n@param rejectDate The date the transfer was rejected.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRejectDate",
        "getterDocumentation" : "/**<p>The date the transfer was rejected.</p>\n@return The date the transfer was rejected.*/",
        "getterMethodName" : "getRejectDate",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "rejectDate",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "rejectDate",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "RejectDate",
        "setterDocumentation" : "/**<p>The date the transfer was rejected.</p>\n@param rejectDate The date the transfer was rejected.*/",
        "setterMethodName" : "setRejectDate",
        "setterModel" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "rejectDate",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date the transfer was rejected.</p>\n@param rejectDate The date the transfer was rejected.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "rejectDate",
          "variableType" : "java.util.Date",
          "documentation" : "<p>The date the transfer was rejected.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AcceptDate" : {
          "c2jName" : "acceptDate",
          "c2jShape" : "DateType",
          "deprecated" : false,
          "documentation" : "<p>The date the transfer was accepted.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date the transfer was accepted.</p>\n@param acceptDate The date the transfer was accepted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAcceptDate",
          "getterDocumentation" : "/**<p>The date the transfer was accepted.</p>\n@return The date the transfer was accepted.*/",
          "getterMethodName" : "getAcceptDate",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "acceptDate",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "acceptDate",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "AcceptDate",
          "setterDocumentation" : "/**<p>The date the transfer was accepted.</p>\n@param acceptDate The date the transfer was accepted.*/",
          "setterMethodName" : "setAcceptDate",
          "setterModel" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "acceptDate",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date the transfer was accepted.</p>\n@param acceptDate The date the transfer was accepted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "acceptDate",
            "variableType" : "java.util.Date",
            "documentation" : "<p>The date the transfer was accepted.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "RejectDate" : {
          "c2jName" : "rejectDate",
          "c2jShape" : "DateType",
          "deprecated" : false,
          "documentation" : "<p>The date the transfer was rejected.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date the transfer was rejected.</p>\n@param rejectDate The date the transfer was rejected.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRejectDate",
          "getterDocumentation" : "/**<p>The date the transfer was rejected.</p>\n@return The date the transfer was rejected.*/",
          "getterMethodName" : "getRejectDate",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "rejectDate",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "rejectDate",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "RejectDate",
          "setterDocumentation" : "/**<p>The date the transfer was rejected.</p>\n@param rejectDate The date the transfer was rejected.*/",
          "setterMethodName" : "setRejectDate",
          "setterModel" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "rejectDate",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date the transfer was rejected.</p>\n@param rejectDate The date the transfer was rejected.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "rejectDate",
            "variableType" : "java.util.Date",
            "documentation" : "<p>The date the transfer was rejected.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "RejectReason" : {
          "c2jName" : "rejectReason",
          "c2jShape" : "Message",
          "deprecated" : false,
          "documentation" : "<p>The reason why the transfer was rejected.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The reason why the transfer was rejected.</p>\n@param rejectReason The reason why the transfer was rejected.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRejectReason",
          "getterDocumentation" : "/**<p>The reason why the transfer was rejected.</p>\n@return The reason why the transfer was rejected.*/",
          "getterMethodName" : "getRejectReason",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "rejectReason",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "rejectReason",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RejectReason",
          "setterDocumentation" : "/**<p>The reason why the transfer was rejected.</p>\n@param rejectReason The reason why the transfer was rejected.*/",
          "setterMethodName" : "setRejectReason",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "rejectReason",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The reason why the transfer was rejected.</p>\n@param rejectReason The reason why the transfer was rejected.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "rejectReason",
            "variableType" : "String",
            "documentation" : "<p>The reason why the transfer was rejected.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TransferDate" : {
          "c2jName" : "transferDate",
          "c2jShape" : "DateType",
          "deprecated" : false,
          "documentation" : "<p>The date the transfer took place.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date the transfer took place.</p>\n@param transferDate The date the transfer took place.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTransferDate",
          "getterDocumentation" : "/**<p>The date the transfer took place.</p>\n@return The date the transfer took place.*/",
          "getterMethodName" : "getTransferDate",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "transferDate",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "transferDate",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "TransferDate",
          "setterDocumentation" : "/**<p>The date the transfer took place.</p>\n@param transferDate The date the transfer took place.*/",
          "setterMethodName" : "setTransferDate",
          "setterModel" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "transferDate",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date the transfer took place.</p>\n@param transferDate The date the transfer took place.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "transferDate",
            "variableType" : "java.util.Date",
            "documentation" : "<p>The date the transfer took place.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "TransferMessage" : {
          "c2jName" : "transferMessage",
          "c2jShape" : "Message",
          "deprecated" : false,
          "documentation" : "<p>The transfer message.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The transfer message.</p>\n@param transferMessage The transfer message.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTransferMessage",
          "getterDocumentation" : "/**<p>The transfer message.</p>\n@return The transfer message.*/",
          "getterMethodName" : "getTransferMessage",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "transferMessage",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "transferMessage",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TransferMessage",
          "setterDocumentation" : "/**<p>The transfer message.</p>\n@param transferMessage The transfer message.*/",
          "setterMethodName" : "setTransferMessage",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "transferMessage",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The transfer message.</p>\n@param transferMessage The transfer message.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "transferMessage",
            "variableType" : "String",
            "documentation" : "<p>The transfer message.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "TransferData",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "TransferData",
        "variableName" : "transferData",
        "variableType" : "TransferData",
        "documentation" : null,
        "simpleType" : "TransferData",
        "variableSetterType" : "TransferData"
      },
      "wrapper" : false
    },
    "UnauthorizedException" : {
      "c2jName" : "UnauthorizedException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>You are not authorized to perform this operation.</p>",
      "enums" : null,
      "errorCode" : "UnauthorizedException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "UnauthorizedException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "UnauthorizedException",
        "variableName" : "unauthorizedException",
        "variableType" : "UnauthorizedException",
        "documentation" : null,
        "simpleType" : "UnauthorizedException",
        "variableSetterType" : "UnauthorizedException"
      },
      "wrapper" : false
    },
    "UpdateCACertificateRequest" : {
      "c2jName" : "UpdateCACertificateRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input to the UpdateCACertificate operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "UpdateCACertificate",
        "locationName" : null,
        "requestUri" : "/cacertificate/{caCertificateId}",
        "target" : null,
        "verb" : "PUT",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "certificateId",
        "c2jShape" : "CertificateId",
        "deprecated" : false,
        "documentation" : "<p>The CA certificate identifier.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The CA certificate identifier.</p>\n@param certificateId The CA certificate identifier.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCertificateId",
        "getterDocumentation" : "/**<p>The CA certificate identifier.</p>\n@return The CA certificate identifier.*/",
        "getterMethodName" : "getCertificateId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "caCertificateId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "caCertificateId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CertificateId",
        "setterDocumentation" : "/**<p>The CA certificate identifier.</p>\n@param certificateId The CA certificate identifier.*/",
        "setterMethodName" : "setCertificateId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The CA certificate identifier.</p>\n@param certificateId The CA certificate identifier.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateId",
          "variableType" : "String",
          "documentation" : "<p>The CA certificate identifier.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "newStatus",
        "c2jShape" : "CACertificateStatus",
        "deprecated" : false,
        "documentation" : "<p>The updated status of the CA certificate.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.</p>",
        "enumType" : "CACertificateStatus",
        "fluentSetterDocumentation" : "/**<p>The updated status of the CA certificate.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.</p>\n@param newStatus The updated status of the CA certificate.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CACertificateStatus*/",
        "fluentSetterMethodName" : "withNewStatus",
        "getterDocumentation" : "/**<p>The updated status of the CA certificate.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.</p>\n@return The updated status of the CA certificate.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.\n@see CACertificateStatus*/",
        "getterMethodName" : "getNewStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "newStatus",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "newStatus",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NewStatus",
        "setterDocumentation" : "/**<p>The updated status of the CA certificate.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.</p>\n@param newStatus The updated status of the CA certificate.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.\n@see CACertificateStatus*/",
        "setterMethodName" : "setNewStatus",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "newStatus",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The updated status of the CA certificate.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.</p>\n@param newStatus The updated status of the CA certificate.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CACertificateStatus*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "newStatus",
          "variableType" : "String",
          "documentation" : "<p>The updated status of the CA certificate.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "newAutoRegistrationStatus",
        "c2jShape" : "AutoRegistrationStatus",
        "deprecated" : false,
        "documentation" : "<p>The new value for the auto registration status. Valid values are: \"ENABLE\" or \"DISABLE\".</p>",
        "enumType" : "AutoRegistrationStatus",
        "fluentSetterDocumentation" : "/**<p>The new value for the auto registration status. Valid values are: \"ENABLE\" or \"DISABLE\".</p>\n@param newAutoRegistrationStatus The new value for the auto registration status. Valid values are: \"ENABLE\" or \"DISABLE\".\n@return Returns a reference to this object so that method calls can be chained together.\n@see AutoRegistrationStatus*/",
        "fluentSetterMethodName" : "withNewAutoRegistrationStatus",
        "getterDocumentation" : "/**<p>The new value for the auto registration status. Valid values are: \"ENABLE\" or \"DISABLE\".</p>\n@return The new value for the auto registration status. Valid values are: \"ENABLE\" or \"DISABLE\".\n@see AutoRegistrationStatus*/",
        "getterMethodName" : "getNewAutoRegistrationStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "newAutoRegistrationStatus",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "newAutoRegistrationStatus",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NewAutoRegistrationStatus",
        "setterDocumentation" : "/**<p>The new value for the auto registration status. Valid values are: \"ENABLE\" or \"DISABLE\".</p>\n@param newAutoRegistrationStatus The new value for the auto registration status. Valid values are: \"ENABLE\" or \"DISABLE\".\n@see AutoRegistrationStatus*/",
        "setterMethodName" : "setNewAutoRegistrationStatus",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "newAutoRegistrationStatus",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The new value for the auto registration status. Valid values are: \"ENABLE\" or \"DISABLE\".</p>\n@param newAutoRegistrationStatus The new value for the auto registration status. Valid values are: \"ENABLE\" or \"DISABLE\".\n@return Returns a reference to this object so that method calls can be chained together.\n@see AutoRegistrationStatus*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "newAutoRegistrationStatus",
          "variableType" : "String",
          "documentation" : "<p>The new value for the auto registration status. Valid values are: \"ENABLE\" or \"DISABLE\".</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CertificateId" : {
          "c2jName" : "certificateId",
          "c2jShape" : "CertificateId",
          "deprecated" : false,
          "documentation" : "<p>The CA certificate identifier.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The CA certificate identifier.</p>\n@param certificateId The CA certificate identifier.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCertificateId",
          "getterDocumentation" : "/**<p>The CA certificate identifier.</p>\n@return The CA certificate identifier.*/",
          "getterMethodName" : "getCertificateId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "caCertificateId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "caCertificateId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CertificateId",
          "setterDocumentation" : "/**<p>The CA certificate identifier.</p>\n@param certificateId The CA certificate identifier.*/",
          "setterMethodName" : "setCertificateId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The CA certificate identifier.</p>\n@param certificateId The CA certificate identifier.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateId",
            "variableType" : "String",
            "documentation" : "<p>The CA certificate identifier.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "NewAutoRegistrationStatus" : {
          "c2jName" : "newAutoRegistrationStatus",
          "c2jShape" : "AutoRegistrationStatus",
          "deprecated" : false,
          "documentation" : "<p>The new value for the auto registration status. Valid values are: \"ENABLE\" or \"DISABLE\".</p>",
          "enumType" : "AutoRegistrationStatus",
          "fluentSetterDocumentation" : "/**<p>The new value for the auto registration status. Valid values are: \"ENABLE\" or \"DISABLE\".</p>\n@param newAutoRegistrationStatus The new value for the auto registration status. Valid values are: \"ENABLE\" or \"DISABLE\".\n@return Returns a reference to this object so that method calls can be chained together.\n@see AutoRegistrationStatus*/",
          "fluentSetterMethodName" : "withNewAutoRegistrationStatus",
          "getterDocumentation" : "/**<p>The new value for the auto registration status. Valid values are: \"ENABLE\" or \"DISABLE\".</p>\n@return The new value for the auto registration status. Valid values are: \"ENABLE\" or \"DISABLE\".\n@see AutoRegistrationStatus*/",
          "getterMethodName" : "getNewAutoRegistrationStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "newAutoRegistrationStatus",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "newAutoRegistrationStatus",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NewAutoRegistrationStatus",
          "setterDocumentation" : "/**<p>The new value for the auto registration status. Valid values are: \"ENABLE\" or \"DISABLE\".</p>\n@param newAutoRegistrationStatus The new value for the auto registration status. Valid values are: \"ENABLE\" or \"DISABLE\".\n@see AutoRegistrationStatus*/",
          "setterMethodName" : "setNewAutoRegistrationStatus",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "newAutoRegistrationStatus",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The new value for the auto registration status. Valid values are: \"ENABLE\" or \"DISABLE\".</p>\n@param newAutoRegistrationStatus The new value for the auto registration status. Valid values are: \"ENABLE\" or \"DISABLE\".\n@return Returns a reference to this object so that method calls can be chained together.\n@see AutoRegistrationStatus*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "newAutoRegistrationStatus",
            "variableType" : "String",
            "documentation" : "<p>The new value for the auto registration status. Valid values are: \"ENABLE\" or \"DISABLE\".</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "NewStatus" : {
          "c2jName" : "newStatus",
          "c2jShape" : "CACertificateStatus",
          "deprecated" : false,
          "documentation" : "<p>The updated status of the CA certificate.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.</p>",
          "enumType" : "CACertificateStatus",
          "fluentSetterDocumentation" : "/**<p>The updated status of the CA certificate.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.</p>\n@param newStatus The updated status of the CA certificate.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CACertificateStatus*/",
          "fluentSetterMethodName" : "withNewStatus",
          "getterDocumentation" : "/**<p>The updated status of the CA certificate.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.</p>\n@return The updated status of the CA certificate.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.\n@see CACertificateStatus*/",
          "getterMethodName" : "getNewStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "newStatus",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "newStatus",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NewStatus",
          "setterDocumentation" : "/**<p>The updated status of the CA certificate.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.</p>\n@param newStatus The updated status of the CA certificate.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.\n@see CACertificateStatus*/",
          "setterMethodName" : "setNewStatus",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "newStatus",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The updated status of the CA certificate.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.</p>\n@param newStatus The updated status of the CA certificate.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CACertificateStatus*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "newStatus",
            "variableType" : "String",
            "documentation" : "<p>The updated status of the CA certificate.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "certificateId" ],
      "shapeName" : "UpdateCACertificateRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "UpdateCACertificateRequest",
        "variableName" : "updateCACertificateRequest",
        "variableType" : "UpdateCACertificateRequest",
        "documentation" : null,
        "simpleType" : "UpdateCACertificateRequest",
        "variableSetterType" : "UpdateCACertificateRequest"
      },
      "wrapper" : false
    },
    "UpdateCACertificateResult" : {
      "c2jName" : "UpdateCACertificateResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : null,
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "UpdateCACertificateResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "UpdateCACertificateResult",
        "variableName" : "updateCACertificateResult",
        "variableType" : "UpdateCACertificateResult",
        "documentation" : null,
        "simpleType" : "UpdateCACertificateResult",
        "variableSetterType" : "UpdateCACertificateResult"
      },
      "wrapper" : false
    },
    "UpdateCertificateRequest" : {
      "c2jName" : "UpdateCertificateRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the UpdateCertificate operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "UpdateCertificate",
        "locationName" : null,
        "requestUri" : "/certificates/{certificateId}",
        "target" : null,
        "verb" : "PUT",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "certificateId",
        "c2jShape" : "CertificateId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the certificate.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCertificateId",
        "getterDocumentation" : "/**<p>The ID of the certificate.</p>\n@return The ID of the certificate.*/",
        "getterMethodName" : "getCertificateId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "certificateId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "certificateId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CertificateId",
        "setterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.*/",
        "setterMethodName" : "setCertificateId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "certificateId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the certificate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "newStatus",
        "c2jShape" : "CertificateStatus",
        "deprecated" : false,
        "documentation" : "<p>The new status.</p> <p> <b>Note:</b> Setting the status to PENDING_TRANSFER will result in an exception being thrown. PENDING_TRANSFER is a status used internally by AWS IoT. It is not intended for developer use.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.</p>",
        "enumType" : "CertificateStatus",
        "fluentSetterDocumentation" : "/**<p>The new status.</p> <p> <b>Note:</b> Setting the status to PENDING_TRANSFER will result in an exception being thrown. PENDING_TRANSFER is a status used internally by AWS IoT. It is not intended for developer use.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.</p>\n@param newStatus The new status.</p> <p> <b>Note:</b> Setting the status to PENDING_TRANSFER will result in an exception being thrown. PENDING_TRANSFER is a status used internally by AWS IoT. It is not intended for developer use.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CertificateStatus*/",
        "fluentSetterMethodName" : "withNewStatus",
        "getterDocumentation" : "/**<p>The new status.</p> <p> <b>Note:</b> Setting the status to PENDING_TRANSFER will result in an exception being thrown. PENDING_TRANSFER is a status used internally by AWS IoT. It is not intended for developer use.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.</p>\n@return The new status.</p> <p> <b>Note:</b> Setting the status to PENDING_TRANSFER will result in an exception being thrown. PENDING_TRANSFER is a status used internally by AWS IoT. It is not intended for developer use.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.\n@see CertificateStatus*/",
        "getterMethodName" : "getNewStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "newStatus",
          "queryString" : true,
          "statusCode" : false,
          "unmarshallLocationName" : "newStatus",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NewStatus",
        "setterDocumentation" : "/**<p>The new status.</p> <p> <b>Note:</b> Setting the status to PENDING_TRANSFER will result in an exception being thrown. PENDING_TRANSFER is a status used internally by AWS IoT. It is not intended for developer use.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.</p>\n@param newStatus The new status.</p> <p> <b>Note:</b> Setting the status to PENDING_TRANSFER will result in an exception being thrown. PENDING_TRANSFER is a status used internally by AWS IoT. It is not intended for developer use.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.\n@see CertificateStatus*/",
        "setterMethodName" : "setNewStatus",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "newStatus",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The new status.</p> <p> <b>Note:</b> Setting the status to PENDING_TRANSFER will result in an exception being thrown. PENDING_TRANSFER is a status used internally by AWS IoT. It is not intended for developer use.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.</p>\n@param newStatus The new status.</p> <p> <b>Note:</b> Setting the status to PENDING_TRANSFER will result in an exception being thrown. PENDING_TRANSFER is a status used internally by AWS IoT. It is not intended for developer use.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CertificateStatus*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "newStatus",
          "variableType" : "String",
          "documentation" : "<p>The new status.</p> <p> <b>Note:</b> Setting the status to PENDING_TRANSFER will result in an exception being thrown. PENDING_TRANSFER is a status used internally by AWS IoT. It is not intended for developer use.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CertificateId" : {
          "c2jName" : "certificateId",
          "c2jShape" : "CertificateId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the certificate.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCertificateId",
          "getterDocumentation" : "/**<p>The ID of the certificate.</p>\n@return The ID of the certificate.*/",
          "getterMethodName" : "getCertificateId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "certificateId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "certificateId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CertificateId",
          "setterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.*/",
          "setterMethodName" : "setCertificateId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "certificateId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the certificate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "NewStatus" : {
          "c2jName" : "newStatus",
          "c2jShape" : "CertificateStatus",
          "deprecated" : false,
          "documentation" : "<p>The new status.</p> <p> <b>Note:</b> Setting the status to PENDING_TRANSFER will result in an exception being thrown. PENDING_TRANSFER is a status used internally by AWS IoT. It is not intended for developer use.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.</p>",
          "enumType" : "CertificateStatus",
          "fluentSetterDocumentation" : "/**<p>The new status.</p> <p> <b>Note:</b> Setting the status to PENDING_TRANSFER will result in an exception being thrown. PENDING_TRANSFER is a status used internally by AWS IoT. It is not intended for developer use.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.</p>\n@param newStatus The new status.</p> <p> <b>Note:</b> Setting the status to PENDING_TRANSFER will result in an exception being thrown. PENDING_TRANSFER is a status used internally by AWS IoT. It is not intended for developer use.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CertificateStatus*/",
          "fluentSetterMethodName" : "withNewStatus",
          "getterDocumentation" : "/**<p>The new status.</p> <p> <b>Note:</b> Setting the status to PENDING_TRANSFER will result in an exception being thrown. PENDING_TRANSFER is a status used internally by AWS IoT. It is not intended for developer use.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.</p>\n@return The new status.</p> <p> <b>Note:</b> Setting the status to PENDING_TRANSFER will result in an exception being thrown. PENDING_TRANSFER is a status used internally by AWS IoT. It is not intended for developer use.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.\n@see CertificateStatus*/",
          "getterMethodName" : "getNewStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "newStatus",
            "queryString" : true,
            "statusCode" : false,
            "unmarshallLocationName" : "newStatus",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NewStatus",
          "setterDocumentation" : "/**<p>The new status.</p> <p> <b>Note:</b> Setting the status to PENDING_TRANSFER will result in an exception being thrown. PENDING_TRANSFER is a status used internally by AWS IoT. It is not intended for developer use.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.</p>\n@param newStatus The new status.</p> <p> <b>Note:</b> Setting the status to PENDING_TRANSFER will result in an exception being thrown. PENDING_TRANSFER is a status used internally by AWS IoT. It is not intended for developer use.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.\n@see CertificateStatus*/",
          "setterMethodName" : "setNewStatus",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "newStatus",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The new status.</p> <p> <b>Note:</b> Setting the status to PENDING_TRANSFER will result in an exception being thrown. PENDING_TRANSFER is a status used internally by AWS IoT. It is not intended for developer use.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.</p>\n@param newStatus The new status.</p> <p> <b>Note:</b> Setting the status to PENDING_TRANSFER will result in an exception being thrown. PENDING_TRANSFER is a status used internally by AWS IoT. It is not intended for developer use.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CertificateStatus*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "newStatus",
            "variableType" : "String",
            "documentation" : "<p>The new status.</p> <p> <b>Note:</b> Setting the status to PENDING_TRANSFER will result in an exception being thrown. PENDING_TRANSFER is a status used internally by AWS IoT. It is not intended for developer use.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "certificateId", "newStatus" ],
      "shapeName" : "UpdateCertificateRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "UpdateCertificateRequest",
        "variableName" : "updateCertificateRequest",
        "variableType" : "UpdateCertificateRequest",
        "documentation" : null,
        "simpleType" : "UpdateCertificateRequest",
        "variableSetterType" : "UpdateCertificateRequest"
      },
      "wrapper" : false
    },
    "UpdateCertificateResult" : {
      "c2jName" : "UpdateCertificateResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : null,
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "UpdateCertificateResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "UpdateCertificateResult",
        "variableName" : "updateCertificateResult",
        "variableType" : "UpdateCertificateResult",
        "documentation" : null,
        "simpleType" : "UpdateCertificateResult",
        "variableSetterType" : "UpdateCertificateResult"
      },
      "wrapper" : false
    },
    "UpdateThingRequest" : {
      "c2jName" : "UpdateThingRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input for the UpdateThing operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "UpdateThing",
        "locationName" : null,
        "requestUri" : "/things/{thingName}",
        "target" : null,
        "verb" : "PATCH",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "thingName",
        "c2jShape" : "ThingName",
        "deprecated" : false,
        "documentation" : "<p>The name of the thing to update.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the thing to update.</p>\n@param thingName The name of the thing to update.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withThingName",
        "getterDocumentation" : "/**<p>The name of the thing to update.</p>\n@return The name of the thing to update.*/",
        "getterMethodName" : "getThingName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "thingName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "thingName",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ThingName",
        "setterDocumentation" : "/**<p>The name of the thing to update.</p>\n@param thingName The name of the thing to update.*/",
        "setterMethodName" : "setThingName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the thing to update.</p>\n@param thingName The name of the thing to update.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingName",
          "variableType" : "String",
          "documentation" : "<p>The name of the thing to update.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "thingTypeName",
        "c2jShape" : "ThingTypeName",
        "deprecated" : false,
        "documentation" : "<p>The name of the thing type.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withThingTypeName",
        "getterDocumentation" : "/**<p>The name of the thing type.</p>\n@return The name of the thing type.*/",
        "getterMethodName" : "getThingTypeName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "thingTypeName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "thingTypeName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ThingTypeName",
        "setterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.*/",
        "setterMethodName" : "setThingTypeName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingTypeName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "thingTypeName",
          "variableType" : "String",
          "documentation" : "<p>The name of the thing type.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "attributePayload",
        "c2jShape" : "AttributePayload",
        "deprecated" : false,
        "documentation" : "<p>A list of thing attributes, a JSON string containing name-value pairs. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"name1\\\":\\\"value2\\\"}}</code> </p> <p>This data is used to add new attributes or update existing attributes.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A list of thing attributes, a JSON string containing name-value pairs. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"name1\\\":\\\"value2\\\"}}</code> </p> <p>This data is used to add new attributes or update existing attributes.</p>\n@param attributePayload A list of thing attributes, a JSON string containing name-value pairs. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"name1\\\":\\\"value2\\\"}}</code> </p> <p>This data is used to add new attributes or update existing attributes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAttributePayload",
        "getterDocumentation" : "/**<p>A list of thing attributes, a JSON string containing name-value pairs. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"name1\\\":\\\"value2\\\"}}</code> </p> <p>This data is used to add new attributes or update existing attributes.</p>\n@return A list of thing attributes, a JSON string containing name-value pairs. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"name1\\\":\\\"value2\\\"}}</code> </p> <p>This data is used to add new attributes or update existing attributes.*/",
        "getterMethodName" : "getAttributePayload",
        "getterModel" : {
          "returnType" : "AttributePayload",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "attributePayload",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "attributePayload",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "AttributePayload",
        "setterDocumentation" : "/**<p>A list of thing attributes, a JSON string containing name-value pairs. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"name1\\\":\\\"value2\\\"}}</code> </p> <p>This data is used to add new attributes or update existing attributes.</p>\n@param attributePayload A list of thing attributes, a JSON string containing name-value pairs. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"name1\\\":\\\"value2\\\"}}</code> </p> <p>This data is used to add new attributes or update existing attributes.*/",
        "setterMethodName" : "setAttributePayload",
        "setterModel" : {
          "variableDeclarationType" : "AttributePayload",
          "variableName" : "attributePayload",
          "variableType" : "AttributePayload",
          "documentation" : "",
          "simpleType" : "AttributePayload",
          "variableSetterType" : "AttributePayload"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A list of thing attributes, a JSON string containing name-value pairs. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"name1\\\":\\\"value2\\\"}}</code> </p> <p>This data is used to add new attributes or update existing attributes.</p>\n@param attributePayload A list of thing attributes, a JSON string containing name-value pairs. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"name1\\\":\\\"value2\\\"}}</code> </p> <p>This data is used to add new attributes or update existing attributes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "AttributePayload",
          "variableName" : "attributePayload",
          "variableType" : "AttributePayload",
          "documentation" : "<p>A list of thing attributes, a JSON string containing name-value pairs. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"name1\\\":\\\"value2\\\"}}</code> </p> <p>This data is used to add new attributes or update existing attributes.</p>",
          "simpleType" : "AttributePayload",
          "variableSetterType" : "AttributePayload"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "expectedVersion",
        "c2jShape" : "OptionalVersion",
        "deprecated" : false,
        "documentation" : "<p>The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>UpdateThing</code> request is rejected with a <code>VersionConflictException</code>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>UpdateThing</code> request is rejected with a <code>VersionConflictException</code>.</p>\n@param expectedVersion The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>UpdateThing</code> request is rejected with a <code>VersionConflictException</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withExpectedVersion",
        "getterDocumentation" : "/**<p>The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>UpdateThing</code> request is rejected with a <code>VersionConflictException</code>.</p>\n@return The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>UpdateThing</code> request is rejected with a <code>VersionConflictException</code>.*/",
        "getterMethodName" : "getExpectedVersion",
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "expectedVersion",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "expectedVersion",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Long",
        "marshallingType" : "LONG",
        "name" : "ExpectedVersion",
        "setterDocumentation" : "/**<p>The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>UpdateThing</code> request is rejected with a <code>VersionConflictException</code>.</p>\n@param expectedVersion The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>UpdateThing</code> request is rejected with a <code>VersionConflictException</code>.*/",
        "setterMethodName" : "setExpectedVersion",
        "setterModel" : {
          "variableDeclarationType" : "Long",
          "variableName" : "expectedVersion",
          "variableType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>UpdateThing</code> request is rejected with a <code>VersionConflictException</code>.</p>\n@param expectedVersion The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>UpdateThing</code> request is rejected with a <code>VersionConflictException</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Long",
          "variableName" : "expectedVersion",
          "variableType" : "Long",
          "documentation" : "<p>The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>UpdateThing</code> request is rejected with a <code>VersionConflictException</code>.</p>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "removeThingType",
        "c2jShape" : "RemoveThingType",
        "deprecated" : false,
        "documentation" : "<p>Remove a thing type association. If <b>true</b>, the assocation is removed.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Remove a thing type association. If <b>true</b>, the assocation is removed.</p>\n@param removeThingType Remove a thing type association. If <b>true</b>, the assocation is removed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRemoveThingType",
        "getterDocumentation" : "/**<p>Remove a thing type association. If <b>true</b>, the assocation is removed.</p>\n@return Remove a thing type association. If <b>true</b>, the assocation is removed.*/",
        "getterMethodName" : "getRemoveThingType",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "removeThingType",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "removeThingType",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "RemoveThingType",
        "setterDocumentation" : "/**<p>Remove a thing type association. If <b>true</b>, the assocation is removed.</p>\n@param removeThingType Remove a thing type association. If <b>true</b>, the assocation is removed.*/",
        "setterMethodName" : "setRemoveThingType",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "removeThingType",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Remove a thing type association. If <b>true</b>, the assocation is removed.</p>\n@param removeThingType Remove a thing type association. If <b>true</b>, the assocation is removed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "removeThingType",
          "variableType" : "Boolean",
          "documentation" : "<p>Remove a thing type association. If <b>true</b>, the assocation is removed.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AttributePayload" : {
          "c2jName" : "attributePayload",
          "c2jShape" : "AttributePayload",
          "deprecated" : false,
          "documentation" : "<p>A list of thing attributes, a JSON string containing name-value pairs. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"name1\\\":\\\"value2\\\"}}</code> </p> <p>This data is used to add new attributes or update existing attributes.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A list of thing attributes, a JSON string containing name-value pairs. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"name1\\\":\\\"value2\\\"}}</code> </p> <p>This data is used to add new attributes or update existing attributes.</p>\n@param attributePayload A list of thing attributes, a JSON string containing name-value pairs. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"name1\\\":\\\"value2\\\"}}</code> </p> <p>This data is used to add new attributes or update existing attributes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAttributePayload",
          "getterDocumentation" : "/**<p>A list of thing attributes, a JSON string containing name-value pairs. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"name1\\\":\\\"value2\\\"}}</code> </p> <p>This data is used to add new attributes or update existing attributes.</p>\n@return A list of thing attributes, a JSON string containing name-value pairs. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"name1\\\":\\\"value2\\\"}}</code> </p> <p>This data is used to add new attributes or update existing attributes.*/",
          "getterMethodName" : "getAttributePayload",
          "getterModel" : {
            "returnType" : "AttributePayload",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "attributePayload",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "attributePayload",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "AttributePayload",
          "setterDocumentation" : "/**<p>A list of thing attributes, a JSON string containing name-value pairs. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"name1\\\":\\\"value2\\\"}}</code> </p> <p>This data is used to add new attributes or update existing attributes.</p>\n@param attributePayload A list of thing attributes, a JSON string containing name-value pairs. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"name1\\\":\\\"value2\\\"}}</code> </p> <p>This data is used to add new attributes or update existing attributes.*/",
          "setterMethodName" : "setAttributePayload",
          "setterModel" : {
            "variableDeclarationType" : "AttributePayload",
            "variableName" : "attributePayload",
            "variableType" : "AttributePayload",
            "documentation" : "",
            "simpleType" : "AttributePayload",
            "variableSetterType" : "AttributePayload"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A list of thing attributes, a JSON string containing name-value pairs. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"name1\\\":\\\"value2\\\"}}</code> </p> <p>This data is used to add new attributes or update existing attributes.</p>\n@param attributePayload A list of thing attributes, a JSON string containing name-value pairs. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"name1\\\":\\\"value2\\\"}}</code> </p> <p>This data is used to add new attributes or update existing attributes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "AttributePayload",
            "variableName" : "attributePayload",
            "variableType" : "AttributePayload",
            "documentation" : "<p>A list of thing attributes, a JSON string containing name-value pairs. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"name1\\\":\\\"value2\\\"}}</code> </p> <p>This data is used to add new attributes or update existing attributes.</p>",
            "simpleType" : "AttributePayload",
            "variableSetterType" : "AttributePayload"
          },
          "xmlNameSpaceUri" : null
        },
        "ExpectedVersion" : {
          "c2jName" : "expectedVersion",
          "c2jShape" : "OptionalVersion",
          "deprecated" : false,
          "documentation" : "<p>The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>UpdateThing</code> request is rejected with a <code>VersionConflictException</code>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>UpdateThing</code> request is rejected with a <code>VersionConflictException</code>.</p>\n@param expectedVersion The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>UpdateThing</code> request is rejected with a <code>VersionConflictException</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withExpectedVersion",
          "getterDocumentation" : "/**<p>The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>UpdateThing</code> request is rejected with a <code>VersionConflictException</code>.</p>\n@return The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>UpdateThing</code> request is rejected with a <code>VersionConflictException</code>.*/",
          "getterMethodName" : "getExpectedVersion",
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "expectedVersion",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "expectedVersion",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Long",
          "marshallingType" : "LONG",
          "name" : "ExpectedVersion",
          "setterDocumentation" : "/**<p>The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>UpdateThing</code> request is rejected with a <code>VersionConflictException</code>.</p>\n@param expectedVersion The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>UpdateThing</code> request is rejected with a <code>VersionConflictException</code>.*/",
          "setterMethodName" : "setExpectedVersion",
          "setterModel" : {
            "variableDeclarationType" : "Long",
            "variableName" : "expectedVersion",
            "variableType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>UpdateThing</code> request is rejected with a <code>VersionConflictException</code>.</p>\n@param expectedVersion The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>UpdateThing</code> request is rejected with a <code>VersionConflictException</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Long",
            "variableName" : "expectedVersion",
            "variableType" : "Long",
            "documentation" : "<p>The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>UpdateThing</code> request is rejected with a <code>VersionConflictException</code>.</p>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "xmlNameSpaceUri" : null
        },
        "RemoveThingType" : {
          "c2jName" : "removeThingType",
          "c2jShape" : "RemoveThingType",
          "deprecated" : false,
          "documentation" : "<p>Remove a thing type association. If <b>true</b>, the assocation is removed.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Remove a thing type association. If <b>true</b>, the assocation is removed.</p>\n@param removeThingType Remove a thing type association. If <b>true</b>, the assocation is removed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRemoveThingType",
          "getterDocumentation" : "/**<p>Remove a thing type association. If <b>true</b>, the assocation is removed.</p>\n@return Remove a thing type association. If <b>true</b>, the assocation is removed.*/",
          "getterMethodName" : "getRemoveThingType",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "removeThingType",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "removeThingType",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "RemoveThingType",
          "setterDocumentation" : "/**<p>Remove a thing type association. If <b>true</b>, the assocation is removed.</p>\n@param removeThingType Remove a thing type association. If <b>true</b>, the assocation is removed.*/",
          "setterMethodName" : "setRemoveThingType",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "removeThingType",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Remove a thing type association. If <b>true</b>, the assocation is removed.</p>\n@param removeThingType Remove a thing type association. If <b>true</b>, the assocation is removed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "removeThingType",
            "variableType" : "Boolean",
            "documentation" : "<p>Remove a thing type association. If <b>true</b>, the assocation is removed.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        },
        "ThingName" : {
          "c2jName" : "thingName",
          "c2jShape" : "ThingName",
          "deprecated" : false,
          "documentation" : "<p>The name of the thing to update.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the thing to update.</p>\n@param thingName The name of the thing to update.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withThingName",
          "getterDocumentation" : "/**<p>The name of the thing to update.</p>\n@return The name of the thing to update.*/",
          "getterMethodName" : "getThingName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "thingName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "thingName",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ThingName",
          "setterDocumentation" : "/**<p>The name of the thing to update.</p>\n@param thingName The name of the thing to update.*/",
          "setterMethodName" : "setThingName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the thing to update.</p>\n@param thingName The name of the thing to update.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingName",
            "variableType" : "String",
            "documentation" : "<p>The name of the thing to update.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ThingTypeName" : {
          "c2jName" : "thingTypeName",
          "c2jShape" : "ThingTypeName",
          "deprecated" : false,
          "documentation" : "<p>The name of the thing type.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withThingTypeName",
          "getterDocumentation" : "/**<p>The name of the thing type.</p>\n@return The name of the thing type.*/",
          "getterMethodName" : "getThingTypeName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "thingTypeName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "thingTypeName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ThingTypeName",
          "setterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.*/",
          "setterMethodName" : "setThingTypeName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingTypeName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the thing type.</p>\n@param thingTypeName The name of the thing type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "thingTypeName",
            "variableType" : "String",
            "documentation" : "<p>The name of the thing type.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "thingName" ],
      "shapeName" : "UpdateThingRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "UpdateThingRequest",
        "variableName" : "updateThingRequest",
        "variableType" : "UpdateThingRequest",
        "documentation" : null,
        "simpleType" : "UpdateThingRequest",
        "variableSetterType" : "UpdateThingRequest"
      },
      "wrapper" : false
    },
    "UpdateThingResult" : {
      "c2jName" : "UpdateThingResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The output from the UpdateThing operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "UpdateThingResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "UpdateThingResult",
        "variableName" : "updateThingResult",
        "variableType" : "UpdateThingResult",
        "documentation" : null,
        "simpleType" : "UpdateThingResult",
        "variableSetterType" : "UpdateThingResult"
      },
      "wrapper" : false
    },
    "VersionConflictException" : {
      "c2jName" : "VersionConflictException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>An exception thrown when the version of a thing passed to a command is different than the version specified with the --version parameter.</p>",
      "enums" : null,
      "errorCode" : "VersionConflictException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "VersionConflictException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "VersionConflictException",
        "variableName" : "versionConflictException",
        "variableType" : "VersionConflictException",
        "documentation" : null,
        "simpleType" : "VersionConflictException",
        "variableSetterType" : "VersionConflictException"
      },
      "wrapper" : false
    },
    "VersionsLimitExceededException" : {
      "c2jName" : "VersionsLimitExceededException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The number of policy versions exceeds the limit.</p>",
      "enums" : null,
      "errorCode" : "VersionsLimitExceededException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "VersionsLimitExceededException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "VersionsLimitExceededException",
        "variableName" : "versionsLimitExceededException",
        "variableType" : "VersionsLimitExceededException",
        "documentation" : null,
        "simpleType" : "VersionsLimitExceededException",
        "variableSetterType" : "VersionsLimitExceededException"
      },
      "wrapper" : false
    }
  },
  "clientConfigFactory" : "ClientConfigurationFactory",
  "customAuthorizers" : { },
  "examples" : {
    "examples" : { },
    "version" : "1.0"
  },
  "exceptionUnmarshallerImpl" : null,
  "fileHeader" : "/*\n * Copyright 2012-2017 Amazon.com, Inc. or its affiliates. All Rights\n * Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */",
  "hasWaiters" : false,
  "sdkBaseResponseFqcn" : "com.amazonaws.AmazonWebServiceResult<com.amazonaws.ResponseMetadata>",
  "sdkModeledExceptionBaseClassName" : "AWSIotException",
  "sdkModeledExceptionBaseFqcn" : "com.amazonaws.services.iot.model.AWSIotException",
  "serviceBaseExceptionFqcn" : "com.amazonaws.AmazonServiceException",
  "transformPackage" : "com.amazonaws.services.iot.model.transform"
}