{
  "customizationConfig" : {
    "additionalShapeConstructors" : null,
    "authPolicyActions" : {
      "actionPrefix" : null,
      "additionalOperations" : null,
      "fileNamePrefix" : null,
      "skip" : true
    },
    "calculateCRC32FromCompressedData" : false,
    "convenienceTypeOverloads" : [ ],
    "customClientConfigFactory" : null,
    "customCodeTemplates" : null,
    "customErrorCodeFieldName" : null,
    "customExceptionUnmarshallerImpl" : null,
    "customFileHeader" : null,
    "customResponseMetadataClassName" : null,
    "customServiceMetadata" : null,
    "customServiceNameForRequest" : null,
    "customSignerProvider" : null,
    "deprecatedSuppressions" : [ "EnumSetterOverload" ],
    "emitLegacyEnumSetterFor" : {
      "Difference" : [ "changeType" ],
      "ListRepositoriesInput" : [ "sortBy", "order" ]
    },
    "operationModifiers" : null,
    "operationsWithResponseStreamContentLengthValidation" : null,
    "presignersFqcn" : null,
    "renameShapes" : null,
    "requestMetrics" : null,
    "requiredParamValidationEnabled" : false,
    "sdkModeledExceptionBaseClassName" : null,
    "sendEmptyAutoConstructedListAsEmptyList" : null,
    "sendExplicitlyEmptyListsForQuery" : false,
    "serviceClientHoldInputStream" : false,
    "shapeModifiers" : null,
    "shapeSubstitutions" : null,
    "simpleMethods" : null,
    "skipInterfaceAdditions" : false,
    "skipSmokeTests" : false,
    "transformDirectory" : "transform",
    "useAutoConstructList" : false,
    "useAutoConstructMap" : false
  },
  "metadata" : {
    "apiVersion" : "2015-04-13",
    "asyncClient" : "AWSCodeCommitAsyncClient",
    "asyncClientBuilderClassName" : "AWSCodeCommitAsyncClientBuilder",
    "asyncInterface" : "AWSCodeCommitAsync",
    "cborProtocol" : false,
    "checksumFormat" : null,
    "contentType" : null,
    "cucumberModuleInjectorClassName" : "AWSCodeCommitModuleInjector",
    "defaultEndpoint" : "https://codecommit.us-east-1.amazonaws.com",
    "defaultEndpointWithoutHttpProtocol" : "codecommit.us-east-1.amazonaws.com",
    "defaultRegion" : null,
    "documentation" : "<fullname>AWS CodeCommit</fullname> <p>This is the <i>AWS CodeCommit API Reference</i>. This reference provides descriptions of the operations and data types for AWS CodeCommit API along with usage examples.</p> <p>You can use the AWS CodeCommit API to work with the following objects:</p> <p>Repositories, by calling the following:</p> <ul> <li> <p> <a>BatchGetRepositories</a>, which returns information about one or more repositories associated with your AWS account</p> </li> <li> <p> <a>CreateRepository</a>, which creates an AWS CodeCommit repository</p> </li> <li> <p> <a>DeleteRepository</a>, which deletes an AWS CodeCommit repository</p> </li> <li> <p> <a>GetRepository</a>, which returns information about a specified repository</p> </li> <li> <p> <a>ListRepositories</a>, which lists all AWS CodeCommit repositories associated with your AWS account</p> </li> <li> <p> <a>UpdateRepositoryDescription</a>, which sets or updates the description of the repository</p> </li> <li> <p> <a>UpdateRepositoryName</a>, which changes the name of the repository. If you change the name of a repository, no other users of that repository will be able to access it until you send them the new HTTPS or SSH URL to use.</p> </li> </ul> <p>Branches, by calling the following:</p> <ul> <li> <p> <a>CreateBranch</a>, which creates a new branch in a specified repository</p> </li> <li> <p> <a>GetBranch</a>, which returns information about a specified branch</p> </li> <li> <p> <a>ListBranches</a>, which lists all branches for a specified repository</p> </li> <li> <p> <a>UpdateDefaultBranch</a>, which changes the default branch for a repository</p> </li> </ul> <p>Information about committed code in a repository, by calling the following:</p> <ul> <li> <p> <a>GetBlob</a>, which returns the base-64 encoded content of an individual Git blob object within a repository</p> </li> <li> <p> <a>GetCommit</a>, which returns information about a commit, including commit messages and author and committer information</p> </li> <li> <p> <a>GetDifferences</a>, which returns information about the differences in a valid commit specifier (such as a branch, tag, HEAD, commit ID or other fully qualified reference)</p> </li> </ul> <p>Triggers, by calling the following:</p> <ul> <li> <p> <a>GetRepositoryTriggers</a>, which returns information about triggers configured for a repository</p> </li> <li> <p> <a>PutRepositoryTriggers</a>, which replaces all triggers for a repository and can be used to create or delete triggers</p> </li> <li> <p> <a>TestRepositoryTriggers</a>, which tests the functionality of a repository trigger by sending data to the trigger target</p> </li> </ul> <p>For information about how to use AWS CodeCommit, see the <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html\">AWS CodeCommit User Guide</a>.</p>",
    "endpointPrefix" : "codecommit",
    "hasApiWithStreamInput" : false,
    "ionProtocol" : false,
    "jsonProtocol" : true,
    "jsonVersion" : "1.1",
    "packageName" : "com.amazonaws.services.codecommit",
    "packagePath" : "com/amazonaws/services/codecommit",
    "protocol" : "json",
    "protocolDefaultExceptionUmarshallerImpl" : null,
    "protocolFactory" : "com.amazonaws.protocol.json.SdkJsonProtocolFactory",
    "requestBaseFqcn" : "com.amazonaws.AmazonWebServiceRequest",
    "requiresApiKey" : false,
    "requiresIamSigners" : false,
    "serviceAbbreviation" : "CodeCommit",
    "serviceFullName" : "AWS CodeCommit",
    "serviceName" : "CodeCommit",
    "signingName" : "codecommit",
    "smokeTestsPackageName" : "com.amazonaws.services.codecommit.smoketests",
    "syncClient" : "AWSCodeCommitClient",
    "syncClientBuilderClassName" : "AWSCodeCommitClientBuilder",
    "syncInterface" : "AWSCodeCommit",
    "uid" : "codecommit-2015-04-13",
    "unmarshallerClassSuffix" : "JsonUnmarshaller",
    "unmarshallerContextClassName" : "JsonUnmarshallerContext",
    "xmlProtocol" : false
  },
  "operations" : {
    "BatchGetRepositories" : {
      "asyncCallableType" : "java.util.concurrent.Callable<BatchGetRepositoriesResult>",
      "asyncFutureType" : "java.util.concurrent.Future<BatchGetRepositoriesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<BatchGetRepositoriesRequest, BatchGetRepositoriesResult>",
      "asyncReturnType" : "BatchGetRepositoriesResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Returns information about one or more repositories.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p> </note>",
      "exceptions" : [ {
        "exceptionName" : "RepositoryNamesRequiredException",
        "documentation" : "<p>A repository names object is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "MaximumRepositoryNamesExceededException",
        "documentation" : "<p>The maximum number of allowed repository names was exceeded. Currently, this number is 25.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryNameException",
        "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "BatchGetRepositoriesRequest",
        "variableName" : "batchGetRepositoriesRequest",
        "variableType" : "BatchGetRepositoriesRequest",
        "documentation" : "<p>Represents the input of a batch get repositories operation.</p>",
        "simpleType" : "BatchGetRepositoriesRequest",
        "variableSetterType" : "BatchGetRepositoriesRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "batchGetRepositories",
      "operationName" : "BatchGetRepositories",
      "returnType" : {
        "returnType" : "BatchGetRepositoriesResult",
        "documentation" : "<p>Represents the output of a batch get repositories operation.</p>"
      },
      "syncReturnType" : "BatchGetRepositoriesResult"
    },
    "CreateBranch" : {
      "asyncCallableType" : "java.util.concurrent.Callable<CreateBranchResult>",
      "asyncFutureType" : "java.util.concurrent.Future<CreateBranchResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CreateBranchRequest, CreateBranchResult>",
      "asyncReturnType" : "CreateBranchResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Creates a new branch in a repository and points the branch to a commit.</p> <note> <p>Calling the create branch operation does not set a repository's default branch. To do this, call the update default branch operation.</p> </note>",
      "exceptions" : [ {
        "exceptionName" : "RepositoryNameRequiredException",
        "documentation" : "<p>A repository name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryNameException",
        "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryDoesNotExistException",
        "documentation" : "<p>The specified repository does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "BranchNameRequiredException",
        "documentation" : "<p>A branch name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "BranchNameExistsException",
        "documentation" : "<p>The specified branch name already exists.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidBranchNameException",
        "documentation" : "<p>The specified branch name is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "CommitIdRequiredException",
        "documentation" : "<p>A commit ID was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "CommitDoesNotExistException",
        "documentation" : "<p>The specified commit does not exist or no commit was specified, and the specified repository has no default branch.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidCommitIdException",
        "documentation" : "<p>The specified commit ID is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "CreateBranchRequest",
        "variableName" : "createBranchRequest",
        "variableType" : "CreateBranchRequest",
        "documentation" : "<p>Represents the input of a create branch operation.</p>",
        "simpleType" : "CreateBranchRequest",
        "variableSetterType" : "CreateBranchRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "createBranch",
      "operationName" : "CreateBranch",
      "returnType" : {
        "returnType" : "CreateBranchResult",
        "documentation" : null
      },
      "syncReturnType" : "CreateBranchResult"
    },
    "CreateRepository" : {
      "asyncCallableType" : "java.util.concurrent.Callable<CreateRepositoryResult>",
      "asyncFutureType" : "java.util.concurrent.Future<CreateRepositoryResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CreateRepositoryRequest, CreateRepositoryResult>",
      "asyncReturnType" : "CreateRepositoryResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Creates a new, empty repository.</p>",
      "exceptions" : [ {
        "exceptionName" : "RepositoryNameExistsException",
        "documentation" : "<p>The specified repository name already exists.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryNameRequiredException",
        "documentation" : "<p>A repository name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryNameException",
        "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryDescriptionException",
        "documentation" : "<p>The specified repository description is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryLimitExceededException",
        "documentation" : "<p>A repository resource limit was exceeded.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "CreateRepositoryRequest",
        "variableName" : "createRepositoryRequest",
        "variableType" : "CreateRepositoryRequest",
        "documentation" : "<p>Represents the input of a create repository operation.</p>",
        "simpleType" : "CreateRepositoryRequest",
        "variableSetterType" : "CreateRepositoryRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "createRepository",
      "operationName" : "CreateRepository",
      "returnType" : {
        "returnType" : "CreateRepositoryResult",
        "documentation" : "<p>Represents the output of a create repository operation.</p>"
      },
      "syncReturnType" : "CreateRepositoryResult"
    },
    "DeleteRepository" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteRepositoryResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteRepositoryResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteRepositoryRequest, DeleteRepositoryResult>",
      "asyncReturnType" : "DeleteRepositoryResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Deletes a repository. If a specified repository was already deleted, a null repository ID will be returned.</p> <important><p>Deleting a repository also deletes all associated objects and metadata. After a repository is deleted, all future push calls to the deleted repository will fail.</p> </important>",
      "exceptions" : [ {
        "exceptionName" : "RepositoryNameRequiredException",
        "documentation" : "<p>A repository name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryNameException",
        "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "DeleteRepositoryRequest",
        "variableName" : "deleteRepositoryRequest",
        "variableType" : "DeleteRepositoryRequest",
        "documentation" : "<p>Represents the input of a delete repository operation.</p>",
        "simpleType" : "DeleteRepositoryRequest",
        "variableSetterType" : "DeleteRepositoryRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "deleteRepository",
      "operationName" : "DeleteRepository",
      "returnType" : {
        "returnType" : "DeleteRepositoryResult",
        "documentation" : "<p>Represents the output of a delete repository operation.</p>"
      },
      "syncReturnType" : "DeleteRepositoryResult"
    },
    "GetBlob" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetBlobResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetBlobResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetBlobRequest, GetBlobResult>",
      "asyncReturnType" : "GetBlobResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Returns the base-64 encoded content of an individual blob within a repository.</p>",
      "exceptions" : [ {
        "exceptionName" : "RepositoryNameRequiredException",
        "documentation" : "<p>A repository name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryNameException",
        "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryDoesNotExistException",
        "documentation" : "<p>The specified repository does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "BlobIdRequiredException",
        "documentation" : "<p>A blob ID is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidBlobIdException",
        "documentation" : "<p>The specified blob is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "BlobIdDoesNotExistException",
        "documentation" : "<p>The specified blob does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "FileTooLargeException",
        "documentation" : "<p>The specified file exceeds the file size limit for AWS CodeCommit. For more information about limits in AWS CodeCommit, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">AWS CodeCommit User Guide</a>.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "GetBlobRequest",
        "variableName" : "getBlobRequest",
        "variableType" : "GetBlobRequest",
        "documentation" : "<p>Represents the input of a get blob operation.</p>",
        "simpleType" : "GetBlobRequest",
        "variableSetterType" : "GetBlobRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getBlob",
      "operationName" : "GetBlob",
      "returnType" : {
        "returnType" : "GetBlobResult",
        "documentation" : "<p>Represents the output of a get blob operation.</p>"
      },
      "syncReturnType" : "GetBlobResult"
    },
    "GetBranch" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetBranchResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetBranchResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetBranchRequest, GetBranchResult>",
      "asyncReturnType" : "GetBranchResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Returns information about a repository branch, including its name and the last commit ID.</p>",
      "exceptions" : [ {
        "exceptionName" : "RepositoryNameRequiredException",
        "documentation" : "<p>A repository name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryDoesNotExistException",
        "documentation" : "<p>The specified repository does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryNameException",
        "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "BranchNameRequiredException",
        "documentation" : "<p>A branch name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidBranchNameException",
        "documentation" : "<p>The specified branch name is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "BranchDoesNotExistException",
        "documentation" : "<p>The specified branch does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "GetBranchRequest",
        "variableName" : "getBranchRequest",
        "variableType" : "GetBranchRequest",
        "documentation" : "<p>Represents the input of a get branch operation.</p>",
        "simpleType" : "GetBranchRequest",
        "variableSetterType" : "GetBranchRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getBranch",
      "operationName" : "GetBranch",
      "returnType" : {
        "returnType" : "GetBranchResult",
        "documentation" : "<p>Represents the output of a get branch operation.</p>"
      },
      "syncReturnType" : "GetBranchResult"
    },
    "GetCommit" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetCommitResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetCommitResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetCommitRequest, GetCommitResult>",
      "asyncReturnType" : "GetCommitResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Returns information about a commit, including commit message and committer information.</p>",
      "exceptions" : [ {
        "exceptionName" : "RepositoryNameRequiredException",
        "documentation" : "<p>A repository name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryNameException",
        "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryDoesNotExistException",
        "documentation" : "<p>The specified repository does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "CommitIdRequiredException",
        "documentation" : "<p>A commit ID was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidCommitIdException",
        "documentation" : "<p>The specified commit ID is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "CommitIdDoesNotExistException",
        "documentation" : "<p>The specified commit ID does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "GetCommitRequest",
        "variableName" : "getCommitRequest",
        "variableType" : "GetCommitRequest",
        "documentation" : "<p>Represents the input of a get commit operation.</p>",
        "simpleType" : "GetCommitRequest",
        "variableSetterType" : "GetCommitRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getCommit",
      "operationName" : "GetCommit",
      "returnType" : {
        "returnType" : "GetCommitResult",
        "documentation" : "<p>Represents the output of a get commit operation.</p>"
      },
      "syncReturnType" : "GetCommitResult"
    },
    "GetDifferences" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetDifferencesResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetDifferencesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetDifferencesRequest, GetDifferencesResult>",
      "asyncReturnType" : "GetDifferencesResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Returns information about the differences in a valid commit specifier (such as a branch, tag, HEAD, commit ID or other fully qualified reference). Results can be limited to a specified path.</p>",
      "exceptions" : [ {
        "exceptionName" : "RepositoryNameRequiredException",
        "documentation" : "<p>A repository name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryDoesNotExistException",
        "documentation" : "<p>The specified repository does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryNameException",
        "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidContinuationTokenException",
        "documentation" : "<p>The specified continuation token is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidMaxResultsException",
        "documentation" : "<p>The specified number of maximum results is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidCommitIdException",
        "documentation" : "<p>The specified commit ID is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "CommitRequiredException",
        "documentation" : "<p>A commit was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidCommitException",
        "documentation" : "<p>The specified commit is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "CommitDoesNotExistException",
        "documentation" : "<p>The specified commit does not exist or no commit was specified, and the specified repository has no default branch.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidPathException",
        "documentation" : "<p>The specified path is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "PathDoesNotExistException",
        "documentation" : "<p>The specified path does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "GetDifferencesRequest",
        "variableName" : "getDifferencesRequest",
        "variableType" : "GetDifferencesRequest",
        "documentation" : "",
        "simpleType" : "GetDifferencesRequest",
        "variableSetterType" : "GetDifferencesRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getDifferences",
      "operationName" : "GetDifferences",
      "returnType" : {
        "returnType" : "GetDifferencesResult",
        "documentation" : null
      },
      "syncReturnType" : "GetDifferencesResult"
    },
    "GetRepository" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetRepositoryResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetRepositoryResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetRepositoryRequest, GetRepositoryResult>",
      "asyncReturnType" : "GetRepositoryResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Returns information about a repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p> </note>",
      "exceptions" : [ {
        "exceptionName" : "RepositoryNameRequiredException",
        "documentation" : "<p>A repository name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryDoesNotExistException",
        "documentation" : "<p>The specified repository does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryNameException",
        "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "GetRepositoryRequest",
        "variableName" : "getRepositoryRequest",
        "variableType" : "GetRepositoryRequest",
        "documentation" : "<p>Represents the input of a get repository operation.</p>",
        "simpleType" : "GetRepositoryRequest",
        "variableSetterType" : "GetRepositoryRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getRepository",
      "operationName" : "GetRepository",
      "returnType" : {
        "returnType" : "GetRepositoryResult",
        "documentation" : "<p>Represents the output of a get repository operation.</p>"
      },
      "syncReturnType" : "GetRepositoryResult"
    },
    "GetRepositoryTriggers" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetRepositoryTriggersResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetRepositoryTriggersResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetRepositoryTriggersRequest, GetRepositoryTriggersResult>",
      "asyncReturnType" : "GetRepositoryTriggersResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Gets information about triggers configured for a repository.</p>",
      "exceptions" : [ {
        "exceptionName" : "RepositoryNameRequiredException",
        "documentation" : "<p>A repository name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryNameException",
        "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryDoesNotExistException",
        "documentation" : "<p>The specified repository does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "GetRepositoryTriggersRequest",
        "variableName" : "getRepositoryTriggersRequest",
        "variableType" : "GetRepositoryTriggersRequest",
        "documentation" : "<p>Represents the input of a get repository triggers operation.</p>",
        "simpleType" : "GetRepositoryTriggersRequest",
        "variableSetterType" : "GetRepositoryTriggersRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getRepositoryTriggers",
      "operationName" : "GetRepositoryTriggers",
      "returnType" : {
        "returnType" : "GetRepositoryTriggersResult",
        "documentation" : "<p>Represents the output of a get repository triggers operation.</p>"
      },
      "syncReturnType" : "GetRepositoryTriggersResult"
    },
    "ListBranches" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListBranchesResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListBranchesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListBranchesRequest, ListBranchesResult>",
      "asyncReturnType" : "ListBranchesResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Gets information about one or more branches in a repository.</p>",
      "exceptions" : [ {
        "exceptionName" : "RepositoryNameRequiredException",
        "documentation" : "<p>A repository name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryDoesNotExistException",
        "documentation" : "<p>The specified repository does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryNameException",
        "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidContinuationTokenException",
        "documentation" : "<p>The specified continuation token is not valid.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "ListBranchesRequest",
        "variableName" : "listBranchesRequest",
        "variableType" : "ListBranchesRequest",
        "documentation" : "<p>Represents the input of a list branches operation.</p>",
        "simpleType" : "ListBranchesRequest",
        "variableSetterType" : "ListBranchesRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listBranches",
      "operationName" : "ListBranches",
      "returnType" : {
        "returnType" : "ListBranchesResult",
        "documentation" : "<p>Represents the output of a list branches operation.</p>"
      },
      "syncReturnType" : "ListBranchesResult"
    },
    "ListRepositories" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListRepositoriesResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListRepositoriesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListRepositoriesRequest, ListRepositoriesResult>",
      "asyncReturnType" : "ListRepositoriesResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Gets information about one or more repositories.</p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidSortByException",
        "documentation" : "<p>The specified sort by value is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidOrderException",
        "documentation" : "<p>The specified sort order is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidContinuationTokenException",
        "documentation" : "<p>The specified continuation token is not valid.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "ListRepositoriesRequest",
        "variableName" : "listRepositoriesRequest",
        "variableType" : "ListRepositoriesRequest",
        "documentation" : "<p>Represents the input of a list repositories operation.</p>",
        "simpleType" : "ListRepositoriesRequest",
        "variableSetterType" : "ListRepositoriesRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listRepositories",
      "operationName" : "ListRepositories",
      "returnType" : {
        "returnType" : "ListRepositoriesResult",
        "documentation" : "<p>Represents the output of a list repositories operation.</p>"
      },
      "syncReturnType" : "ListRepositoriesResult"
    },
    "PutRepositoryTriggers" : {
      "asyncCallableType" : "java.util.concurrent.Callable<PutRepositoryTriggersResult>",
      "asyncFutureType" : "java.util.concurrent.Future<PutRepositoryTriggersResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<PutRepositoryTriggersRequest, PutRepositoryTriggersResult>",
      "asyncReturnType" : "PutRepositoryTriggersResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Replaces all triggers for a repository. This can be used to create or delete triggers.</p>",
      "exceptions" : [ {
        "exceptionName" : "RepositoryDoesNotExistException",
        "documentation" : "<p>The specified repository does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryNameRequiredException",
        "documentation" : "<p>A repository name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryNameException",
        "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryTriggersListRequiredException",
        "documentation" : "<p>The list of triggers for the repository is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "MaximumRepositoryTriggersExceededException",
        "documentation" : "<p>The number of triggers allowed for the repository was exceeded.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryTriggerNameException",
        "documentation" : "<p>The name of the trigger is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryTriggerDestinationArnException",
        "documentation" : "<p>The Amazon Resource Name (ARN) for the trigger is not valid for the specified destination. The most common reason for this error is that the ARN does not meet the requirements for the service type.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryTriggerRegionException",
        "documentation" : "<p>The region for the trigger target does not match the region for the repository. Triggers must be created in the same region as the target for the trigger.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryTriggerCustomDataException",
        "documentation" : "<p>The custom data provided for the trigger is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "MaximumBranchesExceededException",
        "documentation" : "<p>The number of branches for the trigger was exceeded.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryTriggerBranchNameException",
        "documentation" : "<p>One or more branch names specified for the trigger is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryTriggerEventsException",
        "documentation" : "<p>One or more events specified for the trigger is not valid. Check to make sure that all events specified match the requirements for allowed events.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryTriggerNameRequiredException",
        "documentation" : "<p>A name for the trigger is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryTriggerDestinationArnRequiredException",
        "documentation" : "<p>A destination ARN for the target service for the trigger is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryTriggerBranchNameListRequiredException",
        "documentation" : "<p>At least one branch name is required but was not specified in the trigger configuration.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryTriggerEventsListRequiredException",
        "documentation" : "<p>At least one event for the trigger is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "PutRepositoryTriggersRequest",
        "variableName" : "putRepositoryTriggersRequest",
        "variableType" : "PutRepositoryTriggersRequest",
        "documentation" : "<p>Represents the input ofa put repository triggers operation.</p>",
        "simpleType" : "PutRepositoryTriggersRequest",
        "variableSetterType" : "PutRepositoryTriggersRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "putRepositoryTriggers",
      "operationName" : "PutRepositoryTriggers",
      "returnType" : {
        "returnType" : "PutRepositoryTriggersResult",
        "documentation" : "<p>Represents the output of a put repository triggers operation.</p>"
      },
      "syncReturnType" : "PutRepositoryTriggersResult"
    },
    "TestRepositoryTriggers" : {
      "asyncCallableType" : "java.util.concurrent.Callable<TestRepositoryTriggersResult>",
      "asyncFutureType" : "java.util.concurrent.Future<TestRepositoryTriggersResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<TestRepositoryTriggersRequest, TestRepositoryTriggersResult>",
      "asyncReturnType" : "TestRepositoryTriggersResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Tests the functionality of repository triggers by sending information to the trigger target. If real data is available in the repository, the test will send data from the last commit. If no data is available, sample data will be generated.</p>",
      "exceptions" : [ {
        "exceptionName" : "RepositoryDoesNotExistException",
        "documentation" : "<p>The specified repository does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryNameRequiredException",
        "documentation" : "<p>A repository name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryNameException",
        "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryTriggersListRequiredException",
        "documentation" : "<p>The list of triggers for the repository is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "MaximumRepositoryTriggersExceededException",
        "documentation" : "<p>The number of triggers allowed for the repository was exceeded.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryTriggerNameException",
        "documentation" : "<p>The name of the trigger is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryTriggerDestinationArnException",
        "documentation" : "<p>The Amazon Resource Name (ARN) for the trigger is not valid for the specified destination. The most common reason for this error is that the ARN does not meet the requirements for the service type.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryTriggerRegionException",
        "documentation" : "<p>The region for the trigger target does not match the region for the repository. Triggers must be created in the same region as the target for the trigger.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryTriggerCustomDataException",
        "documentation" : "<p>The custom data provided for the trigger is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "MaximumBranchesExceededException",
        "documentation" : "<p>The number of branches for the trigger was exceeded.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryTriggerBranchNameException",
        "documentation" : "<p>One or more branch names specified for the trigger is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryTriggerEventsException",
        "documentation" : "<p>One or more events specified for the trigger is not valid. Check to make sure that all events specified match the requirements for allowed events.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryTriggerNameRequiredException",
        "documentation" : "<p>A name for the trigger is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryTriggerDestinationArnRequiredException",
        "documentation" : "<p>A destination ARN for the target service for the trigger is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryTriggerBranchNameListRequiredException",
        "documentation" : "<p>At least one branch name is required but was not specified in the trigger configuration.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryTriggerEventsListRequiredException",
        "documentation" : "<p>At least one event for the trigger is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "TestRepositoryTriggersRequest",
        "variableName" : "testRepositoryTriggersRequest",
        "variableType" : "TestRepositoryTriggersRequest",
        "documentation" : "<p>Represents the input of a test repository triggers operation.</p>",
        "simpleType" : "TestRepositoryTriggersRequest",
        "variableSetterType" : "TestRepositoryTriggersRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "testRepositoryTriggers",
      "operationName" : "TestRepositoryTriggers",
      "returnType" : {
        "returnType" : "TestRepositoryTriggersResult",
        "documentation" : "<p>Represents the output of a test repository triggers operation.</p>"
      },
      "syncReturnType" : "TestRepositoryTriggersResult"
    },
    "UpdateDefaultBranch" : {
      "asyncCallableType" : "java.util.concurrent.Callable<UpdateDefaultBranchResult>",
      "asyncFutureType" : "java.util.concurrent.Future<UpdateDefaultBranchResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<UpdateDefaultBranchRequest, UpdateDefaultBranchResult>",
      "asyncReturnType" : "UpdateDefaultBranchResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Sets or changes the default branch name for the specified repository.</p> <note> <p>If you use this operation to change the default branch name to the current default branch name, a success message is returned even though the default branch did not change.</p> </note>",
      "exceptions" : [ {
        "exceptionName" : "RepositoryNameRequiredException",
        "documentation" : "<p>A repository name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryDoesNotExistException",
        "documentation" : "<p>The specified repository does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryNameException",
        "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "BranchNameRequiredException",
        "documentation" : "<p>A branch name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidBranchNameException",
        "documentation" : "<p>The specified branch name is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "BranchDoesNotExistException",
        "documentation" : "<p>The specified branch does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "UpdateDefaultBranchRequest",
        "variableName" : "updateDefaultBranchRequest",
        "variableType" : "UpdateDefaultBranchRequest",
        "documentation" : "<p>Represents the input of an update default branch operation.</p>",
        "simpleType" : "UpdateDefaultBranchRequest",
        "variableSetterType" : "UpdateDefaultBranchRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "updateDefaultBranch",
      "operationName" : "UpdateDefaultBranch",
      "returnType" : {
        "returnType" : "UpdateDefaultBranchResult",
        "documentation" : null
      },
      "syncReturnType" : "UpdateDefaultBranchResult"
    },
    "UpdateRepositoryDescription" : {
      "asyncCallableType" : "java.util.concurrent.Callable<UpdateRepositoryDescriptionResult>",
      "asyncFutureType" : "java.util.concurrent.Future<UpdateRepositoryDescriptionResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<UpdateRepositoryDescriptionRequest, UpdateRepositoryDescriptionResult>",
      "asyncReturnType" : "UpdateRepositoryDescriptionResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Sets or changes the comment or description for a repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p> </note>",
      "exceptions" : [ {
        "exceptionName" : "RepositoryNameRequiredException",
        "documentation" : "<p>A repository name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryDoesNotExistException",
        "documentation" : "<p>The specified repository does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryNameException",
        "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryDescriptionException",
        "documentation" : "<p>The specified repository description is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionIntegrityChecksFailedException",
        "documentation" : "<p>An encryption integrity check failed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyAccessDeniedException",
        "documentation" : "<p>An encryption key could not be accessed.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyDisabledException",
        "documentation" : "<p>The encryption key is disabled.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyNotFoundException",
        "documentation" : "<p>No encryption key was found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EncryptionKeyUnavailableException",
        "documentation" : "<p>The encryption key is not available.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "UpdateRepositoryDescriptionRequest",
        "variableName" : "updateRepositoryDescriptionRequest",
        "variableType" : "UpdateRepositoryDescriptionRequest",
        "documentation" : "<p>Represents the input of an update repository description operation.</p>",
        "simpleType" : "UpdateRepositoryDescriptionRequest",
        "variableSetterType" : "UpdateRepositoryDescriptionRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "updateRepositoryDescription",
      "operationName" : "UpdateRepositoryDescription",
      "returnType" : {
        "returnType" : "UpdateRepositoryDescriptionResult",
        "documentation" : null
      },
      "syncReturnType" : "UpdateRepositoryDescriptionResult"
    },
    "UpdateRepositoryName" : {
      "asyncCallableType" : "java.util.concurrent.Callable<UpdateRepositoryNameResult>",
      "asyncFutureType" : "java.util.concurrent.Future<UpdateRepositoryNameResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<UpdateRepositoryNameRequest, UpdateRepositoryNameResult>",
      "asyncReturnType" : "UpdateRepositoryNameResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Renames a repository. The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. The suffix \".git\" is prohibited. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide.</p>",
      "exceptions" : [ {
        "exceptionName" : "RepositoryDoesNotExistException",
        "documentation" : "<p>The specified repository does not exist.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryNameExistsException",
        "documentation" : "<p>The specified repository name already exists.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "RepositoryNameRequiredException",
        "documentation" : "<p>A repository name is required but was not specified.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidRepositoryNameException",
        "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "UpdateRepositoryNameRequest",
        "variableName" : "updateRepositoryNameRequest",
        "variableType" : "UpdateRepositoryNameRequest",
        "documentation" : "<p>Represents the input of an update repository description operation.</p>",
        "simpleType" : "UpdateRepositoryNameRequest",
        "variableSetterType" : "UpdateRepositoryNameRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "updateRepositoryName",
      "operationName" : "UpdateRepositoryName",
      "returnType" : {
        "returnType" : "UpdateRepositoryNameResult",
        "documentation" : null
      },
      "syncReturnType" : "UpdateRepositoryNameResult"
    }
  },
  "shapes" : {
    "BatchGetRepositoriesRequest" : {
      "c2jName" : "BatchGetRepositoriesInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the input of a batch get repositories operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "BatchGetRepositories",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.BatchGetRepositories",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "repositoryNames",
        "c2jShape" : "RepositoryNameList",
        "deprecated" : false,
        "documentation" : "<p>The names of the repositories to get information about.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The names of the repositories to get information about.</p>\n@param repositoryNames The names of the repositories to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryNames",
        "getterDocumentation" : "/**<p>The names of the repositories to get information about.</p>\n@return The names of the repositories to get information about.*/",
        "getterMethodName" : "getRepositoryNames",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryNames",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryNames",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "RepositoryName",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "RepositoryNames",
        "setterDocumentation" : "/**<p>The names of the repositories to get information about.</p>\n@param repositoryNames The names of the repositories to get information about.*/",
        "setterMethodName" : "setRepositoryNames",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "repositoryNames",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The names of the repositories to get information about.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRepositoryNames(java.util.Collection)} or {@link #withRepositoryNames(java.util.Collection)} if you want to override the existing values.</p>\n@param repositoryNames The names of the repositories to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "repositoryNames",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>The names of the repositories to get information about.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "RepositoryNames" : {
          "c2jName" : "repositoryNames",
          "c2jShape" : "RepositoryNameList",
          "deprecated" : false,
          "documentation" : "<p>The names of the repositories to get information about.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The names of the repositories to get information about.</p>\n@param repositoryNames The names of the repositories to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryNames",
          "getterDocumentation" : "/**<p>The names of the repositories to get information about.</p>\n@return The names of the repositories to get information about.*/",
          "getterMethodName" : "getRepositoryNames",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryNames",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryNames",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "RepositoryName",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "RepositoryNames",
          "setterDocumentation" : "/**<p>The names of the repositories to get information about.</p>\n@param repositoryNames The names of the repositories to get information about.*/",
          "setterMethodName" : "setRepositoryNames",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "repositoryNames",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The names of the repositories to get information about.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRepositoryNames(java.util.Collection)} or {@link #withRepositoryNames(java.util.Collection)} if you want to override the existing values.</p>\n@param repositoryNames The names of the repositories to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "repositoryNames",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>The names of the repositories to get information about.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryNames" ],
      "shapeName" : "BatchGetRepositoriesRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "BatchGetRepositoriesRequest",
        "variableName" : "batchGetRepositoriesRequest",
        "variableType" : "BatchGetRepositoriesRequest",
        "documentation" : null,
        "simpleType" : "BatchGetRepositoriesRequest",
        "variableSetterType" : "BatchGetRepositoriesRequest"
      },
      "wrapper" : false
    },
    "BatchGetRepositoriesResult" : {
      "c2jName" : "BatchGetRepositoriesOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the output of a batch get repositories operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "repositories",
        "c2jShape" : "RepositoryMetadataList",
        "deprecated" : false,
        "documentation" : "<p>A list of repositories returned by the batch get repositories operation.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A list of repositories returned by the batch get repositories operation.</p>\n@param repositories A list of repositories returned by the batch get repositories operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositories",
        "getterDocumentation" : "/**<p>A list of repositories returned by the batch get repositories operation.</p>\n@return A list of repositories returned by the batch get repositories operation.*/",
        "getterMethodName" : "getRepositories",
        "getterModel" : {
          "returnType" : "java.util.List<RepositoryMetadata>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositories",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositories",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "RepositoryMetadata",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "RepositoryMetadata",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "RepositoryMetadata",
              "variableName" : "member",
              "variableType" : "RepositoryMetadata",
              "documentation" : "",
              "simpleType" : "RepositoryMetadata",
              "variableSetterType" : "RepositoryMetadata"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "RepositoryMetadata",
              "variableName" : "member",
              "variableType" : "RepositoryMetadata",
              "documentation" : "",
              "simpleType" : "RepositoryMetadata",
              "variableSetterType" : "RepositoryMetadata"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "RepositoryMetadata",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "RepositoryMetadata",
          "templateImplType" : "java.util.ArrayList<RepositoryMetadata>",
          "templateType" : "java.util.List<RepositoryMetadata>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Repositories",
        "setterDocumentation" : "/**<p>A list of repositories returned by the batch get repositories operation.</p>\n@param repositories A list of repositories returned by the batch get repositories operation.*/",
        "setterMethodName" : "setRepositories",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<RepositoryMetadata>",
          "variableName" : "repositories",
          "variableType" : "java.util.List<RepositoryMetadata>",
          "documentation" : "",
          "simpleType" : "List<RepositoryMetadata>",
          "variableSetterType" : "java.util.Collection<RepositoryMetadata>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A list of repositories returned by the batch get repositories operation.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRepositories(java.util.Collection)} or {@link #withRepositories(java.util.Collection)} if you want to override the existing values.</p>\n@param repositories A list of repositories returned by the batch get repositories operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<RepositoryMetadata>",
          "variableName" : "repositories",
          "variableType" : "java.util.List<RepositoryMetadata>",
          "documentation" : "<p>A list of repositories returned by the batch get repositories operation.</p>",
          "simpleType" : "List<RepositoryMetadata>",
          "variableSetterType" : "java.util.Collection<RepositoryMetadata>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoriesNotFound",
        "c2jShape" : "RepositoryNotFoundList",
        "deprecated" : false,
        "documentation" : "<p>Returns a list of repository names for which information could not be found.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Returns a list of repository names for which information could not be found.</p>\n@param repositoriesNotFound Returns a list of repository names for which information could not be found.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoriesNotFound",
        "getterDocumentation" : "/**<p>Returns a list of repository names for which information could not be found.</p>\n@return Returns a list of repository names for which information could not be found.*/",
        "getterMethodName" : "getRepositoriesNotFound",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoriesNotFound",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoriesNotFound",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "RepositoryName",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "RepositoriesNotFound",
        "setterDocumentation" : "/**<p>Returns a list of repository names for which information could not be found.</p>\n@param repositoriesNotFound Returns a list of repository names for which information could not be found.*/",
        "setterMethodName" : "setRepositoriesNotFound",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "repositoriesNotFound",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Returns a list of repository names for which information could not be found.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRepositoriesNotFound(java.util.Collection)} or {@link #withRepositoriesNotFound(java.util.Collection)} if you want to override the existing values.</p>\n@param repositoriesNotFound Returns a list of repository names for which information could not be found.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "repositoriesNotFound",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>Returns a list of repository names for which information could not be found.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Repositories" : {
          "c2jName" : "repositories",
          "c2jShape" : "RepositoryMetadataList",
          "deprecated" : false,
          "documentation" : "<p>A list of repositories returned by the batch get repositories operation.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A list of repositories returned by the batch get repositories operation.</p>\n@param repositories A list of repositories returned by the batch get repositories operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositories",
          "getterDocumentation" : "/**<p>A list of repositories returned by the batch get repositories operation.</p>\n@return A list of repositories returned by the batch get repositories operation.*/",
          "getterMethodName" : "getRepositories",
          "getterModel" : {
            "returnType" : "java.util.List<RepositoryMetadata>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositories",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositories",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "RepositoryMetadata",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "RepositoryMetadata",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "RepositoryMetadata",
                "variableName" : "member",
                "variableType" : "RepositoryMetadata",
                "documentation" : "",
                "simpleType" : "RepositoryMetadata",
                "variableSetterType" : "RepositoryMetadata"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "RepositoryMetadata",
                "variableName" : "member",
                "variableType" : "RepositoryMetadata",
                "documentation" : "",
                "simpleType" : "RepositoryMetadata",
                "variableSetterType" : "RepositoryMetadata"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "RepositoryMetadata",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "RepositoryMetadata",
            "templateImplType" : "java.util.ArrayList<RepositoryMetadata>",
            "templateType" : "java.util.List<RepositoryMetadata>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Repositories",
          "setterDocumentation" : "/**<p>A list of repositories returned by the batch get repositories operation.</p>\n@param repositories A list of repositories returned by the batch get repositories operation.*/",
          "setterMethodName" : "setRepositories",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<RepositoryMetadata>",
            "variableName" : "repositories",
            "variableType" : "java.util.List<RepositoryMetadata>",
            "documentation" : "",
            "simpleType" : "List<RepositoryMetadata>",
            "variableSetterType" : "java.util.Collection<RepositoryMetadata>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A list of repositories returned by the batch get repositories operation.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRepositories(java.util.Collection)} or {@link #withRepositories(java.util.Collection)} if you want to override the existing values.</p>\n@param repositories A list of repositories returned by the batch get repositories operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<RepositoryMetadata>",
            "variableName" : "repositories",
            "variableType" : "java.util.List<RepositoryMetadata>",
            "documentation" : "<p>A list of repositories returned by the batch get repositories operation.</p>",
            "simpleType" : "List<RepositoryMetadata>",
            "variableSetterType" : "java.util.Collection<RepositoryMetadata>"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoriesNotFound" : {
          "c2jName" : "repositoriesNotFound",
          "c2jShape" : "RepositoryNotFoundList",
          "deprecated" : false,
          "documentation" : "<p>Returns a list of repository names for which information could not be found.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Returns a list of repository names for which information could not be found.</p>\n@param repositoriesNotFound Returns a list of repository names for which information could not be found.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoriesNotFound",
          "getterDocumentation" : "/**<p>Returns a list of repository names for which information could not be found.</p>\n@return Returns a list of repository names for which information could not be found.*/",
          "getterMethodName" : "getRepositoriesNotFound",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoriesNotFound",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoriesNotFound",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "RepositoryName",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "RepositoriesNotFound",
          "setterDocumentation" : "/**<p>Returns a list of repository names for which information could not be found.</p>\n@param repositoriesNotFound Returns a list of repository names for which information could not be found.*/",
          "setterMethodName" : "setRepositoriesNotFound",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "repositoriesNotFound",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Returns a list of repository names for which information could not be found.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRepositoriesNotFound(java.util.Collection)} or {@link #withRepositoriesNotFound(java.util.Collection)} if you want to override the existing values.</p>\n@param repositoriesNotFound Returns a list of repository names for which information could not be found.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "repositoriesNotFound",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>Returns a list of repository names for which information could not be found.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "BatchGetRepositoriesResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "BatchGetRepositoriesResult",
        "variableName" : "batchGetRepositoriesResult",
        "variableType" : "BatchGetRepositoriesResult",
        "documentation" : null,
        "simpleType" : "BatchGetRepositoriesResult",
        "variableSetterType" : "BatchGetRepositoriesResult"
      },
      "wrapper" : false
    },
    "BlobIdDoesNotExistException" : {
      "c2jName" : "BlobIdDoesNotExistException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified blob does not exist.</p>",
      "enums" : null,
      "errorCode" : "BlobIdDoesNotExistException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "BlobIdDoesNotExistException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "BlobIdDoesNotExistException",
        "variableName" : "blobIdDoesNotExistException",
        "variableType" : "BlobIdDoesNotExistException",
        "documentation" : null,
        "simpleType" : "BlobIdDoesNotExistException",
        "variableSetterType" : "BlobIdDoesNotExistException"
      },
      "wrapper" : false
    },
    "BlobIdRequiredException" : {
      "c2jName" : "BlobIdRequiredException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A blob ID is required but was not specified.</p>",
      "enums" : null,
      "errorCode" : "BlobIdRequiredException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "BlobIdRequiredException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "BlobIdRequiredException",
        "variableName" : "blobIdRequiredException",
        "variableType" : "BlobIdRequiredException",
        "documentation" : null,
        "simpleType" : "BlobIdRequiredException",
        "variableSetterType" : "BlobIdRequiredException"
      },
      "wrapper" : false
    },
    "BlobMetadata" : {
      "c2jName" : "BlobMetadata",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Returns information about a specific Git blob object.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "blobId",
        "c2jShape" : "ObjectId",
        "deprecated" : false,
        "documentation" : "<p>The full ID of the blob.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The full ID of the blob.</p>\n@param blobId The full ID of the blob.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBlobId",
        "getterDocumentation" : "/**<p>The full ID of the blob.</p>\n@return The full ID of the blob.*/",
        "getterMethodName" : "getBlobId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "blobId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "blobId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BlobId",
        "setterDocumentation" : "/**<p>The full ID of the blob.</p>\n@param blobId The full ID of the blob.*/",
        "setterMethodName" : "setBlobId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "blobId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The full ID of the blob.</p>\n@param blobId The full ID of the blob.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "blobId",
          "variableType" : "String",
          "documentation" : "<p>The full ID of the blob.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "path",
        "c2jShape" : "Path",
        "deprecated" : false,
        "documentation" : "<p>The path to the blob and any associated file name, if any.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The path to the blob and any associated file name, if any.</p>\n@param path The path to the blob and any associated file name, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPath",
        "getterDocumentation" : "/**<p>The path to the blob and any associated file name, if any.</p>\n@return The path to the blob and any associated file name, if any.*/",
        "getterMethodName" : "getPath",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "path",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "path",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Path",
        "setterDocumentation" : "/**<p>The path to the blob and any associated file name, if any.</p>\n@param path The path to the blob and any associated file name, if any.*/",
        "setterMethodName" : "setPath",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "path",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The path to the blob and any associated file name, if any.</p>\n@param path The path to the blob and any associated file name, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "path",
          "variableType" : "String",
          "documentation" : "<p>The path to the blob and any associated file name, if any.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "mode",
        "c2jShape" : "Mode",
        "deprecated" : false,
        "documentation" : "<p>The file mode permissions of the blob. File mode permission codes include:</p> <ul> <li> <p> <code>100644</code> indicates read/write</p> </li> <li> <p> <code>100755</code> indicates read/write/execute</p> </li> <li> <p> <code>160000</code> indicates a submodule</p> </li> <li> <p> <code>120000</code> indicates a symlink</p> </li> </ul>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The file mode permissions of the blob. File mode permission codes include:</p> <ul> <li> <p> <code>100644</code> indicates read/write</p> </li> <li> <p> <code>100755</code> indicates read/write/execute</p> </li> <li> <p> <code>160000</code> indicates a submodule</p> </li> <li> <p> <code>120000</code> indicates a symlink</p> </li> </ul>\n@param mode The file mode permissions of the blob. File mode permission codes include:</p> <ul> <li> <p> <code>100644</code> indicates read/write</p> </li> <li> <p> <code>100755</code> indicates read/write/execute</p> </li> <li> <p> <code>160000</code> indicates a submodule</p> </li> <li> <p> <code>120000</code> indicates a symlink</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMode",
        "getterDocumentation" : "/**<p>The file mode permissions of the blob. File mode permission codes include:</p> <ul> <li> <p> <code>100644</code> indicates read/write</p> </li> <li> <p> <code>100755</code> indicates read/write/execute</p> </li> <li> <p> <code>160000</code> indicates a submodule</p> </li> <li> <p> <code>120000</code> indicates a symlink</p> </li> </ul>\n@return The file mode permissions of the blob. File mode permission codes include:</p> <ul> <li> <p> <code>100644</code> indicates read/write</p> </li> <li> <p> <code>100755</code> indicates read/write/execute</p> </li> <li> <p> <code>160000</code> indicates a submodule</p> </li> <li> <p> <code>120000</code> indicates a symlink</p> </li>*/",
        "getterMethodName" : "getMode",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "mode",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "mode",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Mode",
        "setterDocumentation" : "/**<p>The file mode permissions of the blob. File mode permission codes include:</p> <ul> <li> <p> <code>100644</code> indicates read/write</p> </li> <li> <p> <code>100755</code> indicates read/write/execute</p> </li> <li> <p> <code>160000</code> indicates a submodule</p> </li> <li> <p> <code>120000</code> indicates a symlink</p> </li> </ul>\n@param mode The file mode permissions of the blob. File mode permission codes include:</p> <ul> <li> <p> <code>100644</code> indicates read/write</p> </li> <li> <p> <code>100755</code> indicates read/write/execute</p> </li> <li> <p> <code>160000</code> indicates a submodule</p> </li> <li> <p> <code>120000</code> indicates a symlink</p> </li>*/",
        "setterMethodName" : "setMode",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "mode",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The file mode permissions of the blob. File mode permission codes include:</p> <ul> <li> <p> <code>100644</code> indicates read/write</p> </li> <li> <p> <code>100755</code> indicates read/write/execute</p> </li> <li> <p> <code>160000</code> indicates a submodule</p> </li> <li> <p> <code>120000</code> indicates a symlink</p> </li> </ul>\n@param mode The file mode permissions of the blob. File mode permission codes include:</p> <ul> <li> <p> <code>100644</code> indicates read/write</p> </li> <li> <p> <code>100755</code> indicates read/write/execute</p> </li> <li> <p> <code>160000</code> indicates a submodule</p> </li> <li> <p> <code>120000</code> indicates a symlink</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "mode",
          "variableType" : "String",
          "documentation" : "<p>The file mode permissions of the blob. File mode permission codes include:</p> <ul> <li> <p> <code>100644</code> indicates read/write</p> </li> <li> <p> <code>100755</code> indicates read/write/execute</p> </li> <li> <p> <code>160000</code> indicates a submodule</p> </li> <li> <p> <code>120000</code> indicates a symlink</p> </li> </ul>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "BlobId" : {
          "c2jName" : "blobId",
          "c2jShape" : "ObjectId",
          "deprecated" : false,
          "documentation" : "<p>The full ID of the blob.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The full ID of the blob.</p>\n@param blobId The full ID of the blob.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBlobId",
          "getterDocumentation" : "/**<p>The full ID of the blob.</p>\n@return The full ID of the blob.*/",
          "getterMethodName" : "getBlobId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "blobId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "blobId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BlobId",
          "setterDocumentation" : "/**<p>The full ID of the blob.</p>\n@param blobId The full ID of the blob.*/",
          "setterMethodName" : "setBlobId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "blobId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The full ID of the blob.</p>\n@param blobId The full ID of the blob.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "blobId",
            "variableType" : "String",
            "documentation" : "<p>The full ID of the blob.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Mode" : {
          "c2jName" : "mode",
          "c2jShape" : "Mode",
          "deprecated" : false,
          "documentation" : "<p>The file mode permissions of the blob. File mode permission codes include:</p> <ul> <li> <p> <code>100644</code> indicates read/write</p> </li> <li> <p> <code>100755</code> indicates read/write/execute</p> </li> <li> <p> <code>160000</code> indicates a submodule</p> </li> <li> <p> <code>120000</code> indicates a symlink</p> </li> </ul>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The file mode permissions of the blob. File mode permission codes include:</p> <ul> <li> <p> <code>100644</code> indicates read/write</p> </li> <li> <p> <code>100755</code> indicates read/write/execute</p> </li> <li> <p> <code>160000</code> indicates a submodule</p> </li> <li> <p> <code>120000</code> indicates a symlink</p> </li> </ul>\n@param mode The file mode permissions of the blob. File mode permission codes include:</p> <ul> <li> <p> <code>100644</code> indicates read/write</p> </li> <li> <p> <code>100755</code> indicates read/write/execute</p> </li> <li> <p> <code>160000</code> indicates a submodule</p> </li> <li> <p> <code>120000</code> indicates a symlink</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMode",
          "getterDocumentation" : "/**<p>The file mode permissions of the blob. File mode permission codes include:</p> <ul> <li> <p> <code>100644</code> indicates read/write</p> </li> <li> <p> <code>100755</code> indicates read/write/execute</p> </li> <li> <p> <code>160000</code> indicates a submodule</p> </li> <li> <p> <code>120000</code> indicates a symlink</p> </li> </ul>\n@return The file mode permissions of the blob. File mode permission codes include:</p> <ul> <li> <p> <code>100644</code> indicates read/write</p> </li> <li> <p> <code>100755</code> indicates read/write/execute</p> </li> <li> <p> <code>160000</code> indicates a submodule</p> </li> <li> <p> <code>120000</code> indicates a symlink</p> </li>*/",
          "getterMethodName" : "getMode",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "mode",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "mode",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Mode",
          "setterDocumentation" : "/**<p>The file mode permissions of the blob. File mode permission codes include:</p> <ul> <li> <p> <code>100644</code> indicates read/write</p> </li> <li> <p> <code>100755</code> indicates read/write/execute</p> </li> <li> <p> <code>160000</code> indicates a submodule</p> </li> <li> <p> <code>120000</code> indicates a symlink</p> </li> </ul>\n@param mode The file mode permissions of the blob. File mode permission codes include:</p> <ul> <li> <p> <code>100644</code> indicates read/write</p> </li> <li> <p> <code>100755</code> indicates read/write/execute</p> </li> <li> <p> <code>160000</code> indicates a submodule</p> </li> <li> <p> <code>120000</code> indicates a symlink</p> </li>*/",
          "setterMethodName" : "setMode",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "mode",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The file mode permissions of the blob. File mode permission codes include:</p> <ul> <li> <p> <code>100644</code> indicates read/write</p> </li> <li> <p> <code>100755</code> indicates read/write/execute</p> </li> <li> <p> <code>160000</code> indicates a submodule</p> </li> <li> <p> <code>120000</code> indicates a symlink</p> </li> </ul>\n@param mode The file mode permissions of the blob. File mode permission codes include:</p> <ul> <li> <p> <code>100644</code> indicates read/write</p> </li> <li> <p> <code>100755</code> indicates read/write/execute</p> </li> <li> <p> <code>160000</code> indicates a submodule</p> </li> <li> <p> <code>120000</code> indicates a symlink</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "mode",
            "variableType" : "String",
            "documentation" : "<p>The file mode permissions of the blob. File mode permission codes include:</p> <ul> <li> <p> <code>100644</code> indicates read/write</p> </li> <li> <p> <code>100755</code> indicates read/write/execute</p> </li> <li> <p> <code>160000</code> indicates a submodule</p> </li> <li> <p> <code>120000</code> indicates a symlink</p> </li> </ul>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Path" : {
          "c2jName" : "path",
          "c2jShape" : "Path",
          "deprecated" : false,
          "documentation" : "<p>The path to the blob and any associated file name, if any.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The path to the blob and any associated file name, if any.</p>\n@param path The path to the blob and any associated file name, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPath",
          "getterDocumentation" : "/**<p>The path to the blob and any associated file name, if any.</p>\n@return The path to the blob and any associated file name, if any.*/",
          "getterMethodName" : "getPath",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "path",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "path",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Path",
          "setterDocumentation" : "/**<p>The path to the blob and any associated file name, if any.</p>\n@param path The path to the blob and any associated file name, if any.*/",
          "setterMethodName" : "setPath",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "path",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The path to the blob and any associated file name, if any.</p>\n@param path The path to the blob and any associated file name, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "path",
            "variableType" : "String",
            "documentation" : "<p>The path to the blob and any associated file name, if any.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "BlobMetadata",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "BlobMetadata",
        "variableName" : "blobMetadata",
        "variableType" : "BlobMetadata",
        "documentation" : null,
        "simpleType" : "BlobMetadata",
        "variableSetterType" : "BlobMetadata"
      },
      "wrapper" : false
    },
    "BranchDoesNotExistException" : {
      "c2jName" : "BranchDoesNotExistException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified branch does not exist.</p>",
      "enums" : null,
      "errorCode" : "BranchDoesNotExistException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "BranchDoesNotExistException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "BranchDoesNotExistException",
        "variableName" : "branchDoesNotExistException",
        "variableType" : "BranchDoesNotExistException",
        "documentation" : null,
        "simpleType" : "BranchDoesNotExistException",
        "variableSetterType" : "BranchDoesNotExistException"
      },
      "wrapper" : false
    },
    "BranchInfo" : {
      "c2jName" : "BranchInfo",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Returns information about a branch.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "branchName",
        "c2jShape" : "BranchName",
        "deprecated" : false,
        "documentation" : "<p>The name of the branch.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the branch.</p>\n@param branchName The name of the branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBranchName",
        "getterDocumentation" : "/**<p>The name of the branch.</p>\n@return The name of the branch.*/",
        "getterMethodName" : "getBranchName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "branchName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "branchName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BranchName",
        "setterDocumentation" : "/**<p>The name of the branch.</p>\n@param branchName The name of the branch.*/",
        "setterMethodName" : "setBranchName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "branchName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the branch.</p>\n@param branchName The name of the branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "branchName",
          "variableType" : "String",
          "documentation" : "<p>The name of the branch.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "commitId",
        "c2jShape" : "CommitId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the last commit made to the branch.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the last commit made to the branch.</p>\n@param commitId The ID of the last commit made to the branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCommitId",
        "getterDocumentation" : "/**<p>The ID of the last commit made to the branch.</p>\n@return The ID of the last commit made to the branch.*/",
        "getterMethodName" : "getCommitId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "commitId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "commitId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CommitId",
        "setterDocumentation" : "/**<p>The ID of the last commit made to the branch.</p>\n@param commitId The ID of the last commit made to the branch.*/",
        "setterMethodName" : "setCommitId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "commitId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the last commit made to the branch.</p>\n@param commitId The ID of the last commit made to the branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "commitId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the last commit made to the branch.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "BranchName" : {
          "c2jName" : "branchName",
          "c2jShape" : "BranchName",
          "deprecated" : false,
          "documentation" : "<p>The name of the branch.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the branch.</p>\n@param branchName The name of the branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBranchName",
          "getterDocumentation" : "/**<p>The name of the branch.</p>\n@return The name of the branch.*/",
          "getterMethodName" : "getBranchName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "branchName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "branchName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BranchName",
          "setterDocumentation" : "/**<p>The name of the branch.</p>\n@param branchName The name of the branch.*/",
          "setterMethodName" : "setBranchName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "branchName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the branch.</p>\n@param branchName The name of the branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "branchName",
            "variableType" : "String",
            "documentation" : "<p>The name of the branch.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CommitId" : {
          "c2jName" : "commitId",
          "c2jShape" : "CommitId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the last commit made to the branch.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the last commit made to the branch.</p>\n@param commitId The ID of the last commit made to the branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCommitId",
          "getterDocumentation" : "/**<p>The ID of the last commit made to the branch.</p>\n@return The ID of the last commit made to the branch.*/",
          "getterMethodName" : "getCommitId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "commitId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "commitId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CommitId",
          "setterDocumentation" : "/**<p>The ID of the last commit made to the branch.</p>\n@param commitId The ID of the last commit made to the branch.*/",
          "setterMethodName" : "setCommitId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "commitId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the last commit made to the branch.</p>\n@param commitId The ID of the last commit made to the branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "commitId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the last commit made to the branch.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "BranchInfo",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "BranchInfo",
        "variableName" : "branchInfo",
        "variableType" : "BranchInfo",
        "documentation" : null,
        "simpleType" : "BranchInfo",
        "variableSetterType" : "BranchInfo"
      },
      "wrapper" : false
    },
    "BranchNameExistsException" : {
      "c2jName" : "BranchNameExistsException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified branch name already exists.</p>",
      "enums" : null,
      "errorCode" : "BranchNameExistsException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "BranchNameExistsException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "BranchNameExistsException",
        "variableName" : "branchNameExistsException",
        "variableType" : "BranchNameExistsException",
        "documentation" : null,
        "simpleType" : "BranchNameExistsException",
        "variableSetterType" : "BranchNameExistsException"
      },
      "wrapper" : false
    },
    "BranchNameRequiredException" : {
      "c2jName" : "BranchNameRequiredException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A branch name is required but was not specified.</p>",
      "enums" : null,
      "errorCode" : "BranchNameRequiredException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "BranchNameRequiredException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "BranchNameRequiredException",
        "variableName" : "branchNameRequiredException",
        "variableType" : "BranchNameRequiredException",
        "documentation" : null,
        "simpleType" : "BranchNameRequiredException",
        "variableSetterType" : "BranchNameRequiredException"
      },
      "wrapper" : false
    },
    "ChangeTypeEnum" : {
      "c2jName" : "ChangeTypeEnum",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "A",
        "value" : "A"
      }, {
        "name" : "M",
        "value" : "M"
      }, {
        "name" : "D",
        "value" : "D"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ChangeTypeEnum",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "ChangeTypeEnum",
        "variableName" : "changeTypeEnum",
        "variableType" : "ChangeTypeEnum",
        "documentation" : null,
        "simpleType" : "ChangeTypeEnum",
        "variableSetterType" : "ChangeTypeEnum"
      },
      "wrapper" : false
    },
    "Commit" : {
      "c2jName" : "Commit",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Returns information about a specific commit.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "treeId",
        "c2jShape" : "ObjectId",
        "deprecated" : false,
        "documentation" : "<p>Tree information for the specified commit.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Tree information for the specified commit.</p>\n@param treeId Tree information for the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTreeId",
        "getterDocumentation" : "/**<p>Tree information for the specified commit.</p>\n@return Tree information for the specified commit.*/",
        "getterMethodName" : "getTreeId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "treeId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "treeId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TreeId",
        "setterDocumentation" : "/**<p>Tree information for the specified commit.</p>\n@param treeId Tree information for the specified commit.*/",
        "setterMethodName" : "setTreeId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "treeId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Tree information for the specified commit.</p>\n@param treeId Tree information for the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "treeId",
          "variableType" : "String",
          "documentation" : "<p>Tree information for the specified commit.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "parents",
        "c2jShape" : "ParentList",
        "deprecated" : false,
        "documentation" : "<p>The parent list for the specified commit.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The parent list for the specified commit.</p>\n@param parents The parent list for the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withParents",
        "getterDocumentation" : "/**<p>The parent list for the specified commit.</p>\n@return The parent list for the specified commit.*/",
        "getterMethodName" : "getParents",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "parents",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "parents",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ObjectId",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Parents",
        "setterDocumentation" : "/**<p>The parent list for the specified commit.</p>\n@param parents The parent list for the specified commit.*/",
        "setterMethodName" : "setParents",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "parents",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The parent list for the specified commit.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setParents(java.util.Collection)} or {@link #withParents(java.util.Collection)} if you want to override the existing values.</p>\n@param parents The parent list for the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "parents",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>The parent list for the specified commit.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "message",
        "c2jShape" : "Message",
        "deprecated" : false,
        "documentation" : "<p>The commit message associated with the specified commit.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The commit message associated with the specified commit.</p>\n@param message The commit message associated with the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMessage",
        "getterDocumentation" : "/**<p>The commit message associated with the specified commit.</p>\n@return The commit message associated with the specified commit.*/",
        "getterMethodName" : "getMessage",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "message",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "message",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Message",
        "setterDocumentation" : "/**<p>The commit message associated with the specified commit.</p>\n@param message The commit message associated with the specified commit.*/",
        "setterMethodName" : "setMessage",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "message",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The commit message associated with the specified commit.</p>\n@param message The commit message associated with the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "message",
          "variableType" : "String",
          "documentation" : "<p>The commit message associated with the specified commit.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "author",
        "c2jShape" : "UserInfo",
        "deprecated" : false,
        "documentation" : "<p>Information about the author of the specified commit. Information includes the date in timestamp format with GMT offset, the name of the author, and the email address for the author, as configured in Git.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the author of the specified commit. Information includes the date in timestamp format with GMT offset, the name of the author, and the email address for the author, as configured in Git.</p>\n@param author Information about the author of the specified commit. Information includes the date in timestamp format with GMT offset, the name of the author, and the email address for the author, as configured in Git.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAuthor",
        "getterDocumentation" : "/**<p>Information about the author of the specified commit. Information includes the date in timestamp format with GMT offset, the name of the author, and the email address for the author, as configured in Git.</p>\n@return Information about the author of the specified commit. Information includes the date in timestamp format with GMT offset, the name of the author, and the email address for the author, as configured in Git.*/",
        "getterMethodName" : "getAuthor",
        "getterModel" : {
          "returnType" : "UserInfo",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "author",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "author",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Author",
        "setterDocumentation" : "/**<p>Information about the author of the specified commit. Information includes the date in timestamp format with GMT offset, the name of the author, and the email address for the author, as configured in Git.</p>\n@param author Information about the author of the specified commit. Information includes the date in timestamp format with GMT offset, the name of the author, and the email address for the author, as configured in Git.*/",
        "setterMethodName" : "setAuthor",
        "setterModel" : {
          "variableDeclarationType" : "UserInfo",
          "variableName" : "author",
          "variableType" : "UserInfo",
          "documentation" : "",
          "simpleType" : "UserInfo",
          "variableSetterType" : "UserInfo"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the author of the specified commit. Information includes the date in timestamp format with GMT offset, the name of the author, and the email address for the author, as configured in Git.</p>\n@param author Information about the author of the specified commit. Information includes the date in timestamp format with GMT offset, the name of the author, and the email address for the author, as configured in Git.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "UserInfo",
          "variableName" : "author",
          "variableType" : "UserInfo",
          "documentation" : "<p>Information about the author of the specified commit. Information includes the date in timestamp format with GMT offset, the name of the author, and the email address for the author, as configured in Git.</p>",
          "simpleType" : "UserInfo",
          "variableSetterType" : "UserInfo"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "committer",
        "c2jShape" : "UserInfo",
        "deprecated" : false,
        "documentation" : "<p>Information about the person who committed the specified commit, also known as the committer. Information includes the date in timestamp format with GMT offset, the name of the committer, and the email address for the committer, as configured in Git.</p> <p>For more information about the difference between an author and a committer in Git, see <a href=\"http://git-scm.com/book/ch2-3.html\">Viewing the Commit History</a> in Pro Git by Scott Chacon and Ben Straub.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the person who committed the specified commit, also known as the committer. Information includes the date in timestamp format with GMT offset, the name of the committer, and the email address for the committer, as configured in Git.</p> <p>For more information about the difference between an author and a committer in Git, see <a href=\"http://git-scm.com/book/ch2-3.html\">Viewing the Commit History</a> in Pro Git by Scott Chacon and Ben Straub.</p>\n@param committer Information about the person who committed the specified commit, also known as the committer. Information includes the date in timestamp format with GMT offset, the name of the committer, and the email address for the committer, as configured in Git.</p> <p>For more information about the difference between an author and a committer in Git, see <a href=\"http://git-scm.com/book/ch2-3.html\">Viewing the Commit History</a> in Pro Git by Scott Chacon and Ben Straub.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCommitter",
        "getterDocumentation" : "/**<p>Information about the person who committed the specified commit, also known as the committer. Information includes the date in timestamp format with GMT offset, the name of the committer, and the email address for the committer, as configured in Git.</p> <p>For more information about the difference between an author and a committer in Git, see <a href=\"http://git-scm.com/book/ch2-3.html\">Viewing the Commit History</a> in Pro Git by Scott Chacon and Ben Straub.</p>\n@return Information about the person who committed the specified commit, also known as the committer. Information includes the date in timestamp format with GMT offset, the name of the committer, and the email address for the committer, as configured in Git.</p> <p>For more information about the difference between an author and a committer in Git, see <a href=\"http://git-scm.com/book/ch2-3.html\">Viewing the Commit History</a> in Pro Git by Scott Chacon and Ben Straub.*/",
        "getterMethodName" : "getCommitter",
        "getterModel" : {
          "returnType" : "UserInfo",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "committer",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "committer",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Committer",
        "setterDocumentation" : "/**<p>Information about the person who committed the specified commit, also known as the committer. Information includes the date in timestamp format with GMT offset, the name of the committer, and the email address for the committer, as configured in Git.</p> <p>For more information about the difference between an author and a committer in Git, see <a href=\"http://git-scm.com/book/ch2-3.html\">Viewing the Commit History</a> in Pro Git by Scott Chacon and Ben Straub.</p>\n@param committer Information about the person who committed the specified commit, also known as the committer. Information includes the date in timestamp format with GMT offset, the name of the committer, and the email address for the committer, as configured in Git.</p> <p>For more information about the difference between an author and a committer in Git, see <a href=\"http://git-scm.com/book/ch2-3.html\">Viewing the Commit History</a> in Pro Git by Scott Chacon and Ben Straub.*/",
        "setterMethodName" : "setCommitter",
        "setterModel" : {
          "variableDeclarationType" : "UserInfo",
          "variableName" : "committer",
          "variableType" : "UserInfo",
          "documentation" : "",
          "simpleType" : "UserInfo",
          "variableSetterType" : "UserInfo"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the person who committed the specified commit, also known as the committer. Information includes the date in timestamp format with GMT offset, the name of the committer, and the email address for the committer, as configured in Git.</p> <p>For more information about the difference between an author and a committer in Git, see <a href=\"http://git-scm.com/book/ch2-3.html\">Viewing the Commit History</a> in Pro Git by Scott Chacon and Ben Straub.</p>\n@param committer Information about the person who committed the specified commit, also known as the committer. Information includes the date in timestamp format with GMT offset, the name of the committer, and the email address for the committer, as configured in Git.</p> <p>For more information about the difference between an author and a committer in Git, see <a href=\"http://git-scm.com/book/ch2-3.html\">Viewing the Commit History</a> in Pro Git by Scott Chacon and Ben Straub.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "UserInfo",
          "variableName" : "committer",
          "variableType" : "UserInfo",
          "documentation" : "<p>Information about the person who committed the specified commit, also known as the committer. Information includes the date in timestamp format with GMT offset, the name of the committer, and the email address for the committer, as configured in Git.</p> <p>For more information about the difference between an author and a committer in Git, see <a href=\"http://git-scm.com/book/ch2-3.html\">Viewing the Commit History</a> in Pro Git by Scott Chacon and Ben Straub.</p>",
          "simpleType" : "UserInfo",
          "variableSetterType" : "UserInfo"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "additionalData",
        "c2jShape" : "AdditionalData",
        "deprecated" : false,
        "documentation" : "<p>Any additional data associated with the specified commit.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Any additional data associated with the specified commit.</p>\n@param additionalData Any additional data associated with the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAdditionalData",
        "getterDocumentation" : "/**<p>Any additional data associated with the specified commit.</p>\n@return Any additional data associated with the specified commit.*/",
        "getterMethodName" : "getAdditionalData",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "additionalData",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "additionalData",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "AdditionalData",
        "setterDocumentation" : "/**<p>Any additional data associated with the specified commit.</p>\n@param additionalData Any additional data associated with the specified commit.*/",
        "setterMethodName" : "setAdditionalData",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "additionalData",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Any additional data associated with the specified commit.</p>\n@param additionalData Any additional data associated with the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "additionalData",
          "variableType" : "String",
          "documentation" : "<p>Any additional data associated with the specified commit.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AdditionalData" : {
          "c2jName" : "additionalData",
          "c2jShape" : "AdditionalData",
          "deprecated" : false,
          "documentation" : "<p>Any additional data associated with the specified commit.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Any additional data associated with the specified commit.</p>\n@param additionalData Any additional data associated with the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAdditionalData",
          "getterDocumentation" : "/**<p>Any additional data associated with the specified commit.</p>\n@return Any additional data associated with the specified commit.*/",
          "getterMethodName" : "getAdditionalData",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "additionalData",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "additionalData",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "AdditionalData",
          "setterDocumentation" : "/**<p>Any additional data associated with the specified commit.</p>\n@param additionalData Any additional data associated with the specified commit.*/",
          "setterMethodName" : "setAdditionalData",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "additionalData",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Any additional data associated with the specified commit.</p>\n@param additionalData Any additional data associated with the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "additionalData",
            "variableType" : "String",
            "documentation" : "<p>Any additional data associated with the specified commit.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Author" : {
          "c2jName" : "author",
          "c2jShape" : "UserInfo",
          "deprecated" : false,
          "documentation" : "<p>Information about the author of the specified commit. Information includes the date in timestamp format with GMT offset, the name of the author, and the email address for the author, as configured in Git.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the author of the specified commit. Information includes the date in timestamp format with GMT offset, the name of the author, and the email address for the author, as configured in Git.</p>\n@param author Information about the author of the specified commit. Information includes the date in timestamp format with GMT offset, the name of the author, and the email address for the author, as configured in Git.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAuthor",
          "getterDocumentation" : "/**<p>Information about the author of the specified commit. Information includes the date in timestamp format with GMT offset, the name of the author, and the email address for the author, as configured in Git.</p>\n@return Information about the author of the specified commit. Information includes the date in timestamp format with GMT offset, the name of the author, and the email address for the author, as configured in Git.*/",
          "getterMethodName" : "getAuthor",
          "getterModel" : {
            "returnType" : "UserInfo",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "author",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "author",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Author",
          "setterDocumentation" : "/**<p>Information about the author of the specified commit. Information includes the date in timestamp format with GMT offset, the name of the author, and the email address for the author, as configured in Git.</p>\n@param author Information about the author of the specified commit. Information includes the date in timestamp format with GMT offset, the name of the author, and the email address for the author, as configured in Git.*/",
          "setterMethodName" : "setAuthor",
          "setterModel" : {
            "variableDeclarationType" : "UserInfo",
            "variableName" : "author",
            "variableType" : "UserInfo",
            "documentation" : "",
            "simpleType" : "UserInfo",
            "variableSetterType" : "UserInfo"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the author of the specified commit. Information includes the date in timestamp format with GMT offset, the name of the author, and the email address for the author, as configured in Git.</p>\n@param author Information about the author of the specified commit. Information includes the date in timestamp format with GMT offset, the name of the author, and the email address for the author, as configured in Git.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "UserInfo",
            "variableName" : "author",
            "variableType" : "UserInfo",
            "documentation" : "<p>Information about the author of the specified commit. Information includes the date in timestamp format with GMT offset, the name of the author, and the email address for the author, as configured in Git.</p>",
            "simpleType" : "UserInfo",
            "variableSetterType" : "UserInfo"
          },
          "xmlNameSpaceUri" : null
        },
        "Committer" : {
          "c2jName" : "committer",
          "c2jShape" : "UserInfo",
          "deprecated" : false,
          "documentation" : "<p>Information about the person who committed the specified commit, also known as the committer. Information includes the date in timestamp format with GMT offset, the name of the committer, and the email address for the committer, as configured in Git.</p> <p>For more information about the difference between an author and a committer in Git, see <a href=\"http://git-scm.com/book/ch2-3.html\">Viewing the Commit History</a> in Pro Git by Scott Chacon and Ben Straub.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the person who committed the specified commit, also known as the committer. Information includes the date in timestamp format with GMT offset, the name of the committer, and the email address for the committer, as configured in Git.</p> <p>For more information about the difference between an author and a committer in Git, see <a href=\"http://git-scm.com/book/ch2-3.html\">Viewing the Commit History</a> in Pro Git by Scott Chacon and Ben Straub.</p>\n@param committer Information about the person who committed the specified commit, also known as the committer. Information includes the date in timestamp format with GMT offset, the name of the committer, and the email address for the committer, as configured in Git.</p> <p>For more information about the difference between an author and a committer in Git, see <a href=\"http://git-scm.com/book/ch2-3.html\">Viewing the Commit History</a> in Pro Git by Scott Chacon and Ben Straub.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCommitter",
          "getterDocumentation" : "/**<p>Information about the person who committed the specified commit, also known as the committer. Information includes the date in timestamp format with GMT offset, the name of the committer, and the email address for the committer, as configured in Git.</p> <p>For more information about the difference between an author and a committer in Git, see <a href=\"http://git-scm.com/book/ch2-3.html\">Viewing the Commit History</a> in Pro Git by Scott Chacon and Ben Straub.</p>\n@return Information about the person who committed the specified commit, also known as the committer. Information includes the date in timestamp format with GMT offset, the name of the committer, and the email address for the committer, as configured in Git.</p> <p>For more information about the difference between an author and a committer in Git, see <a href=\"http://git-scm.com/book/ch2-3.html\">Viewing the Commit History</a> in Pro Git by Scott Chacon and Ben Straub.*/",
          "getterMethodName" : "getCommitter",
          "getterModel" : {
            "returnType" : "UserInfo",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "committer",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "committer",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Committer",
          "setterDocumentation" : "/**<p>Information about the person who committed the specified commit, also known as the committer. Information includes the date in timestamp format with GMT offset, the name of the committer, and the email address for the committer, as configured in Git.</p> <p>For more information about the difference between an author and a committer in Git, see <a href=\"http://git-scm.com/book/ch2-3.html\">Viewing the Commit History</a> in Pro Git by Scott Chacon and Ben Straub.</p>\n@param committer Information about the person who committed the specified commit, also known as the committer. Information includes the date in timestamp format with GMT offset, the name of the committer, and the email address for the committer, as configured in Git.</p> <p>For more information about the difference between an author and a committer in Git, see <a href=\"http://git-scm.com/book/ch2-3.html\">Viewing the Commit History</a> in Pro Git by Scott Chacon and Ben Straub.*/",
          "setterMethodName" : "setCommitter",
          "setterModel" : {
            "variableDeclarationType" : "UserInfo",
            "variableName" : "committer",
            "variableType" : "UserInfo",
            "documentation" : "",
            "simpleType" : "UserInfo",
            "variableSetterType" : "UserInfo"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the person who committed the specified commit, also known as the committer. Information includes the date in timestamp format with GMT offset, the name of the committer, and the email address for the committer, as configured in Git.</p> <p>For more information about the difference between an author and a committer in Git, see <a href=\"http://git-scm.com/book/ch2-3.html\">Viewing the Commit History</a> in Pro Git by Scott Chacon and Ben Straub.</p>\n@param committer Information about the person who committed the specified commit, also known as the committer. Information includes the date in timestamp format with GMT offset, the name of the committer, and the email address for the committer, as configured in Git.</p> <p>For more information about the difference between an author and a committer in Git, see <a href=\"http://git-scm.com/book/ch2-3.html\">Viewing the Commit History</a> in Pro Git by Scott Chacon and Ben Straub.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "UserInfo",
            "variableName" : "committer",
            "variableType" : "UserInfo",
            "documentation" : "<p>Information about the person who committed the specified commit, also known as the committer. Information includes the date in timestamp format with GMT offset, the name of the committer, and the email address for the committer, as configured in Git.</p> <p>For more information about the difference between an author and a committer in Git, see <a href=\"http://git-scm.com/book/ch2-3.html\">Viewing the Commit History</a> in Pro Git by Scott Chacon and Ben Straub.</p>",
            "simpleType" : "UserInfo",
            "variableSetterType" : "UserInfo"
          },
          "xmlNameSpaceUri" : null
        },
        "Message" : {
          "c2jName" : "message",
          "c2jShape" : "Message",
          "deprecated" : false,
          "documentation" : "<p>The commit message associated with the specified commit.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The commit message associated with the specified commit.</p>\n@param message The commit message associated with the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMessage",
          "getterDocumentation" : "/**<p>The commit message associated with the specified commit.</p>\n@return The commit message associated with the specified commit.*/",
          "getterMethodName" : "getMessage",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "message",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "message",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Message",
          "setterDocumentation" : "/**<p>The commit message associated with the specified commit.</p>\n@param message The commit message associated with the specified commit.*/",
          "setterMethodName" : "setMessage",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "message",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The commit message associated with the specified commit.</p>\n@param message The commit message associated with the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "message",
            "variableType" : "String",
            "documentation" : "<p>The commit message associated with the specified commit.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Parents" : {
          "c2jName" : "parents",
          "c2jShape" : "ParentList",
          "deprecated" : false,
          "documentation" : "<p>The parent list for the specified commit.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The parent list for the specified commit.</p>\n@param parents The parent list for the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withParents",
          "getterDocumentation" : "/**<p>The parent list for the specified commit.</p>\n@return The parent list for the specified commit.*/",
          "getterMethodName" : "getParents",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "parents",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "parents",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ObjectId",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Parents",
          "setterDocumentation" : "/**<p>The parent list for the specified commit.</p>\n@param parents The parent list for the specified commit.*/",
          "setterMethodName" : "setParents",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "parents",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The parent list for the specified commit.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setParents(java.util.Collection)} or {@link #withParents(java.util.Collection)} if you want to override the existing values.</p>\n@param parents The parent list for the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "parents",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>The parent list for the specified commit.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        },
        "TreeId" : {
          "c2jName" : "treeId",
          "c2jShape" : "ObjectId",
          "deprecated" : false,
          "documentation" : "<p>Tree information for the specified commit.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Tree information for the specified commit.</p>\n@param treeId Tree information for the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTreeId",
          "getterDocumentation" : "/**<p>Tree information for the specified commit.</p>\n@return Tree information for the specified commit.*/",
          "getterMethodName" : "getTreeId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "treeId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "treeId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TreeId",
          "setterDocumentation" : "/**<p>Tree information for the specified commit.</p>\n@param treeId Tree information for the specified commit.*/",
          "setterMethodName" : "setTreeId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "treeId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Tree information for the specified commit.</p>\n@param treeId Tree information for the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "treeId",
            "variableType" : "String",
            "documentation" : "<p>Tree information for the specified commit.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Commit",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "Commit",
        "variableName" : "commit",
        "variableType" : "Commit",
        "documentation" : null,
        "simpleType" : "Commit",
        "variableSetterType" : "Commit"
      },
      "wrapper" : false
    },
    "CommitDoesNotExistException" : {
      "c2jName" : "CommitDoesNotExistException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified commit does not exist or no commit was specified, and the specified repository has no default branch.</p>",
      "enums" : null,
      "errorCode" : "CommitDoesNotExistException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CommitDoesNotExistException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "CommitDoesNotExistException",
        "variableName" : "commitDoesNotExistException",
        "variableType" : "CommitDoesNotExistException",
        "documentation" : null,
        "simpleType" : "CommitDoesNotExistException",
        "variableSetterType" : "CommitDoesNotExistException"
      },
      "wrapper" : false
    },
    "CommitIdDoesNotExistException" : {
      "c2jName" : "CommitIdDoesNotExistException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified commit ID does not exist.</p>",
      "enums" : null,
      "errorCode" : "CommitIdDoesNotExistException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CommitIdDoesNotExistException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "CommitIdDoesNotExistException",
        "variableName" : "commitIdDoesNotExistException",
        "variableType" : "CommitIdDoesNotExistException",
        "documentation" : null,
        "simpleType" : "CommitIdDoesNotExistException",
        "variableSetterType" : "CommitIdDoesNotExistException"
      },
      "wrapper" : false
    },
    "CommitIdRequiredException" : {
      "c2jName" : "CommitIdRequiredException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A commit ID was not specified.</p>",
      "enums" : null,
      "errorCode" : "CommitIdRequiredException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CommitIdRequiredException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "CommitIdRequiredException",
        "variableName" : "commitIdRequiredException",
        "variableType" : "CommitIdRequiredException",
        "documentation" : null,
        "simpleType" : "CommitIdRequiredException",
        "variableSetterType" : "CommitIdRequiredException"
      },
      "wrapper" : false
    },
    "CommitRequiredException" : {
      "c2jName" : "CommitRequiredException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A commit was not specified.</p>",
      "enums" : null,
      "errorCode" : "CommitRequiredException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CommitRequiredException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "CommitRequiredException",
        "variableName" : "commitRequiredException",
        "variableType" : "CommitRequiredException",
        "documentation" : null,
        "simpleType" : "CommitRequiredException",
        "variableSetterType" : "CommitRequiredException"
      },
      "wrapper" : false
    },
    "CreateBranchRequest" : {
      "c2jName" : "CreateBranchInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the input of a create branch operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "CreateBranch",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.CreateBranch",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository in which you want to create the new branch.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository in which you want to create the new branch.</p>\n@param repositoryName The name of the repository in which you want to create the new branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository in which you want to create the new branch.</p>\n@return The name of the repository in which you want to create the new branch.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository in which you want to create the new branch.</p>\n@param repositoryName The name of the repository in which you want to create the new branch.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository in which you want to create the new branch.</p>\n@param repositoryName The name of the repository in which you want to create the new branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository in which you want to create the new branch.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "branchName",
        "c2jShape" : "BranchName",
        "deprecated" : false,
        "documentation" : "<p>The name of the new branch to create.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the new branch to create.</p>\n@param branchName The name of the new branch to create.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBranchName",
        "getterDocumentation" : "/**<p>The name of the new branch to create.</p>\n@return The name of the new branch to create.*/",
        "getterMethodName" : "getBranchName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "branchName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "branchName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BranchName",
        "setterDocumentation" : "/**<p>The name of the new branch to create.</p>\n@param branchName The name of the new branch to create.*/",
        "setterMethodName" : "setBranchName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "branchName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the new branch to create.</p>\n@param branchName The name of the new branch to create.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "branchName",
          "variableType" : "String",
          "documentation" : "<p>The name of the new branch to create.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "commitId",
        "c2jShape" : "CommitId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the commit to point the new branch to.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the commit to point the new branch to.</p>\n@param commitId The ID of the commit to point the new branch to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCommitId",
        "getterDocumentation" : "/**<p>The ID of the commit to point the new branch to.</p>\n@return The ID of the commit to point the new branch to.*/",
        "getterMethodName" : "getCommitId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "commitId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "commitId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CommitId",
        "setterDocumentation" : "/**<p>The ID of the commit to point the new branch to.</p>\n@param commitId The ID of the commit to point the new branch to.*/",
        "setterMethodName" : "setCommitId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "commitId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the commit to point the new branch to.</p>\n@param commitId The ID of the commit to point the new branch to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "commitId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the commit to point the new branch to.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "BranchName" : {
          "c2jName" : "branchName",
          "c2jShape" : "BranchName",
          "deprecated" : false,
          "documentation" : "<p>The name of the new branch to create.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the new branch to create.</p>\n@param branchName The name of the new branch to create.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBranchName",
          "getterDocumentation" : "/**<p>The name of the new branch to create.</p>\n@return The name of the new branch to create.*/",
          "getterMethodName" : "getBranchName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "branchName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "branchName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BranchName",
          "setterDocumentation" : "/**<p>The name of the new branch to create.</p>\n@param branchName The name of the new branch to create.*/",
          "setterMethodName" : "setBranchName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "branchName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the new branch to create.</p>\n@param branchName The name of the new branch to create.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "branchName",
            "variableType" : "String",
            "documentation" : "<p>The name of the new branch to create.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CommitId" : {
          "c2jName" : "commitId",
          "c2jShape" : "CommitId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the commit to point the new branch to.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the commit to point the new branch to.</p>\n@param commitId The ID of the commit to point the new branch to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCommitId",
          "getterDocumentation" : "/**<p>The ID of the commit to point the new branch to.</p>\n@return The ID of the commit to point the new branch to.*/",
          "getterMethodName" : "getCommitId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "commitId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "commitId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CommitId",
          "setterDocumentation" : "/**<p>The ID of the commit to point the new branch to.</p>\n@param commitId The ID of the commit to point the new branch to.*/",
          "setterMethodName" : "setCommitId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "commitId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the commit to point the new branch to.</p>\n@param commitId The ID of the commit to point the new branch to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "commitId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the commit to point the new branch to.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository in which you want to create the new branch.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository in which you want to create the new branch.</p>\n@param repositoryName The name of the repository in which you want to create the new branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository in which you want to create the new branch.</p>\n@return The name of the repository in which you want to create the new branch.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository in which you want to create the new branch.</p>\n@param repositoryName The name of the repository in which you want to create the new branch.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository in which you want to create the new branch.</p>\n@param repositoryName The name of the repository in which you want to create the new branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository in which you want to create the new branch.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName", "branchName", "commitId" ],
      "shapeName" : "CreateBranchRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "CreateBranchRequest",
        "variableName" : "createBranchRequest",
        "variableType" : "CreateBranchRequest",
        "documentation" : null,
        "simpleType" : "CreateBranchRequest",
        "variableSetterType" : "CreateBranchRequest"
      },
      "wrapper" : false
    },
    "CreateBranchResult" : {
      "c2jName" : "CreateBranchResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : null,
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CreateBranchResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "CreateBranchResult",
        "variableName" : "createBranchResult",
        "variableType" : "CreateBranchResult",
        "documentation" : null,
        "simpleType" : "CreateBranchResult",
        "variableSetterType" : "CreateBranchResult"
      },
      "wrapper" : false
    },
    "CreateRepositoryRequest" : {
      "c2jName" : "CreateRepositoryInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the input of a create repository operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "CreateRepository",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.CreateRepository",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the new repository to be created.</p> <note> <p>The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide. The suffix \".git\" is prohibited.</p> </note>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the new repository to be created.</p> <note> <p>The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide. The suffix \".git\" is prohibited.</p> </note>\n@param repositoryName The name of the new repository to be created.</p> <note> <p>The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide. The suffix \".git\" is prohibited.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the new repository to be created.</p> <note> <p>The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide. The suffix \".git\" is prohibited.</p> </note>\n@return The name of the new repository to be created.</p> <note> <p>The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide. The suffix \".git\" is prohibited.</p>*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the new repository to be created.</p> <note> <p>The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide. The suffix \".git\" is prohibited.</p> </note>\n@param repositoryName The name of the new repository to be created.</p> <note> <p>The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide. The suffix \".git\" is prohibited.</p>*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the new repository to be created.</p> <note> <p>The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide. The suffix \".git\" is prohibited.</p> </note>\n@param repositoryName The name of the new repository to be created.</p> <note> <p>The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide. The suffix \".git\" is prohibited.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the new repository to be created.</p> <note> <p>The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide. The suffix \".git\" is prohibited.</p> </note>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryDescription",
        "c2jShape" : "RepositoryDescription",
        "deprecated" : false,
        "documentation" : "<p>A comment or description about the new repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p> </note>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A comment or description about the new repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p> </note>\n@param repositoryDescription A comment or description about the new repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryDescription",
        "getterDocumentation" : "/**<p>A comment or description about the new repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p> </note>\n@return A comment or description about the new repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p>*/",
        "getterMethodName" : "getRepositoryDescription",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryDescription",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryDescription",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryDescription",
        "setterDocumentation" : "/**<p>A comment or description about the new repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p> </note>\n@param repositoryDescription A comment or description about the new repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p>*/",
        "setterMethodName" : "setRepositoryDescription",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryDescription",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A comment or description about the new repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p> </note>\n@param repositoryDescription A comment or description about the new repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryDescription",
          "variableType" : "String",
          "documentation" : "<p>A comment or description about the new repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p> </note>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "RepositoryDescription" : {
          "c2jName" : "repositoryDescription",
          "c2jShape" : "RepositoryDescription",
          "deprecated" : false,
          "documentation" : "<p>A comment or description about the new repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p> </note>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A comment or description about the new repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p> </note>\n@param repositoryDescription A comment or description about the new repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryDescription",
          "getterDocumentation" : "/**<p>A comment or description about the new repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p> </note>\n@return A comment or description about the new repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p>*/",
          "getterMethodName" : "getRepositoryDescription",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryDescription",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryDescription",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryDescription",
          "setterDocumentation" : "/**<p>A comment or description about the new repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p> </note>\n@param repositoryDescription A comment or description about the new repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p>*/",
          "setterMethodName" : "setRepositoryDescription",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryDescription",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A comment or description about the new repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p> </note>\n@param repositoryDescription A comment or description about the new repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryDescription",
            "variableType" : "String",
            "documentation" : "<p>A comment or description about the new repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p> </note>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the new repository to be created.</p> <note> <p>The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide. The suffix \".git\" is prohibited.</p> </note>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the new repository to be created.</p> <note> <p>The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide. The suffix \".git\" is prohibited.</p> </note>\n@param repositoryName The name of the new repository to be created.</p> <note> <p>The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide. The suffix \".git\" is prohibited.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the new repository to be created.</p> <note> <p>The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide. The suffix \".git\" is prohibited.</p> </note>\n@return The name of the new repository to be created.</p> <note> <p>The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide. The suffix \".git\" is prohibited.</p>*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the new repository to be created.</p> <note> <p>The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide. The suffix \".git\" is prohibited.</p> </note>\n@param repositoryName The name of the new repository to be created.</p> <note> <p>The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide. The suffix \".git\" is prohibited.</p>*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the new repository to be created.</p> <note> <p>The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide. The suffix \".git\" is prohibited.</p> </note>\n@param repositoryName The name of the new repository to be created.</p> <note> <p>The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide. The suffix \".git\" is prohibited.</p>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the new repository to be created.</p> <note> <p>The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide. The suffix \".git\" is prohibited.</p> </note>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName" ],
      "shapeName" : "CreateRepositoryRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "CreateRepositoryRequest",
        "variableName" : "createRepositoryRequest",
        "variableType" : "CreateRepositoryRequest",
        "documentation" : null,
        "simpleType" : "CreateRepositoryRequest",
        "variableSetterType" : "CreateRepositoryRequest"
      },
      "wrapper" : false
    },
    "CreateRepositoryResult" : {
      "c2jName" : "CreateRepositoryOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the output of a create repository operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "repositoryMetadata",
        "c2jShape" : "RepositoryMetadata",
        "deprecated" : false,
        "documentation" : "<p>Information about the newly created repository.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the newly created repository.</p>\n@param repositoryMetadata Information about the newly created repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryMetadata",
        "getterDocumentation" : "/**<p>Information about the newly created repository.</p>\n@return Information about the newly created repository.*/",
        "getterMethodName" : "getRepositoryMetadata",
        "getterModel" : {
          "returnType" : "RepositoryMetadata",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryMetadata",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryMetadata",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "RepositoryMetadata",
        "setterDocumentation" : "/**<p>Information about the newly created repository.</p>\n@param repositoryMetadata Information about the newly created repository.*/",
        "setterMethodName" : "setRepositoryMetadata",
        "setterModel" : {
          "variableDeclarationType" : "RepositoryMetadata",
          "variableName" : "repositoryMetadata",
          "variableType" : "RepositoryMetadata",
          "documentation" : "",
          "simpleType" : "RepositoryMetadata",
          "variableSetterType" : "RepositoryMetadata"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the newly created repository.</p>\n@param repositoryMetadata Information about the newly created repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "RepositoryMetadata",
          "variableName" : "repositoryMetadata",
          "variableType" : "RepositoryMetadata",
          "documentation" : "<p>Information about the newly created repository.</p>",
          "simpleType" : "RepositoryMetadata",
          "variableSetterType" : "RepositoryMetadata"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "RepositoryMetadata" : {
          "c2jName" : "repositoryMetadata",
          "c2jShape" : "RepositoryMetadata",
          "deprecated" : false,
          "documentation" : "<p>Information about the newly created repository.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the newly created repository.</p>\n@param repositoryMetadata Information about the newly created repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryMetadata",
          "getterDocumentation" : "/**<p>Information about the newly created repository.</p>\n@return Information about the newly created repository.*/",
          "getterMethodName" : "getRepositoryMetadata",
          "getterModel" : {
            "returnType" : "RepositoryMetadata",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryMetadata",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryMetadata",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "RepositoryMetadata",
          "setterDocumentation" : "/**<p>Information about the newly created repository.</p>\n@param repositoryMetadata Information about the newly created repository.*/",
          "setterMethodName" : "setRepositoryMetadata",
          "setterModel" : {
            "variableDeclarationType" : "RepositoryMetadata",
            "variableName" : "repositoryMetadata",
            "variableType" : "RepositoryMetadata",
            "documentation" : "",
            "simpleType" : "RepositoryMetadata",
            "variableSetterType" : "RepositoryMetadata"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the newly created repository.</p>\n@param repositoryMetadata Information about the newly created repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "RepositoryMetadata",
            "variableName" : "repositoryMetadata",
            "variableType" : "RepositoryMetadata",
            "documentation" : "<p>Information about the newly created repository.</p>",
            "simpleType" : "RepositoryMetadata",
            "variableSetterType" : "RepositoryMetadata"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CreateRepositoryResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "CreateRepositoryResult",
        "variableName" : "createRepositoryResult",
        "variableType" : "CreateRepositoryResult",
        "documentation" : null,
        "simpleType" : "CreateRepositoryResult",
        "variableSetterType" : "CreateRepositoryResult"
      },
      "wrapper" : false
    },
    "DeleteRepositoryRequest" : {
      "c2jName" : "DeleteRepositoryInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the input of a delete repository operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DeleteRepository",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.DeleteRepository",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository to delete.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository to delete.</p>\n@param repositoryName The name of the repository to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository to delete.</p>\n@return The name of the repository to delete.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository to delete.</p>\n@param repositoryName The name of the repository to delete.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository to delete.</p>\n@param repositoryName The name of the repository to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository to delete.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository to delete.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository to delete.</p>\n@param repositoryName The name of the repository to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository to delete.</p>\n@return The name of the repository to delete.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository to delete.</p>\n@param repositoryName The name of the repository to delete.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository to delete.</p>\n@param repositoryName The name of the repository to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository to delete.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName" ],
      "shapeName" : "DeleteRepositoryRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "DeleteRepositoryRequest",
        "variableName" : "deleteRepositoryRequest",
        "variableType" : "DeleteRepositoryRequest",
        "documentation" : null,
        "simpleType" : "DeleteRepositoryRequest",
        "variableSetterType" : "DeleteRepositoryRequest"
      },
      "wrapper" : false
    },
    "DeleteRepositoryResult" : {
      "c2jName" : "DeleteRepositoryOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the output of a delete repository operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "repositoryId",
        "c2jShape" : "RepositoryId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the repository that was deleted.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the repository that was deleted.</p>\n@param repositoryId The ID of the repository that was deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryId",
        "getterDocumentation" : "/**<p>The ID of the repository that was deleted.</p>\n@return The ID of the repository that was deleted.*/",
        "getterMethodName" : "getRepositoryId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryId",
        "setterDocumentation" : "/**<p>The ID of the repository that was deleted.</p>\n@param repositoryId The ID of the repository that was deleted.*/",
        "setterMethodName" : "setRepositoryId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the repository that was deleted.</p>\n@param repositoryId The ID of the repository that was deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the repository that was deleted.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "RepositoryId" : {
          "c2jName" : "repositoryId",
          "c2jShape" : "RepositoryId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the repository that was deleted.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the repository that was deleted.</p>\n@param repositoryId The ID of the repository that was deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryId",
          "getterDocumentation" : "/**<p>The ID of the repository that was deleted.</p>\n@return The ID of the repository that was deleted.*/",
          "getterMethodName" : "getRepositoryId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryId",
          "setterDocumentation" : "/**<p>The ID of the repository that was deleted.</p>\n@param repositoryId The ID of the repository that was deleted.*/",
          "setterMethodName" : "setRepositoryId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the repository that was deleted.</p>\n@param repositoryId The ID of the repository that was deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the repository that was deleted.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DeleteRepositoryResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "DeleteRepositoryResult",
        "variableName" : "deleteRepositoryResult",
        "variableType" : "DeleteRepositoryResult",
        "documentation" : null,
        "simpleType" : "DeleteRepositoryResult",
        "variableSetterType" : "DeleteRepositoryResult"
      },
      "wrapper" : false
    },
    "Difference" : {
      "c2jName" : "Difference",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Returns information about a set of differences for a commit specifier.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "beforeBlob",
        "c2jShape" : "BlobMetadata",
        "deprecated" : false,
        "documentation" : "<p>Information about a <code>beforeBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about a <code>beforeBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>\n@param beforeBlob Information about a <code>beforeBlob</code> data type object, including the ID, the file mode permission code, and the path.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBeforeBlob",
        "getterDocumentation" : "/**<p>Information about a <code>beforeBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>\n@return Information about a <code>beforeBlob</code> data type object, including the ID, the file mode permission code, and the path.*/",
        "getterMethodName" : "getBeforeBlob",
        "getterModel" : {
          "returnType" : "BlobMetadata",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "beforeBlob",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "beforeBlob",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "BeforeBlob",
        "setterDocumentation" : "/**<p>Information about a <code>beforeBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>\n@param beforeBlob Information about a <code>beforeBlob</code> data type object, including the ID, the file mode permission code, and the path.*/",
        "setterMethodName" : "setBeforeBlob",
        "setterModel" : {
          "variableDeclarationType" : "BlobMetadata",
          "variableName" : "beforeBlob",
          "variableType" : "BlobMetadata",
          "documentation" : "",
          "simpleType" : "BlobMetadata",
          "variableSetterType" : "BlobMetadata"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about a <code>beforeBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>\n@param beforeBlob Information about a <code>beforeBlob</code> data type object, including the ID, the file mode permission code, and the path.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "BlobMetadata",
          "variableName" : "beforeBlob",
          "variableType" : "BlobMetadata",
          "documentation" : "<p>Information about a <code>beforeBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>",
          "simpleType" : "BlobMetadata",
          "variableSetterType" : "BlobMetadata"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "afterBlob",
        "c2jShape" : "BlobMetadata",
        "deprecated" : false,
        "documentation" : "<p>Information about an <code>afterBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about an <code>afterBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>\n@param afterBlob Information about an <code>afterBlob</code> data type object, including the ID, the file mode permission code, and the path.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAfterBlob",
        "getterDocumentation" : "/**<p>Information about an <code>afterBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>\n@return Information about an <code>afterBlob</code> data type object, including the ID, the file mode permission code, and the path.*/",
        "getterMethodName" : "getAfterBlob",
        "getterModel" : {
          "returnType" : "BlobMetadata",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "afterBlob",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "afterBlob",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "AfterBlob",
        "setterDocumentation" : "/**<p>Information about an <code>afterBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>\n@param afterBlob Information about an <code>afterBlob</code> data type object, including the ID, the file mode permission code, and the path.*/",
        "setterMethodName" : "setAfterBlob",
        "setterModel" : {
          "variableDeclarationType" : "BlobMetadata",
          "variableName" : "afterBlob",
          "variableType" : "BlobMetadata",
          "documentation" : "",
          "simpleType" : "BlobMetadata",
          "variableSetterType" : "BlobMetadata"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about an <code>afterBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>\n@param afterBlob Information about an <code>afterBlob</code> data type object, including the ID, the file mode permission code, and the path.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "BlobMetadata",
          "variableName" : "afterBlob",
          "variableType" : "BlobMetadata",
          "documentation" : "<p>Information about an <code>afterBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>",
          "simpleType" : "BlobMetadata",
          "variableSetterType" : "BlobMetadata"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "changeType",
        "c2jShape" : "ChangeTypeEnum",
        "deprecated" : false,
        "documentation" : "<p>Whether the change type of the difference is an addition (A), deletion (D), or modification (M).</p>",
        "enumType" : "ChangeTypeEnum",
        "fluentSetterDocumentation" : "/**<p>Whether the change type of the difference is an addition (A), deletion (D), or modification (M).</p>\n@param changeType Whether the change type of the difference is an addition (A), deletion (D), or modification (M).\n@return Returns a reference to this object so that method calls can be chained together.\n@see ChangeTypeEnum*/",
        "fluentSetterMethodName" : "withChangeType",
        "getterDocumentation" : "/**<p>Whether the change type of the difference is an addition (A), deletion (D), or modification (M).</p>\n@return Whether the change type of the difference is an addition (A), deletion (D), or modification (M).\n@see ChangeTypeEnum*/",
        "getterMethodName" : "getChangeType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "changeType",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "changeType",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ChangeType",
        "setterDocumentation" : "/**<p>Whether the change type of the difference is an addition (A), deletion (D), or modification (M).</p>\n@param changeType Whether the change type of the difference is an addition (A), deletion (D), or modification (M).\n@see ChangeTypeEnum*/",
        "setterMethodName" : "setChangeType",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "changeType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Whether the change type of the difference is an addition (A), deletion (D), or modification (M).</p>\n@param changeType Whether the change type of the difference is an addition (A), deletion (D), or modification (M).\n@return Returns a reference to this object so that method calls can be chained together.\n@see ChangeTypeEnum*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "changeType",
          "variableType" : "String",
          "documentation" : "<p>Whether the change type of the difference is an addition (A), deletion (D), or modification (M).</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AfterBlob" : {
          "c2jName" : "afterBlob",
          "c2jShape" : "BlobMetadata",
          "deprecated" : false,
          "documentation" : "<p>Information about an <code>afterBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about an <code>afterBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>\n@param afterBlob Information about an <code>afterBlob</code> data type object, including the ID, the file mode permission code, and the path.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAfterBlob",
          "getterDocumentation" : "/**<p>Information about an <code>afterBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>\n@return Information about an <code>afterBlob</code> data type object, including the ID, the file mode permission code, and the path.*/",
          "getterMethodName" : "getAfterBlob",
          "getterModel" : {
            "returnType" : "BlobMetadata",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "afterBlob",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "afterBlob",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "AfterBlob",
          "setterDocumentation" : "/**<p>Information about an <code>afterBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>\n@param afterBlob Information about an <code>afterBlob</code> data type object, including the ID, the file mode permission code, and the path.*/",
          "setterMethodName" : "setAfterBlob",
          "setterModel" : {
            "variableDeclarationType" : "BlobMetadata",
            "variableName" : "afterBlob",
            "variableType" : "BlobMetadata",
            "documentation" : "",
            "simpleType" : "BlobMetadata",
            "variableSetterType" : "BlobMetadata"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about an <code>afterBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>\n@param afterBlob Information about an <code>afterBlob</code> data type object, including the ID, the file mode permission code, and the path.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "BlobMetadata",
            "variableName" : "afterBlob",
            "variableType" : "BlobMetadata",
            "documentation" : "<p>Information about an <code>afterBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>",
            "simpleType" : "BlobMetadata",
            "variableSetterType" : "BlobMetadata"
          },
          "xmlNameSpaceUri" : null
        },
        "BeforeBlob" : {
          "c2jName" : "beforeBlob",
          "c2jShape" : "BlobMetadata",
          "deprecated" : false,
          "documentation" : "<p>Information about a <code>beforeBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about a <code>beforeBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>\n@param beforeBlob Information about a <code>beforeBlob</code> data type object, including the ID, the file mode permission code, and the path.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBeforeBlob",
          "getterDocumentation" : "/**<p>Information about a <code>beforeBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>\n@return Information about a <code>beforeBlob</code> data type object, including the ID, the file mode permission code, and the path.*/",
          "getterMethodName" : "getBeforeBlob",
          "getterModel" : {
            "returnType" : "BlobMetadata",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "beforeBlob",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "beforeBlob",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "BeforeBlob",
          "setterDocumentation" : "/**<p>Information about a <code>beforeBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>\n@param beforeBlob Information about a <code>beforeBlob</code> data type object, including the ID, the file mode permission code, and the path.*/",
          "setterMethodName" : "setBeforeBlob",
          "setterModel" : {
            "variableDeclarationType" : "BlobMetadata",
            "variableName" : "beforeBlob",
            "variableType" : "BlobMetadata",
            "documentation" : "",
            "simpleType" : "BlobMetadata",
            "variableSetterType" : "BlobMetadata"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about a <code>beforeBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>\n@param beforeBlob Information about a <code>beforeBlob</code> data type object, including the ID, the file mode permission code, and the path.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "BlobMetadata",
            "variableName" : "beforeBlob",
            "variableType" : "BlobMetadata",
            "documentation" : "<p>Information about a <code>beforeBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>",
            "simpleType" : "BlobMetadata",
            "variableSetterType" : "BlobMetadata"
          },
          "xmlNameSpaceUri" : null
        },
        "ChangeType" : {
          "c2jName" : "changeType",
          "c2jShape" : "ChangeTypeEnum",
          "deprecated" : false,
          "documentation" : "<p>Whether the change type of the difference is an addition (A), deletion (D), or modification (M).</p>",
          "enumType" : "ChangeTypeEnum",
          "fluentSetterDocumentation" : "/**<p>Whether the change type of the difference is an addition (A), deletion (D), or modification (M).</p>\n@param changeType Whether the change type of the difference is an addition (A), deletion (D), or modification (M).\n@return Returns a reference to this object so that method calls can be chained together.\n@see ChangeTypeEnum*/",
          "fluentSetterMethodName" : "withChangeType",
          "getterDocumentation" : "/**<p>Whether the change type of the difference is an addition (A), deletion (D), or modification (M).</p>\n@return Whether the change type of the difference is an addition (A), deletion (D), or modification (M).\n@see ChangeTypeEnum*/",
          "getterMethodName" : "getChangeType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "changeType",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "changeType",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ChangeType",
          "setterDocumentation" : "/**<p>Whether the change type of the difference is an addition (A), deletion (D), or modification (M).</p>\n@param changeType Whether the change type of the difference is an addition (A), deletion (D), or modification (M).\n@see ChangeTypeEnum*/",
          "setterMethodName" : "setChangeType",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "changeType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Whether the change type of the difference is an addition (A), deletion (D), or modification (M).</p>\n@param changeType Whether the change type of the difference is an addition (A), deletion (D), or modification (M).\n@return Returns a reference to this object so that method calls can be chained together.\n@see ChangeTypeEnum*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "changeType",
            "variableType" : "String",
            "documentation" : "<p>Whether the change type of the difference is an addition (A), deletion (D), or modification (M).</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Difference",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "Difference",
        "variableName" : "difference",
        "variableType" : "Difference",
        "documentation" : null,
        "simpleType" : "Difference",
        "variableSetterType" : "Difference"
      },
      "wrapper" : false
    },
    "EncryptionIntegrityChecksFailedException" : {
      "c2jName" : "EncryptionIntegrityChecksFailedException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>An encryption integrity check failed.</p>",
      "enums" : null,
      "errorCode" : "EncryptionIntegrityChecksFailedException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "EncryptionIntegrityChecksFailedException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "EncryptionIntegrityChecksFailedException",
        "variableName" : "encryptionIntegrityChecksFailedException",
        "variableType" : "EncryptionIntegrityChecksFailedException",
        "documentation" : null,
        "simpleType" : "EncryptionIntegrityChecksFailedException",
        "variableSetterType" : "EncryptionIntegrityChecksFailedException"
      },
      "wrapper" : false
    },
    "EncryptionKeyAccessDeniedException" : {
      "c2jName" : "EncryptionKeyAccessDeniedException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>An encryption key could not be accessed.</p>",
      "enums" : null,
      "errorCode" : "EncryptionKeyAccessDeniedException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "EncryptionKeyAccessDeniedException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "EncryptionKeyAccessDeniedException",
        "variableName" : "encryptionKeyAccessDeniedException",
        "variableType" : "EncryptionKeyAccessDeniedException",
        "documentation" : null,
        "simpleType" : "EncryptionKeyAccessDeniedException",
        "variableSetterType" : "EncryptionKeyAccessDeniedException"
      },
      "wrapper" : false
    },
    "EncryptionKeyDisabledException" : {
      "c2jName" : "EncryptionKeyDisabledException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The encryption key is disabled.</p>",
      "enums" : null,
      "errorCode" : "EncryptionKeyDisabledException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "EncryptionKeyDisabledException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "EncryptionKeyDisabledException",
        "variableName" : "encryptionKeyDisabledException",
        "variableType" : "EncryptionKeyDisabledException",
        "documentation" : null,
        "simpleType" : "EncryptionKeyDisabledException",
        "variableSetterType" : "EncryptionKeyDisabledException"
      },
      "wrapper" : false
    },
    "EncryptionKeyNotFoundException" : {
      "c2jName" : "EncryptionKeyNotFoundException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>No encryption key was found.</p>",
      "enums" : null,
      "errorCode" : "EncryptionKeyNotFoundException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "EncryptionKeyNotFoundException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "EncryptionKeyNotFoundException",
        "variableName" : "encryptionKeyNotFoundException",
        "variableType" : "EncryptionKeyNotFoundException",
        "documentation" : null,
        "simpleType" : "EncryptionKeyNotFoundException",
        "variableSetterType" : "EncryptionKeyNotFoundException"
      },
      "wrapper" : false
    },
    "EncryptionKeyUnavailableException" : {
      "c2jName" : "EncryptionKeyUnavailableException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The encryption key is not available.</p>",
      "enums" : null,
      "errorCode" : "EncryptionKeyUnavailableException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "EncryptionKeyUnavailableException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "EncryptionKeyUnavailableException",
        "variableName" : "encryptionKeyUnavailableException",
        "variableType" : "EncryptionKeyUnavailableException",
        "documentation" : null,
        "simpleType" : "EncryptionKeyUnavailableException",
        "variableSetterType" : "EncryptionKeyUnavailableException"
      },
      "wrapper" : false
    },
    "FileTooLargeException" : {
      "c2jName" : "FileTooLargeException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified file exceeds the file size limit for AWS CodeCommit. For more information about limits in AWS CodeCommit, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">AWS CodeCommit User Guide</a>.</p>",
      "enums" : null,
      "errorCode" : "FileTooLargeException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "FileTooLargeException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "FileTooLargeException",
        "variableName" : "fileTooLargeException",
        "variableType" : "FileTooLargeException",
        "documentation" : null,
        "simpleType" : "FileTooLargeException",
        "variableSetterType" : "FileTooLargeException"
      },
      "wrapper" : false
    },
    "GetBlobRequest" : {
      "c2jName" : "GetBlobInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the input of a get blob operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetBlob",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.GetBlob",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository that contains the blob.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository that contains the blob.</p>\n@param repositoryName The name of the repository that contains the blob.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository that contains the blob.</p>\n@return The name of the repository that contains the blob.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository that contains the blob.</p>\n@param repositoryName The name of the repository that contains the blob.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository that contains the blob.</p>\n@param repositoryName The name of the repository that contains the blob.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository that contains the blob.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "blobId",
        "c2jShape" : "ObjectId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the blob, which is its SHA-1 pointer.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the blob, which is its SHA-1 pointer.</p>\n@param blobId The ID of the blob, which is its SHA-1 pointer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBlobId",
        "getterDocumentation" : "/**<p>The ID of the blob, which is its SHA-1 pointer.</p>\n@return The ID of the blob, which is its SHA-1 pointer.*/",
        "getterMethodName" : "getBlobId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "blobId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "blobId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BlobId",
        "setterDocumentation" : "/**<p>The ID of the blob, which is its SHA-1 pointer.</p>\n@param blobId The ID of the blob, which is its SHA-1 pointer.*/",
        "setterMethodName" : "setBlobId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "blobId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the blob, which is its SHA-1 pointer.</p>\n@param blobId The ID of the blob, which is its SHA-1 pointer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "blobId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the blob, which is its SHA-1 pointer.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "BlobId" : {
          "c2jName" : "blobId",
          "c2jShape" : "ObjectId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the blob, which is its SHA-1 pointer.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the blob, which is its SHA-1 pointer.</p>\n@param blobId The ID of the blob, which is its SHA-1 pointer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBlobId",
          "getterDocumentation" : "/**<p>The ID of the blob, which is its SHA-1 pointer.</p>\n@return The ID of the blob, which is its SHA-1 pointer.*/",
          "getterMethodName" : "getBlobId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "blobId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "blobId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BlobId",
          "setterDocumentation" : "/**<p>The ID of the blob, which is its SHA-1 pointer.</p>\n@param blobId The ID of the blob, which is its SHA-1 pointer.*/",
          "setterMethodName" : "setBlobId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "blobId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the blob, which is its SHA-1 pointer.</p>\n@param blobId The ID of the blob, which is its SHA-1 pointer.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "blobId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the blob, which is its SHA-1 pointer.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository that contains the blob.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository that contains the blob.</p>\n@param repositoryName The name of the repository that contains the blob.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository that contains the blob.</p>\n@return The name of the repository that contains the blob.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository that contains the blob.</p>\n@param repositoryName The name of the repository that contains the blob.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository that contains the blob.</p>\n@param repositoryName The name of the repository that contains the blob.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository that contains the blob.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName", "blobId" ],
      "shapeName" : "GetBlobRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "GetBlobRequest",
        "variableName" : "getBlobRequest",
        "variableType" : "GetBlobRequest",
        "documentation" : null,
        "simpleType" : "GetBlobRequest",
        "variableSetterType" : "GetBlobRequest"
      },
      "wrapper" : false
    },
    "GetBlobResult" : {
      "c2jName" : "GetBlobOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the output of a get blob operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "content",
        "c2jShape" : "blob",
        "deprecated" : false,
        "documentation" : "<p>The content of the blob, usually a file.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The content of the blob, usually a file.</p><p>\nThe AWS SDK for Java performs a Base64 encoding on this field before sending this request to the AWS service. Users of the SDK should not perform Base64 encoding on this field.\n</p>\n<p>\nWarning: ByteBuffers returned by the SDK are mutable. Changes to the content or position of the byte buffer will be seen by all objects that have a reference to this object. It is recommended to call ByteBuffer.duplicate() or ByteBuffer.asReadOnlyBuffer() before using or reading from the buffer. This behavior will be changed in a future major version of the SDK.\n</p>\n\n@param content The content of the blob, usually a file.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withContent",
        "getterDocumentation" : "/**<p>The content of the blob, usually a file.</p>\n<p>\n{@code ByteBuffer}s are stateful. Calling their {@code get} methods changes their {@code position}. We recommend using {@link java.nio.ByteBuffer#asReadOnlyBuffer()} to create a read-only view of the buffer with an independent {@code position}, and calling {@code get} methods on this rather than directly on the returned {@code ByteBuffer}. Doing so will ensure that anyone else using the {@code ByteBuffer} will not be affected by changes to the {@code position}.\n</p>\n@return The content of the blob, usually a file.*/",
        "getterMethodName" : "getContent",
        "getterModel" : {
          "returnType" : "java.nio.ByteBuffer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "content",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "content",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.nio.ByteBuffer",
        "marshallingType" : "BYTE_BUFFER",
        "name" : "Content",
        "setterDocumentation" : "/**<p>The content of the blob, usually a file.</p><p>\nThe AWS SDK for Java performs a Base64 encoding on this field before sending this request to the AWS service. Users of the SDK should not perform Base64 encoding on this field.\n</p>\n<p>\nWarning: ByteBuffers returned by the SDK are mutable. Changes to the content or position of the byte buffer will be seen by all objects that have a reference to this object. It is recommended to call ByteBuffer.duplicate() or ByteBuffer.asReadOnlyBuffer() before using or reading from the buffer. This behavior will be changed in a future major version of the SDK.\n</p>\n\n@param content The content of the blob, usually a file.*/",
        "setterMethodName" : "setContent",
        "setterModel" : {
          "variableDeclarationType" : "java.nio.ByteBuffer",
          "variableName" : "content",
          "variableType" : "java.nio.ByteBuffer",
          "documentation" : "",
          "simpleType" : "ByteBuffer",
          "variableSetterType" : "java.nio.ByteBuffer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The content of the blob, usually a file.</p>\n@param content The content of the blob, usually a file.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.nio.ByteBuffer",
          "variableName" : "content",
          "variableType" : "java.nio.ByteBuffer",
          "documentation" : "<p>The content of the blob, usually a file.</p>",
          "simpleType" : "ByteBuffer",
          "variableSetterType" : "java.nio.ByteBuffer"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Content" : {
          "c2jName" : "content",
          "c2jShape" : "blob",
          "deprecated" : false,
          "documentation" : "<p>The content of the blob, usually a file.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The content of the blob, usually a file.</p><p>\nThe AWS SDK for Java performs a Base64 encoding on this field before sending this request to the AWS service. Users of the SDK should not perform Base64 encoding on this field.\n</p>\n<p>\nWarning: ByteBuffers returned by the SDK are mutable. Changes to the content or position of the byte buffer will be seen by all objects that have a reference to this object. It is recommended to call ByteBuffer.duplicate() or ByteBuffer.asReadOnlyBuffer() before using or reading from the buffer. This behavior will be changed in a future major version of the SDK.\n</p>\n\n@param content The content of the blob, usually a file.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withContent",
          "getterDocumentation" : "/**<p>The content of the blob, usually a file.</p>\n<p>\n{@code ByteBuffer}s are stateful. Calling their {@code get} methods changes their {@code position}. We recommend using {@link java.nio.ByteBuffer#asReadOnlyBuffer()} to create a read-only view of the buffer with an independent {@code position}, and calling {@code get} methods on this rather than directly on the returned {@code ByteBuffer}. Doing so will ensure that anyone else using the {@code ByteBuffer} will not be affected by changes to the {@code position}.\n</p>\n@return The content of the blob, usually a file.*/",
          "getterMethodName" : "getContent",
          "getterModel" : {
            "returnType" : "java.nio.ByteBuffer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "content",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "content",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.nio.ByteBuffer",
          "marshallingType" : "BYTE_BUFFER",
          "name" : "Content",
          "setterDocumentation" : "/**<p>The content of the blob, usually a file.</p><p>\nThe AWS SDK for Java performs a Base64 encoding on this field before sending this request to the AWS service. Users of the SDK should not perform Base64 encoding on this field.\n</p>\n<p>\nWarning: ByteBuffers returned by the SDK are mutable. Changes to the content or position of the byte buffer will be seen by all objects that have a reference to this object. It is recommended to call ByteBuffer.duplicate() or ByteBuffer.asReadOnlyBuffer() before using or reading from the buffer. This behavior will be changed in a future major version of the SDK.\n</p>\n\n@param content The content of the blob, usually a file.*/",
          "setterMethodName" : "setContent",
          "setterModel" : {
            "variableDeclarationType" : "java.nio.ByteBuffer",
            "variableName" : "content",
            "variableType" : "java.nio.ByteBuffer",
            "documentation" : "",
            "simpleType" : "ByteBuffer",
            "variableSetterType" : "java.nio.ByteBuffer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The content of the blob, usually a file.</p>\n@param content The content of the blob, usually a file.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.nio.ByteBuffer",
            "variableName" : "content",
            "variableType" : "java.nio.ByteBuffer",
            "documentation" : "<p>The content of the blob, usually a file.</p>",
            "simpleType" : "ByteBuffer",
            "variableSetterType" : "java.nio.ByteBuffer"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "content" ],
      "shapeName" : "GetBlobResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "GetBlobResult",
        "variableName" : "getBlobResult",
        "variableType" : "GetBlobResult",
        "documentation" : null,
        "simpleType" : "GetBlobResult",
        "variableSetterType" : "GetBlobResult"
      },
      "wrapper" : false
    },
    "GetBranchRequest" : {
      "c2jName" : "GetBranchInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the input of a get branch operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetBranch",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.GetBranch",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository that contains the branch for which you want to retrieve information.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository that contains the branch for which you want to retrieve information.</p>\n@param repositoryName The name of the repository that contains the branch for which you want to retrieve information.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository that contains the branch for which you want to retrieve information.</p>\n@return The name of the repository that contains the branch for which you want to retrieve information.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository that contains the branch for which you want to retrieve information.</p>\n@param repositoryName The name of the repository that contains the branch for which you want to retrieve information.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository that contains the branch for which you want to retrieve information.</p>\n@param repositoryName The name of the repository that contains the branch for which you want to retrieve information.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository that contains the branch for which you want to retrieve information.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "branchName",
        "c2jShape" : "BranchName",
        "deprecated" : false,
        "documentation" : "<p>The name of the branch for which you want to retrieve information.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the branch for which you want to retrieve information.</p>\n@param branchName The name of the branch for which you want to retrieve information.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBranchName",
        "getterDocumentation" : "/**<p>The name of the branch for which you want to retrieve information.</p>\n@return The name of the branch for which you want to retrieve information.*/",
        "getterMethodName" : "getBranchName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "branchName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "branchName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BranchName",
        "setterDocumentation" : "/**<p>The name of the branch for which you want to retrieve information.</p>\n@param branchName The name of the branch for which you want to retrieve information.*/",
        "setterMethodName" : "setBranchName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "branchName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the branch for which you want to retrieve information.</p>\n@param branchName The name of the branch for which you want to retrieve information.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "branchName",
          "variableType" : "String",
          "documentation" : "<p>The name of the branch for which you want to retrieve information.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "BranchName" : {
          "c2jName" : "branchName",
          "c2jShape" : "BranchName",
          "deprecated" : false,
          "documentation" : "<p>The name of the branch for which you want to retrieve information.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the branch for which you want to retrieve information.</p>\n@param branchName The name of the branch for which you want to retrieve information.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBranchName",
          "getterDocumentation" : "/**<p>The name of the branch for which you want to retrieve information.</p>\n@return The name of the branch for which you want to retrieve information.*/",
          "getterMethodName" : "getBranchName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "branchName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "branchName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BranchName",
          "setterDocumentation" : "/**<p>The name of the branch for which you want to retrieve information.</p>\n@param branchName The name of the branch for which you want to retrieve information.*/",
          "setterMethodName" : "setBranchName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "branchName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the branch for which you want to retrieve information.</p>\n@param branchName The name of the branch for which you want to retrieve information.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "branchName",
            "variableType" : "String",
            "documentation" : "<p>The name of the branch for which you want to retrieve information.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository that contains the branch for which you want to retrieve information.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository that contains the branch for which you want to retrieve information.</p>\n@param repositoryName The name of the repository that contains the branch for which you want to retrieve information.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository that contains the branch for which you want to retrieve information.</p>\n@return The name of the repository that contains the branch for which you want to retrieve information.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository that contains the branch for which you want to retrieve information.</p>\n@param repositoryName The name of the repository that contains the branch for which you want to retrieve information.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository that contains the branch for which you want to retrieve information.</p>\n@param repositoryName The name of the repository that contains the branch for which you want to retrieve information.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository that contains the branch for which you want to retrieve information.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetBranchRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "GetBranchRequest",
        "variableName" : "getBranchRequest",
        "variableType" : "GetBranchRequest",
        "documentation" : null,
        "simpleType" : "GetBranchRequest",
        "variableSetterType" : "GetBranchRequest"
      },
      "wrapper" : false
    },
    "GetBranchResult" : {
      "c2jName" : "GetBranchOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the output of a get branch operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "branch",
        "c2jShape" : "BranchInfo",
        "deprecated" : false,
        "documentation" : "<p>The name of the branch.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the branch.</p>\n@param branch The name of the branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBranch",
        "getterDocumentation" : "/**<p>The name of the branch.</p>\n@return The name of the branch.*/",
        "getterMethodName" : "getBranch",
        "getterModel" : {
          "returnType" : "BranchInfo",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "branch",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "branch",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Branch",
        "setterDocumentation" : "/**<p>The name of the branch.</p>\n@param branch The name of the branch.*/",
        "setterMethodName" : "setBranch",
        "setterModel" : {
          "variableDeclarationType" : "BranchInfo",
          "variableName" : "branch",
          "variableType" : "BranchInfo",
          "documentation" : "",
          "simpleType" : "BranchInfo",
          "variableSetterType" : "BranchInfo"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the branch.</p>\n@param branch The name of the branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "BranchInfo",
          "variableName" : "branch",
          "variableType" : "BranchInfo",
          "documentation" : "<p>The name of the branch.</p>",
          "simpleType" : "BranchInfo",
          "variableSetterType" : "BranchInfo"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Branch" : {
          "c2jName" : "branch",
          "c2jShape" : "BranchInfo",
          "deprecated" : false,
          "documentation" : "<p>The name of the branch.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the branch.</p>\n@param branch The name of the branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBranch",
          "getterDocumentation" : "/**<p>The name of the branch.</p>\n@return The name of the branch.*/",
          "getterMethodName" : "getBranch",
          "getterModel" : {
            "returnType" : "BranchInfo",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "branch",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "branch",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Branch",
          "setterDocumentation" : "/**<p>The name of the branch.</p>\n@param branch The name of the branch.*/",
          "setterMethodName" : "setBranch",
          "setterModel" : {
            "variableDeclarationType" : "BranchInfo",
            "variableName" : "branch",
            "variableType" : "BranchInfo",
            "documentation" : "",
            "simpleType" : "BranchInfo",
            "variableSetterType" : "BranchInfo"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the branch.</p>\n@param branch The name of the branch.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "BranchInfo",
            "variableName" : "branch",
            "variableType" : "BranchInfo",
            "documentation" : "<p>The name of the branch.</p>",
            "simpleType" : "BranchInfo",
            "variableSetterType" : "BranchInfo"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetBranchResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "GetBranchResult",
        "variableName" : "getBranchResult",
        "variableType" : "GetBranchResult",
        "documentation" : null,
        "simpleType" : "GetBranchResult",
        "variableSetterType" : "GetBranchResult"
      },
      "wrapper" : false
    },
    "GetCommitRequest" : {
      "c2jName" : "GetCommitInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the input of a get commit operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetCommit",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.GetCommit",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository to which the commit was made.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository to which the commit was made.</p>\n@param repositoryName The name of the repository to which the commit was made.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository to which the commit was made.</p>\n@return The name of the repository to which the commit was made.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository to which the commit was made.</p>\n@param repositoryName The name of the repository to which the commit was made.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository to which the commit was made.</p>\n@param repositoryName The name of the repository to which the commit was made.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository to which the commit was made.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "commitId",
        "c2jShape" : "ObjectId",
        "deprecated" : false,
        "documentation" : "<p>The commit ID.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The commit ID.</p>\n@param commitId The commit ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCommitId",
        "getterDocumentation" : "/**<p>The commit ID.</p>\n@return The commit ID.*/",
        "getterMethodName" : "getCommitId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "commitId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "commitId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CommitId",
        "setterDocumentation" : "/**<p>The commit ID.</p>\n@param commitId The commit ID.*/",
        "setterMethodName" : "setCommitId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "commitId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The commit ID.</p>\n@param commitId The commit ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "commitId",
          "variableType" : "String",
          "documentation" : "<p>The commit ID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CommitId" : {
          "c2jName" : "commitId",
          "c2jShape" : "ObjectId",
          "deprecated" : false,
          "documentation" : "<p>The commit ID.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The commit ID.</p>\n@param commitId The commit ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCommitId",
          "getterDocumentation" : "/**<p>The commit ID.</p>\n@return The commit ID.*/",
          "getterMethodName" : "getCommitId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "commitId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "commitId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CommitId",
          "setterDocumentation" : "/**<p>The commit ID.</p>\n@param commitId The commit ID.*/",
          "setterMethodName" : "setCommitId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "commitId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The commit ID.</p>\n@param commitId The commit ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "commitId",
            "variableType" : "String",
            "documentation" : "<p>The commit ID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository to which the commit was made.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository to which the commit was made.</p>\n@param repositoryName The name of the repository to which the commit was made.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository to which the commit was made.</p>\n@return The name of the repository to which the commit was made.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository to which the commit was made.</p>\n@param repositoryName The name of the repository to which the commit was made.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository to which the commit was made.</p>\n@param repositoryName The name of the repository to which the commit was made.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository to which the commit was made.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName", "commitId" ],
      "shapeName" : "GetCommitRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "GetCommitRequest",
        "variableName" : "getCommitRequest",
        "variableType" : "GetCommitRequest",
        "documentation" : null,
        "simpleType" : "GetCommitRequest",
        "variableSetterType" : "GetCommitRequest"
      },
      "wrapper" : false
    },
    "GetCommitResult" : {
      "c2jName" : "GetCommitOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the output of a get commit operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "commit",
        "c2jShape" : "Commit",
        "deprecated" : false,
        "documentation" : "<p>A commit data type object that contains information about the specified commit.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A commit data type object that contains information about the specified commit.</p>\n@param commit A commit data type object that contains information about the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCommit",
        "getterDocumentation" : "/**<p>A commit data type object that contains information about the specified commit.</p>\n@return A commit data type object that contains information about the specified commit.*/",
        "getterMethodName" : "getCommit",
        "getterModel" : {
          "returnType" : "Commit",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "commit",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "commit",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Commit",
        "setterDocumentation" : "/**<p>A commit data type object that contains information about the specified commit.</p>\n@param commit A commit data type object that contains information about the specified commit.*/",
        "setterMethodName" : "setCommit",
        "setterModel" : {
          "variableDeclarationType" : "Commit",
          "variableName" : "commit",
          "variableType" : "Commit",
          "documentation" : "",
          "simpleType" : "Commit",
          "variableSetterType" : "Commit"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A commit data type object that contains information about the specified commit.</p>\n@param commit A commit data type object that contains information about the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Commit",
          "variableName" : "commit",
          "variableType" : "Commit",
          "documentation" : "<p>A commit data type object that contains information about the specified commit.</p>",
          "simpleType" : "Commit",
          "variableSetterType" : "Commit"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Commit" : {
          "c2jName" : "commit",
          "c2jShape" : "Commit",
          "deprecated" : false,
          "documentation" : "<p>A commit data type object that contains information about the specified commit.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A commit data type object that contains information about the specified commit.</p>\n@param commit A commit data type object that contains information about the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCommit",
          "getterDocumentation" : "/**<p>A commit data type object that contains information about the specified commit.</p>\n@return A commit data type object that contains information about the specified commit.*/",
          "getterMethodName" : "getCommit",
          "getterModel" : {
            "returnType" : "Commit",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "commit",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "commit",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Commit",
          "setterDocumentation" : "/**<p>A commit data type object that contains information about the specified commit.</p>\n@param commit A commit data type object that contains information about the specified commit.*/",
          "setterMethodName" : "setCommit",
          "setterModel" : {
            "variableDeclarationType" : "Commit",
            "variableName" : "commit",
            "variableType" : "Commit",
            "documentation" : "",
            "simpleType" : "Commit",
            "variableSetterType" : "Commit"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A commit data type object that contains information about the specified commit.</p>\n@param commit A commit data type object that contains information about the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Commit",
            "variableName" : "commit",
            "variableType" : "Commit",
            "documentation" : "<p>A commit data type object that contains information about the specified commit.</p>",
            "simpleType" : "Commit",
            "variableSetterType" : "Commit"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "commit" ],
      "shapeName" : "GetCommitResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "GetCommitResult",
        "variableName" : "getCommitResult",
        "variableType" : "GetCommitResult",
        "documentation" : null,
        "simpleType" : "GetCommitResult",
        "variableSetterType" : "GetCommitResult"
      },
      "wrapper" : false
    },
    "GetDifferencesRequest" : {
      "c2jName" : "GetDifferencesInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetDifferences",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.GetDifferences",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository where you want to get differences.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository where you want to get differences.</p>\n@param repositoryName The name of the repository where you want to get differences.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository where you want to get differences.</p>\n@return The name of the repository where you want to get differences.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository where you want to get differences.</p>\n@param repositoryName The name of the repository where you want to get differences.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository where you want to get differences.</p>\n@param repositoryName The name of the repository where you want to get differences.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository where you want to get differences.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "beforeCommitSpecifier",
        "c2jShape" : "CommitName",
        "deprecated" : false,
        "documentation" : "<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, the full commit ID. Optional. If not specified, all changes prior to the <code>afterCommitSpecifier</code> value will be shown. If you do not use <code>beforeCommitSpecifier</code> in your request, consider limiting the results with <code>maxResults</code>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, the full commit ID. Optional. If not specified, all changes prior to the <code>afterCommitSpecifier</code> value will be shown. If you do not use <code>beforeCommitSpecifier</code> in your request, consider limiting the results with <code>maxResults</code>.</p>\n@param beforeCommitSpecifier The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, the full commit ID. Optional. If not specified, all changes prior to the <code>afterCommitSpecifier</code> value will be shown. If you do not use <code>beforeCommitSpecifier</code> in your request, consider limiting the results with <code>maxResults</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBeforeCommitSpecifier",
        "getterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, the full commit ID. Optional. If not specified, all changes prior to the <code>afterCommitSpecifier</code> value will be shown. If you do not use <code>beforeCommitSpecifier</code> in your request, consider limiting the results with <code>maxResults</code>.</p>\n@return The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, the full commit ID. Optional. If not specified, all changes prior to the <code>afterCommitSpecifier</code> value will be shown. If you do not use <code>beforeCommitSpecifier</code> in your request, consider limiting the results with <code>maxResults</code>.*/",
        "getterMethodName" : "getBeforeCommitSpecifier",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "beforeCommitSpecifier",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "beforeCommitSpecifier",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BeforeCommitSpecifier",
        "setterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, the full commit ID. Optional. If not specified, all changes prior to the <code>afterCommitSpecifier</code> value will be shown. If you do not use <code>beforeCommitSpecifier</code> in your request, consider limiting the results with <code>maxResults</code>.</p>\n@param beforeCommitSpecifier The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, the full commit ID. Optional. If not specified, all changes prior to the <code>afterCommitSpecifier</code> value will be shown. If you do not use <code>beforeCommitSpecifier</code> in your request, consider limiting the results with <code>maxResults</code>.*/",
        "setterMethodName" : "setBeforeCommitSpecifier",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "beforeCommitSpecifier",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, the full commit ID. Optional. If not specified, all changes prior to the <code>afterCommitSpecifier</code> value will be shown. If you do not use <code>beforeCommitSpecifier</code> in your request, consider limiting the results with <code>maxResults</code>.</p>\n@param beforeCommitSpecifier The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, the full commit ID. Optional. If not specified, all changes prior to the <code>afterCommitSpecifier</code> value will be shown. If you do not use <code>beforeCommitSpecifier</code> in your request, consider limiting the results with <code>maxResults</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "beforeCommitSpecifier",
          "variableType" : "String",
          "documentation" : "<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, the full commit ID. Optional. If not specified, all changes prior to the <code>afterCommitSpecifier</code> value will be shown. If you do not use <code>beforeCommitSpecifier</code> in your request, consider limiting the results with <code>maxResults</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "afterCommitSpecifier",
        "c2jShape" : "CommitName",
        "deprecated" : false,
        "documentation" : "<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit.</p>\n@param afterCommitSpecifier The branch, tag, HEAD, or other fully qualified reference used to identify a commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAfterCommitSpecifier",
        "getterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit.</p>\n@return The branch, tag, HEAD, or other fully qualified reference used to identify a commit.*/",
        "getterMethodName" : "getAfterCommitSpecifier",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "afterCommitSpecifier",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "afterCommitSpecifier",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "AfterCommitSpecifier",
        "setterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit.</p>\n@param afterCommitSpecifier The branch, tag, HEAD, or other fully qualified reference used to identify a commit.*/",
        "setterMethodName" : "setAfterCommitSpecifier",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "afterCommitSpecifier",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit.</p>\n@param afterCommitSpecifier The branch, tag, HEAD, or other fully qualified reference used to identify a commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "afterCommitSpecifier",
          "variableType" : "String",
          "documentation" : "<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "beforePath",
        "c2jShape" : "Path",
        "deprecated" : false,
        "documentation" : "<p>The file path in which to check for differences. Limits the results to this path. Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code> and <code>afterPath</code> are not specified, differences will be shown for all paths.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The file path in which to check for differences. Limits the results to this path. Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code> and <code>afterPath</code> are not specified, differences will be shown for all paths.</p>\n@param beforePath The file path in which to check for differences. Limits the results to this path. Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code> and <code>afterPath</code> are not specified, differences will be shown for all paths.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBeforePath",
        "getterDocumentation" : "/**<p>The file path in which to check for differences. Limits the results to this path. Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code> and <code>afterPath</code> are not specified, differences will be shown for all paths.</p>\n@return The file path in which to check for differences. Limits the results to this path. Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code> and <code>afterPath</code> are not specified, differences will be shown for all paths.*/",
        "getterMethodName" : "getBeforePath",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "beforePath",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "beforePath",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BeforePath",
        "setterDocumentation" : "/**<p>The file path in which to check for differences. Limits the results to this path. Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code> and <code>afterPath</code> are not specified, differences will be shown for all paths.</p>\n@param beforePath The file path in which to check for differences. Limits the results to this path. Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code> and <code>afterPath</code> are not specified, differences will be shown for all paths.*/",
        "setterMethodName" : "setBeforePath",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "beforePath",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The file path in which to check for differences. Limits the results to this path. Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code> and <code>afterPath</code> are not specified, differences will be shown for all paths.</p>\n@param beforePath The file path in which to check for differences. Limits the results to this path. Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code> and <code>afterPath</code> are not specified, differences will be shown for all paths.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "beforePath",
          "variableType" : "String",
          "documentation" : "<p>The file path in which to check for differences. Limits the results to this path. Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code> and <code>afterPath</code> are not specified, differences will be shown for all paths.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "afterPath",
        "c2jShape" : "Path",
        "deprecated" : false,
        "documentation" : "<p>The file path in which to check differences. Limits the results to this path. Can also be used to specify the changed name of a directory or folder, if it has changed. If not specified, differences will be shown for all paths.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The file path in which to check differences. Limits the results to this path. Can also be used to specify the changed name of a directory or folder, if it has changed. If not specified, differences will be shown for all paths.</p>\n@param afterPath The file path in which to check differences. Limits the results to this path. Can also be used to specify the changed name of a directory or folder, if it has changed. If not specified, differences will be shown for all paths.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAfterPath",
        "getterDocumentation" : "/**<p>The file path in which to check differences. Limits the results to this path. Can also be used to specify the changed name of a directory or folder, if it has changed. If not specified, differences will be shown for all paths.</p>\n@return The file path in which to check differences. Limits the results to this path. Can also be used to specify the changed name of a directory or folder, if it has changed. If not specified, differences will be shown for all paths.*/",
        "getterMethodName" : "getAfterPath",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "afterPath",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "afterPath",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "AfterPath",
        "setterDocumentation" : "/**<p>The file path in which to check differences. Limits the results to this path. Can also be used to specify the changed name of a directory or folder, if it has changed. If not specified, differences will be shown for all paths.</p>\n@param afterPath The file path in which to check differences. Limits the results to this path. Can also be used to specify the changed name of a directory or folder, if it has changed. If not specified, differences will be shown for all paths.*/",
        "setterMethodName" : "setAfterPath",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "afterPath",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The file path in which to check differences. Limits the results to this path. Can also be used to specify the changed name of a directory or folder, if it has changed. If not specified, differences will be shown for all paths.</p>\n@param afterPath The file path in which to check differences. Limits the results to this path. Can also be used to specify the changed name of a directory or folder, if it has changed. If not specified, differences will be shown for all paths.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "afterPath",
          "variableType" : "String",
          "documentation" : "<p>The file path in which to check differences. Limits the results to this path. Can also be used to specify the changed name of a directory or folder, if it has changed. If not specified, differences will be shown for all paths.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MaxResults",
        "c2jShape" : "Limit",
        "deprecated" : false,
        "documentation" : "<p>A non-negative integer used to limit the number of returned results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results.</p>\n@param maxResults A non-negative integer used to limit the number of returned results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results.</p>\n@return A non-negative integer used to limit the number of returned results.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MaxResults",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "setterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results.</p>\n@param maxResults A non-negative integer used to limit the number of returned results.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results.</p>\n@param maxResults A non-negative integer used to limit the number of returned results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>A non-negative integer used to limit the number of returned results.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@param nextToken An enumeration token that when provided in a request, returns the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@return An enumeration token that when provided in a request, returns the next batch of the results.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "setterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@param nextToken An enumeration token that when provided in a request, returns the next batch of the results.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@param nextToken An enumeration token that when provided in a request, returns the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AfterCommitSpecifier" : {
          "c2jName" : "afterCommitSpecifier",
          "c2jShape" : "CommitName",
          "deprecated" : false,
          "documentation" : "<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit.</p>\n@param afterCommitSpecifier The branch, tag, HEAD, or other fully qualified reference used to identify a commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAfterCommitSpecifier",
          "getterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit.</p>\n@return The branch, tag, HEAD, or other fully qualified reference used to identify a commit.*/",
          "getterMethodName" : "getAfterCommitSpecifier",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "afterCommitSpecifier",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "afterCommitSpecifier",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "AfterCommitSpecifier",
          "setterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit.</p>\n@param afterCommitSpecifier The branch, tag, HEAD, or other fully qualified reference used to identify a commit.*/",
          "setterMethodName" : "setAfterCommitSpecifier",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "afterCommitSpecifier",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit.</p>\n@param afterCommitSpecifier The branch, tag, HEAD, or other fully qualified reference used to identify a commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "afterCommitSpecifier",
            "variableType" : "String",
            "documentation" : "<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "AfterPath" : {
          "c2jName" : "afterPath",
          "c2jShape" : "Path",
          "deprecated" : false,
          "documentation" : "<p>The file path in which to check differences. Limits the results to this path. Can also be used to specify the changed name of a directory or folder, if it has changed. If not specified, differences will be shown for all paths.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The file path in which to check differences. Limits the results to this path. Can also be used to specify the changed name of a directory or folder, if it has changed. If not specified, differences will be shown for all paths.</p>\n@param afterPath The file path in which to check differences. Limits the results to this path. Can also be used to specify the changed name of a directory or folder, if it has changed. If not specified, differences will be shown for all paths.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAfterPath",
          "getterDocumentation" : "/**<p>The file path in which to check differences. Limits the results to this path. Can also be used to specify the changed name of a directory or folder, if it has changed. If not specified, differences will be shown for all paths.</p>\n@return The file path in which to check differences. Limits the results to this path. Can also be used to specify the changed name of a directory or folder, if it has changed. If not specified, differences will be shown for all paths.*/",
          "getterMethodName" : "getAfterPath",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "afterPath",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "afterPath",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "AfterPath",
          "setterDocumentation" : "/**<p>The file path in which to check differences. Limits the results to this path. Can also be used to specify the changed name of a directory or folder, if it has changed. If not specified, differences will be shown for all paths.</p>\n@param afterPath The file path in which to check differences. Limits the results to this path. Can also be used to specify the changed name of a directory or folder, if it has changed. If not specified, differences will be shown for all paths.*/",
          "setterMethodName" : "setAfterPath",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "afterPath",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The file path in which to check differences. Limits the results to this path. Can also be used to specify the changed name of a directory or folder, if it has changed. If not specified, differences will be shown for all paths.</p>\n@param afterPath The file path in which to check differences. Limits the results to this path. Can also be used to specify the changed name of a directory or folder, if it has changed. If not specified, differences will be shown for all paths.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "afterPath",
            "variableType" : "String",
            "documentation" : "<p>The file path in which to check differences. Limits the results to this path. Can also be used to specify the changed name of a directory or folder, if it has changed. If not specified, differences will be shown for all paths.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "BeforeCommitSpecifier" : {
          "c2jName" : "beforeCommitSpecifier",
          "c2jShape" : "CommitName",
          "deprecated" : false,
          "documentation" : "<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, the full commit ID. Optional. If not specified, all changes prior to the <code>afterCommitSpecifier</code> value will be shown. If you do not use <code>beforeCommitSpecifier</code> in your request, consider limiting the results with <code>maxResults</code>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, the full commit ID. Optional. If not specified, all changes prior to the <code>afterCommitSpecifier</code> value will be shown. If you do not use <code>beforeCommitSpecifier</code> in your request, consider limiting the results with <code>maxResults</code>.</p>\n@param beforeCommitSpecifier The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, the full commit ID. Optional. If not specified, all changes prior to the <code>afterCommitSpecifier</code> value will be shown. If you do not use <code>beforeCommitSpecifier</code> in your request, consider limiting the results with <code>maxResults</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBeforeCommitSpecifier",
          "getterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, the full commit ID. Optional. If not specified, all changes prior to the <code>afterCommitSpecifier</code> value will be shown. If you do not use <code>beforeCommitSpecifier</code> in your request, consider limiting the results with <code>maxResults</code>.</p>\n@return The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, the full commit ID. Optional. If not specified, all changes prior to the <code>afterCommitSpecifier</code> value will be shown. If you do not use <code>beforeCommitSpecifier</code> in your request, consider limiting the results with <code>maxResults</code>.*/",
          "getterMethodName" : "getBeforeCommitSpecifier",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "beforeCommitSpecifier",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "beforeCommitSpecifier",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BeforeCommitSpecifier",
          "setterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, the full commit ID. Optional. If not specified, all changes prior to the <code>afterCommitSpecifier</code> value will be shown. If you do not use <code>beforeCommitSpecifier</code> in your request, consider limiting the results with <code>maxResults</code>.</p>\n@param beforeCommitSpecifier The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, the full commit ID. Optional. If not specified, all changes prior to the <code>afterCommitSpecifier</code> value will be shown. If you do not use <code>beforeCommitSpecifier</code> in your request, consider limiting the results with <code>maxResults</code>.*/",
          "setterMethodName" : "setBeforeCommitSpecifier",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "beforeCommitSpecifier",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, the full commit ID. Optional. If not specified, all changes prior to the <code>afterCommitSpecifier</code> value will be shown. If you do not use <code>beforeCommitSpecifier</code> in your request, consider limiting the results with <code>maxResults</code>.</p>\n@param beforeCommitSpecifier The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, the full commit ID. Optional. If not specified, all changes prior to the <code>afterCommitSpecifier</code> value will be shown. If you do not use <code>beforeCommitSpecifier</code> in your request, consider limiting the results with <code>maxResults</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "beforeCommitSpecifier",
            "variableType" : "String",
            "documentation" : "<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, the full commit ID. Optional. If not specified, all changes prior to the <code>afterCommitSpecifier</code> value will be shown. If you do not use <code>beforeCommitSpecifier</code> in your request, consider limiting the results with <code>maxResults</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "BeforePath" : {
          "c2jName" : "beforePath",
          "c2jShape" : "Path",
          "deprecated" : false,
          "documentation" : "<p>The file path in which to check for differences. Limits the results to this path. Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code> and <code>afterPath</code> are not specified, differences will be shown for all paths.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The file path in which to check for differences. Limits the results to this path. Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code> and <code>afterPath</code> are not specified, differences will be shown for all paths.</p>\n@param beforePath The file path in which to check for differences. Limits the results to this path. Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code> and <code>afterPath</code> are not specified, differences will be shown for all paths.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBeforePath",
          "getterDocumentation" : "/**<p>The file path in which to check for differences. Limits the results to this path. Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code> and <code>afterPath</code> are not specified, differences will be shown for all paths.</p>\n@return The file path in which to check for differences. Limits the results to this path. Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code> and <code>afterPath</code> are not specified, differences will be shown for all paths.*/",
          "getterMethodName" : "getBeforePath",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "beforePath",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "beforePath",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BeforePath",
          "setterDocumentation" : "/**<p>The file path in which to check for differences. Limits the results to this path. Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code> and <code>afterPath</code> are not specified, differences will be shown for all paths.</p>\n@param beforePath The file path in which to check for differences. Limits the results to this path. Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code> and <code>afterPath</code> are not specified, differences will be shown for all paths.*/",
          "setterMethodName" : "setBeforePath",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "beforePath",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The file path in which to check for differences. Limits the results to this path. Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code> and <code>afterPath</code> are not specified, differences will be shown for all paths.</p>\n@param beforePath The file path in which to check for differences. Limits the results to this path. Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code> and <code>afterPath</code> are not specified, differences will be shown for all paths.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "beforePath",
            "variableType" : "String",
            "documentation" : "<p>The file path in which to check for differences. Limits the results to this path. Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code> and <code>afterPath</code> are not specified, differences will be shown for all paths.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "MaxResults" : {
          "c2jName" : "MaxResults",
          "c2jShape" : "Limit",
          "deprecated" : false,
          "documentation" : "<p>A non-negative integer used to limit the number of returned results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results.</p>\n@param maxResults A non-negative integer used to limit the number of returned results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results.</p>\n@return A non-negative integer used to limit the number of returned results.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MaxResults",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "setterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results.</p>\n@param maxResults A non-negative integer used to limit the number of returned results.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A non-negative integer used to limit the number of returned results.</p>\n@param maxResults A non-negative integer used to limit the number of returned results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>A non-negative integer used to limit the number of returned results.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@param nextToken An enumeration token that when provided in a request, returns the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@return An enumeration token that when provided in a request, returns the next batch of the results.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "setterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@param nextToken An enumeration token that when provided in a request, returns the next batch of the results.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>\n@param nextToken An enumeration token that when provided in a request, returns the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository where you want to get differences.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository where you want to get differences.</p>\n@param repositoryName The name of the repository where you want to get differences.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository where you want to get differences.</p>\n@return The name of the repository where you want to get differences.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository where you want to get differences.</p>\n@param repositoryName The name of the repository where you want to get differences.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository where you want to get differences.</p>\n@param repositoryName The name of the repository where you want to get differences.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository where you want to get differences.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName", "afterCommitSpecifier" ],
      "shapeName" : "GetDifferencesRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "GetDifferencesRequest",
        "variableName" : "getDifferencesRequest",
        "variableType" : "GetDifferencesRequest",
        "documentation" : null,
        "simpleType" : "GetDifferencesRequest",
        "variableSetterType" : "GetDifferencesRequest"
      },
      "wrapper" : false
    },
    "GetDifferencesResult" : {
      "c2jName" : "GetDifferencesOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "differences",
        "c2jShape" : "DifferenceList",
        "deprecated" : false,
        "documentation" : "<p>A differences data type object that contains information about the differences, including whether the difference is added, modified, or deleted (A, D, M).</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A differences data type object that contains information about the differences, including whether the difference is added, modified, or deleted (A, D, M).</p>\n@param differences A differences data type object that contains information about the differences, including whether the difference is added, modified, or deleted (A, D, M).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDifferences",
        "getterDocumentation" : "/**<p>A differences data type object that contains information about the differences, including whether the difference is added, modified, or deleted (A, D, M).</p>\n@return A differences data type object that contains information about the differences, including whether the difference is added, modified, or deleted (A, D, M).*/",
        "getterMethodName" : "getDifferences",
        "getterModel" : {
          "returnType" : "java.util.List<Difference>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "differences",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "differences",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Difference",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Difference",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "Difference",
              "variableName" : "member",
              "variableType" : "Difference",
              "documentation" : "",
              "simpleType" : "Difference",
              "variableSetterType" : "Difference"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "Difference",
              "variableName" : "member",
              "variableType" : "Difference",
              "documentation" : "",
              "simpleType" : "Difference",
              "variableSetterType" : "Difference"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Difference",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Difference",
          "templateImplType" : "java.util.ArrayList<Difference>",
          "templateType" : "java.util.List<Difference>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Differences",
        "setterDocumentation" : "/**<p>A differences data type object that contains information about the differences, including whether the difference is added, modified, or deleted (A, D, M).</p>\n@param differences A differences data type object that contains information about the differences, including whether the difference is added, modified, or deleted (A, D, M).*/",
        "setterMethodName" : "setDifferences",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<Difference>",
          "variableName" : "differences",
          "variableType" : "java.util.List<Difference>",
          "documentation" : "",
          "simpleType" : "List<Difference>",
          "variableSetterType" : "java.util.Collection<Difference>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A differences data type object that contains information about the differences, including whether the difference is added, modified, or deleted (A, D, M).</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setDifferences(java.util.Collection)} or {@link #withDifferences(java.util.Collection)} if you want to override the existing values.</p>\n@param differences A differences data type object that contains information about the differences, including whether the difference is added, modified, or deleted (A, D, M).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<Difference>",
          "variableName" : "differences",
          "variableType" : "java.util.List<Difference>",
          "documentation" : "<p>A differences data type object that contains information about the differences, including whether the difference is added, modified, or deleted (A, D, M).</p>",
          "simpleType" : "List<Difference>",
          "variableSetterType" : "java.util.Collection<Difference>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>An enumeration token that can be used in a request to return the next batch of the results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An enumeration token that can be used in a request to return the next batch of the results.</p>\n@param nextToken An enumeration token that can be used in a request to return the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>An enumeration token that can be used in a request to return the next batch of the results.</p>\n@return An enumeration token that can be used in a request to return the next batch of the results.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "setterDocumentation" : "/**<p>An enumeration token that can be used in a request to return the next batch of the results.</p>\n@param nextToken An enumeration token that can be used in a request to return the next batch of the results.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An enumeration token that can be used in a request to return the next batch of the results.</p>\n@param nextToken An enumeration token that can be used in a request to return the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>An enumeration token that can be used in a request to return the next batch of the results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Differences" : {
          "c2jName" : "differences",
          "c2jShape" : "DifferenceList",
          "deprecated" : false,
          "documentation" : "<p>A differences data type object that contains information about the differences, including whether the difference is added, modified, or deleted (A, D, M).</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A differences data type object that contains information about the differences, including whether the difference is added, modified, or deleted (A, D, M).</p>\n@param differences A differences data type object that contains information about the differences, including whether the difference is added, modified, or deleted (A, D, M).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDifferences",
          "getterDocumentation" : "/**<p>A differences data type object that contains information about the differences, including whether the difference is added, modified, or deleted (A, D, M).</p>\n@return A differences data type object that contains information about the differences, including whether the difference is added, modified, or deleted (A, D, M).*/",
          "getterMethodName" : "getDifferences",
          "getterModel" : {
            "returnType" : "java.util.List<Difference>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "differences",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "differences",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Difference",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Difference",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "Difference",
                "variableName" : "member",
                "variableType" : "Difference",
                "documentation" : "",
                "simpleType" : "Difference",
                "variableSetterType" : "Difference"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "Difference",
                "variableName" : "member",
                "variableType" : "Difference",
                "documentation" : "",
                "simpleType" : "Difference",
                "variableSetterType" : "Difference"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Difference",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Difference",
            "templateImplType" : "java.util.ArrayList<Difference>",
            "templateType" : "java.util.List<Difference>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Differences",
          "setterDocumentation" : "/**<p>A differences data type object that contains information about the differences, including whether the difference is added, modified, or deleted (A, D, M).</p>\n@param differences A differences data type object that contains information about the differences, including whether the difference is added, modified, or deleted (A, D, M).*/",
          "setterMethodName" : "setDifferences",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<Difference>",
            "variableName" : "differences",
            "variableType" : "java.util.List<Difference>",
            "documentation" : "",
            "simpleType" : "List<Difference>",
            "variableSetterType" : "java.util.Collection<Difference>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A differences data type object that contains information about the differences, including whether the difference is added, modified, or deleted (A, D, M).</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setDifferences(java.util.Collection)} or {@link #withDifferences(java.util.Collection)} if you want to override the existing values.</p>\n@param differences A differences data type object that contains information about the differences, including whether the difference is added, modified, or deleted (A, D, M).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<Difference>",
            "variableName" : "differences",
            "variableType" : "java.util.List<Difference>",
            "documentation" : "<p>A differences data type object that contains information about the differences, including whether the difference is added, modified, or deleted (A, D, M).</p>",
            "simpleType" : "List<Difference>",
            "variableSetterType" : "java.util.Collection<Difference>"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>An enumeration token that can be used in a request to return the next batch of the results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An enumeration token that can be used in a request to return the next batch of the results.</p>\n@param nextToken An enumeration token that can be used in a request to return the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>An enumeration token that can be used in a request to return the next batch of the results.</p>\n@return An enumeration token that can be used in a request to return the next batch of the results.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "setterDocumentation" : "/**<p>An enumeration token that can be used in a request to return the next batch of the results.</p>\n@param nextToken An enumeration token that can be used in a request to return the next batch of the results.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An enumeration token that can be used in a request to return the next batch of the results.</p>\n@param nextToken An enumeration token that can be used in a request to return the next batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>An enumeration token that can be used in a request to return the next batch of the results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetDifferencesResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "GetDifferencesResult",
        "variableName" : "getDifferencesResult",
        "variableType" : "GetDifferencesResult",
        "documentation" : null,
        "simpleType" : "GetDifferencesResult",
        "variableSetterType" : "GetDifferencesResult"
      },
      "wrapper" : false
    },
    "GetRepositoryRequest" : {
      "c2jName" : "GetRepositoryInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the input of a get repository operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetRepository",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.GetRepository",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository to get information about.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository to get information about.</p>\n@param repositoryName The name of the repository to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository to get information about.</p>\n@return The name of the repository to get information about.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository to get information about.</p>\n@param repositoryName The name of the repository to get information about.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository to get information about.</p>\n@param repositoryName The name of the repository to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository to get information about.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository to get information about.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository to get information about.</p>\n@param repositoryName The name of the repository to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository to get information about.</p>\n@return The name of the repository to get information about.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository to get information about.</p>\n@param repositoryName The name of the repository to get information about.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository to get information about.</p>\n@param repositoryName The name of the repository to get information about.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository to get information about.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName" ],
      "shapeName" : "GetRepositoryRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "GetRepositoryRequest",
        "variableName" : "getRepositoryRequest",
        "variableType" : "GetRepositoryRequest",
        "documentation" : null,
        "simpleType" : "GetRepositoryRequest",
        "variableSetterType" : "GetRepositoryRequest"
      },
      "wrapper" : false
    },
    "GetRepositoryResult" : {
      "c2jName" : "GetRepositoryOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the output of a get repository operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "repositoryMetadata",
        "c2jShape" : "RepositoryMetadata",
        "deprecated" : false,
        "documentation" : "<p>Information about the repository.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Information about the repository.</p>\n@param repositoryMetadata Information about the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryMetadata",
        "getterDocumentation" : "/**<p>Information about the repository.</p>\n@return Information about the repository.*/",
        "getterMethodName" : "getRepositoryMetadata",
        "getterModel" : {
          "returnType" : "RepositoryMetadata",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryMetadata",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryMetadata",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "RepositoryMetadata",
        "setterDocumentation" : "/**<p>Information about the repository.</p>\n@param repositoryMetadata Information about the repository.*/",
        "setterMethodName" : "setRepositoryMetadata",
        "setterModel" : {
          "variableDeclarationType" : "RepositoryMetadata",
          "variableName" : "repositoryMetadata",
          "variableType" : "RepositoryMetadata",
          "documentation" : "",
          "simpleType" : "RepositoryMetadata",
          "variableSetterType" : "RepositoryMetadata"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Information about the repository.</p>\n@param repositoryMetadata Information about the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "RepositoryMetadata",
          "variableName" : "repositoryMetadata",
          "variableType" : "RepositoryMetadata",
          "documentation" : "<p>Information about the repository.</p>",
          "simpleType" : "RepositoryMetadata",
          "variableSetterType" : "RepositoryMetadata"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "RepositoryMetadata" : {
          "c2jName" : "repositoryMetadata",
          "c2jShape" : "RepositoryMetadata",
          "deprecated" : false,
          "documentation" : "<p>Information about the repository.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Information about the repository.</p>\n@param repositoryMetadata Information about the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryMetadata",
          "getterDocumentation" : "/**<p>Information about the repository.</p>\n@return Information about the repository.*/",
          "getterMethodName" : "getRepositoryMetadata",
          "getterModel" : {
            "returnType" : "RepositoryMetadata",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryMetadata",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryMetadata",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "RepositoryMetadata",
          "setterDocumentation" : "/**<p>Information about the repository.</p>\n@param repositoryMetadata Information about the repository.*/",
          "setterMethodName" : "setRepositoryMetadata",
          "setterModel" : {
            "variableDeclarationType" : "RepositoryMetadata",
            "variableName" : "repositoryMetadata",
            "variableType" : "RepositoryMetadata",
            "documentation" : "",
            "simpleType" : "RepositoryMetadata",
            "variableSetterType" : "RepositoryMetadata"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Information about the repository.</p>\n@param repositoryMetadata Information about the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "RepositoryMetadata",
            "variableName" : "repositoryMetadata",
            "variableType" : "RepositoryMetadata",
            "documentation" : "<p>Information about the repository.</p>",
            "simpleType" : "RepositoryMetadata",
            "variableSetterType" : "RepositoryMetadata"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetRepositoryResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "GetRepositoryResult",
        "variableName" : "getRepositoryResult",
        "variableType" : "GetRepositoryResult",
        "documentation" : null,
        "simpleType" : "GetRepositoryResult",
        "variableSetterType" : "GetRepositoryResult"
      },
      "wrapper" : false
    },
    "GetRepositoryTriggersRequest" : {
      "c2jName" : "GetRepositoryTriggersInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the input of a get repository triggers operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetRepositoryTriggers",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.GetRepositoryTriggers",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository for which the trigger is configured.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository for which the trigger is configured.</p>\n@param repositoryName The name of the repository for which the trigger is configured.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository for which the trigger is configured.</p>\n@return The name of the repository for which the trigger is configured.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository for which the trigger is configured.</p>\n@param repositoryName The name of the repository for which the trigger is configured.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository for which the trigger is configured.</p>\n@param repositoryName The name of the repository for which the trigger is configured.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository for which the trigger is configured.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository for which the trigger is configured.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository for which the trigger is configured.</p>\n@param repositoryName The name of the repository for which the trigger is configured.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository for which the trigger is configured.</p>\n@return The name of the repository for which the trigger is configured.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository for which the trigger is configured.</p>\n@param repositoryName The name of the repository for which the trigger is configured.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository for which the trigger is configured.</p>\n@param repositoryName The name of the repository for which the trigger is configured.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository for which the trigger is configured.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName" ],
      "shapeName" : "GetRepositoryTriggersRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "GetRepositoryTriggersRequest",
        "variableName" : "getRepositoryTriggersRequest",
        "variableType" : "GetRepositoryTriggersRequest",
        "documentation" : null,
        "simpleType" : "GetRepositoryTriggersRequest",
        "variableSetterType" : "GetRepositoryTriggersRequest"
      },
      "wrapper" : false
    },
    "GetRepositoryTriggersResult" : {
      "c2jName" : "GetRepositoryTriggersOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the output of a get repository triggers operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "configurationId",
        "c2jShape" : "RepositoryTriggersConfigurationId",
        "deprecated" : false,
        "documentation" : "<p>The system-generated unique ID for the trigger.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The system-generated unique ID for the trigger.</p>\n@param configurationId The system-generated unique ID for the trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withConfigurationId",
        "getterDocumentation" : "/**<p>The system-generated unique ID for the trigger.</p>\n@return The system-generated unique ID for the trigger.*/",
        "getterMethodName" : "getConfigurationId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "configurationId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "configurationId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ConfigurationId",
        "setterDocumentation" : "/**<p>The system-generated unique ID for the trigger.</p>\n@param configurationId The system-generated unique ID for the trigger.*/",
        "setterMethodName" : "setConfigurationId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "configurationId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The system-generated unique ID for the trigger.</p>\n@param configurationId The system-generated unique ID for the trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "configurationId",
          "variableType" : "String",
          "documentation" : "<p>The system-generated unique ID for the trigger.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "triggers",
        "c2jShape" : "RepositoryTriggersList",
        "deprecated" : false,
        "documentation" : "<p>The JSON block of configuration information for each trigger.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The JSON block of configuration information for each trigger.</p>\n@param triggers The JSON block of configuration information for each trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTriggers",
        "getterDocumentation" : "/**<p>The JSON block of configuration information for each trigger.</p>\n@return The JSON block of configuration information for each trigger.*/",
        "getterMethodName" : "getTriggers",
        "getterModel" : {
          "returnType" : "java.util.List<RepositoryTrigger>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "triggers",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "triggers",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "RepositoryTrigger",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "RepositoryTrigger",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "RepositoryTrigger",
              "variableName" : "member",
              "variableType" : "RepositoryTrigger",
              "documentation" : "",
              "simpleType" : "RepositoryTrigger",
              "variableSetterType" : "RepositoryTrigger"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "RepositoryTrigger",
              "variableName" : "member",
              "variableType" : "RepositoryTrigger",
              "documentation" : "",
              "simpleType" : "RepositoryTrigger",
              "variableSetterType" : "RepositoryTrigger"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "RepositoryTrigger",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "RepositoryTrigger",
          "templateImplType" : "java.util.ArrayList<RepositoryTrigger>",
          "templateType" : "java.util.List<RepositoryTrigger>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Triggers",
        "setterDocumentation" : "/**<p>The JSON block of configuration information for each trigger.</p>\n@param triggers The JSON block of configuration information for each trigger.*/",
        "setterMethodName" : "setTriggers",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<RepositoryTrigger>",
          "variableName" : "triggers",
          "variableType" : "java.util.List<RepositoryTrigger>",
          "documentation" : "",
          "simpleType" : "List<RepositoryTrigger>",
          "variableSetterType" : "java.util.Collection<RepositoryTrigger>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The JSON block of configuration information for each trigger.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTriggers(java.util.Collection)} or {@link #withTriggers(java.util.Collection)} if you want to override the existing values.</p>\n@param triggers The JSON block of configuration information for each trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<RepositoryTrigger>",
          "variableName" : "triggers",
          "variableType" : "java.util.List<RepositoryTrigger>",
          "documentation" : "<p>The JSON block of configuration information for each trigger.</p>",
          "simpleType" : "List<RepositoryTrigger>",
          "variableSetterType" : "java.util.Collection<RepositoryTrigger>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ConfigurationId" : {
          "c2jName" : "configurationId",
          "c2jShape" : "RepositoryTriggersConfigurationId",
          "deprecated" : false,
          "documentation" : "<p>The system-generated unique ID for the trigger.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The system-generated unique ID for the trigger.</p>\n@param configurationId The system-generated unique ID for the trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withConfigurationId",
          "getterDocumentation" : "/**<p>The system-generated unique ID for the trigger.</p>\n@return The system-generated unique ID for the trigger.*/",
          "getterMethodName" : "getConfigurationId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "configurationId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "configurationId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ConfigurationId",
          "setterDocumentation" : "/**<p>The system-generated unique ID for the trigger.</p>\n@param configurationId The system-generated unique ID for the trigger.*/",
          "setterMethodName" : "setConfigurationId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "configurationId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The system-generated unique ID for the trigger.</p>\n@param configurationId The system-generated unique ID for the trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "configurationId",
            "variableType" : "String",
            "documentation" : "<p>The system-generated unique ID for the trigger.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Triggers" : {
          "c2jName" : "triggers",
          "c2jShape" : "RepositoryTriggersList",
          "deprecated" : false,
          "documentation" : "<p>The JSON block of configuration information for each trigger.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The JSON block of configuration information for each trigger.</p>\n@param triggers The JSON block of configuration information for each trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTriggers",
          "getterDocumentation" : "/**<p>The JSON block of configuration information for each trigger.</p>\n@return The JSON block of configuration information for each trigger.*/",
          "getterMethodName" : "getTriggers",
          "getterModel" : {
            "returnType" : "java.util.List<RepositoryTrigger>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "triggers",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "triggers",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "RepositoryTrigger",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "RepositoryTrigger",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "RepositoryTrigger",
                "variableName" : "member",
                "variableType" : "RepositoryTrigger",
                "documentation" : "",
                "simpleType" : "RepositoryTrigger",
                "variableSetterType" : "RepositoryTrigger"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "RepositoryTrigger",
                "variableName" : "member",
                "variableType" : "RepositoryTrigger",
                "documentation" : "",
                "simpleType" : "RepositoryTrigger",
                "variableSetterType" : "RepositoryTrigger"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "RepositoryTrigger",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "RepositoryTrigger",
            "templateImplType" : "java.util.ArrayList<RepositoryTrigger>",
            "templateType" : "java.util.List<RepositoryTrigger>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Triggers",
          "setterDocumentation" : "/**<p>The JSON block of configuration information for each trigger.</p>\n@param triggers The JSON block of configuration information for each trigger.*/",
          "setterMethodName" : "setTriggers",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<RepositoryTrigger>",
            "variableName" : "triggers",
            "variableType" : "java.util.List<RepositoryTrigger>",
            "documentation" : "",
            "simpleType" : "List<RepositoryTrigger>",
            "variableSetterType" : "java.util.Collection<RepositoryTrigger>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The JSON block of configuration information for each trigger.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTriggers(java.util.Collection)} or {@link #withTriggers(java.util.Collection)} if you want to override the existing values.</p>\n@param triggers The JSON block of configuration information for each trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<RepositoryTrigger>",
            "variableName" : "triggers",
            "variableType" : "java.util.List<RepositoryTrigger>",
            "documentation" : "<p>The JSON block of configuration information for each trigger.</p>",
            "simpleType" : "List<RepositoryTrigger>",
            "variableSetterType" : "java.util.Collection<RepositoryTrigger>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetRepositoryTriggersResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "GetRepositoryTriggersResult",
        "variableName" : "getRepositoryTriggersResult",
        "variableType" : "GetRepositoryTriggersResult",
        "documentation" : null,
        "simpleType" : "GetRepositoryTriggersResult",
        "variableSetterType" : "GetRepositoryTriggersResult"
      },
      "wrapper" : false
    },
    "InvalidBlobIdException" : {
      "c2jName" : "InvalidBlobIdException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified blob is not valid.</p>",
      "enums" : null,
      "errorCode" : "InvalidBlobIdException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidBlobIdException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidBlobIdException",
        "variableName" : "invalidBlobIdException",
        "variableType" : "InvalidBlobIdException",
        "documentation" : null,
        "simpleType" : "InvalidBlobIdException",
        "variableSetterType" : "InvalidBlobIdException"
      },
      "wrapper" : false
    },
    "InvalidBranchNameException" : {
      "c2jName" : "InvalidBranchNameException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified branch name is not valid.</p>",
      "enums" : null,
      "errorCode" : "InvalidBranchNameException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidBranchNameException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidBranchNameException",
        "variableName" : "invalidBranchNameException",
        "variableType" : "InvalidBranchNameException",
        "documentation" : null,
        "simpleType" : "InvalidBranchNameException",
        "variableSetterType" : "InvalidBranchNameException"
      },
      "wrapper" : false
    },
    "InvalidCommitException" : {
      "c2jName" : "InvalidCommitException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified commit is not valid.</p>",
      "enums" : null,
      "errorCode" : "InvalidCommitException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidCommitException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidCommitException",
        "variableName" : "invalidCommitException",
        "variableType" : "InvalidCommitException",
        "documentation" : null,
        "simpleType" : "InvalidCommitException",
        "variableSetterType" : "InvalidCommitException"
      },
      "wrapper" : false
    },
    "InvalidCommitIdException" : {
      "c2jName" : "InvalidCommitIdException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified commit ID is not valid.</p>",
      "enums" : null,
      "errorCode" : "InvalidCommitIdException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidCommitIdException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidCommitIdException",
        "variableName" : "invalidCommitIdException",
        "variableType" : "InvalidCommitIdException",
        "documentation" : null,
        "simpleType" : "InvalidCommitIdException",
        "variableSetterType" : "InvalidCommitIdException"
      },
      "wrapper" : false
    },
    "InvalidContinuationTokenException" : {
      "c2jName" : "InvalidContinuationTokenException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified continuation token is not valid.</p>",
      "enums" : null,
      "errorCode" : "InvalidContinuationTokenException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidContinuationTokenException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidContinuationTokenException",
        "variableName" : "invalidContinuationTokenException",
        "variableType" : "InvalidContinuationTokenException",
        "documentation" : null,
        "simpleType" : "InvalidContinuationTokenException",
        "variableSetterType" : "InvalidContinuationTokenException"
      },
      "wrapper" : false
    },
    "InvalidMaxResultsException" : {
      "c2jName" : "InvalidMaxResultsException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified number of maximum results is not valid.</p>",
      "enums" : null,
      "errorCode" : "InvalidMaxResultsException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidMaxResultsException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidMaxResultsException",
        "variableName" : "invalidMaxResultsException",
        "variableType" : "InvalidMaxResultsException",
        "documentation" : null,
        "simpleType" : "InvalidMaxResultsException",
        "variableSetterType" : "InvalidMaxResultsException"
      },
      "wrapper" : false
    },
    "InvalidOrderException" : {
      "c2jName" : "InvalidOrderException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified sort order is not valid.</p>",
      "enums" : null,
      "errorCode" : "InvalidOrderException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidOrderException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidOrderException",
        "variableName" : "invalidOrderException",
        "variableType" : "InvalidOrderException",
        "documentation" : null,
        "simpleType" : "InvalidOrderException",
        "variableSetterType" : "InvalidOrderException"
      },
      "wrapper" : false
    },
    "InvalidPathException" : {
      "c2jName" : "InvalidPathException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified path is not valid.</p>",
      "enums" : null,
      "errorCode" : "InvalidPathException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidPathException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidPathException",
        "variableName" : "invalidPathException",
        "variableType" : "InvalidPathException",
        "documentation" : null,
        "simpleType" : "InvalidPathException",
        "variableSetterType" : "InvalidPathException"
      },
      "wrapper" : false
    },
    "InvalidRepositoryDescriptionException" : {
      "c2jName" : "InvalidRepositoryDescriptionException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified repository description is not valid.</p>",
      "enums" : null,
      "errorCode" : "InvalidRepositoryDescriptionException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidRepositoryDescriptionException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidRepositoryDescriptionException",
        "variableName" : "invalidRepositoryDescriptionException",
        "variableType" : "InvalidRepositoryDescriptionException",
        "documentation" : null,
        "simpleType" : "InvalidRepositoryDescriptionException",
        "variableSetterType" : "InvalidRepositoryDescriptionException"
      },
      "wrapper" : false
    },
    "InvalidRepositoryNameException" : {
      "c2jName" : "InvalidRepositoryNameException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
      "enums" : null,
      "errorCode" : "InvalidRepositoryNameException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidRepositoryNameException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidRepositoryNameException",
        "variableName" : "invalidRepositoryNameException",
        "variableType" : "InvalidRepositoryNameException",
        "documentation" : null,
        "simpleType" : "InvalidRepositoryNameException",
        "variableSetterType" : "InvalidRepositoryNameException"
      },
      "wrapper" : false
    },
    "InvalidRepositoryTriggerBranchNameException" : {
      "c2jName" : "InvalidRepositoryTriggerBranchNameException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>One or more branch names specified for the trigger is not valid.</p>",
      "enums" : null,
      "errorCode" : "InvalidRepositoryTriggerBranchNameException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidRepositoryTriggerBranchNameException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidRepositoryTriggerBranchNameException",
        "variableName" : "invalidRepositoryTriggerBranchNameException",
        "variableType" : "InvalidRepositoryTriggerBranchNameException",
        "documentation" : null,
        "simpleType" : "InvalidRepositoryTriggerBranchNameException",
        "variableSetterType" : "InvalidRepositoryTriggerBranchNameException"
      },
      "wrapper" : false
    },
    "InvalidRepositoryTriggerCustomDataException" : {
      "c2jName" : "InvalidRepositoryTriggerCustomDataException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The custom data provided for the trigger is not valid.</p>",
      "enums" : null,
      "errorCode" : "InvalidRepositoryTriggerCustomDataException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidRepositoryTriggerCustomDataException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidRepositoryTriggerCustomDataException",
        "variableName" : "invalidRepositoryTriggerCustomDataException",
        "variableType" : "InvalidRepositoryTriggerCustomDataException",
        "documentation" : null,
        "simpleType" : "InvalidRepositoryTriggerCustomDataException",
        "variableSetterType" : "InvalidRepositoryTriggerCustomDataException"
      },
      "wrapper" : false
    },
    "InvalidRepositoryTriggerDestinationArnException" : {
      "c2jName" : "InvalidRepositoryTriggerDestinationArnException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The Amazon Resource Name (ARN) for the trigger is not valid for the specified destination. The most common reason for this error is that the ARN does not meet the requirements for the service type.</p>",
      "enums" : null,
      "errorCode" : "InvalidRepositoryTriggerDestinationArnException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidRepositoryTriggerDestinationArnException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidRepositoryTriggerDestinationArnException",
        "variableName" : "invalidRepositoryTriggerDestinationArnException",
        "variableType" : "InvalidRepositoryTriggerDestinationArnException",
        "documentation" : null,
        "simpleType" : "InvalidRepositoryTriggerDestinationArnException",
        "variableSetterType" : "InvalidRepositoryTriggerDestinationArnException"
      },
      "wrapper" : false
    },
    "InvalidRepositoryTriggerEventsException" : {
      "c2jName" : "InvalidRepositoryTriggerEventsException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>One or more events specified for the trigger is not valid. Check to make sure that all events specified match the requirements for allowed events.</p>",
      "enums" : null,
      "errorCode" : "InvalidRepositoryTriggerEventsException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidRepositoryTriggerEventsException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidRepositoryTriggerEventsException",
        "variableName" : "invalidRepositoryTriggerEventsException",
        "variableType" : "InvalidRepositoryTriggerEventsException",
        "documentation" : null,
        "simpleType" : "InvalidRepositoryTriggerEventsException",
        "variableSetterType" : "InvalidRepositoryTriggerEventsException"
      },
      "wrapper" : false
    },
    "InvalidRepositoryTriggerNameException" : {
      "c2jName" : "InvalidRepositoryTriggerNameException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The name of the trigger is not valid.</p>",
      "enums" : null,
      "errorCode" : "InvalidRepositoryTriggerNameException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidRepositoryTriggerNameException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidRepositoryTriggerNameException",
        "variableName" : "invalidRepositoryTriggerNameException",
        "variableType" : "InvalidRepositoryTriggerNameException",
        "documentation" : null,
        "simpleType" : "InvalidRepositoryTriggerNameException",
        "variableSetterType" : "InvalidRepositoryTriggerNameException"
      },
      "wrapper" : false
    },
    "InvalidRepositoryTriggerRegionException" : {
      "c2jName" : "InvalidRepositoryTriggerRegionException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The region for the trigger target does not match the region for the repository. Triggers must be created in the same region as the target for the trigger.</p>",
      "enums" : null,
      "errorCode" : "InvalidRepositoryTriggerRegionException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidRepositoryTriggerRegionException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidRepositoryTriggerRegionException",
        "variableName" : "invalidRepositoryTriggerRegionException",
        "variableType" : "InvalidRepositoryTriggerRegionException",
        "documentation" : null,
        "simpleType" : "InvalidRepositoryTriggerRegionException",
        "variableSetterType" : "InvalidRepositoryTriggerRegionException"
      },
      "wrapper" : false
    },
    "InvalidSortByException" : {
      "c2jName" : "InvalidSortByException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified sort by value is not valid.</p>",
      "enums" : null,
      "errorCode" : "InvalidSortByException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidSortByException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidSortByException",
        "variableName" : "invalidSortByException",
        "variableType" : "InvalidSortByException",
        "documentation" : null,
        "simpleType" : "InvalidSortByException",
        "variableSetterType" : "InvalidSortByException"
      },
      "wrapper" : false
    },
    "ListBranchesRequest" : {
      "c2jName" : "ListBranchesInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the input of a list branches operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListBranches",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.ListBranches",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository that contains the branches.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository that contains the branches.</p>\n@param repositoryName The name of the repository that contains the branches.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository that contains the branches.</p>\n@return The name of the repository that contains the branches.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository that contains the branches.</p>\n@param repositoryName The name of the repository that contains the branches.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository that contains the branches.</p>\n@param repositoryName The name of the repository that contains the branches.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository that contains the branches.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>An enumeration token that allows the operation to batch the results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results.</p>\n@param nextToken An enumeration token that allows the operation to batch the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results.</p>\n@return An enumeration token that allows the operation to batch the results.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "setterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results.</p>\n@param nextToken An enumeration token that allows the operation to batch the results.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results.</p>\n@param nextToken An enumeration token that allows the operation to batch the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>An enumeration token that allows the operation to batch the results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "NextToken" : {
          "c2jName" : "nextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>An enumeration token that allows the operation to batch the results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results.</p>\n@param nextToken An enumeration token that allows the operation to batch the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results.</p>\n@return An enumeration token that allows the operation to batch the results.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "setterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results.</p>\n@param nextToken An enumeration token that allows the operation to batch the results.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results.</p>\n@param nextToken An enumeration token that allows the operation to batch the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>An enumeration token that allows the operation to batch the results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository that contains the branches.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository that contains the branches.</p>\n@param repositoryName The name of the repository that contains the branches.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository that contains the branches.</p>\n@return The name of the repository that contains the branches.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository that contains the branches.</p>\n@param repositoryName The name of the repository that contains the branches.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository that contains the branches.</p>\n@param repositoryName The name of the repository that contains the branches.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository that contains the branches.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName" ],
      "shapeName" : "ListBranchesRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ListBranchesRequest",
        "variableName" : "listBranchesRequest",
        "variableType" : "ListBranchesRequest",
        "documentation" : null,
        "simpleType" : "ListBranchesRequest",
        "variableSetterType" : "ListBranchesRequest"
      },
      "wrapper" : false
    },
    "ListBranchesResult" : {
      "c2jName" : "ListBranchesOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the output of a list branches operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "branches",
        "c2jShape" : "BranchNameList",
        "deprecated" : false,
        "documentation" : "<p>The list of branch names.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The list of branch names.</p>\n@param branches The list of branch names.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBranches",
        "getterDocumentation" : "/**<p>The list of branch names.</p>\n@return The list of branch names.*/",
        "getterMethodName" : "getBranches",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "branches",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "branches",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "BranchName",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Branches",
        "setterDocumentation" : "/**<p>The list of branch names.</p>\n@param branches The list of branch names.*/",
        "setterMethodName" : "setBranches",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "branches",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The list of branch names.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setBranches(java.util.Collection)} or {@link #withBranches(java.util.Collection)} if you want to override the existing values.</p>\n@param branches The list of branch names.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "branches",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>The list of branch names.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>An enumeration token that returns the batch of the results.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An enumeration token that returns the batch of the results.</p>\n@param nextToken An enumeration token that returns the batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>An enumeration token that returns the batch of the results.</p>\n@return An enumeration token that returns the batch of the results.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "setterDocumentation" : "/**<p>An enumeration token that returns the batch of the results.</p>\n@param nextToken An enumeration token that returns the batch of the results.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An enumeration token that returns the batch of the results.</p>\n@param nextToken An enumeration token that returns the batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>An enumeration token that returns the batch of the results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Branches" : {
          "c2jName" : "branches",
          "c2jShape" : "BranchNameList",
          "deprecated" : false,
          "documentation" : "<p>The list of branch names.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The list of branch names.</p>\n@param branches The list of branch names.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBranches",
          "getterDocumentation" : "/**<p>The list of branch names.</p>\n@return The list of branch names.*/",
          "getterMethodName" : "getBranches",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "branches",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "branches",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "BranchName",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Branches",
          "setterDocumentation" : "/**<p>The list of branch names.</p>\n@param branches The list of branch names.*/",
          "setterMethodName" : "setBranches",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "branches",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The list of branch names.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setBranches(java.util.Collection)} or {@link #withBranches(java.util.Collection)} if you want to override the existing values.</p>\n@param branches The list of branch names.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "branches",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>The list of branch names.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "nextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>An enumeration token that returns the batch of the results.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An enumeration token that returns the batch of the results.</p>\n@param nextToken An enumeration token that returns the batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>An enumeration token that returns the batch of the results.</p>\n@return An enumeration token that returns the batch of the results.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "setterDocumentation" : "/**<p>An enumeration token that returns the batch of the results.</p>\n@param nextToken An enumeration token that returns the batch of the results.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An enumeration token that returns the batch of the results.</p>\n@param nextToken An enumeration token that returns the batch of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>An enumeration token that returns the batch of the results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListBranchesResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "ListBranchesResult",
        "variableName" : "listBranchesResult",
        "variableType" : "ListBranchesResult",
        "documentation" : null,
        "simpleType" : "ListBranchesResult",
        "variableSetterType" : "ListBranchesResult"
      },
      "wrapper" : false
    },
    "ListRepositoriesRequest" : {
      "c2jName" : "ListRepositoriesInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the input of a list repositories operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListRepositories",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.ListRepositories",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "nextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>\n@param nextToken An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>\n@return An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "setterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>\n@param nextToken An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>\n@param nextToken An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "sortBy",
        "c2jShape" : "SortByEnum",
        "deprecated" : false,
        "documentation" : "<p>The criteria used to sort the results of a list repositories operation.</p>",
        "enumType" : "SortByEnum",
        "fluentSetterDocumentation" : "/**<p>The criteria used to sort the results of a list repositories operation.</p>\n@param sortBy The criteria used to sort the results of a list repositories operation.\n@return Returns a reference to this object so that method calls can be chained together.\n@see SortByEnum*/",
        "fluentSetterMethodName" : "withSortBy",
        "getterDocumentation" : "/**<p>The criteria used to sort the results of a list repositories operation.</p>\n@return The criteria used to sort the results of a list repositories operation.\n@see SortByEnum*/",
        "getterMethodName" : "getSortBy",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "sortBy",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "sortBy",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SortBy",
        "setterDocumentation" : "/**<p>The criteria used to sort the results of a list repositories operation.</p>\n@param sortBy The criteria used to sort the results of a list repositories operation.\n@see SortByEnum*/",
        "setterMethodName" : "setSortBy",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "sortBy",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The criteria used to sort the results of a list repositories operation.</p>\n@param sortBy The criteria used to sort the results of a list repositories operation.\n@return Returns a reference to this object so that method calls can be chained together.\n@see SortByEnum*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "sortBy",
          "variableType" : "String",
          "documentation" : "<p>The criteria used to sort the results of a list repositories operation.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "order",
        "c2jShape" : "OrderEnum",
        "deprecated" : false,
        "documentation" : "<p>The order in which to sort the results of a list repositories operation.</p>",
        "enumType" : "OrderEnum",
        "fluentSetterDocumentation" : "/**<p>The order in which to sort the results of a list repositories operation.</p>\n@param order The order in which to sort the results of a list repositories operation.\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrderEnum*/",
        "fluentSetterMethodName" : "withOrder",
        "getterDocumentation" : "/**<p>The order in which to sort the results of a list repositories operation.</p>\n@return The order in which to sort the results of a list repositories operation.\n@see OrderEnum*/",
        "getterMethodName" : "getOrder",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "order",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "order",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Order",
        "setterDocumentation" : "/**<p>The order in which to sort the results of a list repositories operation.</p>\n@param order The order in which to sort the results of a list repositories operation.\n@see OrderEnum*/",
        "setterMethodName" : "setOrder",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "order",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The order in which to sort the results of a list repositories operation.</p>\n@param order The order in which to sort the results of a list repositories operation.\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrderEnum*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "order",
          "variableType" : "String",
          "documentation" : "<p>The order in which to sort the results of a list repositories operation.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "NextToken" : {
          "c2jName" : "nextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>\n@param nextToken An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>\n@return An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "setterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>\n@param nextToken An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>\n@param nextToken An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Order" : {
          "c2jName" : "order",
          "c2jShape" : "OrderEnum",
          "deprecated" : false,
          "documentation" : "<p>The order in which to sort the results of a list repositories operation.</p>",
          "enumType" : "OrderEnum",
          "fluentSetterDocumentation" : "/**<p>The order in which to sort the results of a list repositories operation.</p>\n@param order The order in which to sort the results of a list repositories operation.\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrderEnum*/",
          "fluentSetterMethodName" : "withOrder",
          "getterDocumentation" : "/**<p>The order in which to sort the results of a list repositories operation.</p>\n@return The order in which to sort the results of a list repositories operation.\n@see OrderEnum*/",
          "getterMethodName" : "getOrder",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "order",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "order",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Order",
          "setterDocumentation" : "/**<p>The order in which to sort the results of a list repositories operation.</p>\n@param order The order in which to sort the results of a list repositories operation.\n@see OrderEnum*/",
          "setterMethodName" : "setOrder",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "order",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The order in which to sort the results of a list repositories operation.</p>\n@param order The order in which to sort the results of a list repositories operation.\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrderEnum*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "order",
            "variableType" : "String",
            "documentation" : "<p>The order in which to sort the results of a list repositories operation.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SortBy" : {
          "c2jName" : "sortBy",
          "c2jShape" : "SortByEnum",
          "deprecated" : false,
          "documentation" : "<p>The criteria used to sort the results of a list repositories operation.</p>",
          "enumType" : "SortByEnum",
          "fluentSetterDocumentation" : "/**<p>The criteria used to sort the results of a list repositories operation.</p>\n@param sortBy The criteria used to sort the results of a list repositories operation.\n@return Returns a reference to this object so that method calls can be chained together.\n@see SortByEnum*/",
          "fluentSetterMethodName" : "withSortBy",
          "getterDocumentation" : "/**<p>The criteria used to sort the results of a list repositories operation.</p>\n@return The criteria used to sort the results of a list repositories operation.\n@see SortByEnum*/",
          "getterMethodName" : "getSortBy",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "sortBy",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "sortBy",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SortBy",
          "setterDocumentation" : "/**<p>The criteria used to sort the results of a list repositories operation.</p>\n@param sortBy The criteria used to sort the results of a list repositories operation.\n@see SortByEnum*/",
          "setterMethodName" : "setSortBy",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "sortBy",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The criteria used to sort the results of a list repositories operation.</p>\n@param sortBy The criteria used to sort the results of a list repositories operation.\n@return Returns a reference to this object so that method calls can be chained together.\n@see SortByEnum*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "sortBy",
            "variableType" : "String",
            "documentation" : "<p>The criteria used to sort the results of a list repositories operation.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListRepositoriesRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ListRepositoriesRequest",
        "variableName" : "listRepositoriesRequest",
        "variableType" : "ListRepositoriesRequest",
        "documentation" : null,
        "simpleType" : "ListRepositoriesRequest",
        "variableSetterType" : "ListRepositoriesRequest"
      },
      "wrapper" : false
    },
    "ListRepositoriesResult" : {
      "c2jName" : "ListRepositoriesOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the output of a list repositories operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "repositories",
        "c2jShape" : "RepositoryNameIdPairList",
        "deprecated" : false,
        "documentation" : "<p>Lists the repositories called by the list repositories operation.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Lists the repositories called by the list repositories operation.</p>\n@param repositories Lists the repositories called by the list repositories operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositories",
        "getterDocumentation" : "/**<p>Lists the repositories called by the list repositories operation.</p>\n@return Lists the repositories called by the list repositories operation.*/",
        "getterMethodName" : "getRepositories",
        "getterModel" : {
          "returnType" : "java.util.List<RepositoryNameIdPair>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositories",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositories",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "RepositoryNameIdPair",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "RepositoryNameIdPair",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "RepositoryNameIdPair",
              "variableName" : "member",
              "variableType" : "RepositoryNameIdPair",
              "documentation" : "",
              "simpleType" : "RepositoryNameIdPair",
              "variableSetterType" : "RepositoryNameIdPair"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "RepositoryNameIdPair",
              "variableName" : "member",
              "variableType" : "RepositoryNameIdPair",
              "documentation" : "",
              "simpleType" : "RepositoryNameIdPair",
              "variableSetterType" : "RepositoryNameIdPair"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "RepositoryNameIdPair",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "RepositoryNameIdPair",
          "templateImplType" : "java.util.ArrayList<RepositoryNameIdPair>",
          "templateType" : "java.util.List<RepositoryNameIdPair>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Repositories",
        "setterDocumentation" : "/**<p>Lists the repositories called by the list repositories operation.</p>\n@param repositories Lists the repositories called by the list repositories operation.*/",
        "setterMethodName" : "setRepositories",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<RepositoryNameIdPair>",
          "variableName" : "repositories",
          "variableType" : "java.util.List<RepositoryNameIdPair>",
          "documentation" : "",
          "simpleType" : "List<RepositoryNameIdPair>",
          "variableSetterType" : "java.util.Collection<RepositoryNameIdPair>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Lists the repositories called by the list repositories operation.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRepositories(java.util.Collection)} or {@link #withRepositories(java.util.Collection)} if you want to override the existing values.</p>\n@param repositories Lists the repositories called by the list repositories operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<RepositoryNameIdPair>",
          "variableName" : "repositories",
          "variableType" : "java.util.List<RepositoryNameIdPair>",
          "documentation" : "<p>Lists the repositories called by the list repositories operation.</p>",
          "simpleType" : "List<RepositoryNameIdPair>",
          "variableSetterType" : "java.util.Collection<RepositoryNameIdPair>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextToken",
        "c2jShape" : "NextToken",
        "deprecated" : false,
        "documentation" : "<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>\n@param nextToken An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>\n@return An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "setterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>\n@param nextToken An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>\n@param nextToken An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "NextToken" : {
          "c2jName" : "nextToken",
          "c2jShape" : "NextToken",
          "deprecated" : false,
          "documentation" : "<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>\n@param nextToken An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>\n@return An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "setterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>\n@param nextToken An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>\n@param nextToken An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Repositories" : {
          "c2jName" : "repositories",
          "c2jShape" : "RepositoryNameIdPairList",
          "deprecated" : false,
          "documentation" : "<p>Lists the repositories called by the list repositories operation.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Lists the repositories called by the list repositories operation.</p>\n@param repositories Lists the repositories called by the list repositories operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositories",
          "getterDocumentation" : "/**<p>Lists the repositories called by the list repositories operation.</p>\n@return Lists the repositories called by the list repositories operation.*/",
          "getterMethodName" : "getRepositories",
          "getterModel" : {
            "returnType" : "java.util.List<RepositoryNameIdPair>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositories",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositories",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "RepositoryNameIdPair",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "RepositoryNameIdPair",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "RepositoryNameIdPair",
                "variableName" : "member",
                "variableType" : "RepositoryNameIdPair",
                "documentation" : "",
                "simpleType" : "RepositoryNameIdPair",
                "variableSetterType" : "RepositoryNameIdPair"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "RepositoryNameIdPair",
                "variableName" : "member",
                "variableType" : "RepositoryNameIdPair",
                "documentation" : "",
                "simpleType" : "RepositoryNameIdPair",
                "variableSetterType" : "RepositoryNameIdPair"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "RepositoryNameIdPair",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "RepositoryNameIdPair",
            "templateImplType" : "java.util.ArrayList<RepositoryNameIdPair>",
            "templateType" : "java.util.List<RepositoryNameIdPair>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Repositories",
          "setterDocumentation" : "/**<p>Lists the repositories called by the list repositories operation.</p>\n@param repositories Lists the repositories called by the list repositories operation.*/",
          "setterMethodName" : "setRepositories",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<RepositoryNameIdPair>",
            "variableName" : "repositories",
            "variableType" : "java.util.List<RepositoryNameIdPair>",
            "documentation" : "",
            "simpleType" : "List<RepositoryNameIdPair>",
            "variableSetterType" : "java.util.Collection<RepositoryNameIdPair>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Lists the repositories called by the list repositories operation.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRepositories(java.util.Collection)} or {@link #withRepositories(java.util.Collection)} if you want to override the existing values.</p>\n@param repositories Lists the repositories called by the list repositories operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<RepositoryNameIdPair>",
            "variableName" : "repositories",
            "variableType" : "java.util.List<RepositoryNameIdPair>",
            "documentation" : "<p>Lists the repositories called by the list repositories operation.</p>",
            "simpleType" : "List<RepositoryNameIdPair>",
            "variableSetterType" : "java.util.Collection<RepositoryNameIdPair>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListRepositoriesResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "ListRepositoriesResult",
        "variableName" : "listRepositoriesResult",
        "variableType" : "ListRepositoriesResult",
        "documentation" : null,
        "simpleType" : "ListRepositoriesResult",
        "variableSetterType" : "ListRepositoriesResult"
      },
      "wrapper" : false
    },
    "MaximumBranchesExceededException" : {
      "c2jName" : "MaximumBranchesExceededException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The number of branches for the trigger was exceeded.</p>",
      "enums" : null,
      "errorCode" : "MaximumBranchesExceededException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "MaximumBranchesExceededException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "MaximumBranchesExceededException",
        "variableName" : "maximumBranchesExceededException",
        "variableType" : "MaximumBranchesExceededException",
        "documentation" : null,
        "simpleType" : "MaximumBranchesExceededException",
        "variableSetterType" : "MaximumBranchesExceededException"
      },
      "wrapper" : false
    },
    "MaximumRepositoryNamesExceededException" : {
      "c2jName" : "MaximumRepositoryNamesExceededException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The maximum number of allowed repository names was exceeded. Currently, this number is 25.</p>",
      "enums" : null,
      "errorCode" : "MaximumRepositoryNamesExceededException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "MaximumRepositoryNamesExceededException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "MaximumRepositoryNamesExceededException",
        "variableName" : "maximumRepositoryNamesExceededException",
        "variableType" : "MaximumRepositoryNamesExceededException",
        "documentation" : null,
        "simpleType" : "MaximumRepositoryNamesExceededException",
        "variableSetterType" : "MaximumRepositoryNamesExceededException"
      },
      "wrapper" : false
    },
    "MaximumRepositoryTriggersExceededException" : {
      "c2jName" : "MaximumRepositoryTriggersExceededException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The number of triggers allowed for the repository was exceeded.</p>",
      "enums" : null,
      "errorCode" : "MaximumRepositoryTriggersExceededException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "MaximumRepositoryTriggersExceededException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "MaximumRepositoryTriggersExceededException",
        "variableName" : "maximumRepositoryTriggersExceededException",
        "variableType" : "MaximumRepositoryTriggersExceededException",
        "documentation" : null,
        "simpleType" : "MaximumRepositoryTriggersExceededException",
        "variableSetterType" : "MaximumRepositoryTriggersExceededException"
      },
      "wrapper" : false
    },
    "OrderEnum" : {
      "c2jName" : "OrderEnum",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "Ascending",
        "value" : "ascending"
      }, {
        "name" : "Descending",
        "value" : "descending"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "OrderEnum",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "OrderEnum",
        "variableName" : "orderEnum",
        "variableType" : "OrderEnum",
        "documentation" : null,
        "simpleType" : "OrderEnum",
        "variableSetterType" : "OrderEnum"
      },
      "wrapper" : false
    },
    "PathDoesNotExistException" : {
      "c2jName" : "PathDoesNotExistException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified path does not exist.</p>",
      "enums" : null,
      "errorCode" : "PathDoesNotExistException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "PathDoesNotExistException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "PathDoesNotExistException",
        "variableName" : "pathDoesNotExistException",
        "variableType" : "PathDoesNotExistException",
        "documentation" : null,
        "simpleType" : "PathDoesNotExistException",
        "variableSetterType" : "PathDoesNotExistException"
      },
      "wrapper" : false
    },
    "PutRepositoryTriggersRequest" : {
      "c2jName" : "PutRepositoryTriggersInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the input ofa put repository triggers operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "PutRepositoryTriggers",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.PutRepositoryTriggers",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository where you want to create or update the trigger.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository where you want to create or update the trigger.</p>\n@param repositoryName The name of the repository where you want to create or update the trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository where you want to create or update the trigger.</p>\n@return The name of the repository where you want to create or update the trigger.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository where you want to create or update the trigger.</p>\n@param repositoryName The name of the repository where you want to create or update the trigger.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository where you want to create or update the trigger.</p>\n@param repositoryName The name of the repository where you want to create or update the trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository where you want to create or update the trigger.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "triggers",
        "c2jShape" : "RepositoryTriggersList",
        "deprecated" : false,
        "documentation" : "<p>The JSON block of configuration information for each trigger.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The JSON block of configuration information for each trigger.</p>\n@param triggers The JSON block of configuration information for each trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTriggers",
        "getterDocumentation" : "/**<p>The JSON block of configuration information for each trigger.</p>\n@return The JSON block of configuration information for each trigger.*/",
        "getterMethodName" : "getTriggers",
        "getterModel" : {
          "returnType" : "java.util.List<RepositoryTrigger>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "triggers",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "triggers",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "RepositoryTrigger",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "RepositoryTrigger",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "RepositoryTrigger",
              "variableName" : "member",
              "variableType" : "RepositoryTrigger",
              "documentation" : "",
              "simpleType" : "RepositoryTrigger",
              "variableSetterType" : "RepositoryTrigger"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "RepositoryTrigger",
              "variableName" : "member",
              "variableType" : "RepositoryTrigger",
              "documentation" : "",
              "simpleType" : "RepositoryTrigger",
              "variableSetterType" : "RepositoryTrigger"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "RepositoryTrigger",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "RepositoryTrigger",
          "templateImplType" : "java.util.ArrayList<RepositoryTrigger>",
          "templateType" : "java.util.List<RepositoryTrigger>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Triggers",
        "setterDocumentation" : "/**<p>The JSON block of configuration information for each trigger.</p>\n@param triggers The JSON block of configuration information for each trigger.*/",
        "setterMethodName" : "setTriggers",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<RepositoryTrigger>",
          "variableName" : "triggers",
          "variableType" : "java.util.List<RepositoryTrigger>",
          "documentation" : "",
          "simpleType" : "List<RepositoryTrigger>",
          "variableSetterType" : "java.util.Collection<RepositoryTrigger>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The JSON block of configuration information for each trigger.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTriggers(java.util.Collection)} or {@link #withTriggers(java.util.Collection)} if you want to override the existing values.</p>\n@param triggers The JSON block of configuration information for each trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<RepositoryTrigger>",
          "variableName" : "triggers",
          "variableType" : "java.util.List<RepositoryTrigger>",
          "documentation" : "<p>The JSON block of configuration information for each trigger.</p>",
          "simpleType" : "List<RepositoryTrigger>",
          "variableSetterType" : "java.util.Collection<RepositoryTrigger>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository where you want to create or update the trigger.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository where you want to create or update the trigger.</p>\n@param repositoryName The name of the repository where you want to create or update the trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository where you want to create or update the trigger.</p>\n@return The name of the repository where you want to create or update the trigger.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository where you want to create or update the trigger.</p>\n@param repositoryName The name of the repository where you want to create or update the trigger.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository where you want to create or update the trigger.</p>\n@param repositoryName The name of the repository where you want to create or update the trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository where you want to create or update the trigger.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Triggers" : {
          "c2jName" : "triggers",
          "c2jShape" : "RepositoryTriggersList",
          "deprecated" : false,
          "documentation" : "<p>The JSON block of configuration information for each trigger.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The JSON block of configuration information for each trigger.</p>\n@param triggers The JSON block of configuration information for each trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTriggers",
          "getterDocumentation" : "/**<p>The JSON block of configuration information for each trigger.</p>\n@return The JSON block of configuration information for each trigger.*/",
          "getterMethodName" : "getTriggers",
          "getterModel" : {
            "returnType" : "java.util.List<RepositoryTrigger>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "triggers",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "triggers",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "RepositoryTrigger",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "RepositoryTrigger",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "RepositoryTrigger",
                "variableName" : "member",
                "variableType" : "RepositoryTrigger",
                "documentation" : "",
                "simpleType" : "RepositoryTrigger",
                "variableSetterType" : "RepositoryTrigger"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "RepositoryTrigger",
                "variableName" : "member",
                "variableType" : "RepositoryTrigger",
                "documentation" : "",
                "simpleType" : "RepositoryTrigger",
                "variableSetterType" : "RepositoryTrigger"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "RepositoryTrigger",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "RepositoryTrigger",
            "templateImplType" : "java.util.ArrayList<RepositoryTrigger>",
            "templateType" : "java.util.List<RepositoryTrigger>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Triggers",
          "setterDocumentation" : "/**<p>The JSON block of configuration information for each trigger.</p>\n@param triggers The JSON block of configuration information for each trigger.*/",
          "setterMethodName" : "setTriggers",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<RepositoryTrigger>",
            "variableName" : "triggers",
            "variableType" : "java.util.List<RepositoryTrigger>",
            "documentation" : "",
            "simpleType" : "List<RepositoryTrigger>",
            "variableSetterType" : "java.util.Collection<RepositoryTrigger>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The JSON block of configuration information for each trigger.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTriggers(java.util.Collection)} or {@link #withTriggers(java.util.Collection)} if you want to override the existing values.</p>\n@param triggers The JSON block of configuration information for each trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<RepositoryTrigger>",
            "variableName" : "triggers",
            "variableType" : "java.util.List<RepositoryTrigger>",
            "documentation" : "<p>The JSON block of configuration information for each trigger.</p>",
            "simpleType" : "List<RepositoryTrigger>",
            "variableSetterType" : "java.util.Collection<RepositoryTrigger>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName", "triggers" ],
      "shapeName" : "PutRepositoryTriggersRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "PutRepositoryTriggersRequest",
        "variableName" : "putRepositoryTriggersRequest",
        "variableType" : "PutRepositoryTriggersRequest",
        "documentation" : null,
        "simpleType" : "PutRepositoryTriggersRequest",
        "variableSetterType" : "PutRepositoryTriggersRequest"
      },
      "wrapper" : false
    },
    "PutRepositoryTriggersResult" : {
      "c2jName" : "PutRepositoryTriggersOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the output of a put repository triggers operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "configurationId",
        "c2jShape" : "RepositoryTriggersConfigurationId",
        "deprecated" : false,
        "documentation" : "<p>The system-generated unique ID for the create or update operation.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The system-generated unique ID for the create or update operation.</p>\n@param configurationId The system-generated unique ID for the create or update operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withConfigurationId",
        "getterDocumentation" : "/**<p>The system-generated unique ID for the create or update operation.</p>\n@return The system-generated unique ID for the create or update operation.*/",
        "getterMethodName" : "getConfigurationId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "configurationId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "configurationId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ConfigurationId",
        "setterDocumentation" : "/**<p>The system-generated unique ID for the create or update operation.</p>\n@param configurationId The system-generated unique ID for the create or update operation.*/",
        "setterMethodName" : "setConfigurationId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "configurationId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The system-generated unique ID for the create or update operation.</p>\n@param configurationId The system-generated unique ID for the create or update operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "configurationId",
          "variableType" : "String",
          "documentation" : "<p>The system-generated unique ID for the create or update operation.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ConfigurationId" : {
          "c2jName" : "configurationId",
          "c2jShape" : "RepositoryTriggersConfigurationId",
          "deprecated" : false,
          "documentation" : "<p>The system-generated unique ID for the create or update operation.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The system-generated unique ID for the create or update operation.</p>\n@param configurationId The system-generated unique ID for the create or update operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withConfigurationId",
          "getterDocumentation" : "/**<p>The system-generated unique ID for the create or update operation.</p>\n@return The system-generated unique ID for the create or update operation.*/",
          "getterMethodName" : "getConfigurationId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "configurationId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "configurationId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ConfigurationId",
          "setterDocumentation" : "/**<p>The system-generated unique ID for the create or update operation.</p>\n@param configurationId The system-generated unique ID for the create or update operation.*/",
          "setterMethodName" : "setConfigurationId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "configurationId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The system-generated unique ID for the create or update operation.</p>\n@param configurationId The system-generated unique ID for the create or update operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "configurationId",
            "variableType" : "String",
            "documentation" : "<p>The system-generated unique ID for the create or update operation.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "PutRepositoryTriggersResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "PutRepositoryTriggersResult",
        "variableName" : "putRepositoryTriggersResult",
        "variableType" : "PutRepositoryTriggersResult",
        "documentation" : null,
        "simpleType" : "PutRepositoryTriggersResult",
        "variableSetterType" : "PutRepositoryTriggersResult"
      },
      "wrapper" : false
    },
    "RepositoryDoesNotExistException" : {
      "c2jName" : "RepositoryDoesNotExistException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified repository does not exist.</p>",
      "enums" : null,
      "errorCode" : "RepositoryDoesNotExistException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RepositoryDoesNotExistException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "RepositoryDoesNotExistException",
        "variableName" : "repositoryDoesNotExistException",
        "variableType" : "RepositoryDoesNotExistException",
        "documentation" : null,
        "simpleType" : "RepositoryDoesNotExistException",
        "variableSetterType" : "RepositoryDoesNotExistException"
      },
      "wrapper" : false
    },
    "RepositoryLimitExceededException" : {
      "c2jName" : "RepositoryLimitExceededException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A repository resource limit was exceeded.</p>",
      "enums" : null,
      "errorCode" : "RepositoryLimitExceededException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RepositoryLimitExceededException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "RepositoryLimitExceededException",
        "variableName" : "repositoryLimitExceededException",
        "variableType" : "RepositoryLimitExceededException",
        "documentation" : null,
        "simpleType" : "RepositoryLimitExceededException",
        "variableSetterType" : "RepositoryLimitExceededException"
      },
      "wrapper" : false
    },
    "RepositoryMetadata" : {
      "c2jName" : "RepositoryMetadata",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Information about a repository.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "accountId",
        "c2jShape" : "AccountId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the AWS account associated with the repository.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the AWS account associated with the repository.</p>\n@param accountId The ID of the AWS account associated with the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAccountId",
        "getterDocumentation" : "/**<p>The ID of the AWS account associated with the repository.</p>\n@return The ID of the AWS account associated with the repository.*/",
        "getterMethodName" : "getAccountId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "accountId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "accountId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "AccountId",
        "setterDocumentation" : "/**<p>The ID of the AWS account associated with the repository.</p>\n@param accountId The ID of the AWS account associated with the repository.*/",
        "setterMethodName" : "setAccountId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "accountId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the AWS account associated with the repository.</p>\n@param accountId The ID of the AWS account associated with the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "accountId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the AWS account associated with the repository.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryId",
        "c2jShape" : "RepositoryId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the repository.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the repository.</p>\n@param repositoryId The ID of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryId",
        "getterDocumentation" : "/**<p>The ID of the repository.</p>\n@return The ID of the repository.*/",
        "getterMethodName" : "getRepositoryId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryId",
        "setterDocumentation" : "/**<p>The ID of the repository.</p>\n@param repositoryId The ID of the repository.*/",
        "setterMethodName" : "setRepositoryId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the repository.</p>\n@param repositoryId The ID of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the repository.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The repository's name.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The repository's name.</p>\n@param repositoryName The repository's name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The repository's name.</p>\n@return The repository's name.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The repository's name.</p>\n@param repositoryName The repository's name.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The repository's name.</p>\n@param repositoryName The repository's name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The repository's name.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryDescription",
        "c2jShape" : "RepositoryDescription",
        "deprecated" : false,
        "documentation" : "<p>A comment or description about the repository.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A comment or description about the repository.</p>\n@param repositoryDescription A comment or description about the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryDescription",
        "getterDocumentation" : "/**<p>A comment or description about the repository.</p>\n@return A comment or description about the repository.*/",
        "getterMethodName" : "getRepositoryDescription",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryDescription",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryDescription",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryDescription",
        "setterDocumentation" : "/**<p>A comment or description about the repository.</p>\n@param repositoryDescription A comment or description about the repository.*/",
        "setterMethodName" : "setRepositoryDescription",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryDescription",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A comment or description about the repository.</p>\n@param repositoryDescription A comment or description about the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryDescription",
          "variableType" : "String",
          "documentation" : "<p>A comment or description about the repository.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "defaultBranch",
        "c2jShape" : "BranchName",
        "deprecated" : false,
        "documentation" : "<p>The repository's default branch name.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The repository's default branch name.</p>\n@param defaultBranch The repository's default branch name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDefaultBranch",
        "getterDocumentation" : "/**<p>The repository's default branch name.</p>\n@return The repository's default branch name.*/",
        "getterMethodName" : "getDefaultBranch",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "defaultBranch",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "defaultBranch",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "DefaultBranch",
        "setterDocumentation" : "/**<p>The repository's default branch name.</p>\n@param defaultBranch The repository's default branch name.*/",
        "setterMethodName" : "setDefaultBranch",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "defaultBranch",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The repository's default branch name.</p>\n@param defaultBranch The repository's default branch name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "defaultBranch",
          "variableType" : "String",
          "documentation" : "<p>The repository's default branch name.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "lastModifiedDate",
        "c2jShape" : "LastModifiedDate",
        "deprecated" : false,
        "documentation" : "<p>The date and time the repository was last modified, in timestamp format.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date and time the repository was last modified, in timestamp format.</p>\n@param lastModifiedDate The date and time the repository was last modified, in timestamp format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLastModifiedDate",
        "getterDocumentation" : "/**<p>The date and time the repository was last modified, in timestamp format.</p>\n@return The date and time the repository was last modified, in timestamp format.*/",
        "getterMethodName" : "getLastModifiedDate",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "lastModifiedDate",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "lastModifiedDate",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "LastModifiedDate",
        "setterDocumentation" : "/**<p>The date and time the repository was last modified, in timestamp format.</p>\n@param lastModifiedDate The date and time the repository was last modified, in timestamp format.*/",
        "setterMethodName" : "setLastModifiedDate",
        "setterModel" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "lastModifiedDate",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date and time the repository was last modified, in timestamp format.</p>\n@param lastModifiedDate The date and time the repository was last modified, in timestamp format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "lastModifiedDate",
          "variableType" : "java.util.Date",
          "documentation" : "<p>The date and time the repository was last modified, in timestamp format.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "creationDate",
        "c2jShape" : "CreationDate",
        "deprecated" : false,
        "documentation" : "<p>The date and time the repository was created, in timestamp format.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date and time the repository was created, in timestamp format.</p>\n@param creationDate The date and time the repository was created, in timestamp format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCreationDate",
        "getterDocumentation" : "/**<p>The date and time the repository was created, in timestamp format.</p>\n@return The date and time the repository was created, in timestamp format.*/",
        "getterMethodName" : "getCreationDate",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "creationDate",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "creationDate",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "CreationDate",
        "setterDocumentation" : "/**<p>The date and time the repository was created, in timestamp format.</p>\n@param creationDate The date and time the repository was created, in timestamp format.*/",
        "setterMethodName" : "setCreationDate",
        "setterModel" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "creationDate",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date and time the repository was created, in timestamp format.</p>\n@param creationDate The date and time the repository was created, in timestamp format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "creationDate",
          "variableType" : "java.util.Date",
          "documentation" : "<p>The date and time the repository was created, in timestamp format.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "cloneUrlHttp",
        "c2jShape" : "CloneUrlHttp",
        "deprecated" : false,
        "documentation" : "<p>The URL to use for cloning the repository over HTTPS.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The URL to use for cloning the repository over HTTPS.</p>\n@param cloneUrlHttp The URL to use for cloning the repository over HTTPS.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCloneUrlHttp",
        "getterDocumentation" : "/**<p>The URL to use for cloning the repository over HTTPS.</p>\n@return The URL to use for cloning the repository over HTTPS.*/",
        "getterMethodName" : "getCloneUrlHttp",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "cloneUrlHttp",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "cloneUrlHttp",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CloneUrlHttp",
        "setterDocumentation" : "/**<p>The URL to use for cloning the repository over HTTPS.</p>\n@param cloneUrlHttp The URL to use for cloning the repository over HTTPS.*/",
        "setterMethodName" : "setCloneUrlHttp",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "cloneUrlHttp",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The URL to use for cloning the repository over HTTPS.</p>\n@param cloneUrlHttp The URL to use for cloning the repository over HTTPS.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "cloneUrlHttp",
          "variableType" : "String",
          "documentation" : "<p>The URL to use for cloning the repository over HTTPS.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "cloneUrlSsh",
        "c2jShape" : "CloneUrlSsh",
        "deprecated" : false,
        "documentation" : "<p>The URL to use for cloning the repository over SSH.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The URL to use for cloning the repository over SSH.</p>\n@param cloneUrlSsh The URL to use for cloning the repository over SSH.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCloneUrlSsh",
        "getterDocumentation" : "/**<p>The URL to use for cloning the repository over SSH.</p>\n@return The URL to use for cloning the repository over SSH.*/",
        "getterMethodName" : "getCloneUrlSsh",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "cloneUrlSsh",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "cloneUrlSsh",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CloneUrlSsh",
        "setterDocumentation" : "/**<p>The URL to use for cloning the repository over SSH.</p>\n@param cloneUrlSsh The URL to use for cloning the repository over SSH.*/",
        "setterMethodName" : "setCloneUrlSsh",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "cloneUrlSsh",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The URL to use for cloning the repository over SSH.</p>\n@param cloneUrlSsh The URL to use for cloning the repository over SSH.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "cloneUrlSsh",
          "variableType" : "String",
          "documentation" : "<p>The URL to use for cloning the repository over SSH.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Arn",
        "c2jShape" : "Arn",
        "deprecated" : false,
        "documentation" : "<p>The Amazon Resource Name (ARN) of the repository.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the repository.</p>\n@param arn The Amazon Resource Name (ARN) of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withArn",
        "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the repository.</p>\n@return The Amazon Resource Name (ARN) of the repository.*/",
        "getterMethodName" : "getArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Arn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Arn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Arn",
        "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the repository.</p>\n@param arn The Amazon Resource Name (ARN) of the repository.*/",
        "setterMethodName" : "setArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the repository.</p>\n@param arn The Amazon Resource Name (ARN) of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "arn",
          "variableType" : "String",
          "documentation" : "<p>The Amazon Resource Name (ARN) of the repository.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AccountId" : {
          "c2jName" : "accountId",
          "c2jShape" : "AccountId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the AWS account associated with the repository.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the AWS account associated with the repository.</p>\n@param accountId The ID of the AWS account associated with the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAccountId",
          "getterDocumentation" : "/**<p>The ID of the AWS account associated with the repository.</p>\n@return The ID of the AWS account associated with the repository.*/",
          "getterMethodName" : "getAccountId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "accountId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "accountId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "AccountId",
          "setterDocumentation" : "/**<p>The ID of the AWS account associated with the repository.</p>\n@param accountId The ID of the AWS account associated with the repository.*/",
          "setterMethodName" : "setAccountId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "accountId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the AWS account associated with the repository.</p>\n@param accountId The ID of the AWS account associated with the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "accountId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the AWS account associated with the repository.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Arn" : {
          "c2jName" : "Arn",
          "c2jShape" : "Arn",
          "deprecated" : false,
          "documentation" : "<p>The Amazon Resource Name (ARN) of the repository.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the repository.</p>\n@param arn The Amazon Resource Name (ARN) of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withArn",
          "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the repository.</p>\n@return The Amazon Resource Name (ARN) of the repository.*/",
          "getterMethodName" : "getArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Arn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Arn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Arn",
          "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the repository.</p>\n@param arn The Amazon Resource Name (ARN) of the repository.*/",
          "setterMethodName" : "setArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the repository.</p>\n@param arn The Amazon Resource Name (ARN) of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "arn",
            "variableType" : "String",
            "documentation" : "<p>The Amazon Resource Name (ARN) of the repository.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CloneUrlHttp" : {
          "c2jName" : "cloneUrlHttp",
          "c2jShape" : "CloneUrlHttp",
          "deprecated" : false,
          "documentation" : "<p>The URL to use for cloning the repository over HTTPS.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The URL to use for cloning the repository over HTTPS.</p>\n@param cloneUrlHttp The URL to use for cloning the repository over HTTPS.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCloneUrlHttp",
          "getterDocumentation" : "/**<p>The URL to use for cloning the repository over HTTPS.</p>\n@return The URL to use for cloning the repository over HTTPS.*/",
          "getterMethodName" : "getCloneUrlHttp",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "cloneUrlHttp",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "cloneUrlHttp",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CloneUrlHttp",
          "setterDocumentation" : "/**<p>The URL to use for cloning the repository over HTTPS.</p>\n@param cloneUrlHttp The URL to use for cloning the repository over HTTPS.*/",
          "setterMethodName" : "setCloneUrlHttp",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "cloneUrlHttp",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The URL to use for cloning the repository over HTTPS.</p>\n@param cloneUrlHttp The URL to use for cloning the repository over HTTPS.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "cloneUrlHttp",
            "variableType" : "String",
            "documentation" : "<p>The URL to use for cloning the repository over HTTPS.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CloneUrlSsh" : {
          "c2jName" : "cloneUrlSsh",
          "c2jShape" : "CloneUrlSsh",
          "deprecated" : false,
          "documentation" : "<p>The URL to use for cloning the repository over SSH.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The URL to use for cloning the repository over SSH.</p>\n@param cloneUrlSsh The URL to use for cloning the repository over SSH.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCloneUrlSsh",
          "getterDocumentation" : "/**<p>The URL to use for cloning the repository over SSH.</p>\n@return The URL to use for cloning the repository over SSH.*/",
          "getterMethodName" : "getCloneUrlSsh",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "cloneUrlSsh",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "cloneUrlSsh",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CloneUrlSsh",
          "setterDocumentation" : "/**<p>The URL to use for cloning the repository over SSH.</p>\n@param cloneUrlSsh The URL to use for cloning the repository over SSH.*/",
          "setterMethodName" : "setCloneUrlSsh",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "cloneUrlSsh",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The URL to use for cloning the repository over SSH.</p>\n@param cloneUrlSsh The URL to use for cloning the repository over SSH.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "cloneUrlSsh",
            "variableType" : "String",
            "documentation" : "<p>The URL to use for cloning the repository over SSH.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CreationDate" : {
          "c2jName" : "creationDate",
          "c2jShape" : "CreationDate",
          "deprecated" : false,
          "documentation" : "<p>The date and time the repository was created, in timestamp format.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date and time the repository was created, in timestamp format.</p>\n@param creationDate The date and time the repository was created, in timestamp format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCreationDate",
          "getterDocumentation" : "/**<p>The date and time the repository was created, in timestamp format.</p>\n@return The date and time the repository was created, in timestamp format.*/",
          "getterMethodName" : "getCreationDate",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "creationDate",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "creationDate",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "CreationDate",
          "setterDocumentation" : "/**<p>The date and time the repository was created, in timestamp format.</p>\n@param creationDate The date and time the repository was created, in timestamp format.*/",
          "setterMethodName" : "setCreationDate",
          "setterModel" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "creationDate",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date and time the repository was created, in timestamp format.</p>\n@param creationDate The date and time the repository was created, in timestamp format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "creationDate",
            "variableType" : "java.util.Date",
            "documentation" : "<p>The date and time the repository was created, in timestamp format.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "DefaultBranch" : {
          "c2jName" : "defaultBranch",
          "c2jShape" : "BranchName",
          "deprecated" : false,
          "documentation" : "<p>The repository's default branch name.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The repository's default branch name.</p>\n@param defaultBranch The repository's default branch name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDefaultBranch",
          "getterDocumentation" : "/**<p>The repository's default branch name.</p>\n@return The repository's default branch name.*/",
          "getterMethodName" : "getDefaultBranch",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "defaultBranch",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "defaultBranch",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "DefaultBranch",
          "setterDocumentation" : "/**<p>The repository's default branch name.</p>\n@param defaultBranch The repository's default branch name.*/",
          "setterMethodName" : "setDefaultBranch",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "defaultBranch",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The repository's default branch name.</p>\n@param defaultBranch The repository's default branch name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "defaultBranch",
            "variableType" : "String",
            "documentation" : "<p>The repository's default branch name.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "LastModifiedDate" : {
          "c2jName" : "lastModifiedDate",
          "c2jShape" : "LastModifiedDate",
          "deprecated" : false,
          "documentation" : "<p>The date and time the repository was last modified, in timestamp format.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date and time the repository was last modified, in timestamp format.</p>\n@param lastModifiedDate The date and time the repository was last modified, in timestamp format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLastModifiedDate",
          "getterDocumentation" : "/**<p>The date and time the repository was last modified, in timestamp format.</p>\n@return The date and time the repository was last modified, in timestamp format.*/",
          "getterMethodName" : "getLastModifiedDate",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "lastModifiedDate",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "lastModifiedDate",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "LastModifiedDate",
          "setterDocumentation" : "/**<p>The date and time the repository was last modified, in timestamp format.</p>\n@param lastModifiedDate The date and time the repository was last modified, in timestamp format.*/",
          "setterMethodName" : "setLastModifiedDate",
          "setterModel" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "lastModifiedDate",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date and time the repository was last modified, in timestamp format.</p>\n@param lastModifiedDate The date and time the repository was last modified, in timestamp format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "lastModifiedDate",
            "variableType" : "java.util.Date",
            "documentation" : "<p>The date and time the repository was last modified, in timestamp format.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryDescription" : {
          "c2jName" : "repositoryDescription",
          "c2jShape" : "RepositoryDescription",
          "deprecated" : false,
          "documentation" : "<p>A comment or description about the repository.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A comment or description about the repository.</p>\n@param repositoryDescription A comment or description about the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryDescription",
          "getterDocumentation" : "/**<p>A comment or description about the repository.</p>\n@return A comment or description about the repository.*/",
          "getterMethodName" : "getRepositoryDescription",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryDescription",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryDescription",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryDescription",
          "setterDocumentation" : "/**<p>A comment or description about the repository.</p>\n@param repositoryDescription A comment or description about the repository.*/",
          "setterMethodName" : "setRepositoryDescription",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryDescription",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A comment or description about the repository.</p>\n@param repositoryDescription A comment or description about the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryDescription",
            "variableType" : "String",
            "documentation" : "<p>A comment or description about the repository.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryId" : {
          "c2jName" : "repositoryId",
          "c2jShape" : "RepositoryId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the repository.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the repository.</p>\n@param repositoryId The ID of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryId",
          "getterDocumentation" : "/**<p>The ID of the repository.</p>\n@return The ID of the repository.*/",
          "getterMethodName" : "getRepositoryId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryId",
          "setterDocumentation" : "/**<p>The ID of the repository.</p>\n@param repositoryId The ID of the repository.*/",
          "setterMethodName" : "setRepositoryId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the repository.</p>\n@param repositoryId The ID of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the repository.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The repository's name.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The repository's name.</p>\n@param repositoryName The repository's name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The repository's name.</p>\n@return The repository's name.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The repository's name.</p>\n@param repositoryName The repository's name.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The repository's name.</p>\n@param repositoryName The repository's name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The repository's name.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RepositoryMetadata",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "RepositoryMetadata",
        "variableName" : "repositoryMetadata",
        "variableType" : "RepositoryMetadata",
        "documentation" : null,
        "simpleType" : "RepositoryMetadata",
        "variableSetterType" : "RepositoryMetadata"
      },
      "wrapper" : false
    },
    "RepositoryNameExistsException" : {
      "c2jName" : "RepositoryNameExistsException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The specified repository name already exists.</p>",
      "enums" : null,
      "errorCode" : "RepositoryNameExistsException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RepositoryNameExistsException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "RepositoryNameExistsException",
        "variableName" : "repositoryNameExistsException",
        "variableType" : "RepositoryNameExistsException",
        "documentation" : null,
        "simpleType" : "RepositoryNameExistsException",
        "variableSetterType" : "RepositoryNameExistsException"
      },
      "wrapper" : false
    },
    "RepositoryNameIdPair" : {
      "c2jName" : "RepositoryNameIdPair",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Information about a repository name and ID.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name associated with the repository.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name associated with the repository.</p>\n@param repositoryName The name associated with the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name associated with the repository.</p>\n@return The name associated with the repository.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name associated with the repository.</p>\n@param repositoryName The name associated with the repository.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name associated with the repository.</p>\n@param repositoryName The name associated with the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name associated with the repository.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryId",
        "c2jShape" : "RepositoryId",
        "deprecated" : false,
        "documentation" : "<p>The ID associated with the repository.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID associated with the repository.</p>\n@param repositoryId The ID associated with the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryId",
        "getterDocumentation" : "/**<p>The ID associated with the repository.</p>\n@return The ID associated with the repository.*/",
        "getterMethodName" : "getRepositoryId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryId",
        "setterDocumentation" : "/**<p>The ID associated with the repository.</p>\n@param repositoryId The ID associated with the repository.*/",
        "setterMethodName" : "setRepositoryId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID associated with the repository.</p>\n@param repositoryId The ID associated with the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryId",
          "variableType" : "String",
          "documentation" : "<p>The ID associated with the repository.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "RepositoryId" : {
          "c2jName" : "repositoryId",
          "c2jShape" : "RepositoryId",
          "deprecated" : false,
          "documentation" : "<p>The ID associated with the repository.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID associated with the repository.</p>\n@param repositoryId The ID associated with the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryId",
          "getterDocumentation" : "/**<p>The ID associated with the repository.</p>\n@return The ID associated with the repository.*/",
          "getterMethodName" : "getRepositoryId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryId",
          "setterDocumentation" : "/**<p>The ID associated with the repository.</p>\n@param repositoryId The ID associated with the repository.*/",
          "setterMethodName" : "setRepositoryId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID associated with the repository.</p>\n@param repositoryId The ID associated with the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryId",
            "variableType" : "String",
            "documentation" : "<p>The ID associated with the repository.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name associated with the repository.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name associated with the repository.</p>\n@param repositoryName The name associated with the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name associated with the repository.</p>\n@return The name associated with the repository.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name associated with the repository.</p>\n@param repositoryName The name associated with the repository.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name associated with the repository.</p>\n@param repositoryName The name associated with the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name associated with the repository.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RepositoryNameIdPair",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "RepositoryNameIdPair",
        "variableName" : "repositoryNameIdPair",
        "variableType" : "RepositoryNameIdPair",
        "documentation" : null,
        "simpleType" : "RepositoryNameIdPair",
        "variableSetterType" : "RepositoryNameIdPair"
      },
      "wrapper" : false
    },
    "RepositoryNameRequiredException" : {
      "c2jName" : "RepositoryNameRequiredException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A repository name is required but was not specified.</p>",
      "enums" : null,
      "errorCode" : "RepositoryNameRequiredException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RepositoryNameRequiredException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "RepositoryNameRequiredException",
        "variableName" : "repositoryNameRequiredException",
        "variableType" : "RepositoryNameRequiredException",
        "documentation" : null,
        "simpleType" : "RepositoryNameRequiredException",
        "variableSetterType" : "RepositoryNameRequiredException"
      },
      "wrapper" : false
    },
    "RepositoryNamesRequiredException" : {
      "c2jName" : "RepositoryNamesRequiredException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A repository names object is required but was not specified.</p>",
      "enums" : null,
      "errorCode" : "RepositoryNamesRequiredException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RepositoryNamesRequiredException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "RepositoryNamesRequiredException",
        "variableName" : "repositoryNamesRequiredException",
        "variableType" : "RepositoryNamesRequiredException",
        "documentation" : null,
        "simpleType" : "RepositoryNamesRequiredException",
        "variableSetterType" : "RepositoryNamesRequiredException"
      },
      "wrapper" : false
    },
    "RepositoryTrigger" : {
      "c2jName" : "RepositoryTrigger",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Information about a trigger for a repository.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "name",
        "c2jShape" : "RepositoryTriggerName",
        "deprecated" : false,
        "documentation" : "<p>The name of the trigger.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the trigger.</p>\n@param name The name of the trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>The name of the trigger.</p>\n@return The name of the trigger.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "name",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "setterDocumentation" : "/**<p>The name of the trigger.</p>\n@param name The name of the trigger.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the trigger.</p>\n@param name The name of the trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>The name of the trigger.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "destinationArn",
        "c2jShape" : "Arn",
        "deprecated" : false,
        "documentation" : "<p>The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).</p>\n@param destinationArn The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDestinationArn",
        "getterDocumentation" : "/**<p>The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).</p>\n@return The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).*/",
        "getterMethodName" : "getDestinationArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "destinationArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "destinationArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "DestinationArn",
        "setterDocumentation" : "/**<p>The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).</p>\n@param destinationArn The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).*/",
        "setterMethodName" : "setDestinationArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "destinationArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).</p>\n@param destinationArn The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "destinationArn",
          "variableType" : "String",
          "documentation" : "<p>The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "customData",
        "c2jShape" : "RepositoryTriggerCustomData",
        "deprecated" : false,
        "documentation" : "<p>Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.</p>\n@param customData Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCustomData",
        "getterDocumentation" : "/**<p>Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.</p>\n@return Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.*/",
        "getterMethodName" : "getCustomData",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "customData",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "customData",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CustomData",
        "setterDocumentation" : "/**<p>Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.</p>\n@param customData Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.*/",
        "setterMethodName" : "setCustomData",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "customData",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.</p>\n@param customData Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "customData",
          "variableType" : "String",
          "documentation" : "<p>Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "branches",
        "c2jShape" : "BranchNameList",
        "deprecated" : false,
        "documentation" : "<p>The branches that will be included in the trigger configuration. If no branches are specified, the trigger will apply to all branches.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The branches that will be included in the trigger configuration. If no branches are specified, the trigger will apply to all branches.</p>\n@param branches The branches that will be included in the trigger configuration. If no branches are specified, the trigger will apply to all branches.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBranches",
        "getterDocumentation" : "/**<p>The branches that will be included in the trigger configuration. If no branches are specified, the trigger will apply to all branches.</p>\n@return The branches that will be included in the trigger configuration. If no branches are specified, the trigger will apply to all branches.*/",
        "getterMethodName" : "getBranches",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "branches",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "branches",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "BranchName",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Branches",
        "setterDocumentation" : "/**<p>The branches that will be included in the trigger configuration. If no branches are specified, the trigger will apply to all branches.</p>\n@param branches The branches that will be included in the trigger configuration. If no branches are specified, the trigger will apply to all branches.*/",
        "setterMethodName" : "setBranches",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "branches",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The branches that will be included in the trigger configuration. If no branches are specified, the trigger will apply to all branches.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setBranches(java.util.Collection)} or {@link #withBranches(java.util.Collection)} if you want to override the existing values.</p>\n@param branches The branches that will be included in the trigger configuration. If no branches are specified, the trigger will apply to all branches.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "branches",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>The branches that will be included in the trigger configuration. If no branches are specified, the trigger will apply to all branches.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "events",
        "c2jShape" : "RepositoryTriggerEventList",
        "deprecated" : false,
        "documentation" : "<p>The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). </p> <note> <p>The valid value \"all\" cannot be used with any other values.</p> </note>",
        "enumType" : "RepositoryTriggerEventEnum",
        "fluentSetterDocumentation" : "/**<p>The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). </p> <note> <p>The valid value \"all\" cannot be used with any other values.</p> </note>\n@param events The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). </p> <note> <p>The valid value \"all\" cannot be used with any other values.</p>\n@return Returns a reference to this object so that method calls can be chained together.\n@see RepositoryTriggerEventEnum*/",
        "fluentSetterMethodName" : "withEvents",
        "getterDocumentation" : "/**<p>The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). </p> <note> <p>The valid value \"all\" cannot be used with any other values.</p> </note>\n@return The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). </p> <note> <p>The valid value \"all\" cannot be used with any other values.</p>\n@see RepositoryTriggerEventEnum*/",
        "getterMethodName" : "getEvents",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "events",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "events",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "RepositoryTriggerEventEnum",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : "RepositoryTriggerEventEnum",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.\n@see RepositoryTriggerEventEnum*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return \n@see RepositoryTriggerEventEnum*/",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member \n@see RepositoryTriggerEventEnum*/",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.\n@see RepositoryTriggerEventEnum*/",
            "variable" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Events",
        "setterDocumentation" : "/**<p>The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). </p> <note> <p>The valid value \"all\" cannot be used with any other values.</p> </note>\n@param events The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). </p> <note> <p>The valid value \"all\" cannot be used with any other values.</p>\n@see RepositoryTriggerEventEnum*/",
        "setterMethodName" : "setEvents",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "events",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). </p> <note> <p>The valid value \"all\" cannot be used with any other values.</p> </note>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setEvents(java.util.Collection)} or {@link #withEvents(java.util.Collection)} if you want to override the existing values.</p>\n@param events The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). </p> <note> <p>The valid value \"all\" cannot be used with any other values.</p>\n@return Returns a reference to this object so that method calls can be chained together.\n@see RepositoryTriggerEventEnum*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "events",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). </p> <note> <p>The valid value \"all\" cannot be used with any other values.</p> </note>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Branches" : {
          "c2jName" : "branches",
          "c2jShape" : "BranchNameList",
          "deprecated" : false,
          "documentation" : "<p>The branches that will be included in the trigger configuration. If no branches are specified, the trigger will apply to all branches.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The branches that will be included in the trigger configuration. If no branches are specified, the trigger will apply to all branches.</p>\n@param branches The branches that will be included in the trigger configuration. If no branches are specified, the trigger will apply to all branches.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBranches",
          "getterDocumentation" : "/**<p>The branches that will be included in the trigger configuration. If no branches are specified, the trigger will apply to all branches.</p>\n@return The branches that will be included in the trigger configuration. If no branches are specified, the trigger will apply to all branches.*/",
          "getterMethodName" : "getBranches",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "branches",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "branches",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "BranchName",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Branches",
          "setterDocumentation" : "/**<p>The branches that will be included in the trigger configuration. If no branches are specified, the trigger will apply to all branches.</p>\n@param branches The branches that will be included in the trigger configuration. If no branches are specified, the trigger will apply to all branches.*/",
          "setterMethodName" : "setBranches",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "branches",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The branches that will be included in the trigger configuration. If no branches are specified, the trigger will apply to all branches.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setBranches(java.util.Collection)} or {@link #withBranches(java.util.Collection)} if you want to override the existing values.</p>\n@param branches The branches that will be included in the trigger configuration. If no branches are specified, the trigger will apply to all branches.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "branches",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>The branches that will be included in the trigger configuration. If no branches are specified, the trigger will apply to all branches.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        },
        "CustomData" : {
          "c2jName" : "customData",
          "c2jShape" : "RepositoryTriggerCustomData",
          "deprecated" : false,
          "documentation" : "<p>Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.</p>\n@param customData Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCustomData",
          "getterDocumentation" : "/**<p>Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.</p>\n@return Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.*/",
          "getterMethodName" : "getCustomData",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "customData",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "customData",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CustomData",
          "setterDocumentation" : "/**<p>Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.</p>\n@param customData Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.*/",
          "setterMethodName" : "setCustomData",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "customData",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.</p>\n@param customData Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "customData",
            "variableType" : "String",
            "documentation" : "<p>Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "DestinationArn" : {
          "c2jName" : "destinationArn",
          "c2jShape" : "Arn",
          "deprecated" : false,
          "documentation" : "<p>The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).</p>\n@param destinationArn The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDestinationArn",
          "getterDocumentation" : "/**<p>The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).</p>\n@return The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).*/",
          "getterMethodName" : "getDestinationArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "destinationArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "destinationArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "DestinationArn",
          "setterDocumentation" : "/**<p>The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).</p>\n@param destinationArn The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).*/",
          "setterMethodName" : "setDestinationArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "destinationArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).</p>\n@param destinationArn The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "destinationArn",
            "variableType" : "String",
            "documentation" : "<p>The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Events" : {
          "c2jName" : "events",
          "c2jShape" : "RepositoryTriggerEventList",
          "deprecated" : false,
          "documentation" : "<p>The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). </p> <note> <p>The valid value \"all\" cannot be used with any other values.</p> </note>",
          "enumType" : "RepositoryTriggerEventEnum",
          "fluentSetterDocumentation" : "/**<p>The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). </p> <note> <p>The valid value \"all\" cannot be used with any other values.</p> </note>\n@param events The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). </p> <note> <p>The valid value \"all\" cannot be used with any other values.</p>\n@return Returns a reference to this object so that method calls can be chained together.\n@see RepositoryTriggerEventEnum*/",
          "fluentSetterMethodName" : "withEvents",
          "getterDocumentation" : "/**<p>The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). </p> <note> <p>The valid value \"all\" cannot be used with any other values.</p> </note>\n@return The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). </p> <note> <p>The valid value \"all\" cannot be used with any other values.</p>\n@see RepositoryTriggerEventEnum*/",
          "getterMethodName" : "getEvents",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "events",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "events",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "RepositoryTriggerEventEnum",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : "RepositoryTriggerEventEnum",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.\n@see RepositoryTriggerEventEnum*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return \n@see RepositoryTriggerEventEnum*/",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member \n@see RepositoryTriggerEventEnum*/",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.\n@see RepositoryTriggerEventEnum*/",
              "variable" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Events",
          "setterDocumentation" : "/**<p>The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). </p> <note> <p>The valid value \"all\" cannot be used with any other values.</p> </note>\n@param events The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). </p> <note> <p>The valid value \"all\" cannot be used with any other values.</p>\n@see RepositoryTriggerEventEnum*/",
          "setterMethodName" : "setEvents",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "events",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). </p> <note> <p>The valid value \"all\" cannot be used with any other values.</p> </note>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setEvents(java.util.Collection)} or {@link #withEvents(java.util.Collection)} if you want to override the existing values.</p>\n@param events The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). </p> <note> <p>The valid value \"all\" cannot be used with any other values.</p>\n@return Returns a reference to this object so that method calls can be chained together.\n@see RepositoryTriggerEventEnum*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "events",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). </p> <note> <p>The valid value \"all\" cannot be used with any other values.</p> </note>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        },
        "Name" : {
          "c2jName" : "name",
          "c2jShape" : "RepositoryTriggerName",
          "deprecated" : false,
          "documentation" : "<p>The name of the trigger.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the trigger.</p>\n@param name The name of the trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>The name of the trigger.</p>\n@return The name of the trigger.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "name",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "setterDocumentation" : "/**<p>The name of the trigger.</p>\n@param name The name of the trigger.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the trigger.</p>\n@param name The name of the trigger.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>The name of the trigger.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "name", "destinationArn", "events" ],
      "shapeName" : "RepositoryTrigger",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "RepositoryTrigger",
        "variableName" : "repositoryTrigger",
        "variableType" : "RepositoryTrigger",
        "documentation" : null,
        "simpleType" : "RepositoryTrigger",
        "variableSetterType" : "RepositoryTrigger"
      },
      "wrapper" : false
    },
    "RepositoryTriggerBranchNameListRequiredException" : {
      "c2jName" : "RepositoryTriggerBranchNameListRequiredException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>At least one branch name is required but was not specified in the trigger configuration.</p>",
      "enums" : null,
      "errorCode" : "RepositoryTriggerBranchNameListRequiredException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RepositoryTriggerBranchNameListRequiredException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "RepositoryTriggerBranchNameListRequiredException",
        "variableName" : "repositoryTriggerBranchNameListRequiredException",
        "variableType" : "RepositoryTriggerBranchNameListRequiredException",
        "documentation" : null,
        "simpleType" : "RepositoryTriggerBranchNameListRequiredException",
        "variableSetterType" : "RepositoryTriggerBranchNameListRequiredException"
      },
      "wrapper" : false
    },
    "RepositoryTriggerDestinationArnRequiredException" : {
      "c2jName" : "RepositoryTriggerDestinationArnRequiredException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A destination ARN for the target service for the trigger is required but was not specified.</p>",
      "enums" : null,
      "errorCode" : "RepositoryTriggerDestinationArnRequiredException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RepositoryTriggerDestinationArnRequiredException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "RepositoryTriggerDestinationArnRequiredException",
        "variableName" : "repositoryTriggerDestinationArnRequiredException",
        "variableType" : "RepositoryTriggerDestinationArnRequiredException",
        "documentation" : null,
        "simpleType" : "RepositoryTriggerDestinationArnRequiredException",
        "variableSetterType" : "RepositoryTriggerDestinationArnRequiredException"
      },
      "wrapper" : false
    },
    "RepositoryTriggerEventEnum" : {
      "c2jName" : "RepositoryTriggerEventEnum",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "All",
        "value" : "all"
      }, {
        "name" : "UpdateReference",
        "value" : "updateReference"
      }, {
        "name" : "CreateReference",
        "value" : "createReference"
      }, {
        "name" : "DeleteReference",
        "value" : "deleteReference"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RepositoryTriggerEventEnum",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "RepositoryTriggerEventEnum",
        "variableName" : "repositoryTriggerEventEnum",
        "variableType" : "RepositoryTriggerEventEnum",
        "documentation" : null,
        "simpleType" : "RepositoryTriggerEventEnum",
        "variableSetterType" : "RepositoryTriggerEventEnum"
      },
      "wrapper" : false
    },
    "RepositoryTriggerEventsListRequiredException" : {
      "c2jName" : "RepositoryTriggerEventsListRequiredException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>At least one event for the trigger is required but was not specified.</p>",
      "enums" : null,
      "errorCode" : "RepositoryTriggerEventsListRequiredException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RepositoryTriggerEventsListRequiredException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "RepositoryTriggerEventsListRequiredException",
        "variableName" : "repositoryTriggerEventsListRequiredException",
        "variableType" : "RepositoryTriggerEventsListRequiredException",
        "documentation" : null,
        "simpleType" : "RepositoryTriggerEventsListRequiredException",
        "variableSetterType" : "RepositoryTriggerEventsListRequiredException"
      },
      "wrapper" : false
    },
    "RepositoryTriggerExecutionFailure" : {
      "c2jName" : "RepositoryTriggerExecutionFailure",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A trigger failed to run.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "trigger",
        "c2jShape" : "RepositoryTriggerName",
        "deprecated" : false,
        "documentation" : "<p>The name of the trigger that did not run.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the trigger that did not run.</p>\n@param trigger The name of the trigger that did not run.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTrigger",
        "getterDocumentation" : "/**<p>The name of the trigger that did not run.</p>\n@return The name of the trigger that did not run.*/",
        "getterMethodName" : "getTrigger",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "trigger",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "trigger",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Trigger",
        "setterDocumentation" : "/**<p>The name of the trigger that did not run.</p>\n@param trigger The name of the trigger that did not run.*/",
        "setterMethodName" : "setTrigger",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "trigger",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the trigger that did not run.</p>\n@param trigger The name of the trigger that did not run.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "trigger",
          "variableType" : "String",
          "documentation" : "<p>The name of the trigger that did not run.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "failureMessage",
        "c2jShape" : "RepositoryTriggerExecutionFailureMessage",
        "deprecated" : false,
        "documentation" : "<p>Additional message information about the trigger that did not run.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Additional message information about the trigger that did not run.</p>\n@param failureMessage Additional message information about the trigger that did not run.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFailureMessage",
        "getterDocumentation" : "/**<p>Additional message information about the trigger that did not run.</p>\n@return Additional message information about the trigger that did not run.*/",
        "getterMethodName" : "getFailureMessage",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "failureMessage",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "failureMessage",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "FailureMessage",
        "setterDocumentation" : "/**<p>Additional message information about the trigger that did not run.</p>\n@param failureMessage Additional message information about the trigger that did not run.*/",
        "setterMethodName" : "setFailureMessage",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "failureMessage",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Additional message information about the trigger that did not run.</p>\n@param failureMessage Additional message information about the trigger that did not run.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "failureMessage",
          "variableType" : "String",
          "documentation" : "<p>Additional message information about the trigger that did not run.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "FailureMessage" : {
          "c2jName" : "failureMessage",
          "c2jShape" : "RepositoryTriggerExecutionFailureMessage",
          "deprecated" : false,
          "documentation" : "<p>Additional message information about the trigger that did not run.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Additional message information about the trigger that did not run.</p>\n@param failureMessage Additional message information about the trigger that did not run.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFailureMessage",
          "getterDocumentation" : "/**<p>Additional message information about the trigger that did not run.</p>\n@return Additional message information about the trigger that did not run.*/",
          "getterMethodName" : "getFailureMessage",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "failureMessage",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "failureMessage",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "FailureMessage",
          "setterDocumentation" : "/**<p>Additional message information about the trigger that did not run.</p>\n@param failureMessage Additional message information about the trigger that did not run.*/",
          "setterMethodName" : "setFailureMessage",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "failureMessage",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Additional message information about the trigger that did not run.</p>\n@param failureMessage Additional message information about the trigger that did not run.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "failureMessage",
            "variableType" : "String",
            "documentation" : "<p>Additional message information about the trigger that did not run.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Trigger" : {
          "c2jName" : "trigger",
          "c2jShape" : "RepositoryTriggerName",
          "deprecated" : false,
          "documentation" : "<p>The name of the trigger that did not run.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the trigger that did not run.</p>\n@param trigger The name of the trigger that did not run.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTrigger",
          "getterDocumentation" : "/**<p>The name of the trigger that did not run.</p>\n@return The name of the trigger that did not run.*/",
          "getterMethodName" : "getTrigger",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "trigger",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "trigger",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Trigger",
          "setterDocumentation" : "/**<p>The name of the trigger that did not run.</p>\n@param trigger The name of the trigger that did not run.*/",
          "setterMethodName" : "setTrigger",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "trigger",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the trigger that did not run.</p>\n@param trigger The name of the trigger that did not run.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "trigger",
            "variableType" : "String",
            "documentation" : "<p>The name of the trigger that did not run.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RepositoryTriggerExecutionFailure",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "RepositoryTriggerExecutionFailure",
        "variableName" : "repositoryTriggerExecutionFailure",
        "variableType" : "RepositoryTriggerExecutionFailure",
        "documentation" : null,
        "simpleType" : "RepositoryTriggerExecutionFailure",
        "variableSetterType" : "RepositoryTriggerExecutionFailure"
      },
      "wrapper" : false
    },
    "RepositoryTriggerNameRequiredException" : {
      "c2jName" : "RepositoryTriggerNameRequiredException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A name for the trigger is required but was not specified.</p>",
      "enums" : null,
      "errorCode" : "RepositoryTriggerNameRequiredException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RepositoryTriggerNameRequiredException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "RepositoryTriggerNameRequiredException",
        "variableName" : "repositoryTriggerNameRequiredException",
        "variableType" : "RepositoryTriggerNameRequiredException",
        "documentation" : null,
        "simpleType" : "RepositoryTriggerNameRequiredException",
        "variableSetterType" : "RepositoryTriggerNameRequiredException"
      },
      "wrapper" : false
    },
    "RepositoryTriggersListRequiredException" : {
      "c2jName" : "RepositoryTriggersListRequiredException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The list of triggers for the repository is required but was not specified.</p>",
      "enums" : null,
      "errorCode" : "RepositoryTriggersListRequiredException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RepositoryTriggersListRequiredException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "RepositoryTriggersListRequiredException",
        "variableName" : "repositoryTriggersListRequiredException",
        "variableType" : "RepositoryTriggersListRequiredException",
        "documentation" : null,
        "simpleType" : "RepositoryTriggersListRequiredException",
        "variableSetterType" : "RepositoryTriggersListRequiredException"
      },
      "wrapper" : false
    },
    "SortByEnum" : {
      "c2jName" : "SortByEnum",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "RepositoryName",
        "value" : "repositoryName"
      }, {
        "name" : "LastModifiedDate",
        "value" : "lastModifiedDate"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "SortByEnum",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "SortByEnum",
        "variableName" : "sortByEnum",
        "variableType" : "SortByEnum",
        "documentation" : null,
        "simpleType" : "SortByEnum",
        "variableSetterType" : "SortByEnum"
      },
      "wrapper" : false
    },
    "TestRepositoryTriggersRequest" : {
      "c2jName" : "TestRepositoryTriggersInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the input of a test repository triggers operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "TestRepositoryTriggers",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.TestRepositoryTriggers",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository in which to test the triggers.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository in which to test the triggers.</p>\n@param repositoryName The name of the repository in which to test the triggers.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository in which to test the triggers.</p>\n@return The name of the repository in which to test the triggers.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository in which to test the triggers.</p>\n@param repositoryName The name of the repository in which to test the triggers.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository in which to test the triggers.</p>\n@param repositoryName The name of the repository in which to test the triggers.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository in which to test the triggers.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "triggers",
        "c2jShape" : "RepositoryTriggersList",
        "deprecated" : false,
        "documentation" : "<p>The list of triggers to test.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The list of triggers to test.</p>\n@param triggers The list of triggers to test.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTriggers",
        "getterDocumentation" : "/**<p>The list of triggers to test.</p>\n@return The list of triggers to test.*/",
        "getterMethodName" : "getTriggers",
        "getterModel" : {
          "returnType" : "java.util.List<RepositoryTrigger>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "triggers",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "triggers",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "RepositoryTrigger",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "RepositoryTrigger",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "RepositoryTrigger",
              "variableName" : "member",
              "variableType" : "RepositoryTrigger",
              "documentation" : "",
              "simpleType" : "RepositoryTrigger",
              "variableSetterType" : "RepositoryTrigger"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "RepositoryTrigger",
              "variableName" : "member",
              "variableType" : "RepositoryTrigger",
              "documentation" : "",
              "simpleType" : "RepositoryTrigger",
              "variableSetterType" : "RepositoryTrigger"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "RepositoryTrigger",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "RepositoryTrigger",
          "templateImplType" : "java.util.ArrayList<RepositoryTrigger>",
          "templateType" : "java.util.List<RepositoryTrigger>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Triggers",
        "setterDocumentation" : "/**<p>The list of triggers to test.</p>\n@param triggers The list of triggers to test.*/",
        "setterMethodName" : "setTriggers",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<RepositoryTrigger>",
          "variableName" : "triggers",
          "variableType" : "java.util.List<RepositoryTrigger>",
          "documentation" : "",
          "simpleType" : "List<RepositoryTrigger>",
          "variableSetterType" : "java.util.Collection<RepositoryTrigger>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The list of triggers to test.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTriggers(java.util.Collection)} or {@link #withTriggers(java.util.Collection)} if you want to override the existing values.</p>\n@param triggers The list of triggers to test.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<RepositoryTrigger>",
          "variableName" : "triggers",
          "variableType" : "java.util.List<RepositoryTrigger>",
          "documentation" : "<p>The list of triggers to test.</p>",
          "simpleType" : "List<RepositoryTrigger>",
          "variableSetterType" : "java.util.Collection<RepositoryTrigger>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository in which to test the triggers.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository in which to test the triggers.</p>\n@param repositoryName The name of the repository in which to test the triggers.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository in which to test the triggers.</p>\n@return The name of the repository in which to test the triggers.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository in which to test the triggers.</p>\n@param repositoryName The name of the repository in which to test the triggers.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository in which to test the triggers.</p>\n@param repositoryName The name of the repository in which to test the triggers.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository in which to test the triggers.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Triggers" : {
          "c2jName" : "triggers",
          "c2jShape" : "RepositoryTriggersList",
          "deprecated" : false,
          "documentation" : "<p>The list of triggers to test.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The list of triggers to test.</p>\n@param triggers The list of triggers to test.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTriggers",
          "getterDocumentation" : "/**<p>The list of triggers to test.</p>\n@return The list of triggers to test.*/",
          "getterMethodName" : "getTriggers",
          "getterModel" : {
            "returnType" : "java.util.List<RepositoryTrigger>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "triggers",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "triggers",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "RepositoryTrigger",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "RepositoryTrigger",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "RepositoryTrigger",
                "variableName" : "member",
                "variableType" : "RepositoryTrigger",
                "documentation" : "",
                "simpleType" : "RepositoryTrigger",
                "variableSetterType" : "RepositoryTrigger"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "RepositoryTrigger",
                "variableName" : "member",
                "variableType" : "RepositoryTrigger",
                "documentation" : "",
                "simpleType" : "RepositoryTrigger",
                "variableSetterType" : "RepositoryTrigger"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "RepositoryTrigger",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "RepositoryTrigger",
            "templateImplType" : "java.util.ArrayList<RepositoryTrigger>",
            "templateType" : "java.util.List<RepositoryTrigger>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Triggers",
          "setterDocumentation" : "/**<p>The list of triggers to test.</p>\n@param triggers The list of triggers to test.*/",
          "setterMethodName" : "setTriggers",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<RepositoryTrigger>",
            "variableName" : "triggers",
            "variableType" : "java.util.List<RepositoryTrigger>",
            "documentation" : "",
            "simpleType" : "List<RepositoryTrigger>",
            "variableSetterType" : "java.util.Collection<RepositoryTrigger>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The list of triggers to test.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTriggers(java.util.Collection)} or {@link #withTriggers(java.util.Collection)} if you want to override the existing values.</p>\n@param triggers The list of triggers to test.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<RepositoryTrigger>",
            "variableName" : "triggers",
            "variableType" : "java.util.List<RepositoryTrigger>",
            "documentation" : "<p>The list of triggers to test.</p>",
            "simpleType" : "List<RepositoryTrigger>",
            "variableSetterType" : "java.util.Collection<RepositoryTrigger>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName", "triggers" ],
      "shapeName" : "TestRepositoryTriggersRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "TestRepositoryTriggersRequest",
        "variableName" : "testRepositoryTriggersRequest",
        "variableType" : "TestRepositoryTriggersRequest",
        "documentation" : null,
        "simpleType" : "TestRepositoryTriggersRequest",
        "variableSetterType" : "TestRepositoryTriggersRequest"
      },
      "wrapper" : false
    },
    "TestRepositoryTriggersResult" : {
      "c2jName" : "TestRepositoryTriggersOutput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the output of a test repository triggers operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "successfulExecutions",
        "c2jShape" : "RepositoryTriggerNameList",
        "deprecated" : false,
        "documentation" : "<p>The list of triggers that were successfully tested. This list provides the names of the triggers that were successfully tested, separated by commas.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The list of triggers that were successfully tested. This list provides the names of the triggers that were successfully tested, separated by commas.</p>\n@param successfulExecutions The list of triggers that were successfully tested. This list provides the names of the triggers that were successfully tested, separated by commas.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSuccessfulExecutions",
        "getterDocumentation" : "/**<p>The list of triggers that were successfully tested. This list provides the names of the triggers that were successfully tested, separated by commas.</p>\n@return The list of triggers that were successfully tested. This list provides the names of the triggers that were successfully tested, separated by commas.*/",
        "getterMethodName" : "getSuccessfulExecutions",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "successfulExecutions",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "successfulExecutions",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "RepositoryTriggerName",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "SuccessfulExecutions",
        "setterDocumentation" : "/**<p>The list of triggers that were successfully tested. This list provides the names of the triggers that were successfully tested, separated by commas.</p>\n@param successfulExecutions The list of triggers that were successfully tested. This list provides the names of the triggers that were successfully tested, separated by commas.*/",
        "setterMethodName" : "setSuccessfulExecutions",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "successfulExecutions",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The list of triggers that were successfully tested. This list provides the names of the triggers that were successfully tested, separated by commas.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setSuccessfulExecutions(java.util.Collection)} or {@link #withSuccessfulExecutions(java.util.Collection)} if you want to override the existing values.</p>\n@param successfulExecutions The list of triggers that were successfully tested. This list provides the names of the triggers that were successfully tested, separated by commas.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "successfulExecutions",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>The list of triggers that were successfully tested. This list provides the names of the triggers that were successfully tested, separated by commas.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "failedExecutions",
        "c2jShape" : "RepositoryTriggerExecutionFailureList",
        "deprecated" : false,
        "documentation" : "<p>The list of triggers that were not able to be tested. This list provides the names of the triggers that could not be tested, separated by commas.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The list of triggers that were not able to be tested. This list provides the names of the triggers that could not be tested, separated by commas.</p>\n@param failedExecutions The list of triggers that were not able to be tested. This list provides the names of the triggers that could not be tested, separated by commas.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFailedExecutions",
        "getterDocumentation" : "/**<p>The list of triggers that were not able to be tested. This list provides the names of the triggers that could not be tested, separated by commas.</p>\n@return The list of triggers that were not able to be tested. This list provides the names of the triggers that could not be tested, separated by commas.*/",
        "getterMethodName" : "getFailedExecutions",
        "getterModel" : {
          "returnType" : "java.util.List<RepositoryTriggerExecutionFailure>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "failedExecutions",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "failedExecutions",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "RepositoryTriggerExecutionFailure",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "RepositoryTriggerExecutionFailure",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "RepositoryTriggerExecutionFailure",
              "variableName" : "member",
              "variableType" : "RepositoryTriggerExecutionFailure",
              "documentation" : "",
              "simpleType" : "RepositoryTriggerExecutionFailure",
              "variableSetterType" : "RepositoryTriggerExecutionFailure"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "RepositoryTriggerExecutionFailure",
              "variableName" : "member",
              "variableType" : "RepositoryTriggerExecutionFailure",
              "documentation" : "",
              "simpleType" : "RepositoryTriggerExecutionFailure",
              "variableSetterType" : "RepositoryTriggerExecutionFailure"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "RepositoryTriggerExecutionFailure",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "RepositoryTriggerExecutionFailure",
          "templateImplType" : "java.util.ArrayList<RepositoryTriggerExecutionFailure>",
          "templateType" : "java.util.List<RepositoryTriggerExecutionFailure>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "FailedExecutions",
        "setterDocumentation" : "/**<p>The list of triggers that were not able to be tested. This list provides the names of the triggers that could not be tested, separated by commas.</p>\n@param failedExecutions The list of triggers that were not able to be tested. This list provides the names of the triggers that could not be tested, separated by commas.*/",
        "setterMethodName" : "setFailedExecutions",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<RepositoryTriggerExecutionFailure>",
          "variableName" : "failedExecutions",
          "variableType" : "java.util.List<RepositoryTriggerExecutionFailure>",
          "documentation" : "",
          "simpleType" : "List<RepositoryTriggerExecutionFailure>",
          "variableSetterType" : "java.util.Collection<RepositoryTriggerExecutionFailure>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The list of triggers that were not able to be tested. This list provides the names of the triggers that could not be tested, separated by commas.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFailedExecutions(java.util.Collection)} or {@link #withFailedExecutions(java.util.Collection)} if you want to override the existing values.</p>\n@param failedExecutions The list of triggers that were not able to be tested. This list provides the names of the triggers that could not be tested, separated by commas.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<RepositoryTriggerExecutionFailure>",
          "variableName" : "failedExecutions",
          "variableType" : "java.util.List<RepositoryTriggerExecutionFailure>",
          "documentation" : "<p>The list of triggers that were not able to be tested. This list provides the names of the triggers that could not be tested, separated by commas.</p>",
          "simpleType" : "List<RepositoryTriggerExecutionFailure>",
          "variableSetterType" : "java.util.Collection<RepositoryTriggerExecutionFailure>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "FailedExecutions" : {
          "c2jName" : "failedExecutions",
          "c2jShape" : "RepositoryTriggerExecutionFailureList",
          "deprecated" : false,
          "documentation" : "<p>The list of triggers that were not able to be tested. This list provides the names of the triggers that could not be tested, separated by commas.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The list of triggers that were not able to be tested. This list provides the names of the triggers that could not be tested, separated by commas.</p>\n@param failedExecutions The list of triggers that were not able to be tested. This list provides the names of the triggers that could not be tested, separated by commas.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFailedExecutions",
          "getterDocumentation" : "/**<p>The list of triggers that were not able to be tested. This list provides the names of the triggers that could not be tested, separated by commas.</p>\n@return The list of triggers that were not able to be tested. This list provides the names of the triggers that could not be tested, separated by commas.*/",
          "getterMethodName" : "getFailedExecutions",
          "getterModel" : {
            "returnType" : "java.util.List<RepositoryTriggerExecutionFailure>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "failedExecutions",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "failedExecutions",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "RepositoryTriggerExecutionFailure",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "RepositoryTriggerExecutionFailure",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "RepositoryTriggerExecutionFailure",
                "variableName" : "member",
                "variableType" : "RepositoryTriggerExecutionFailure",
                "documentation" : "",
                "simpleType" : "RepositoryTriggerExecutionFailure",
                "variableSetterType" : "RepositoryTriggerExecutionFailure"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "RepositoryTriggerExecutionFailure",
                "variableName" : "member",
                "variableType" : "RepositoryTriggerExecutionFailure",
                "documentation" : "",
                "simpleType" : "RepositoryTriggerExecutionFailure",
                "variableSetterType" : "RepositoryTriggerExecutionFailure"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "RepositoryTriggerExecutionFailure",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "RepositoryTriggerExecutionFailure",
            "templateImplType" : "java.util.ArrayList<RepositoryTriggerExecutionFailure>",
            "templateType" : "java.util.List<RepositoryTriggerExecutionFailure>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "FailedExecutions",
          "setterDocumentation" : "/**<p>The list of triggers that were not able to be tested. This list provides the names of the triggers that could not be tested, separated by commas.</p>\n@param failedExecutions The list of triggers that were not able to be tested. This list provides the names of the triggers that could not be tested, separated by commas.*/",
          "setterMethodName" : "setFailedExecutions",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<RepositoryTriggerExecutionFailure>",
            "variableName" : "failedExecutions",
            "variableType" : "java.util.List<RepositoryTriggerExecutionFailure>",
            "documentation" : "",
            "simpleType" : "List<RepositoryTriggerExecutionFailure>",
            "variableSetterType" : "java.util.Collection<RepositoryTriggerExecutionFailure>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The list of triggers that were not able to be tested. This list provides the names of the triggers that could not be tested, separated by commas.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFailedExecutions(java.util.Collection)} or {@link #withFailedExecutions(java.util.Collection)} if you want to override the existing values.</p>\n@param failedExecutions The list of triggers that were not able to be tested. This list provides the names of the triggers that could not be tested, separated by commas.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<RepositoryTriggerExecutionFailure>",
            "variableName" : "failedExecutions",
            "variableType" : "java.util.List<RepositoryTriggerExecutionFailure>",
            "documentation" : "<p>The list of triggers that were not able to be tested. This list provides the names of the triggers that could not be tested, separated by commas.</p>",
            "simpleType" : "List<RepositoryTriggerExecutionFailure>",
            "variableSetterType" : "java.util.Collection<RepositoryTriggerExecutionFailure>"
          },
          "xmlNameSpaceUri" : null
        },
        "SuccessfulExecutions" : {
          "c2jName" : "successfulExecutions",
          "c2jShape" : "RepositoryTriggerNameList",
          "deprecated" : false,
          "documentation" : "<p>The list of triggers that were successfully tested. This list provides the names of the triggers that were successfully tested, separated by commas.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The list of triggers that were successfully tested. This list provides the names of the triggers that were successfully tested, separated by commas.</p>\n@param successfulExecutions The list of triggers that were successfully tested. This list provides the names of the triggers that were successfully tested, separated by commas.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSuccessfulExecutions",
          "getterDocumentation" : "/**<p>The list of triggers that were successfully tested. This list provides the names of the triggers that were successfully tested, separated by commas.</p>\n@return The list of triggers that were successfully tested. This list provides the names of the triggers that were successfully tested, separated by commas.*/",
          "getterMethodName" : "getSuccessfulExecutions",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "successfulExecutions",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "successfulExecutions",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "RepositoryTriggerName",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "SuccessfulExecutions",
          "setterDocumentation" : "/**<p>The list of triggers that were successfully tested. This list provides the names of the triggers that were successfully tested, separated by commas.</p>\n@param successfulExecutions The list of triggers that were successfully tested. This list provides the names of the triggers that were successfully tested, separated by commas.*/",
          "setterMethodName" : "setSuccessfulExecutions",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "successfulExecutions",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The list of triggers that were successfully tested. This list provides the names of the triggers that were successfully tested, separated by commas.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setSuccessfulExecutions(java.util.Collection)} or {@link #withSuccessfulExecutions(java.util.Collection)} if you want to override the existing values.</p>\n@param successfulExecutions The list of triggers that were successfully tested. This list provides the names of the triggers that were successfully tested, separated by commas.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "successfulExecutions",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>The list of triggers that were successfully tested. This list provides the names of the triggers that were successfully tested, separated by commas.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "TestRepositoryTriggersResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "TestRepositoryTriggersResult",
        "variableName" : "testRepositoryTriggersResult",
        "variableType" : "TestRepositoryTriggersResult",
        "documentation" : null,
        "simpleType" : "TestRepositoryTriggersResult",
        "variableSetterType" : "TestRepositoryTriggersResult"
      },
      "wrapper" : false
    },
    "UpdateDefaultBranchRequest" : {
      "c2jName" : "UpdateDefaultBranchInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the input of an update default branch operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "UpdateDefaultBranch",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.UpdateDefaultBranch",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository to set or change the default branch for.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository to set or change the default branch for.</p>\n@param repositoryName The name of the repository to set or change the default branch for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository to set or change the default branch for.</p>\n@return The name of the repository to set or change the default branch for.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository to set or change the default branch for.</p>\n@param repositoryName The name of the repository to set or change the default branch for.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository to set or change the default branch for.</p>\n@param repositoryName The name of the repository to set or change the default branch for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository to set or change the default branch for.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "defaultBranchName",
        "c2jShape" : "BranchName",
        "deprecated" : false,
        "documentation" : "<p>The name of the branch to set as the default.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the branch to set as the default.</p>\n@param defaultBranchName The name of the branch to set as the default.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDefaultBranchName",
        "getterDocumentation" : "/**<p>The name of the branch to set as the default.</p>\n@return The name of the branch to set as the default.*/",
        "getterMethodName" : "getDefaultBranchName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "defaultBranchName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "defaultBranchName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "DefaultBranchName",
        "setterDocumentation" : "/**<p>The name of the branch to set as the default.</p>\n@param defaultBranchName The name of the branch to set as the default.*/",
        "setterMethodName" : "setDefaultBranchName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "defaultBranchName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the branch to set as the default.</p>\n@param defaultBranchName The name of the branch to set as the default.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "defaultBranchName",
          "variableType" : "String",
          "documentation" : "<p>The name of the branch to set as the default.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "DefaultBranchName" : {
          "c2jName" : "defaultBranchName",
          "c2jShape" : "BranchName",
          "deprecated" : false,
          "documentation" : "<p>The name of the branch to set as the default.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the branch to set as the default.</p>\n@param defaultBranchName The name of the branch to set as the default.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDefaultBranchName",
          "getterDocumentation" : "/**<p>The name of the branch to set as the default.</p>\n@return The name of the branch to set as the default.*/",
          "getterMethodName" : "getDefaultBranchName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "defaultBranchName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "defaultBranchName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "DefaultBranchName",
          "setterDocumentation" : "/**<p>The name of the branch to set as the default.</p>\n@param defaultBranchName The name of the branch to set as the default.*/",
          "setterMethodName" : "setDefaultBranchName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "defaultBranchName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the branch to set as the default.</p>\n@param defaultBranchName The name of the branch to set as the default.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "defaultBranchName",
            "variableType" : "String",
            "documentation" : "<p>The name of the branch to set as the default.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository to set or change the default branch for.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository to set or change the default branch for.</p>\n@param repositoryName The name of the repository to set or change the default branch for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository to set or change the default branch for.</p>\n@return The name of the repository to set or change the default branch for.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository to set or change the default branch for.</p>\n@param repositoryName The name of the repository to set or change the default branch for.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository to set or change the default branch for.</p>\n@param repositoryName The name of the repository to set or change the default branch for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository to set or change the default branch for.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName", "defaultBranchName" ],
      "shapeName" : "UpdateDefaultBranchRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "UpdateDefaultBranchRequest",
        "variableName" : "updateDefaultBranchRequest",
        "variableType" : "UpdateDefaultBranchRequest",
        "documentation" : null,
        "simpleType" : "UpdateDefaultBranchRequest",
        "variableSetterType" : "UpdateDefaultBranchRequest"
      },
      "wrapper" : false
    },
    "UpdateDefaultBranchResult" : {
      "c2jName" : "UpdateDefaultBranchResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : null,
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "UpdateDefaultBranchResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "UpdateDefaultBranchResult",
        "variableName" : "updateDefaultBranchResult",
        "variableType" : "UpdateDefaultBranchResult",
        "documentation" : null,
        "simpleType" : "UpdateDefaultBranchResult",
        "variableSetterType" : "UpdateDefaultBranchResult"
      },
      "wrapper" : false
    },
    "UpdateRepositoryDescriptionRequest" : {
      "c2jName" : "UpdateRepositoryDescriptionInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the input of an update repository description operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "UpdateRepositoryDescription",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.UpdateRepositoryDescription",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "repositoryName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The name of the repository to set or change the comment or description for.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the repository to set or change the comment or description for.</p>\n@param repositoryName The name of the repository to set or change the comment or description for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryName",
        "getterDocumentation" : "/**<p>The name of the repository to set or change the comment or description for.</p>\n@return The name of the repository to set or change the comment or description for.*/",
        "getterMethodName" : "getRepositoryName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryName",
        "setterDocumentation" : "/**<p>The name of the repository to set or change the comment or description for.</p>\n@param repositoryName The name of the repository to set or change the comment or description for.*/",
        "setterMethodName" : "setRepositoryName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the repository to set or change the comment or description for.</p>\n@param repositoryName The name of the repository to set or change the comment or description for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryName",
          "variableType" : "String",
          "documentation" : "<p>The name of the repository to set or change the comment or description for.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "repositoryDescription",
        "c2jShape" : "RepositoryDescription",
        "deprecated" : false,
        "documentation" : "<p>The new comment or description for the specified repository. Repository descriptions are limited to 1,000 characters.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The new comment or description for the specified repository. Repository descriptions are limited to 1,000 characters.</p>\n@param repositoryDescription The new comment or description for the specified repository. Repository descriptions are limited to 1,000 characters.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRepositoryDescription",
        "getterDocumentation" : "/**<p>The new comment or description for the specified repository. Repository descriptions are limited to 1,000 characters.</p>\n@return The new comment or description for the specified repository. Repository descriptions are limited to 1,000 characters.*/",
        "getterMethodName" : "getRepositoryDescription",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "repositoryDescription",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "repositoryDescription",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RepositoryDescription",
        "setterDocumentation" : "/**<p>The new comment or description for the specified repository. Repository descriptions are limited to 1,000 characters.</p>\n@param repositoryDescription The new comment or description for the specified repository. Repository descriptions are limited to 1,000 characters.*/",
        "setterMethodName" : "setRepositoryDescription",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryDescription",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The new comment or description for the specified repository. Repository descriptions are limited to 1,000 characters.</p>\n@param repositoryDescription The new comment or description for the specified repository. Repository descriptions are limited to 1,000 characters.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "repositoryDescription",
          "variableType" : "String",
          "documentation" : "<p>The new comment or description for the specified repository. Repository descriptions are limited to 1,000 characters.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "RepositoryDescription" : {
          "c2jName" : "repositoryDescription",
          "c2jShape" : "RepositoryDescription",
          "deprecated" : false,
          "documentation" : "<p>The new comment or description for the specified repository. Repository descriptions are limited to 1,000 characters.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The new comment or description for the specified repository. Repository descriptions are limited to 1,000 characters.</p>\n@param repositoryDescription The new comment or description for the specified repository. Repository descriptions are limited to 1,000 characters.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryDescription",
          "getterDocumentation" : "/**<p>The new comment or description for the specified repository. Repository descriptions are limited to 1,000 characters.</p>\n@return The new comment or description for the specified repository. Repository descriptions are limited to 1,000 characters.*/",
          "getterMethodName" : "getRepositoryDescription",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryDescription",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryDescription",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryDescription",
          "setterDocumentation" : "/**<p>The new comment or description for the specified repository. Repository descriptions are limited to 1,000 characters.</p>\n@param repositoryDescription The new comment or description for the specified repository. Repository descriptions are limited to 1,000 characters.*/",
          "setterMethodName" : "setRepositoryDescription",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryDescription",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The new comment or description for the specified repository. Repository descriptions are limited to 1,000 characters.</p>\n@param repositoryDescription The new comment or description for the specified repository. Repository descriptions are limited to 1,000 characters.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryDescription",
            "variableType" : "String",
            "documentation" : "<p>The new comment or description for the specified repository. Repository descriptions are limited to 1,000 characters.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RepositoryName" : {
          "c2jName" : "repositoryName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The name of the repository to set or change the comment or description for.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the repository to set or change the comment or description for.</p>\n@param repositoryName The name of the repository to set or change the comment or description for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRepositoryName",
          "getterDocumentation" : "/**<p>The name of the repository to set or change the comment or description for.</p>\n@return The name of the repository to set or change the comment or description for.*/",
          "getterMethodName" : "getRepositoryName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "repositoryName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "repositoryName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RepositoryName",
          "setterDocumentation" : "/**<p>The name of the repository to set or change the comment or description for.</p>\n@param repositoryName The name of the repository to set or change the comment or description for.*/",
          "setterMethodName" : "setRepositoryName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the repository to set or change the comment or description for.</p>\n@param repositoryName The name of the repository to set or change the comment or description for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "repositoryName",
            "variableType" : "String",
            "documentation" : "<p>The name of the repository to set or change the comment or description for.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "repositoryName" ],
      "shapeName" : "UpdateRepositoryDescriptionRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "UpdateRepositoryDescriptionRequest",
        "variableName" : "updateRepositoryDescriptionRequest",
        "variableType" : "UpdateRepositoryDescriptionRequest",
        "documentation" : null,
        "simpleType" : "UpdateRepositoryDescriptionRequest",
        "variableSetterType" : "UpdateRepositoryDescriptionRequest"
      },
      "wrapper" : false
    },
    "UpdateRepositoryDescriptionResult" : {
      "c2jName" : "UpdateRepositoryDescriptionResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : null,
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "UpdateRepositoryDescriptionResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "UpdateRepositoryDescriptionResult",
        "variableName" : "updateRepositoryDescriptionResult",
        "variableType" : "UpdateRepositoryDescriptionResult",
        "documentation" : null,
        "simpleType" : "UpdateRepositoryDescriptionResult",
        "variableSetterType" : "UpdateRepositoryDescriptionResult"
      },
      "wrapper" : false
    },
    "UpdateRepositoryNameRequest" : {
      "c2jName" : "UpdateRepositoryNameInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Represents the input of an update repository description operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "UpdateRepositoryName",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "CodeCommit_20150413.UpdateRepositoryName",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "oldName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The existing name of the repository.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The existing name of the repository.</p>\n@param oldName The existing name of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withOldName",
        "getterDocumentation" : "/**<p>The existing name of the repository.</p>\n@return The existing name of the repository.*/",
        "getterMethodName" : "getOldName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "oldName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "oldName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "OldName",
        "setterDocumentation" : "/**<p>The existing name of the repository.</p>\n@param oldName The existing name of the repository.*/",
        "setterMethodName" : "setOldName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "oldName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The existing name of the repository.</p>\n@param oldName The existing name of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "oldName",
          "variableType" : "String",
          "documentation" : "<p>The existing name of the repository.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "newName",
        "c2jShape" : "RepositoryName",
        "deprecated" : false,
        "documentation" : "<p>The new name for the repository.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The new name for the repository.</p>\n@param newName The new name for the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNewName",
        "getterDocumentation" : "/**<p>The new name for the repository.</p>\n@return The new name for the repository.*/",
        "getterMethodName" : "getNewName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "newName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "newName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NewName",
        "setterDocumentation" : "/**<p>The new name for the repository.</p>\n@param newName The new name for the repository.*/",
        "setterMethodName" : "setNewName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "newName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The new name for the repository.</p>\n@param newName The new name for the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "newName",
          "variableType" : "String",
          "documentation" : "<p>The new name for the repository.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "NewName" : {
          "c2jName" : "newName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The new name for the repository.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The new name for the repository.</p>\n@param newName The new name for the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNewName",
          "getterDocumentation" : "/**<p>The new name for the repository.</p>\n@return The new name for the repository.*/",
          "getterMethodName" : "getNewName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "newName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "newName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NewName",
          "setterDocumentation" : "/**<p>The new name for the repository.</p>\n@param newName The new name for the repository.*/",
          "setterMethodName" : "setNewName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "newName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The new name for the repository.</p>\n@param newName The new name for the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "newName",
            "variableType" : "String",
            "documentation" : "<p>The new name for the repository.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "OldName" : {
          "c2jName" : "oldName",
          "c2jShape" : "RepositoryName",
          "deprecated" : false,
          "documentation" : "<p>The existing name of the repository.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The existing name of the repository.</p>\n@param oldName The existing name of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withOldName",
          "getterDocumentation" : "/**<p>The existing name of the repository.</p>\n@return The existing name of the repository.*/",
          "getterMethodName" : "getOldName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "oldName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "oldName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "OldName",
          "setterDocumentation" : "/**<p>The existing name of the repository.</p>\n@param oldName The existing name of the repository.*/",
          "setterMethodName" : "setOldName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "oldName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The existing name of the repository.</p>\n@param oldName The existing name of the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "oldName",
            "variableType" : "String",
            "documentation" : "<p>The existing name of the repository.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "oldName", "newName" ],
      "shapeName" : "UpdateRepositoryNameRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "UpdateRepositoryNameRequest",
        "variableName" : "updateRepositoryNameRequest",
        "variableType" : "UpdateRepositoryNameRequest",
        "documentation" : null,
        "simpleType" : "UpdateRepositoryNameRequest",
        "variableSetterType" : "UpdateRepositoryNameRequest"
      },
      "wrapper" : false
    },
    "UpdateRepositoryNameResult" : {
      "c2jName" : "UpdateRepositoryNameResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : null,
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "UpdateRepositoryNameResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "UpdateRepositoryNameResult",
        "variableName" : "updateRepositoryNameResult",
        "variableType" : "UpdateRepositoryNameResult",
        "documentation" : null,
        "simpleType" : "UpdateRepositoryNameResult",
        "variableSetterType" : "UpdateRepositoryNameResult"
      },
      "wrapper" : false
    },
    "UserInfo" : {
      "c2jName" : "UserInfo",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Information about the user who made a specified commit.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "name",
        "c2jShape" : "Name",
        "deprecated" : false,
        "documentation" : "<p>The name of the user who made the specified commit.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the user who made the specified commit.</p>\n@param name The name of the user who made the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>The name of the user who made the specified commit.</p>\n@return The name of the user who made the specified commit.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "name",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "setterDocumentation" : "/**<p>The name of the user who made the specified commit.</p>\n@param name The name of the user who made the specified commit.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the user who made the specified commit.</p>\n@param name The name of the user who made the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>The name of the user who made the specified commit.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "email",
        "c2jShape" : "Email",
        "deprecated" : false,
        "documentation" : "<p>The email address associated with the user who made the commit, if any.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The email address associated with the user who made the commit, if any.</p>\n@param email The email address associated with the user who made the commit, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withEmail",
        "getterDocumentation" : "/**<p>The email address associated with the user who made the commit, if any.</p>\n@return The email address associated with the user who made the commit, if any.*/",
        "getterMethodName" : "getEmail",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "email",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "email",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Email",
        "setterDocumentation" : "/**<p>The email address associated with the user who made the commit, if any.</p>\n@param email The email address associated with the user who made the commit, if any.*/",
        "setterMethodName" : "setEmail",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "email",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The email address associated with the user who made the commit, if any.</p>\n@param email The email address associated with the user who made the commit, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "email",
          "variableType" : "String",
          "documentation" : "<p>The email address associated with the user who made the commit, if any.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "date",
        "c2jShape" : "Date",
        "deprecated" : false,
        "documentation" : "<p>The date when the specified commit was pushed to the repository.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The date when the specified commit was pushed to the repository.</p>\n@param dateValue The date when the specified commit was pushed to the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDate",
        "getterDocumentation" : "/**<p>The date when the specified commit was pushed to the repository.</p>\n@return The date when the specified commit was pushed to the repository.*/",
        "getterMethodName" : "getDate",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "date",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "date",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Date",
        "setterDocumentation" : "/**<p>The date when the specified commit was pushed to the repository.</p>\n@param dateValue The date when the specified commit was pushed to the repository.*/",
        "setterMethodName" : "setDate",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "dateValue",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The date when the specified commit was pushed to the repository.</p>\n@param dateValue The date when the specified commit was pushed to the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "dateValue",
          "variableType" : "String",
          "documentation" : "<p>The date when the specified commit was pushed to the repository.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Date" : {
          "c2jName" : "date",
          "c2jShape" : "Date",
          "deprecated" : false,
          "documentation" : "<p>The date when the specified commit was pushed to the repository.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The date when the specified commit was pushed to the repository.</p>\n@param dateValue The date when the specified commit was pushed to the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDate",
          "getterDocumentation" : "/**<p>The date when the specified commit was pushed to the repository.</p>\n@return The date when the specified commit was pushed to the repository.*/",
          "getterMethodName" : "getDate",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "date",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "date",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Date",
          "setterDocumentation" : "/**<p>The date when the specified commit was pushed to the repository.</p>\n@param dateValue The date when the specified commit was pushed to the repository.*/",
          "setterMethodName" : "setDate",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "dateValue",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The date when the specified commit was pushed to the repository.</p>\n@param dateValue The date when the specified commit was pushed to the repository.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "dateValue",
            "variableType" : "String",
            "documentation" : "<p>The date when the specified commit was pushed to the repository.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Email" : {
          "c2jName" : "email",
          "c2jShape" : "Email",
          "deprecated" : false,
          "documentation" : "<p>The email address associated with the user who made the commit, if any.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The email address associated with the user who made the commit, if any.</p>\n@param email The email address associated with the user who made the commit, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withEmail",
          "getterDocumentation" : "/**<p>The email address associated with the user who made the commit, if any.</p>\n@return The email address associated with the user who made the commit, if any.*/",
          "getterMethodName" : "getEmail",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "email",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "email",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Email",
          "setterDocumentation" : "/**<p>The email address associated with the user who made the commit, if any.</p>\n@param email The email address associated with the user who made the commit, if any.*/",
          "setterMethodName" : "setEmail",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "email",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The email address associated with the user who made the commit, if any.</p>\n@param email The email address associated with the user who made the commit, if any.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "email",
            "variableType" : "String",
            "documentation" : "<p>The email address associated with the user who made the commit, if any.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Name" : {
          "c2jName" : "name",
          "c2jShape" : "Name",
          "deprecated" : false,
          "documentation" : "<p>The name of the user who made the specified commit.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the user who made the specified commit.</p>\n@param name The name of the user who made the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>The name of the user who made the specified commit.</p>\n@return The name of the user who made the specified commit.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "name",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "setterDocumentation" : "/**<p>The name of the user who made the specified commit.</p>\n@param name The name of the user who made the specified commit.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the user who made the specified commit.</p>\n@param name The name of the user who made the specified commit.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>The name of the user who made the specified commit.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "UserInfo",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "UserInfo",
        "variableName" : "userInfo",
        "variableType" : "UserInfo",
        "documentation" : null,
        "simpleType" : "UserInfo",
        "variableSetterType" : "UserInfo"
      },
      "wrapper" : false
    }
  },
  "clientConfigFactory" : "ClientConfigurationFactory",
  "customAuthorizers" : { },
  "examples" : {
    "examples" : { },
    "version" : "1.0"
  },
  "exceptionUnmarshallerImpl" : null,
  "fileHeader" : "/*\n * Copyright 2012-2017 Amazon.com, Inc. or its affiliates. All Rights\n * Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */",
  "hasWaiters" : false,
  "sdkBaseResponseFqcn" : "com.amazonaws.AmazonWebServiceResult<com.amazonaws.ResponseMetadata>",
  "sdkModeledExceptionBaseClassName" : "AWSCodeCommitException",
  "sdkModeledExceptionBaseFqcn" : "com.amazonaws.services.codecommit.model.AWSCodeCommitException",
  "serviceBaseExceptionFqcn" : "com.amazonaws.AmazonServiceException",
  "transformPackage" : "com.amazonaws.services.codecommit.model.transform"
}