{
  "customizationConfig" : {
    "additionalShapeConstructors" : null,
    "authPolicyActions" : {
      "actionPrefix" : null,
      "additionalOperations" : null,
      "fileNamePrefix" : null,
      "skip" : true
    },
    "calculateCRC32FromCompressedData" : false,
    "convenienceTypeOverloads" : [ ],
    "customClientConfigFactory" : null,
    "customCodeTemplates" : null,
    "customErrorCodeFieldName" : null,
    "customExceptionUnmarshallerImpl" : null,
    "customFileHeader" : null,
    "customResponseMetadataClassName" : null,
    "customServiceMetadata" : null,
    "customServiceNameForRequest" : null,
    "customSignerProvider" : null,
    "deprecatedSuppressions" : [ "EnumSetterOverload" ],
    "emitLegacyEnumSetterFor" : {
      "CompareFacesResponse" : [ "SourceImageOrientationCorrection", "TargetImageOrientationCorrection" ],
      "DetectFacesResponse" : [ "OrientationCorrection" ],
      "DetectLabelsResponse" : [ "OrientationCorrection" ],
      "Emotion" : [ "Type" ],
      "Gender" : [ "Value" ],
      "IndexFacesResponse" : [ "OrientationCorrection" ],
      "Landmark" : [ "Type" ],
      "RecognizeCelebritiesResponse" : [ "OrientationCorrection" ]
    },
    "operationModifiers" : null,
    "operationsWithResponseStreamContentLengthValidation" : null,
    "presignersFqcn" : null,
    "renameShapes" : null,
    "requestMetrics" : null,
    "requiredParamValidationEnabled" : false,
    "sdkModeledExceptionBaseClassName" : null,
    "sendEmptyAutoConstructedListAsEmptyList" : null,
    "sendExplicitlyEmptyListsForQuery" : false,
    "serviceClientHoldInputStream" : false,
    "shapeModifiers" : null,
    "shapeSubstitutions" : null,
    "simpleMethods" : null,
    "skipInterfaceAdditions" : false,
    "skipSmokeTests" : false,
    "transformDirectory" : "transform",
    "useAutoConstructList" : false,
    "useAutoConstructMap" : false
  },
  "metadata" : {
    "apiVersion" : "2016-06-27",
    "asyncClient" : "AmazonRekognitionAsyncClient",
    "asyncClientBuilderClassName" : "AmazonRekognitionAsyncClientBuilder",
    "asyncInterface" : "AmazonRekognitionAsync",
    "cborProtocol" : false,
    "checksumFormat" : null,
    "contentType" : null,
    "cucumberModuleInjectorClassName" : "AmazonRekognitionModuleInjector",
    "defaultEndpoint" : "rekognition.us-east-1.amazonaws.com",
    "defaultEndpointWithoutHttpProtocol" : "rekognition.us-east-1.amazonaws.com",
    "defaultRegion" : null,
    "documentation" : "<p>This is the Amazon Rekognition API reference.</p>",
    "endpointPrefix" : "rekognition",
    "hasApiWithStreamInput" : false,
    "ionProtocol" : false,
    "jsonProtocol" : true,
    "jsonVersion" : "1.1",
    "packageName" : "com.amazonaws.services.rekognition",
    "packagePath" : "com/amazonaws/services/rekognition",
    "protocol" : "json",
    "protocolDefaultExceptionUmarshallerImpl" : null,
    "protocolFactory" : "com.amazonaws.protocol.json.SdkJsonProtocolFactory",
    "requestBaseFqcn" : "com.amazonaws.AmazonWebServiceRequest",
    "requiresApiKey" : false,
    "requiresIamSigners" : false,
    "serviceAbbreviation" : null,
    "serviceFullName" : "Amazon Rekognition",
    "serviceName" : "Amazon Rekognition",
    "signingName" : "rekognition",
    "smokeTestsPackageName" : "com.amazonaws.services.rekognition.smoketests",
    "syncClient" : "AmazonRekognitionClient",
    "syncClientBuilderClassName" : "AmazonRekognitionClientBuilder",
    "syncInterface" : "AmazonRekognition",
    "uid" : "rekognition-2016-06-27",
    "unmarshallerClassSuffix" : "JsonUnmarshaller",
    "unmarshallerContextClassName" : "JsonUnmarshallerContext",
    "xmlProtocol" : false
  },
  "operations" : {
    "CompareFaces" : {
      "asyncCallableType" : "java.util.concurrent.Callable<CompareFacesResult>",
      "asyncFutureType" : "java.util.concurrent.Future<CompareFacesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CompareFacesRequest, CompareFacesResult>",
      "asyncReturnType" : "CompareFacesResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Compares a face in the <i>source</i> input image with each face detected in the <i>target</i> input image. </p> <note> <p> If the source image contains multiple faces, the service detects the largest face and compares it with each face detected in the target image. </p> </note> <p>In response, the operation returns an array of face matches ordered by similarity score in descending order. For each face match, the response provides a bounding box of the face, facial landmarks, pose details (pitch, role, and yaw), quality (brightness and sharpness), and confidence value (indicating the level of confidence that the bounding box contains a face). The response also provides a similarity score, which indicates how closely the faces match. </p> <note> <p>By default, only faces with a similarity score of greater than or equal to 80% are returned in the response. You can change this value by specifying the <code>SimilarityThreshold</code> parameter.</p> </note> <p> <code>CompareFaces</code> also returns an array of faces that don't match the source image. For each face, it returns a bounding box, confidence value, landmarks, pose details, and quality. The response also returns information about the face in the source image, including the bounding box of the face and confidence value.</p> <p>If the image doesn't contain Exif metadata, <code>CompareFaces</code> returns orientation information for the source and target images. Use these values to display the images with the correct image orientation.</p> <note> <p> This is a stateless API operation. That is, data returned by this operation doesn't persist.</p> </note> <p>For an example, see <a>get-started-exercise-compare-faces</a>.</p> <p>This operation requires permissions to perform the <code>rekognition:CompareFaces</code> action.</p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>Input parameter violated a constraint. Validate your parameter before calling the API operation again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidS3ObjectException",
        "documentation" : "<p>Amazon Rekognition is unable to access the S3 object specified in the request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ImageTooLargeException",
        "documentation" : "<p>The input image size exceeds the allowed limit. For more information, see <a>limits</a>. </p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>You are not authorized to perform the action.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>Amazon Rekognition experienced a service issue. Try your call again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>Amazon Rekognition is temporarily unable to process the request. Try your call again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ProvisionedThroughputExceededException",
        "documentation" : "<p>The number of requests exceeded your throughput limit. If you want to increase this limit, contact Amazon Rekognition.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidImageFormatException",
        "documentation" : "<p>The provided image format is not supported. </p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "CompareFacesRequest",
        "variableName" : "compareFacesRequest",
        "variableType" : "CompareFacesRequest",
        "documentation" : "",
        "simpleType" : "CompareFacesRequest",
        "variableSetterType" : "CompareFacesRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "compareFaces",
      "operationName" : "CompareFaces",
      "returnType" : {
        "returnType" : "CompareFacesResult",
        "documentation" : null
      },
      "syncReturnType" : "CompareFacesResult"
    },
    "CreateCollection" : {
      "asyncCallableType" : "java.util.concurrent.Callable<CreateCollectionResult>",
      "asyncFutureType" : "java.util.concurrent.Future<CreateCollectionResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CreateCollectionRequest, CreateCollectionResult>",
      "asyncReturnType" : "CreateCollectionResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Creates a collection in an AWS Region. You can add faces to the collection using the operation. </p> <p>For example, you might create collections, one for each of your application users. A user can then index faces using the <code>IndexFaces</code> operation and persist results in a specific collection. Then, a user can search the collection for faces in the user-specific container. </p> <note> <p>Collection names are case-sensitive.</p> </note> <p>For an example, see <a>example1</a>. </p> <p>This operation requires permissions to perform the <code>rekognition:CreateCollection</code> action.</p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>Input parameter violated a constraint. Validate your parameter before calling the API operation again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>You are not authorized to perform the action.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>Amazon Rekognition experienced a service issue. Try your call again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>Amazon Rekognition is temporarily unable to process the request. Try your call again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ProvisionedThroughputExceededException",
        "documentation" : "<p>The number of requests exceeded your throughput limit. If you want to increase this limit, contact Amazon Rekognition.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceAlreadyExistsException",
        "documentation" : "<p>A collection with the specified ID already exists.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "CreateCollectionRequest",
        "variableName" : "createCollectionRequest",
        "variableType" : "CreateCollectionRequest",
        "documentation" : "",
        "simpleType" : "CreateCollectionRequest",
        "variableSetterType" : "CreateCollectionRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "createCollection",
      "operationName" : "CreateCollection",
      "returnType" : {
        "returnType" : "CreateCollectionResult",
        "documentation" : null
      },
      "syncReturnType" : "CreateCollectionResult"
    },
    "DeleteCollection" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteCollectionResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteCollectionResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteCollectionRequest, DeleteCollectionResult>",
      "asyncReturnType" : "DeleteCollectionResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Deletes the specified collection. Note that this operation removes all faces in the collection. For an example, see <a>example1</a>.</p> <p>This operation requires permissions to perform the <code>rekognition:DeleteCollection</code> action.</p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>Input parameter violated a constraint. Validate your parameter before calling the API operation again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>You are not authorized to perform the action.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>Amazon Rekognition experienced a service issue. Try your call again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>Amazon Rekognition is temporarily unable to process the request. Try your call again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ProvisionedThroughputExceededException",
        "documentation" : "<p>The number of requests exceeded your throughput limit. If you want to increase this limit, contact Amazon Rekognition.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>Collection specified in the request is not found.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "DeleteCollectionRequest",
        "variableName" : "deleteCollectionRequest",
        "variableType" : "DeleteCollectionRequest",
        "documentation" : "",
        "simpleType" : "DeleteCollectionRequest",
        "variableSetterType" : "DeleteCollectionRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "deleteCollection",
      "operationName" : "DeleteCollection",
      "returnType" : {
        "returnType" : "DeleteCollectionResult",
        "documentation" : null
      },
      "syncReturnType" : "DeleteCollectionResult"
    },
    "DeleteFaces" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteFacesResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteFacesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteFacesRequest, DeleteFacesResult>",
      "asyncReturnType" : "DeleteFacesResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Deletes faces from a collection. You specify a collection ID and an array of face IDs to remove from the collection.</p> <p>This operation requires permissions to perform the <code>rekognition:DeleteFaces</code> action.</p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>Input parameter violated a constraint. Validate your parameter before calling the API operation again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>You are not authorized to perform the action.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>Amazon Rekognition experienced a service issue. Try your call again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>Amazon Rekognition is temporarily unable to process the request. Try your call again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ProvisionedThroughputExceededException",
        "documentation" : "<p>The number of requests exceeded your throughput limit. If you want to increase this limit, contact Amazon Rekognition.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>Collection specified in the request is not found.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "DeleteFacesRequest",
        "variableName" : "deleteFacesRequest",
        "variableType" : "DeleteFacesRequest",
        "documentation" : "",
        "simpleType" : "DeleteFacesRequest",
        "variableSetterType" : "DeleteFacesRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "deleteFaces",
      "operationName" : "DeleteFaces",
      "returnType" : {
        "returnType" : "DeleteFacesResult",
        "documentation" : null
      },
      "syncReturnType" : "DeleteFacesResult"
    },
    "DetectFaces" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DetectFacesResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DetectFacesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DetectFacesRequest, DetectFacesResult>",
      "asyncReturnType" : "DetectFacesResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Detects faces within an image (JPEG or PNG) that is provided as input.</p> <p> For each face detected, the operation returns face details including a bounding box of the face, a confidence value (that the bounding box contains a face), and a fixed set of attributes such as facial landmarks (for example, coordinates of eye and mouth), gender, presence of beard, sunglasses, etc. </p> <p>The face-detection algorithm is most effective on frontal faces. For non-frontal or obscured faces, the algorithm may not detect the faces or might detect faces with lower confidence. </p> <note> <p>This is a stateless API operation. That is, the operation does not persist any data.</p> </note> <p>For an example, see <a>get-started-exercise-detect-faces</a>.</p> <p>This operation requires permissions to perform the <code>rekognition:DetectFaces</code> action. </p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidS3ObjectException",
        "documentation" : "<p>Amazon Rekognition is unable to access the S3 object specified in the request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>Input parameter violated a constraint. Validate your parameter before calling the API operation again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ImageTooLargeException",
        "documentation" : "<p>The input image size exceeds the allowed limit. For more information, see <a>limits</a>. </p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>You are not authorized to perform the action.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>Amazon Rekognition experienced a service issue. Try your call again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>Amazon Rekognition is temporarily unable to process the request. Try your call again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ProvisionedThroughputExceededException",
        "documentation" : "<p>The number of requests exceeded your throughput limit. If you want to increase this limit, contact Amazon Rekognition.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidImageFormatException",
        "documentation" : "<p>The provided image format is not supported. </p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "DetectFacesRequest",
        "variableName" : "detectFacesRequest",
        "variableType" : "DetectFacesRequest",
        "documentation" : "",
        "simpleType" : "DetectFacesRequest",
        "variableSetterType" : "DetectFacesRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "detectFaces",
      "operationName" : "DetectFaces",
      "returnType" : {
        "returnType" : "DetectFacesResult",
        "documentation" : null
      },
      "syncReturnType" : "DetectFacesResult"
    },
    "DetectLabels" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DetectLabelsResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DetectLabelsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DetectLabelsRequest, DetectLabelsResult>",
      "asyncReturnType" : "DetectLabelsResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Detects instances of real-world labels within an image (JPEG or PNG) provided as input. This includes objects like flower, tree, and table; events like wedding, graduation, and birthday party; and concepts like landscape, evening, and nature. For an example, see <a>get-started-exercise-detect-labels</a>.</p> <p> For each object, scene, and concept the API returns one or more labels. Each label provides the object name, and the level of confidence that the image contains the object. For example, suppose the input image has a lighthouse, the sea, and a rock. The response will include all three labels, one for each object. </p> <p> <code>{Name: lighthouse, Confidence: 98.4629}</code> </p> <p> <code>{Name: rock,Confidence: 79.2097}</code> </p> <p> <code> {Name: sea,Confidence: 75.061}</code> </p> <p> In the preceding example, the operation returns one label for each of the three objects. The operation can also return multiple labels for the same object in the image. For example, if the input image shows a flower (for example, a tulip), the operation might return the following three labels. </p> <p> <code>{Name: flower,Confidence: 99.0562}</code> </p> <p> <code>{Name: plant,Confidence: 99.0562}</code> </p> <p> <code>{Name: tulip,Confidence: 99.0562}</code> </p> <p>In this example, the detection algorithm more precisely identifies the flower as a tulip.</p> <p>You can provide the input image as an S3 object or as base64-encoded bytes. In response, the API returns an array of labels. In addition, the response also includes the orientation correction. Optionally, you can specify <code>MinConfidence</code> to control the confidence threshold for the labels returned. The default is 50%. You can also add the <code>MaxLabels</code> parameter to limit the number of labels returned. </p> <note> <p>If the object detected is a person, the operation doesn't provide the same facial details that the <a>DetectFaces</a> operation provides.</p> </note> <p>This is a stateless API operation. That is, the operation does not persist any data.</p> <p>This operation requires permissions to perform the <code>rekognition:DetectLabels</code> action. </p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidS3ObjectException",
        "documentation" : "<p>Amazon Rekognition is unable to access the S3 object specified in the request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>Input parameter violated a constraint. Validate your parameter before calling the API operation again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ImageTooLargeException",
        "documentation" : "<p>The input image size exceeds the allowed limit. For more information, see <a>limits</a>. </p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>You are not authorized to perform the action.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>Amazon Rekognition experienced a service issue. Try your call again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>Amazon Rekognition is temporarily unable to process the request. Try your call again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ProvisionedThroughputExceededException",
        "documentation" : "<p>The number of requests exceeded your throughput limit. If you want to increase this limit, contact Amazon Rekognition.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidImageFormatException",
        "documentation" : "<p>The provided image format is not supported. </p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "DetectLabelsRequest",
        "variableName" : "detectLabelsRequest",
        "variableType" : "DetectLabelsRequest",
        "documentation" : "",
        "simpleType" : "DetectLabelsRequest",
        "variableSetterType" : "DetectLabelsRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "detectLabels",
      "operationName" : "DetectLabels",
      "returnType" : {
        "returnType" : "DetectLabelsResult",
        "documentation" : null
      },
      "syncReturnType" : "DetectLabelsResult"
    },
    "DetectModerationLabels" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DetectModerationLabelsResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DetectModerationLabelsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DetectModerationLabelsRequest, DetectModerationLabelsResult>",
      "asyncReturnType" : "DetectModerationLabelsResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Detects explicit or suggestive adult content in a specified JPEG or PNG format image. Use <code>DetectModerationLabels</code> to moderate images depending on your requirements. For example, you might want to filter images that contain nudity, but not images containing suggestive content.</p> <p>To filter images, use the labels returned by <code>DetectModerationLabels</code> to determine which types of content are appropriate. For information about moderation labels, see <a>image-moderation</a>.</p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidS3ObjectException",
        "documentation" : "<p>Amazon Rekognition is unable to access the S3 object specified in the request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>Input parameter violated a constraint. Validate your parameter before calling the API operation again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ImageTooLargeException",
        "documentation" : "<p>The input image size exceeds the allowed limit. For more information, see <a>limits</a>. </p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>You are not authorized to perform the action.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>Amazon Rekognition experienced a service issue. Try your call again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>Amazon Rekognition is temporarily unable to process the request. Try your call again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ProvisionedThroughputExceededException",
        "documentation" : "<p>The number of requests exceeded your throughput limit. If you want to increase this limit, contact Amazon Rekognition.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidImageFormatException",
        "documentation" : "<p>The provided image format is not supported. </p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "DetectModerationLabelsRequest",
        "variableName" : "detectModerationLabelsRequest",
        "variableType" : "DetectModerationLabelsRequest",
        "documentation" : "",
        "simpleType" : "DetectModerationLabelsRequest",
        "variableSetterType" : "DetectModerationLabelsRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "detectModerationLabels",
      "operationName" : "DetectModerationLabels",
      "returnType" : {
        "returnType" : "DetectModerationLabelsResult",
        "documentation" : null
      },
      "syncReturnType" : "DetectModerationLabelsResult"
    },
    "GetCelebrityInfo" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetCelebrityInfoResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetCelebrityInfoResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetCelebrityInfoRequest, GetCelebrityInfoResult>",
      "asyncReturnType" : "GetCelebrityInfoResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Gets the name and additional information about a celebrity based on his or her Rekognition ID. The additional information is returned as an array of URLs. If there is no additional information about the celebrity, this list is empty. For more information, see <a>celebrity-recognition</a>.</p> <p>This operation requires permissions to perform the <code>rekognition:GetCelebrityInfo</code> action. </p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>Input parameter violated a constraint. Validate your parameter before calling the API operation again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>You are not authorized to perform the action.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>Amazon Rekognition experienced a service issue. Try your call again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>Amazon Rekognition is temporarily unable to process the request. Try your call again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ProvisionedThroughputExceededException",
        "documentation" : "<p>The number of requests exceeded your throughput limit. If you want to increase this limit, contact Amazon Rekognition.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>Collection specified in the request is not found.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "GetCelebrityInfoRequest",
        "variableName" : "getCelebrityInfoRequest",
        "variableType" : "GetCelebrityInfoRequest",
        "documentation" : "",
        "simpleType" : "GetCelebrityInfoRequest",
        "variableSetterType" : "GetCelebrityInfoRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getCelebrityInfo",
      "operationName" : "GetCelebrityInfo",
      "returnType" : {
        "returnType" : "GetCelebrityInfoResult",
        "documentation" : null
      },
      "syncReturnType" : "GetCelebrityInfoResult"
    },
    "IndexFaces" : {
      "asyncCallableType" : "java.util.concurrent.Callable<IndexFacesResult>",
      "asyncFutureType" : "java.util.concurrent.Future<IndexFacesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<IndexFacesRequest, IndexFacesResult>",
      "asyncReturnType" : "IndexFacesResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Detects faces in the input image and adds them to the specified collection. </p> <p> Amazon Rekognition does not save the actual faces detected. Instead, the underlying detection algorithm first detects the faces in the input image, and for each face extracts facial features into a feature vector, and stores it in the back-end database. Amazon Rekognition uses feature vectors when performing face match and search operations using the and operations. </p> <p>If you provide the optional <code>externalImageID</code> for the input image you provided, Amazon Rekognition associates this ID with all faces that it detects. When you call the operation, the response returns the external ID. You can use this external image ID to create a client-side index to associate the faces with each image. You can then use the index to find all faces in an image. </p> <p>In response, the operation returns an array of metadata for all detected faces. This includes, the bounding box of the detected face, confidence value (indicating the bounding box contains a face), a face ID assigned by the service for each face that is detected and stored, and an image ID assigned by the service for the input image. If you request all facial attributes (using the <code>detectionAttributes</code> parameter, Amazon Rekognition returns detailed facial attributes such as facial landmarks (for example, location of eye and mount) and other facial attributes such gender. If you provide the same image, specify the same collection, and use the same external ID in the <code>IndexFaces</code> operation, Amazon Rekognition doesn't save duplicate face metadata. </p> <p>For an example, see <a>example2</a>.</p> <p>This operation requires permissions to perform the <code>rekognition:IndexFaces</code> action.</p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidS3ObjectException",
        "documentation" : "<p>Amazon Rekognition is unable to access the S3 object specified in the request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>Input parameter violated a constraint. Validate your parameter before calling the API operation again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ImageTooLargeException",
        "documentation" : "<p>The input image size exceeds the allowed limit. For more information, see <a>limits</a>. </p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>You are not authorized to perform the action.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>Amazon Rekognition experienced a service issue. Try your call again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>Amazon Rekognition is temporarily unable to process the request. Try your call again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ProvisionedThroughputExceededException",
        "documentation" : "<p>The number of requests exceeded your throughput limit. If you want to increase this limit, contact Amazon Rekognition.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>Collection specified in the request is not found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidImageFormatException",
        "documentation" : "<p>The provided image format is not supported. </p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "IndexFacesRequest",
        "variableName" : "indexFacesRequest",
        "variableType" : "IndexFacesRequest",
        "documentation" : "",
        "simpleType" : "IndexFacesRequest",
        "variableSetterType" : "IndexFacesRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "indexFaces",
      "operationName" : "IndexFaces",
      "returnType" : {
        "returnType" : "IndexFacesResult",
        "documentation" : null
      },
      "syncReturnType" : "IndexFacesResult"
    },
    "ListCollections" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListCollectionsResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListCollectionsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListCollectionsRequest, ListCollectionsResult>",
      "asyncReturnType" : "ListCollectionsResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Returns list of collection IDs in your account. If the result is truncated, the response also provides a <code>NextToken</code> that you can use in the subsequent request to fetch the next set of collection IDs.</p> <p>For an example, see <a>example1</a>.</p> <p>This operation requires permissions to perform the <code>rekognition:ListCollections</code> action.</p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>Input parameter violated a constraint. Validate your parameter before calling the API operation again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>You are not authorized to perform the action.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>Amazon Rekognition experienced a service issue. Try your call again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>Amazon Rekognition is temporarily unable to process the request. Try your call again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ProvisionedThroughputExceededException",
        "documentation" : "<p>The number of requests exceeded your throughput limit. If you want to increase this limit, contact Amazon Rekognition.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidPaginationTokenException",
        "documentation" : "<p>Pagination token in the request is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>Collection specified in the request is not found.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "ListCollectionsRequest",
        "variableName" : "listCollectionsRequest",
        "variableType" : "ListCollectionsRequest",
        "documentation" : "",
        "simpleType" : "ListCollectionsRequest",
        "variableSetterType" : "ListCollectionsRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listCollections",
      "operationName" : "ListCollections",
      "returnType" : {
        "returnType" : "ListCollectionsResult",
        "documentation" : null
      },
      "syncReturnType" : "ListCollectionsResult"
    },
    "ListFaces" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListFacesResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListFacesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListFacesRequest, ListFacesResult>",
      "asyncReturnType" : "ListFacesResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Returns metadata for faces in the specified collection. This metadata includes information such as the bounding box coordinates, the confidence (that the bounding box contains a face), and face ID. For an example, see <a>example3</a>. </p> <p>This operation requires permissions to perform the <code>rekognition:ListFaces</code> action.</p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>Input parameter violated a constraint. Validate your parameter before calling the API operation again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>You are not authorized to perform the action.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>Amazon Rekognition experienced a service issue. Try your call again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>Amazon Rekognition is temporarily unable to process the request. Try your call again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ProvisionedThroughputExceededException",
        "documentation" : "<p>The number of requests exceeded your throughput limit. If you want to increase this limit, contact Amazon Rekognition.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidPaginationTokenException",
        "documentation" : "<p>Pagination token in the request is not valid.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>Collection specified in the request is not found.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "ListFacesRequest",
        "variableName" : "listFacesRequest",
        "variableType" : "ListFacesRequest",
        "documentation" : "",
        "simpleType" : "ListFacesRequest",
        "variableSetterType" : "ListFacesRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listFaces",
      "operationName" : "ListFaces",
      "returnType" : {
        "returnType" : "ListFacesResult",
        "documentation" : null
      },
      "syncReturnType" : "ListFacesResult"
    },
    "RecognizeCelebrities" : {
      "asyncCallableType" : "java.util.concurrent.Callable<RecognizeCelebritiesResult>",
      "asyncFutureType" : "java.util.concurrent.Future<RecognizeCelebritiesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<RecognizeCelebritiesRequest, RecognizeCelebritiesResult>",
      "asyncReturnType" : "RecognizeCelebritiesResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Returns an array of celebrities recognized in the input image. The image is passed either as base64-encoded image bytes or as a reference to an image in an Amazon S3 bucket. The image must be either a PNG or JPEG formatted file. For more information, see <a>celebrity-recognition</a>. </p> <p> <code>RecognizeCelebrities</code> returns the 15 largest faces in the image. It lists recognized celebrities in the <code>CelebrityFaces</code> list and unrecognized faces in the <code>UnrecognizedFaces</code> list. The operation doesn't return celebrities whose face sizes are smaller than the largest 15 faces in the image.</p> <p>For each celebrity recognized, the API returns a <code>Celebrity</code> object. The <code>Celebrity</code> object contains the celebrity name, ID, URL links to additional information, match confidence, and a <code>ComparedFace</code> object that you can use to locate the celebrity's face on the image.</p> <p>Rekognition does not retain information about which images a celebrity has been recognized in. Your application must store this information and use the <code>Celebrity</code> ID property as a unique identifier for the celebrity. If you don't store the celebrity name or additional information URLs returned by <code>RecognizeCelebrities</code>, you will need the ID to identify the celebrity in a call to the operation.</p> <p>For an example, see <a>recognize-celebrities-tutorial</a>.</p> <p>This operation requires permissions to perform the <code>rekognition:RecognizeCelebrities</code> operation.</p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidS3ObjectException",
        "documentation" : "<p>Amazon Rekognition is unable to access the S3 object specified in the request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>Input parameter violated a constraint. Validate your parameter before calling the API operation again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidImageFormatException",
        "documentation" : "<p>The provided image format is not supported. </p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ImageTooLargeException",
        "documentation" : "<p>The input image size exceeds the allowed limit. For more information, see <a>limits</a>. </p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>You are not authorized to perform the action.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>Amazon Rekognition experienced a service issue. Try your call again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>Amazon Rekognition is temporarily unable to process the request. Try your call again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ProvisionedThroughputExceededException",
        "documentation" : "<p>The number of requests exceeded your throughput limit. If you want to increase this limit, contact Amazon Rekognition.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidImageFormatException",
        "documentation" : "<p>The provided image format is not supported. </p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "RecognizeCelebritiesRequest",
        "variableName" : "recognizeCelebritiesRequest",
        "variableType" : "RecognizeCelebritiesRequest",
        "documentation" : "",
        "simpleType" : "RecognizeCelebritiesRequest",
        "variableSetterType" : "RecognizeCelebritiesRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "recognizeCelebrities",
      "operationName" : "RecognizeCelebrities",
      "returnType" : {
        "returnType" : "RecognizeCelebritiesResult",
        "documentation" : null
      },
      "syncReturnType" : "RecognizeCelebritiesResult"
    },
    "SearchFaces" : {
      "asyncCallableType" : "java.util.concurrent.Callable<SearchFacesResult>",
      "asyncFutureType" : "java.util.concurrent.Future<SearchFacesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<SearchFacesRequest, SearchFacesResult>",
      "asyncReturnType" : "SearchFacesResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>For a given input face ID, searches for matching faces in the collection the face belongs to. You get a face ID when you add a face to the collection using the <a>IndexFaces</a> operation. The operation compares the features of the input face with faces in the specified collection. </p> <note> <p>You can also search faces without indexing faces by using the <code>SearchFacesByImage</code> operation.</p> </note> <p> The operation response returns an array of faces that match, ordered by similarity score with the highest similarity first. More specifically, it is an array of metadata for each face match that is found. Along with the metadata, the response also includes a <code>confidence</code> value for each face match, indicating the confidence that the specific face matches the input face. </p> <p>For an example, see <a>example3</a>.</p> <p>This operation requires permissions to perform the <code>rekognition:SearchFaces</code> action.</p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>Input parameter violated a constraint. Validate your parameter before calling the API operation again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>You are not authorized to perform the action.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>Amazon Rekognition experienced a service issue. Try your call again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>Amazon Rekognition is temporarily unable to process the request. Try your call again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ProvisionedThroughputExceededException",
        "documentation" : "<p>The number of requests exceeded your throughput limit. If you want to increase this limit, contact Amazon Rekognition.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>Collection specified in the request is not found.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "SearchFacesRequest",
        "variableName" : "searchFacesRequest",
        "variableType" : "SearchFacesRequest",
        "documentation" : "",
        "simpleType" : "SearchFacesRequest",
        "variableSetterType" : "SearchFacesRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "searchFaces",
      "operationName" : "SearchFaces",
      "returnType" : {
        "returnType" : "SearchFacesResult",
        "documentation" : null
      },
      "syncReturnType" : "SearchFacesResult"
    },
    "SearchFacesByImage" : {
      "asyncCallableType" : "java.util.concurrent.Callable<SearchFacesByImageResult>",
      "asyncFutureType" : "java.util.concurrent.Future<SearchFacesByImageResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<SearchFacesByImageRequest, SearchFacesByImageResult>",
      "asyncReturnType" : "SearchFacesByImageResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>For a given input image, first detects the largest face in the image, and then searches the specified collection for matching faces. The operation compares the features of the input face with faces in the specified collection. </p> <note> <p> To search for all faces in an input image, you might first call the operation, and then use the face IDs returned in subsequent calls to the operation. </p> <p> You can also call the <code>DetectFaces</code> operation and use the bounding boxes in the response to make face crops, which then you can pass in to the <code>SearchFacesByImage</code> operation. </p> </note> <p> The response returns an array of faces that match, ordered by similarity score with the highest similarity first. More specifically, it is an array of metadata for each face match found. Along with the metadata, the response also includes a <code>similarity</code> indicating how similar the face is to the input face. In the response, the operation also returns the bounding box (and a confidence level that the bounding box contains a face) of the face that Amazon Rekognition used for the input image. </p> <p>For an example, see <a>example3</a>.</p> <p>This operation requires permissions to perform the <code>rekognition:SearchFacesByImage</code> action.</p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidS3ObjectException",
        "documentation" : "<p>Amazon Rekognition is unable to access the S3 object specified in the request.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>Input parameter violated a constraint. Validate your parameter before calling the API operation again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ImageTooLargeException",
        "documentation" : "<p>The input image size exceeds the allowed limit. For more information, see <a>limits</a>. </p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>You are not authorized to perform the action.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>Amazon Rekognition experienced a service issue. Try your call again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>Amazon Rekognition is temporarily unable to process the request. Try your call again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ProvisionedThroughputExceededException",
        "documentation" : "<p>The number of requests exceeded your throughput limit. If you want to increase this limit, contact Amazon Rekognition.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>Collection specified in the request is not found.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidImageFormatException",
        "documentation" : "<p>The provided image format is not supported. </p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "SearchFacesByImageRequest",
        "variableName" : "searchFacesByImageRequest",
        "variableType" : "SearchFacesByImageRequest",
        "documentation" : "",
        "simpleType" : "SearchFacesByImageRequest",
        "variableSetterType" : "SearchFacesByImageRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "searchFacesByImage",
      "operationName" : "SearchFacesByImage",
      "returnType" : {
        "returnType" : "SearchFacesByImageResult",
        "documentation" : null
      },
      "syncReturnType" : "SearchFacesByImageResult"
    }
  },
  "shapes" : {
    "AccessDeniedException" : {
      "c2jName" : "AccessDeniedException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>You are not authorized to perform the action.</p>",
      "enums" : null,
      "errorCode" : "AccessDeniedException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "AccessDeniedException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "AccessDeniedException",
        "variableName" : "accessDeniedException",
        "variableType" : "AccessDeniedException",
        "documentation" : null,
        "simpleType" : "AccessDeniedException",
        "variableSetterType" : "AccessDeniedException"
      },
      "wrapper" : false
    },
    "AgeRange" : {
      "c2jName" : "AgeRange",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Structure containing the estimated age range, in years, for a face.</p> <p>Rekognition estimates an age-range for faces detected in the input image. Estimated age ranges can overlap; a face of a 5 year old may have an estimated range of 4-6 whilst the face of a 6 year old may have an estimated range of 4-8.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Low",
        "c2jShape" : "UInteger",
        "deprecated" : false,
        "documentation" : "<p>The lowest estimated age.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The lowest estimated age.</p>\n@param low The lowest estimated age.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLow",
        "getterDocumentation" : "/**<p>The lowest estimated age.</p>\n@return The lowest estimated age.*/",
        "getterMethodName" : "getLow",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Low",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Low",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "Low",
        "setterDocumentation" : "/**<p>The lowest estimated age.</p>\n@param low The lowest estimated age.*/",
        "setterMethodName" : "setLow",
        "setterModel" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "low",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The lowest estimated age.</p>\n@param low The lowest estimated age.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "low",
          "variableType" : "Integer",
          "documentation" : "<p>The lowest estimated age.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "High",
        "c2jShape" : "UInteger",
        "deprecated" : false,
        "documentation" : "<p>The highest estimated age.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The highest estimated age.</p>\n@param high The highest estimated age.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withHigh",
        "getterDocumentation" : "/**<p>The highest estimated age.</p>\n@return The highest estimated age.*/",
        "getterMethodName" : "getHigh",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "High",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "High",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "High",
        "setterDocumentation" : "/**<p>The highest estimated age.</p>\n@param high The highest estimated age.*/",
        "setterMethodName" : "setHigh",
        "setterModel" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "high",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The highest estimated age.</p>\n@param high The highest estimated age.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "high",
          "variableType" : "Integer",
          "documentation" : "<p>The highest estimated age.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "High" : {
          "c2jName" : "High",
          "c2jShape" : "UInteger",
          "deprecated" : false,
          "documentation" : "<p>The highest estimated age.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The highest estimated age.</p>\n@param high The highest estimated age.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withHigh",
          "getterDocumentation" : "/**<p>The highest estimated age.</p>\n@return The highest estimated age.*/",
          "getterMethodName" : "getHigh",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "High",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "High",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "High",
          "setterDocumentation" : "/**<p>The highest estimated age.</p>\n@param high The highest estimated age.*/",
          "setterMethodName" : "setHigh",
          "setterModel" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "high",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The highest estimated age.</p>\n@param high The highest estimated age.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "high",
            "variableType" : "Integer",
            "documentation" : "<p>The highest estimated age.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "Low" : {
          "c2jName" : "Low",
          "c2jShape" : "UInteger",
          "deprecated" : false,
          "documentation" : "<p>The lowest estimated age.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The lowest estimated age.</p>\n@param low The lowest estimated age.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLow",
          "getterDocumentation" : "/**<p>The lowest estimated age.</p>\n@return The lowest estimated age.*/",
          "getterMethodName" : "getLow",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Low",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Low",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "Low",
          "setterDocumentation" : "/**<p>The lowest estimated age.</p>\n@param low The lowest estimated age.*/",
          "setterMethodName" : "setLow",
          "setterModel" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "low",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The lowest estimated age.</p>\n@param low The lowest estimated age.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "low",
            "variableType" : "Integer",
            "documentation" : "<p>The lowest estimated age.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "AgeRange",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "AgeRange",
        "variableName" : "ageRange",
        "variableType" : "AgeRange",
        "documentation" : null,
        "simpleType" : "AgeRange",
        "variableSetterType" : "AgeRange"
      },
      "wrapper" : false
    },
    "Attribute" : {
      "c2jName" : "Attribute",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "DEFAULT",
        "value" : "DEFAULT"
      }, {
        "name" : "ALL",
        "value" : "ALL"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Attribute",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "Attribute",
        "variableName" : "attribute",
        "variableType" : "Attribute",
        "documentation" : null,
        "simpleType" : "Attribute",
        "variableSetterType" : "Attribute"
      },
      "wrapper" : false
    },
    "Beard" : {
      "c2jName" : "Beard",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Indicates whether or not the face has a beard, and the confidence level in the determination.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Value",
        "c2jShape" : "Boolean",
        "deprecated" : false,
        "documentation" : "<p>Boolean value that indicates whether the face has beard or not.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Boolean value that indicates whether the face has beard or not.</p>\n@param value Boolean value that indicates whether the face has beard or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withValue",
        "getterDocumentation" : "/**<p>Boolean value that indicates whether the face has beard or not.</p>\n@return Boolean value that indicates whether the face has beard or not.*/",
        "getterMethodName" : "getValue",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Value",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Value",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "Value",
        "setterDocumentation" : "/**<p>Boolean value that indicates whether the face has beard or not.</p>\n@param value Boolean value that indicates whether the face has beard or not.*/",
        "setterMethodName" : "setValue",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "value",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Boolean value that indicates whether the face has beard or not.</p>\n@param value Boolean value that indicates whether the face has beard or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "value",
          "variableType" : "Boolean",
          "documentation" : "<p>Boolean value that indicates whether the face has beard or not.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Confidence",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>Level of confidence in the determination.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withConfidence",
        "getterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@return Level of confidence in the determination.*/",
        "getterMethodName" : "getConfidence",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Confidence",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Confidence",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Float",
        "marshallingType" : "FLOAT",
        "name" : "Confidence",
        "setterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.*/",
        "setterMethodName" : "setConfidence",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "<p>Level of confidence in the determination.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Confidence" : {
          "c2jName" : "Confidence",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>Level of confidence in the determination.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withConfidence",
          "getterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@return Level of confidence in the determination.*/",
          "getterMethodName" : "getConfidence",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Confidence",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Confidence",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Float",
          "marshallingType" : "FLOAT",
          "name" : "Confidence",
          "setterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.*/",
          "setterMethodName" : "setConfidence",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "<p>Level of confidence in the determination.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "Value" : {
          "c2jName" : "Value",
          "c2jShape" : "Boolean",
          "deprecated" : false,
          "documentation" : "<p>Boolean value that indicates whether the face has beard or not.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Boolean value that indicates whether the face has beard or not.</p>\n@param value Boolean value that indicates whether the face has beard or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withValue",
          "getterDocumentation" : "/**<p>Boolean value that indicates whether the face has beard or not.</p>\n@return Boolean value that indicates whether the face has beard or not.*/",
          "getterMethodName" : "getValue",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Value",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Value",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "Value",
          "setterDocumentation" : "/**<p>Boolean value that indicates whether the face has beard or not.</p>\n@param value Boolean value that indicates whether the face has beard or not.*/",
          "setterMethodName" : "setValue",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "value",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Boolean value that indicates whether the face has beard or not.</p>\n@param value Boolean value that indicates whether the face has beard or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "value",
            "variableType" : "Boolean",
            "documentation" : "<p>Boolean value that indicates whether the face has beard or not.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Beard",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "Beard",
        "variableName" : "beard",
        "variableType" : "Beard",
        "documentation" : null,
        "simpleType" : "Beard",
        "variableSetterType" : "Beard"
      },
      "wrapper" : false
    },
    "BoundingBox" : {
      "c2jName" : "BoundingBox",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Identifies the bounding box around the object or face. The <code>left</code> (x-coordinate) and <code>top</code> (y-coordinate) are coordinates representing the top and left sides of the bounding box. Note that the upper-left corner of the image is the origin (0,0). </p> <p>The <code>top</code> and <code>left</code> values returned are ratios of the overall image size. For example, if the input image is 700x200 pixels, and the top-left coordinate of the bounding box is 350x50 pixels, the API returns a <code>left</code> value of 0.5 (350/700) and a <code>top</code> value of 0.25 (50/200).</p> <p> The <code>width</code> and <code>height</code> values represent the dimensions of the bounding box as a ratio of the overall image dimension. For example, if the input image is 700x200 pixels, and the bounding box width is 70 pixels, the width returned is 0.1. </p> <note> <p> The bounding box coordinates can have negative values. For example, if Amazon Rekognition is able to detect a face that is at the image edge and is only partially visible, the service can return coordinates that are outside the image bounds and, depending on the image edge, you might get negative values or values greater than 1 for the <code>left</code> or <code>top</code> values. </p> </note>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Width",
        "c2jShape" : "Float",
        "deprecated" : false,
        "documentation" : "<p>Width of the bounding box as a ratio of the overall image width.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Width of the bounding box as a ratio of the overall image width.</p>\n@param width Width of the bounding box as a ratio of the overall image width.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withWidth",
        "getterDocumentation" : "/**<p>Width of the bounding box as a ratio of the overall image width.</p>\n@return Width of the bounding box as a ratio of the overall image width.*/",
        "getterMethodName" : "getWidth",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Width",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Width",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Float",
        "marshallingType" : "FLOAT",
        "name" : "Width",
        "setterDocumentation" : "/**<p>Width of the bounding box as a ratio of the overall image width.</p>\n@param width Width of the bounding box as a ratio of the overall image width.*/",
        "setterMethodName" : "setWidth",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "width",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Width of the bounding box as a ratio of the overall image width.</p>\n@param width Width of the bounding box as a ratio of the overall image width.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "width",
          "variableType" : "Float",
          "documentation" : "<p>Width of the bounding box as a ratio of the overall image width.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Height",
        "c2jShape" : "Float",
        "deprecated" : false,
        "documentation" : "<p>Height of the bounding box as a ratio of the overall image height.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Height of the bounding box as a ratio of the overall image height.</p>\n@param height Height of the bounding box as a ratio of the overall image height.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withHeight",
        "getterDocumentation" : "/**<p>Height of the bounding box as a ratio of the overall image height.</p>\n@return Height of the bounding box as a ratio of the overall image height.*/",
        "getterMethodName" : "getHeight",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Height",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Height",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Float",
        "marshallingType" : "FLOAT",
        "name" : "Height",
        "setterDocumentation" : "/**<p>Height of the bounding box as a ratio of the overall image height.</p>\n@param height Height of the bounding box as a ratio of the overall image height.*/",
        "setterMethodName" : "setHeight",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "height",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Height of the bounding box as a ratio of the overall image height.</p>\n@param height Height of the bounding box as a ratio of the overall image height.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "height",
          "variableType" : "Float",
          "documentation" : "<p>Height of the bounding box as a ratio of the overall image height.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Left",
        "c2jShape" : "Float",
        "deprecated" : false,
        "documentation" : "<p>Left coordinate of the bounding box as a ratio of overall image width.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Left coordinate of the bounding box as a ratio of overall image width.</p>\n@param left Left coordinate of the bounding box as a ratio of overall image width.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLeft",
        "getterDocumentation" : "/**<p>Left coordinate of the bounding box as a ratio of overall image width.</p>\n@return Left coordinate of the bounding box as a ratio of overall image width.*/",
        "getterMethodName" : "getLeft",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Left",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Left",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Float",
        "marshallingType" : "FLOAT",
        "name" : "Left",
        "setterDocumentation" : "/**<p>Left coordinate of the bounding box as a ratio of overall image width.</p>\n@param left Left coordinate of the bounding box as a ratio of overall image width.*/",
        "setterMethodName" : "setLeft",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "left",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Left coordinate of the bounding box as a ratio of overall image width.</p>\n@param left Left coordinate of the bounding box as a ratio of overall image width.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "left",
          "variableType" : "Float",
          "documentation" : "<p>Left coordinate of the bounding box as a ratio of overall image width.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Top",
        "c2jShape" : "Float",
        "deprecated" : false,
        "documentation" : "<p>Top coordinate of the bounding box as a ratio of overall image height.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Top coordinate of the bounding box as a ratio of overall image height.</p>\n@param top Top coordinate of the bounding box as a ratio of overall image height.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTop",
        "getterDocumentation" : "/**<p>Top coordinate of the bounding box as a ratio of overall image height.</p>\n@return Top coordinate of the bounding box as a ratio of overall image height.*/",
        "getterMethodName" : "getTop",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Top",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Top",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Float",
        "marshallingType" : "FLOAT",
        "name" : "Top",
        "setterDocumentation" : "/**<p>Top coordinate of the bounding box as a ratio of overall image height.</p>\n@param top Top coordinate of the bounding box as a ratio of overall image height.*/",
        "setterMethodName" : "setTop",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "top",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Top coordinate of the bounding box as a ratio of overall image height.</p>\n@param top Top coordinate of the bounding box as a ratio of overall image height.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "top",
          "variableType" : "Float",
          "documentation" : "<p>Top coordinate of the bounding box as a ratio of overall image height.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Height" : {
          "c2jName" : "Height",
          "c2jShape" : "Float",
          "deprecated" : false,
          "documentation" : "<p>Height of the bounding box as a ratio of the overall image height.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Height of the bounding box as a ratio of the overall image height.</p>\n@param height Height of the bounding box as a ratio of the overall image height.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withHeight",
          "getterDocumentation" : "/**<p>Height of the bounding box as a ratio of the overall image height.</p>\n@return Height of the bounding box as a ratio of the overall image height.*/",
          "getterMethodName" : "getHeight",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Height",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Height",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Float",
          "marshallingType" : "FLOAT",
          "name" : "Height",
          "setterDocumentation" : "/**<p>Height of the bounding box as a ratio of the overall image height.</p>\n@param height Height of the bounding box as a ratio of the overall image height.*/",
          "setterMethodName" : "setHeight",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "height",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Height of the bounding box as a ratio of the overall image height.</p>\n@param height Height of the bounding box as a ratio of the overall image height.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "height",
            "variableType" : "Float",
            "documentation" : "<p>Height of the bounding box as a ratio of the overall image height.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "Left" : {
          "c2jName" : "Left",
          "c2jShape" : "Float",
          "deprecated" : false,
          "documentation" : "<p>Left coordinate of the bounding box as a ratio of overall image width.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Left coordinate of the bounding box as a ratio of overall image width.</p>\n@param left Left coordinate of the bounding box as a ratio of overall image width.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLeft",
          "getterDocumentation" : "/**<p>Left coordinate of the bounding box as a ratio of overall image width.</p>\n@return Left coordinate of the bounding box as a ratio of overall image width.*/",
          "getterMethodName" : "getLeft",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Left",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Left",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Float",
          "marshallingType" : "FLOAT",
          "name" : "Left",
          "setterDocumentation" : "/**<p>Left coordinate of the bounding box as a ratio of overall image width.</p>\n@param left Left coordinate of the bounding box as a ratio of overall image width.*/",
          "setterMethodName" : "setLeft",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "left",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Left coordinate of the bounding box as a ratio of overall image width.</p>\n@param left Left coordinate of the bounding box as a ratio of overall image width.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "left",
            "variableType" : "Float",
            "documentation" : "<p>Left coordinate of the bounding box as a ratio of overall image width.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "Top" : {
          "c2jName" : "Top",
          "c2jShape" : "Float",
          "deprecated" : false,
          "documentation" : "<p>Top coordinate of the bounding box as a ratio of overall image height.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Top coordinate of the bounding box as a ratio of overall image height.</p>\n@param top Top coordinate of the bounding box as a ratio of overall image height.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTop",
          "getterDocumentation" : "/**<p>Top coordinate of the bounding box as a ratio of overall image height.</p>\n@return Top coordinate of the bounding box as a ratio of overall image height.*/",
          "getterMethodName" : "getTop",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Top",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Top",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Float",
          "marshallingType" : "FLOAT",
          "name" : "Top",
          "setterDocumentation" : "/**<p>Top coordinate of the bounding box as a ratio of overall image height.</p>\n@param top Top coordinate of the bounding box as a ratio of overall image height.*/",
          "setterMethodName" : "setTop",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "top",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Top coordinate of the bounding box as a ratio of overall image height.</p>\n@param top Top coordinate of the bounding box as a ratio of overall image height.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "top",
            "variableType" : "Float",
            "documentation" : "<p>Top coordinate of the bounding box as a ratio of overall image height.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "Width" : {
          "c2jName" : "Width",
          "c2jShape" : "Float",
          "deprecated" : false,
          "documentation" : "<p>Width of the bounding box as a ratio of the overall image width.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Width of the bounding box as a ratio of the overall image width.</p>\n@param width Width of the bounding box as a ratio of the overall image width.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withWidth",
          "getterDocumentation" : "/**<p>Width of the bounding box as a ratio of the overall image width.</p>\n@return Width of the bounding box as a ratio of the overall image width.*/",
          "getterMethodName" : "getWidth",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Width",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Width",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Float",
          "marshallingType" : "FLOAT",
          "name" : "Width",
          "setterDocumentation" : "/**<p>Width of the bounding box as a ratio of the overall image width.</p>\n@param width Width of the bounding box as a ratio of the overall image width.*/",
          "setterMethodName" : "setWidth",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "width",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Width of the bounding box as a ratio of the overall image width.</p>\n@param width Width of the bounding box as a ratio of the overall image width.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "width",
            "variableType" : "Float",
            "documentation" : "<p>Width of the bounding box as a ratio of the overall image width.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "BoundingBox",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "BoundingBox",
        "variableName" : "boundingBox",
        "variableType" : "BoundingBox",
        "documentation" : null,
        "simpleType" : "BoundingBox",
        "variableSetterType" : "BoundingBox"
      },
      "wrapper" : false
    },
    "Celebrity" : {
      "c2jName" : "Celebrity",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Provides information about a celebrity recognized by the operation.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Urls",
        "c2jShape" : "Urls",
        "deprecated" : false,
        "documentation" : "<p>An array of URLs pointing to additional information about the celebrity. If there is no additional information about the celebrity, this list is empty.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An array of URLs pointing to additional information about the celebrity. If there is no additional information about the celebrity, this list is empty.</p>\n@param urls An array of URLs pointing to additional information about the celebrity. If there is no additional information about the celebrity, this list is empty.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withUrls",
        "getterDocumentation" : "/**<p>An array of URLs pointing to additional information about the celebrity. If there is no additional information about the celebrity, this list is empty.</p>\n@return An array of URLs pointing to additional information about the celebrity. If there is no additional information about the celebrity, this list is empty.*/",
        "getterMethodName" : "getUrls",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Urls",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Urls",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Url",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Urls",
        "setterDocumentation" : "/**<p>An array of URLs pointing to additional information about the celebrity. If there is no additional information about the celebrity, this list is empty.</p>\n@param urls An array of URLs pointing to additional information about the celebrity. If there is no additional information about the celebrity, this list is empty.*/",
        "setterMethodName" : "setUrls",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "urls",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An array of URLs pointing to additional information about the celebrity. If there is no additional information about the celebrity, this list is empty.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setUrls(java.util.Collection)} or {@link #withUrls(java.util.Collection)} if you want to override the existing values.</p>\n@param urls An array of URLs pointing to additional information about the celebrity. If there is no additional information about the celebrity, this list is empty.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "urls",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>An array of URLs pointing to additional information about the celebrity. If there is no additional information about the celebrity, this list is empty.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Name",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>The name of the celebrity.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the celebrity.</p>\n@param name The name of the celebrity.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>The name of the celebrity.</p>\n@return The name of the celebrity.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Name",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "setterDocumentation" : "/**<p>The name of the celebrity.</p>\n@param name The name of the celebrity.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the celebrity.</p>\n@param name The name of the celebrity.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>The name of the celebrity.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Id",
        "c2jShape" : "RekognitionUniqueId",
        "deprecated" : false,
        "documentation" : "<p>A unique identifier for the celebrity. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A unique identifier for the celebrity. </p>\n@param id A unique identifier for the celebrity.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withId",
        "getterDocumentation" : "/**<p>A unique identifier for the celebrity. </p>\n@return A unique identifier for the celebrity.*/",
        "getterMethodName" : "getId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Id",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Id",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Id",
        "setterDocumentation" : "/**<p>A unique identifier for the celebrity. </p>\n@param id A unique identifier for the celebrity.*/",
        "setterMethodName" : "setId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "id",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A unique identifier for the celebrity. </p>\n@param id A unique identifier for the celebrity.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "id",
          "variableType" : "String",
          "documentation" : "<p>A unique identifier for the celebrity. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Face",
        "c2jShape" : "ComparedFace",
        "deprecated" : false,
        "documentation" : "<p>Provides information about the celebrity's face, such as its location on the image.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Provides information about the celebrity's face, such as its location on the image.</p>\n@param face Provides information about the celebrity's face, such as its location on the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFace",
        "getterDocumentation" : "/**<p>Provides information about the celebrity's face, such as its location on the image.</p>\n@return Provides information about the celebrity's face, such as its location on the image.*/",
        "getterMethodName" : "getFace",
        "getterModel" : {
          "returnType" : "ComparedFace",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Face",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Face",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Face",
        "setterDocumentation" : "/**<p>Provides information about the celebrity's face, such as its location on the image.</p>\n@param face Provides information about the celebrity's face, such as its location on the image.*/",
        "setterMethodName" : "setFace",
        "setterModel" : {
          "variableDeclarationType" : "ComparedFace",
          "variableName" : "face",
          "variableType" : "ComparedFace",
          "documentation" : "",
          "simpleType" : "ComparedFace",
          "variableSetterType" : "ComparedFace"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Provides information about the celebrity's face, such as its location on the image.</p>\n@param face Provides information about the celebrity's face, such as its location on the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "ComparedFace",
          "variableName" : "face",
          "variableType" : "ComparedFace",
          "documentation" : "<p>Provides information about the celebrity's face, such as its location on the image.</p>",
          "simpleType" : "ComparedFace",
          "variableSetterType" : "ComparedFace"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MatchConfidence",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>The confidence, in percentage, that Rekognition has that the recognized face is the celebrity.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The confidence, in percentage, that Rekognition has that the recognized face is the celebrity.</p>\n@param matchConfidence The confidence, in percentage, that Rekognition has that the recognized face is the celebrity.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMatchConfidence",
        "getterDocumentation" : "/**<p>The confidence, in percentage, that Rekognition has that the recognized face is the celebrity.</p>\n@return The confidence, in percentage, that Rekognition has that the recognized face is the celebrity.*/",
        "getterMethodName" : "getMatchConfidence",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MatchConfidence",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MatchConfidence",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Float",
        "marshallingType" : "FLOAT",
        "name" : "MatchConfidence",
        "setterDocumentation" : "/**<p>The confidence, in percentage, that Rekognition has that the recognized face is the celebrity.</p>\n@param matchConfidence The confidence, in percentage, that Rekognition has that the recognized face is the celebrity.*/",
        "setterMethodName" : "setMatchConfidence",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "matchConfidence",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The confidence, in percentage, that Rekognition has that the recognized face is the celebrity.</p>\n@param matchConfidence The confidence, in percentage, that Rekognition has that the recognized face is the celebrity.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "matchConfidence",
          "variableType" : "Float",
          "documentation" : "<p>The confidence, in percentage, that Rekognition has that the recognized face is the celebrity.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Face" : {
          "c2jName" : "Face",
          "c2jShape" : "ComparedFace",
          "deprecated" : false,
          "documentation" : "<p>Provides information about the celebrity's face, such as its location on the image.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Provides information about the celebrity's face, such as its location on the image.</p>\n@param face Provides information about the celebrity's face, such as its location on the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFace",
          "getterDocumentation" : "/**<p>Provides information about the celebrity's face, such as its location on the image.</p>\n@return Provides information about the celebrity's face, such as its location on the image.*/",
          "getterMethodName" : "getFace",
          "getterModel" : {
            "returnType" : "ComparedFace",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Face",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Face",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Face",
          "setterDocumentation" : "/**<p>Provides information about the celebrity's face, such as its location on the image.</p>\n@param face Provides information about the celebrity's face, such as its location on the image.*/",
          "setterMethodName" : "setFace",
          "setterModel" : {
            "variableDeclarationType" : "ComparedFace",
            "variableName" : "face",
            "variableType" : "ComparedFace",
            "documentation" : "",
            "simpleType" : "ComparedFace",
            "variableSetterType" : "ComparedFace"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Provides information about the celebrity's face, such as its location on the image.</p>\n@param face Provides information about the celebrity's face, such as its location on the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "ComparedFace",
            "variableName" : "face",
            "variableType" : "ComparedFace",
            "documentation" : "<p>Provides information about the celebrity's face, such as its location on the image.</p>",
            "simpleType" : "ComparedFace",
            "variableSetterType" : "ComparedFace"
          },
          "xmlNameSpaceUri" : null
        },
        "Id" : {
          "c2jName" : "Id",
          "c2jShape" : "RekognitionUniqueId",
          "deprecated" : false,
          "documentation" : "<p>A unique identifier for the celebrity. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A unique identifier for the celebrity. </p>\n@param id A unique identifier for the celebrity.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withId",
          "getterDocumentation" : "/**<p>A unique identifier for the celebrity. </p>\n@return A unique identifier for the celebrity.*/",
          "getterMethodName" : "getId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Id",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Id",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Id",
          "setterDocumentation" : "/**<p>A unique identifier for the celebrity. </p>\n@param id A unique identifier for the celebrity.*/",
          "setterMethodName" : "setId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "id",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A unique identifier for the celebrity. </p>\n@param id A unique identifier for the celebrity.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "id",
            "variableType" : "String",
            "documentation" : "<p>A unique identifier for the celebrity. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "MatchConfidence" : {
          "c2jName" : "MatchConfidence",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>The confidence, in percentage, that Rekognition has that the recognized face is the celebrity.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The confidence, in percentage, that Rekognition has that the recognized face is the celebrity.</p>\n@param matchConfidence The confidence, in percentage, that Rekognition has that the recognized face is the celebrity.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMatchConfidence",
          "getterDocumentation" : "/**<p>The confidence, in percentage, that Rekognition has that the recognized face is the celebrity.</p>\n@return The confidence, in percentage, that Rekognition has that the recognized face is the celebrity.*/",
          "getterMethodName" : "getMatchConfidence",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MatchConfidence",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MatchConfidence",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Float",
          "marshallingType" : "FLOAT",
          "name" : "MatchConfidence",
          "setterDocumentation" : "/**<p>The confidence, in percentage, that Rekognition has that the recognized face is the celebrity.</p>\n@param matchConfidence The confidence, in percentage, that Rekognition has that the recognized face is the celebrity.*/",
          "setterMethodName" : "setMatchConfidence",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "matchConfidence",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The confidence, in percentage, that Rekognition has that the recognized face is the celebrity.</p>\n@param matchConfidence The confidence, in percentage, that Rekognition has that the recognized face is the celebrity.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "matchConfidence",
            "variableType" : "Float",
            "documentation" : "<p>The confidence, in percentage, that Rekognition has that the recognized face is the celebrity.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "Name" : {
          "c2jName" : "Name",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>The name of the celebrity.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the celebrity.</p>\n@param name The name of the celebrity.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>The name of the celebrity.</p>\n@return The name of the celebrity.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Name",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "setterDocumentation" : "/**<p>The name of the celebrity.</p>\n@param name The name of the celebrity.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the celebrity.</p>\n@param name The name of the celebrity.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>The name of the celebrity.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Urls" : {
          "c2jName" : "Urls",
          "c2jShape" : "Urls",
          "deprecated" : false,
          "documentation" : "<p>An array of URLs pointing to additional information about the celebrity. If there is no additional information about the celebrity, this list is empty.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An array of URLs pointing to additional information about the celebrity. If there is no additional information about the celebrity, this list is empty.</p>\n@param urls An array of URLs pointing to additional information about the celebrity. If there is no additional information about the celebrity, this list is empty.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withUrls",
          "getterDocumentation" : "/**<p>An array of URLs pointing to additional information about the celebrity. If there is no additional information about the celebrity, this list is empty.</p>\n@return An array of URLs pointing to additional information about the celebrity. If there is no additional information about the celebrity, this list is empty.*/",
          "getterMethodName" : "getUrls",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Urls",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Urls",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Url",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Urls",
          "setterDocumentation" : "/**<p>An array of URLs pointing to additional information about the celebrity. If there is no additional information about the celebrity, this list is empty.</p>\n@param urls An array of URLs pointing to additional information about the celebrity. If there is no additional information about the celebrity, this list is empty.*/",
          "setterMethodName" : "setUrls",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "urls",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An array of URLs pointing to additional information about the celebrity. If there is no additional information about the celebrity, this list is empty.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setUrls(java.util.Collection)} or {@link #withUrls(java.util.Collection)} if you want to override the existing values.</p>\n@param urls An array of URLs pointing to additional information about the celebrity. If there is no additional information about the celebrity, this list is empty.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "urls",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>An array of URLs pointing to additional information about the celebrity. If there is no additional information about the celebrity, this list is empty.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Celebrity",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "Celebrity",
        "variableName" : "celebrity",
        "variableType" : "Celebrity",
        "documentation" : null,
        "simpleType" : "Celebrity",
        "variableSetterType" : "Celebrity"
      },
      "wrapper" : false
    },
    "CompareFacesMatch" : {
      "c2jName" : "CompareFacesMatch",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Provides information about a face in a target image that matches the source image face analysed by <code>CompareFaces</code>. The <code>Face</code> property contains the bounding box of the face in the target image. The <code>Similarity</code> property is the confidence that the source image face matches the face in the bounding box.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Similarity",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>Level of confidence that the faces match.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Level of confidence that the faces match.</p>\n@param similarity Level of confidence that the faces match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSimilarity",
        "getterDocumentation" : "/**<p>Level of confidence that the faces match.</p>\n@return Level of confidence that the faces match.*/",
        "getterMethodName" : "getSimilarity",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Similarity",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Similarity",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Float",
        "marshallingType" : "FLOAT",
        "name" : "Similarity",
        "setterDocumentation" : "/**<p>Level of confidence that the faces match.</p>\n@param similarity Level of confidence that the faces match.*/",
        "setterMethodName" : "setSimilarity",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "similarity",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Level of confidence that the faces match.</p>\n@param similarity Level of confidence that the faces match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "similarity",
          "variableType" : "Float",
          "documentation" : "<p>Level of confidence that the faces match.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Face",
        "c2jShape" : "ComparedFace",
        "deprecated" : false,
        "documentation" : "<p>Provides face metadata (bounding box and confidence that the bounding box actually contains a face).</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Provides face metadata (bounding box and confidence that the bounding box actually contains a face).</p>\n@param face Provides face metadata (bounding box and confidence that the bounding box actually contains a face).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFace",
        "getterDocumentation" : "/**<p>Provides face metadata (bounding box and confidence that the bounding box actually contains a face).</p>\n@return Provides face metadata (bounding box and confidence that the bounding box actually contains a face).*/",
        "getterMethodName" : "getFace",
        "getterModel" : {
          "returnType" : "ComparedFace",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Face",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Face",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Face",
        "setterDocumentation" : "/**<p>Provides face metadata (bounding box and confidence that the bounding box actually contains a face).</p>\n@param face Provides face metadata (bounding box and confidence that the bounding box actually contains a face).*/",
        "setterMethodName" : "setFace",
        "setterModel" : {
          "variableDeclarationType" : "ComparedFace",
          "variableName" : "face",
          "variableType" : "ComparedFace",
          "documentation" : "",
          "simpleType" : "ComparedFace",
          "variableSetterType" : "ComparedFace"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Provides face metadata (bounding box and confidence that the bounding box actually contains a face).</p>\n@param face Provides face metadata (bounding box and confidence that the bounding box actually contains a face).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "ComparedFace",
          "variableName" : "face",
          "variableType" : "ComparedFace",
          "documentation" : "<p>Provides face metadata (bounding box and confidence that the bounding box actually contains a face).</p>",
          "simpleType" : "ComparedFace",
          "variableSetterType" : "ComparedFace"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Face" : {
          "c2jName" : "Face",
          "c2jShape" : "ComparedFace",
          "deprecated" : false,
          "documentation" : "<p>Provides face metadata (bounding box and confidence that the bounding box actually contains a face).</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Provides face metadata (bounding box and confidence that the bounding box actually contains a face).</p>\n@param face Provides face metadata (bounding box and confidence that the bounding box actually contains a face).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFace",
          "getterDocumentation" : "/**<p>Provides face metadata (bounding box and confidence that the bounding box actually contains a face).</p>\n@return Provides face metadata (bounding box and confidence that the bounding box actually contains a face).*/",
          "getterMethodName" : "getFace",
          "getterModel" : {
            "returnType" : "ComparedFace",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Face",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Face",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Face",
          "setterDocumentation" : "/**<p>Provides face metadata (bounding box and confidence that the bounding box actually contains a face).</p>\n@param face Provides face metadata (bounding box and confidence that the bounding box actually contains a face).*/",
          "setterMethodName" : "setFace",
          "setterModel" : {
            "variableDeclarationType" : "ComparedFace",
            "variableName" : "face",
            "variableType" : "ComparedFace",
            "documentation" : "",
            "simpleType" : "ComparedFace",
            "variableSetterType" : "ComparedFace"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Provides face metadata (bounding box and confidence that the bounding box actually contains a face).</p>\n@param face Provides face metadata (bounding box and confidence that the bounding box actually contains a face).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "ComparedFace",
            "variableName" : "face",
            "variableType" : "ComparedFace",
            "documentation" : "<p>Provides face metadata (bounding box and confidence that the bounding box actually contains a face).</p>",
            "simpleType" : "ComparedFace",
            "variableSetterType" : "ComparedFace"
          },
          "xmlNameSpaceUri" : null
        },
        "Similarity" : {
          "c2jName" : "Similarity",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>Level of confidence that the faces match.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Level of confidence that the faces match.</p>\n@param similarity Level of confidence that the faces match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSimilarity",
          "getterDocumentation" : "/**<p>Level of confidence that the faces match.</p>\n@return Level of confidence that the faces match.*/",
          "getterMethodName" : "getSimilarity",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Similarity",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Similarity",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Float",
          "marshallingType" : "FLOAT",
          "name" : "Similarity",
          "setterDocumentation" : "/**<p>Level of confidence that the faces match.</p>\n@param similarity Level of confidence that the faces match.*/",
          "setterMethodName" : "setSimilarity",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "similarity",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Level of confidence that the faces match.</p>\n@param similarity Level of confidence that the faces match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "similarity",
            "variableType" : "Float",
            "documentation" : "<p>Level of confidence that the faces match.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CompareFacesMatch",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "CompareFacesMatch",
        "variableName" : "compareFacesMatch",
        "variableType" : "CompareFacesMatch",
        "documentation" : null,
        "simpleType" : "CompareFacesMatch",
        "variableSetterType" : "CompareFacesMatch"
      },
      "wrapper" : false
    },
    "CompareFacesRequest" : {
      "c2jName" : "CompareFacesRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "CompareFaces",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "RekognitionService.CompareFaces",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "SourceImage",
        "c2jShape" : "Image",
        "deprecated" : false,
        "documentation" : "<p>The source image, either as bytes or as an S3 object.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The source image, either as bytes or as an S3 object.</p>\n@param sourceImage The source image, either as bytes or as an S3 object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSourceImage",
        "getterDocumentation" : "/**<p>The source image, either as bytes or as an S3 object.</p>\n@return The source image, either as bytes or as an S3 object.*/",
        "getterMethodName" : "getSourceImage",
        "getterModel" : {
          "returnType" : "Image",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "SourceImage",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SourceImage",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "SourceImage",
        "setterDocumentation" : "/**<p>The source image, either as bytes or as an S3 object.</p>\n@param sourceImage The source image, either as bytes or as an S3 object.*/",
        "setterMethodName" : "setSourceImage",
        "setterModel" : {
          "variableDeclarationType" : "Image",
          "variableName" : "sourceImage",
          "variableType" : "Image",
          "documentation" : "",
          "simpleType" : "Image",
          "variableSetterType" : "Image"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The source image, either as bytes or as an S3 object.</p>\n@param sourceImage The source image, either as bytes or as an S3 object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Image",
          "variableName" : "sourceImage",
          "variableType" : "Image",
          "documentation" : "<p>The source image, either as bytes or as an S3 object.</p>",
          "simpleType" : "Image",
          "variableSetterType" : "Image"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "TargetImage",
        "c2jShape" : "Image",
        "deprecated" : false,
        "documentation" : "<p>The target image, either as bytes or as an S3 object.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The target image, either as bytes or as an S3 object.</p>\n@param targetImage The target image, either as bytes or as an S3 object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTargetImage",
        "getterDocumentation" : "/**<p>The target image, either as bytes or as an S3 object.</p>\n@return The target image, either as bytes or as an S3 object.*/",
        "getterMethodName" : "getTargetImage",
        "getterModel" : {
          "returnType" : "Image",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TargetImage",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TargetImage",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "TargetImage",
        "setterDocumentation" : "/**<p>The target image, either as bytes or as an S3 object.</p>\n@param targetImage The target image, either as bytes or as an S3 object.*/",
        "setterMethodName" : "setTargetImage",
        "setterModel" : {
          "variableDeclarationType" : "Image",
          "variableName" : "targetImage",
          "variableType" : "Image",
          "documentation" : "",
          "simpleType" : "Image",
          "variableSetterType" : "Image"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The target image, either as bytes or as an S3 object.</p>\n@param targetImage The target image, either as bytes or as an S3 object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Image",
          "variableName" : "targetImage",
          "variableType" : "Image",
          "documentation" : "<p>The target image, either as bytes or as an S3 object.</p>",
          "simpleType" : "Image",
          "variableSetterType" : "Image"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "SimilarityThreshold",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>The minimum level of confidence in the face matches that a match must meet to be included in the <code>FaceMatches</code> array.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The minimum level of confidence in the face matches that a match must meet to be included in the <code>FaceMatches</code> array.</p>\n@param similarityThreshold The minimum level of confidence in the face matches that a match must meet to be included in the <code>FaceMatches</code> array.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSimilarityThreshold",
        "getterDocumentation" : "/**<p>The minimum level of confidence in the face matches that a match must meet to be included in the <code>FaceMatches</code> array.</p>\n@return The minimum level of confidence in the face matches that a match must meet to be included in the <code>FaceMatches</code> array.*/",
        "getterMethodName" : "getSimilarityThreshold",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "SimilarityThreshold",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SimilarityThreshold",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Float",
        "marshallingType" : "FLOAT",
        "name" : "SimilarityThreshold",
        "setterDocumentation" : "/**<p>The minimum level of confidence in the face matches that a match must meet to be included in the <code>FaceMatches</code> array.</p>\n@param similarityThreshold The minimum level of confidence in the face matches that a match must meet to be included in the <code>FaceMatches</code> array.*/",
        "setterMethodName" : "setSimilarityThreshold",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "similarityThreshold",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The minimum level of confidence in the face matches that a match must meet to be included in the <code>FaceMatches</code> array.</p>\n@param similarityThreshold The minimum level of confidence in the face matches that a match must meet to be included in the <code>FaceMatches</code> array.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "similarityThreshold",
          "variableType" : "Float",
          "documentation" : "<p>The minimum level of confidence in the face matches that a match must meet to be included in the <code>FaceMatches</code> array.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "SimilarityThreshold" : {
          "c2jName" : "SimilarityThreshold",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>The minimum level of confidence in the face matches that a match must meet to be included in the <code>FaceMatches</code> array.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The minimum level of confidence in the face matches that a match must meet to be included in the <code>FaceMatches</code> array.</p>\n@param similarityThreshold The minimum level of confidence in the face matches that a match must meet to be included in the <code>FaceMatches</code> array.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSimilarityThreshold",
          "getterDocumentation" : "/**<p>The minimum level of confidence in the face matches that a match must meet to be included in the <code>FaceMatches</code> array.</p>\n@return The minimum level of confidence in the face matches that a match must meet to be included in the <code>FaceMatches</code> array.*/",
          "getterMethodName" : "getSimilarityThreshold",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "SimilarityThreshold",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SimilarityThreshold",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Float",
          "marshallingType" : "FLOAT",
          "name" : "SimilarityThreshold",
          "setterDocumentation" : "/**<p>The minimum level of confidence in the face matches that a match must meet to be included in the <code>FaceMatches</code> array.</p>\n@param similarityThreshold The minimum level of confidence in the face matches that a match must meet to be included in the <code>FaceMatches</code> array.*/",
          "setterMethodName" : "setSimilarityThreshold",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "similarityThreshold",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The minimum level of confidence in the face matches that a match must meet to be included in the <code>FaceMatches</code> array.</p>\n@param similarityThreshold The minimum level of confidence in the face matches that a match must meet to be included in the <code>FaceMatches</code> array.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "similarityThreshold",
            "variableType" : "Float",
            "documentation" : "<p>The minimum level of confidence in the face matches that a match must meet to be included in the <code>FaceMatches</code> array.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "SourceImage" : {
          "c2jName" : "SourceImage",
          "c2jShape" : "Image",
          "deprecated" : false,
          "documentation" : "<p>The source image, either as bytes or as an S3 object.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The source image, either as bytes or as an S3 object.</p>\n@param sourceImage The source image, either as bytes or as an S3 object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSourceImage",
          "getterDocumentation" : "/**<p>The source image, either as bytes or as an S3 object.</p>\n@return The source image, either as bytes or as an S3 object.*/",
          "getterMethodName" : "getSourceImage",
          "getterModel" : {
            "returnType" : "Image",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "SourceImage",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SourceImage",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "SourceImage",
          "setterDocumentation" : "/**<p>The source image, either as bytes or as an S3 object.</p>\n@param sourceImage The source image, either as bytes or as an S3 object.*/",
          "setterMethodName" : "setSourceImage",
          "setterModel" : {
            "variableDeclarationType" : "Image",
            "variableName" : "sourceImage",
            "variableType" : "Image",
            "documentation" : "",
            "simpleType" : "Image",
            "variableSetterType" : "Image"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The source image, either as bytes or as an S3 object.</p>\n@param sourceImage The source image, either as bytes or as an S3 object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Image",
            "variableName" : "sourceImage",
            "variableType" : "Image",
            "documentation" : "<p>The source image, either as bytes or as an S3 object.</p>",
            "simpleType" : "Image",
            "variableSetterType" : "Image"
          },
          "xmlNameSpaceUri" : null
        },
        "TargetImage" : {
          "c2jName" : "TargetImage",
          "c2jShape" : "Image",
          "deprecated" : false,
          "documentation" : "<p>The target image, either as bytes or as an S3 object.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The target image, either as bytes or as an S3 object.</p>\n@param targetImage The target image, either as bytes or as an S3 object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTargetImage",
          "getterDocumentation" : "/**<p>The target image, either as bytes or as an S3 object.</p>\n@return The target image, either as bytes or as an S3 object.*/",
          "getterMethodName" : "getTargetImage",
          "getterModel" : {
            "returnType" : "Image",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TargetImage",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TargetImage",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "TargetImage",
          "setterDocumentation" : "/**<p>The target image, either as bytes or as an S3 object.</p>\n@param targetImage The target image, either as bytes or as an S3 object.*/",
          "setterMethodName" : "setTargetImage",
          "setterModel" : {
            "variableDeclarationType" : "Image",
            "variableName" : "targetImage",
            "variableType" : "Image",
            "documentation" : "",
            "simpleType" : "Image",
            "variableSetterType" : "Image"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The target image, either as bytes or as an S3 object.</p>\n@param targetImage The target image, either as bytes or as an S3 object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Image",
            "variableName" : "targetImage",
            "variableType" : "Image",
            "documentation" : "<p>The target image, either as bytes or as an S3 object.</p>",
            "simpleType" : "Image",
            "variableSetterType" : "Image"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "SourceImage", "TargetImage" ],
      "shapeName" : "CompareFacesRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "CompareFacesRequest",
        "variableName" : "compareFacesRequest",
        "variableType" : "CompareFacesRequest",
        "documentation" : null,
        "simpleType" : "CompareFacesRequest",
        "variableSetterType" : "CompareFacesRequest"
      },
      "wrapper" : false
    },
    "CompareFacesResult" : {
      "c2jName" : "CompareFacesResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "SourceImageFace",
        "c2jShape" : "ComparedSourceImageFace",
        "deprecated" : false,
        "documentation" : "<p>The face in the source image that was used for comparison.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The face in the source image that was used for comparison.</p>\n@param sourceImageFace The face in the source image that was used for comparison.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSourceImageFace",
        "getterDocumentation" : "/**<p>The face in the source image that was used for comparison.</p>\n@return The face in the source image that was used for comparison.*/",
        "getterMethodName" : "getSourceImageFace",
        "getterModel" : {
          "returnType" : "ComparedSourceImageFace",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "SourceImageFace",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SourceImageFace",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "SourceImageFace",
        "setterDocumentation" : "/**<p>The face in the source image that was used for comparison.</p>\n@param sourceImageFace The face in the source image that was used for comparison.*/",
        "setterMethodName" : "setSourceImageFace",
        "setterModel" : {
          "variableDeclarationType" : "ComparedSourceImageFace",
          "variableName" : "sourceImageFace",
          "variableType" : "ComparedSourceImageFace",
          "documentation" : "",
          "simpleType" : "ComparedSourceImageFace",
          "variableSetterType" : "ComparedSourceImageFace"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The face in the source image that was used for comparison.</p>\n@param sourceImageFace The face in the source image that was used for comparison.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "ComparedSourceImageFace",
          "variableName" : "sourceImageFace",
          "variableType" : "ComparedSourceImageFace",
          "documentation" : "<p>The face in the source image that was used for comparison.</p>",
          "simpleType" : "ComparedSourceImageFace",
          "variableSetterType" : "ComparedSourceImageFace"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "FaceMatches",
        "c2jShape" : "CompareFacesMatchList",
        "deprecated" : false,
        "documentation" : "<p>An array of faces in the target image that match the source image face. Each <code>CompareFacesMatch</code> object provides the bounding box, the confidence level that the bounding box contains a face, and the similarity score for the face in the bounding box and the face in the source image.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An array of faces in the target image that match the source image face. Each <code>CompareFacesMatch</code> object provides the bounding box, the confidence level that the bounding box contains a face, and the similarity score for the face in the bounding box and the face in the source image.</p>\n@param faceMatches An array of faces in the target image that match the source image face. Each <code>CompareFacesMatch</code> object provides the bounding box, the confidence level that the bounding box contains a face, and the similarity score for the face in the bounding box and the face in the source image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFaceMatches",
        "getterDocumentation" : "/**<p>An array of faces in the target image that match the source image face. Each <code>CompareFacesMatch</code> object provides the bounding box, the confidence level that the bounding box contains a face, and the similarity score for the face in the bounding box and the face in the source image.</p>\n@return An array of faces in the target image that match the source image face. Each <code>CompareFacesMatch</code> object provides the bounding box, the confidence level that the bounding box contains a face, and the similarity score for the face in the bounding box and the face in the source image.*/",
        "getterMethodName" : "getFaceMatches",
        "getterModel" : {
          "returnType" : "java.util.List<CompareFacesMatch>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "FaceMatches",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "FaceMatches",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "CompareFacesMatch",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "CompareFacesMatch",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "CompareFacesMatch",
              "variableName" : "member",
              "variableType" : "CompareFacesMatch",
              "documentation" : "",
              "simpleType" : "CompareFacesMatch",
              "variableSetterType" : "CompareFacesMatch"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "CompareFacesMatch",
              "variableName" : "member",
              "variableType" : "CompareFacesMatch",
              "documentation" : "",
              "simpleType" : "CompareFacesMatch",
              "variableSetterType" : "CompareFacesMatch"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "CompareFacesMatch",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "CompareFacesMatch",
          "templateImplType" : "java.util.ArrayList<CompareFacesMatch>",
          "templateType" : "java.util.List<CompareFacesMatch>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "FaceMatches",
        "setterDocumentation" : "/**<p>An array of faces in the target image that match the source image face. Each <code>CompareFacesMatch</code> object provides the bounding box, the confidence level that the bounding box contains a face, and the similarity score for the face in the bounding box and the face in the source image.</p>\n@param faceMatches An array of faces in the target image that match the source image face. Each <code>CompareFacesMatch</code> object provides the bounding box, the confidence level that the bounding box contains a face, and the similarity score for the face in the bounding box and the face in the source image.*/",
        "setterMethodName" : "setFaceMatches",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<CompareFacesMatch>",
          "variableName" : "faceMatches",
          "variableType" : "java.util.List<CompareFacesMatch>",
          "documentation" : "",
          "simpleType" : "List<CompareFacesMatch>",
          "variableSetterType" : "java.util.Collection<CompareFacesMatch>"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An array of faces in the target image that match the source image face. Each <code>CompareFacesMatch</code> object provides the bounding box, the confidence level that the bounding box contains a face, and the similarity score for the face in the bounding box and the face in the source image.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFaceMatches(java.util.Collection)} or {@link #withFaceMatches(java.util.Collection)} if you want to override the existing values.</p>\n@param faceMatches An array of faces in the target image that match the source image face. Each <code>CompareFacesMatch</code> object provides the bounding box, the confidence level that the bounding box contains a face, and the similarity score for the face in the bounding box and the face in the source image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<CompareFacesMatch>",
          "variableName" : "faceMatches",
          "variableType" : "java.util.List<CompareFacesMatch>",
          "documentation" : "<p>An array of faces in the target image that match the source image face. Each <code>CompareFacesMatch</code> object provides the bounding box, the confidence level that the bounding box contains a face, and the similarity score for the face in the bounding box and the face in the source image.</p>",
          "simpleType" : "List<CompareFacesMatch>",
          "variableSetterType" : "java.util.Collection<CompareFacesMatch>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "UnmatchedFaces",
        "c2jShape" : "CompareFacesUnmatchList",
        "deprecated" : false,
        "documentation" : "<p>An array of faces in the target image that did not match the source image face.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An array of faces in the target image that did not match the source image face.</p>\n@param unmatchedFaces An array of faces in the target image that did not match the source image face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withUnmatchedFaces",
        "getterDocumentation" : "/**<p>An array of faces in the target image that did not match the source image face.</p>\n@return An array of faces in the target image that did not match the source image face.*/",
        "getterMethodName" : "getUnmatchedFaces",
        "getterModel" : {
          "returnType" : "java.util.List<ComparedFace>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "UnmatchedFaces",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "UnmatchedFaces",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ComparedFace",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "ComparedFace",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "ComparedFace",
              "variableName" : "member",
              "variableType" : "ComparedFace",
              "documentation" : "",
              "simpleType" : "ComparedFace",
              "variableSetterType" : "ComparedFace"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "ComparedFace",
              "variableName" : "member",
              "variableType" : "ComparedFace",
              "documentation" : "",
              "simpleType" : "ComparedFace",
              "variableSetterType" : "ComparedFace"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "ComparedFace",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "ComparedFace",
          "templateImplType" : "java.util.ArrayList<ComparedFace>",
          "templateType" : "java.util.List<ComparedFace>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "UnmatchedFaces",
        "setterDocumentation" : "/**<p>An array of faces in the target image that did not match the source image face.</p>\n@param unmatchedFaces An array of faces in the target image that did not match the source image face.*/",
        "setterMethodName" : "setUnmatchedFaces",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<ComparedFace>",
          "variableName" : "unmatchedFaces",
          "variableType" : "java.util.List<ComparedFace>",
          "documentation" : "",
          "simpleType" : "List<ComparedFace>",
          "variableSetterType" : "java.util.Collection<ComparedFace>"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An array of faces in the target image that did not match the source image face.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setUnmatchedFaces(java.util.Collection)} or {@link #withUnmatchedFaces(java.util.Collection)} if you want to override the existing values.</p>\n@param unmatchedFaces An array of faces in the target image that did not match the source image face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<ComparedFace>",
          "variableName" : "unmatchedFaces",
          "variableType" : "java.util.List<ComparedFace>",
          "documentation" : "<p>An array of faces in the target image that did not match the source image face.</p>",
          "simpleType" : "List<ComparedFace>",
          "variableSetterType" : "java.util.Collection<ComparedFace>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "SourceImageOrientationCorrection",
        "c2jShape" : "OrientationCorrection",
        "deprecated" : false,
        "documentation" : "<p> The orientation of the source image (counterclockwise direction). If your application displays the source image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>SourceImageFace</code> represent the location of the face before the image orientation is corrected. </p> <note> <p>If the source image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If the Exif metadata for the source image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>SourceImageFace</code> bounding box coordinates represent the location of the face after Exif metadata is used to correct the orientation. Images in .png format don't contain Exif metadata.</p> </note>",
        "enumType" : "OrientationCorrection",
        "fluentSetterDocumentation" : "/**<p> The orientation of the source image (counterclockwise direction). If your application displays the source image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>SourceImageFace</code> represent the location of the face before the image orientation is corrected. </p> <note> <p>If the source image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If the Exif metadata for the source image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>SourceImageFace</code> bounding box coordinates represent the location of the face after Exif metadata is used to correct the orientation. Images in .png format don't contain Exif metadata.</p> </note>\n@param sourceImageOrientationCorrection The orientation of the source image (counterclockwise direction). If your application displays the source image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>SourceImageFace</code> represent the location of the face before the image orientation is corrected. </p> <note> <p>If the source image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If the Exif metadata for the source image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>SourceImageFace</code> bounding box coordinates represent the location of the face after Exif metadata is used to correct the orientation. Images in .png format don't contain Exif metadata.</p>\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrientationCorrection*/",
        "fluentSetterMethodName" : "withSourceImageOrientationCorrection",
        "getterDocumentation" : "/**<p> The orientation of the source image (counterclockwise direction). If your application displays the source image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>SourceImageFace</code> represent the location of the face before the image orientation is corrected. </p> <note> <p>If the source image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If the Exif metadata for the source image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>SourceImageFace</code> bounding box coordinates represent the location of the face after Exif metadata is used to correct the orientation. Images in .png format don't contain Exif metadata.</p> </note>\n@return The orientation of the source image (counterclockwise direction). If your application displays the source image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>SourceImageFace</code> represent the location of the face before the image orientation is corrected. </p> <note> <p>If the source image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If the Exif metadata for the source image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>SourceImageFace</code> bounding box coordinates represent the location of the face after Exif metadata is used to correct the orientation. Images in .png format don't contain Exif metadata.</p>\n@see OrientationCorrection*/",
        "getterMethodName" : "getSourceImageOrientationCorrection",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "SourceImageOrientationCorrection",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SourceImageOrientationCorrection",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SourceImageOrientationCorrection",
        "setterDocumentation" : "/**<p> The orientation of the source image (counterclockwise direction). If your application displays the source image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>SourceImageFace</code> represent the location of the face before the image orientation is corrected. </p> <note> <p>If the source image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If the Exif metadata for the source image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>SourceImageFace</code> bounding box coordinates represent the location of the face after Exif metadata is used to correct the orientation. Images in .png format don't contain Exif metadata.</p> </note>\n@param sourceImageOrientationCorrection The orientation of the source image (counterclockwise direction). If your application displays the source image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>SourceImageFace</code> represent the location of the face before the image orientation is corrected. </p> <note> <p>If the source image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If the Exif metadata for the source image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>SourceImageFace</code> bounding box coordinates represent the location of the face after Exif metadata is used to correct the orientation. Images in .png format don't contain Exif metadata.</p>\n@see OrientationCorrection*/",
        "setterMethodName" : "setSourceImageOrientationCorrection",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "sourceImageOrientationCorrection",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The orientation of the source image (counterclockwise direction). If your application displays the source image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>SourceImageFace</code> represent the location of the face before the image orientation is corrected. </p> <note> <p>If the source image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If the Exif metadata for the source image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>SourceImageFace</code> bounding box coordinates represent the location of the face after Exif metadata is used to correct the orientation. Images in .png format don't contain Exif metadata.</p> </note>\n@param sourceImageOrientationCorrection The orientation of the source image (counterclockwise direction). If your application displays the source image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>SourceImageFace</code> represent the location of the face before the image orientation is corrected. </p> <note> <p>If the source image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If the Exif metadata for the source image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>SourceImageFace</code> bounding box coordinates represent the location of the face after Exif metadata is used to correct the orientation. Images in .png format don't contain Exif metadata.</p>\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrientationCorrection*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "sourceImageOrientationCorrection",
          "variableType" : "String",
          "documentation" : "<p> The orientation of the source image (counterclockwise direction). If your application displays the source image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>SourceImageFace</code> represent the location of the face before the image orientation is corrected. </p> <note> <p>If the source image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If the Exif metadata for the source image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>SourceImageFace</code> bounding box coordinates represent the location of the face after Exif metadata is used to correct the orientation. Images in .png format don't contain Exif metadata.</p> </note>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "TargetImageOrientationCorrection",
        "c2jShape" : "OrientationCorrection",
        "deprecated" : false,
        "documentation" : "<p> The orientation of the target image (in counterclockwise direction). If your application displays the target image, you can use this value to correct the orientation of the image. The bounding box coordinates returned in <code>FaceMatches</code> and <code>UnmatchedFaces</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the target image is in .jpg format, it might contain Exif metadata that includes the orientation of the image. If the Exif metadata for the target image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the bounding box coordinates in <code>FaceMatches</code> and <code>UnmatchedFaces</code> represent the location of the face after Exif metadata is used to correct the orientation. Images in .png format don't contain Exif metadata.</p> </note>",
        "enumType" : "OrientationCorrection",
        "fluentSetterDocumentation" : "/**<p> The orientation of the target image (in counterclockwise direction). If your application displays the target image, you can use this value to correct the orientation of the image. The bounding box coordinates returned in <code>FaceMatches</code> and <code>UnmatchedFaces</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the target image is in .jpg format, it might contain Exif metadata that includes the orientation of the image. If the Exif metadata for the target image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the bounding box coordinates in <code>FaceMatches</code> and <code>UnmatchedFaces</code> represent the location of the face after Exif metadata is used to correct the orientation. Images in .png format don't contain Exif metadata.</p> </note>\n@param targetImageOrientationCorrection The orientation of the target image (in counterclockwise direction). If your application displays the target image, you can use this value to correct the orientation of the image. The bounding box coordinates returned in <code>FaceMatches</code> and <code>UnmatchedFaces</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the target image is in .jpg format, it might contain Exif metadata that includes the orientation of the image. If the Exif metadata for the target image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the bounding box coordinates in <code>FaceMatches</code> and <code>UnmatchedFaces</code> represent the location of the face after Exif metadata is used to correct the orientation. Images in .png format don't contain Exif metadata.</p>\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrientationCorrection*/",
        "fluentSetterMethodName" : "withTargetImageOrientationCorrection",
        "getterDocumentation" : "/**<p> The orientation of the target image (in counterclockwise direction). If your application displays the target image, you can use this value to correct the orientation of the image. The bounding box coordinates returned in <code>FaceMatches</code> and <code>UnmatchedFaces</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the target image is in .jpg format, it might contain Exif metadata that includes the orientation of the image. If the Exif metadata for the target image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the bounding box coordinates in <code>FaceMatches</code> and <code>UnmatchedFaces</code> represent the location of the face after Exif metadata is used to correct the orientation. Images in .png format don't contain Exif metadata.</p> </note>\n@return The orientation of the target image (in counterclockwise direction). If your application displays the target image, you can use this value to correct the orientation of the image. The bounding box coordinates returned in <code>FaceMatches</code> and <code>UnmatchedFaces</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the target image is in .jpg format, it might contain Exif metadata that includes the orientation of the image. If the Exif metadata for the target image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the bounding box coordinates in <code>FaceMatches</code> and <code>UnmatchedFaces</code> represent the location of the face after Exif metadata is used to correct the orientation. Images in .png format don't contain Exif metadata.</p>\n@see OrientationCorrection*/",
        "getterMethodName" : "getTargetImageOrientationCorrection",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "TargetImageOrientationCorrection",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TargetImageOrientationCorrection",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TargetImageOrientationCorrection",
        "setterDocumentation" : "/**<p> The orientation of the target image (in counterclockwise direction). If your application displays the target image, you can use this value to correct the orientation of the image. The bounding box coordinates returned in <code>FaceMatches</code> and <code>UnmatchedFaces</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the target image is in .jpg format, it might contain Exif metadata that includes the orientation of the image. If the Exif metadata for the target image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the bounding box coordinates in <code>FaceMatches</code> and <code>UnmatchedFaces</code> represent the location of the face after Exif metadata is used to correct the orientation. Images in .png format don't contain Exif metadata.</p> </note>\n@param targetImageOrientationCorrection The orientation of the target image (in counterclockwise direction). If your application displays the target image, you can use this value to correct the orientation of the image. The bounding box coordinates returned in <code>FaceMatches</code> and <code>UnmatchedFaces</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the target image is in .jpg format, it might contain Exif metadata that includes the orientation of the image. If the Exif metadata for the target image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the bounding box coordinates in <code>FaceMatches</code> and <code>UnmatchedFaces</code> represent the location of the face after Exif metadata is used to correct the orientation. Images in .png format don't contain Exif metadata.</p>\n@see OrientationCorrection*/",
        "setterMethodName" : "setTargetImageOrientationCorrection",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "targetImageOrientationCorrection",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The orientation of the target image (in counterclockwise direction). If your application displays the target image, you can use this value to correct the orientation of the image. The bounding box coordinates returned in <code>FaceMatches</code> and <code>UnmatchedFaces</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the target image is in .jpg format, it might contain Exif metadata that includes the orientation of the image. If the Exif metadata for the target image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the bounding box coordinates in <code>FaceMatches</code> and <code>UnmatchedFaces</code> represent the location of the face after Exif metadata is used to correct the orientation. Images in .png format don't contain Exif metadata.</p> </note>\n@param targetImageOrientationCorrection The orientation of the target image (in counterclockwise direction). If your application displays the target image, you can use this value to correct the orientation of the image. The bounding box coordinates returned in <code>FaceMatches</code> and <code>UnmatchedFaces</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the target image is in .jpg format, it might contain Exif metadata that includes the orientation of the image. If the Exif metadata for the target image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the bounding box coordinates in <code>FaceMatches</code> and <code>UnmatchedFaces</code> represent the location of the face after Exif metadata is used to correct the orientation. Images in .png format don't contain Exif metadata.</p>\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrientationCorrection*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "targetImageOrientationCorrection",
          "variableType" : "String",
          "documentation" : "<p> The orientation of the target image (in counterclockwise direction). If your application displays the target image, you can use this value to correct the orientation of the image. The bounding box coordinates returned in <code>FaceMatches</code> and <code>UnmatchedFaces</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the target image is in .jpg format, it might contain Exif metadata that includes the orientation of the image. If the Exif metadata for the target image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the bounding box coordinates in <code>FaceMatches</code> and <code>UnmatchedFaces</code> represent the location of the face after Exif metadata is used to correct the orientation. Images in .png format don't contain Exif metadata.</p> </note>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "FaceMatches" : {
          "c2jName" : "FaceMatches",
          "c2jShape" : "CompareFacesMatchList",
          "deprecated" : false,
          "documentation" : "<p>An array of faces in the target image that match the source image face. Each <code>CompareFacesMatch</code> object provides the bounding box, the confidence level that the bounding box contains a face, and the similarity score for the face in the bounding box and the face in the source image.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An array of faces in the target image that match the source image face. Each <code>CompareFacesMatch</code> object provides the bounding box, the confidence level that the bounding box contains a face, and the similarity score for the face in the bounding box and the face in the source image.</p>\n@param faceMatches An array of faces in the target image that match the source image face. Each <code>CompareFacesMatch</code> object provides the bounding box, the confidence level that the bounding box contains a face, and the similarity score for the face in the bounding box and the face in the source image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFaceMatches",
          "getterDocumentation" : "/**<p>An array of faces in the target image that match the source image face. Each <code>CompareFacesMatch</code> object provides the bounding box, the confidence level that the bounding box contains a face, and the similarity score for the face in the bounding box and the face in the source image.</p>\n@return An array of faces in the target image that match the source image face. Each <code>CompareFacesMatch</code> object provides the bounding box, the confidence level that the bounding box contains a face, and the similarity score for the face in the bounding box and the face in the source image.*/",
          "getterMethodName" : "getFaceMatches",
          "getterModel" : {
            "returnType" : "java.util.List<CompareFacesMatch>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "FaceMatches",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "FaceMatches",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "CompareFacesMatch",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "CompareFacesMatch",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "CompareFacesMatch",
                "variableName" : "member",
                "variableType" : "CompareFacesMatch",
                "documentation" : "",
                "simpleType" : "CompareFacesMatch",
                "variableSetterType" : "CompareFacesMatch"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "CompareFacesMatch",
                "variableName" : "member",
                "variableType" : "CompareFacesMatch",
                "documentation" : "",
                "simpleType" : "CompareFacesMatch",
                "variableSetterType" : "CompareFacesMatch"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "CompareFacesMatch",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "CompareFacesMatch",
            "templateImplType" : "java.util.ArrayList<CompareFacesMatch>",
            "templateType" : "java.util.List<CompareFacesMatch>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "FaceMatches",
          "setterDocumentation" : "/**<p>An array of faces in the target image that match the source image face. Each <code>CompareFacesMatch</code> object provides the bounding box, the confidence level that the bounding box contains a face, and the similarity score for the face in the bounding box and the face in the source image.</p>\n@param faceMatches An array of faces in the target image that match the source image face. Each <code>CompareFacesMatch</code> object provides the bounding box, the confidence level that the bounding box contains a face, and the similarity score for the face in the bounding box and the face in the source image.*/",
          "setterMethodName" : "setFaceMatches",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<CompareFacesMatch>",
            "variableName" : "faceMatches",
            "variableType" : "java.util.List<CompareFacesMatch>",
            "documentation" : "",
            "simpleType" : "List<CompareFacesMatch>",
            "variableSetterType" : "java.util.Collection<CompareFacesMatch>"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An array of faces in the target image that match the source image face. Each <code>CompareFacesMatch</code> object provides the bounding box, the confidence level that the bounding box contains a face, and the similarity score for the face in the bounding box and the face in the source image.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFaceMatches(java.util.Collection)} or {@link #withFaceMatches(java.util.Collection)} if you want to override the existing values.</p>\n@param faceMatches An array of faces in the target image that match the source image face. Each <code>CompareFacesMatch</code> object provides the bounding box, the confidence level that the bounding box contains a face, and the similarity score for the face in the bounding box and the face in the source image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<CompareFacesMatch>",
            "variableName" : "faceMatches",
            "variableType" : "java.util.List<CompareFacesMatch>",
            "documentation" : "<p>An array of faces in the target image that match the source image face. Each <code>CompareFacesMatch</code> object provides the bounding box, the confidence level that the bounding box contains a face, and the similarity score for the face in the bounding box and the face in the source image.</p>",
            "simpleType" : "List<CompareFacesMatch>",
            "variableSetterType" : "java.util.Collection<CompareFacesMatch>"
          },
          "xmlNameSpaceUri" : null
        },
        "SourceImageFace" : {
          "c2jName" : "SourceImageFace",
          "c2jShape" : "ComparedSourceImageFace",
          "deprecated" : false,
          "documentation" : "<p>The face in the source image that was used for comparison.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The face in the source image that was used for comparison.</p>\n@param sourceImageFace The face in the source image that was used for comparison.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSourceImageFace",
          "getterDocumentation" : "/**<p>The face in the source image that was used for comparison.</p>\n@return The face in the source image that was used for comparison.*/",
          "getterMethodName" : "getSourceImageFace",
          "getterModel" : {
            "returnType" : "ComparedSourceImageFace",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "SourceImageFace",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SourceImageFace",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "SourceImageFace",
          "setterDocumentation" : "/**<p>The face in the source image that was used for comparison.</p>\n@param sourceImageFace The face in the source image that was used for comparison.*/",
          "setterMethodName" : "setSourceImageFace",
          "setterModel" : {
            "variableDeclarationType" : "ComparedSourceImageFace",
            "variableName" : "sourceImageFace",
            "variableType" : "ComparedSourceImageFace",
            "documentation" : "",
            "simpleType" : "ComparedSourceImageFace",
            "variableSetterType" : "ComparedSourceImageFace"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The face in the source image that was used for comparison.</p>\n@param sourceImageFace The face in the source image that was used for comparison.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "ComparedSourceImageFace",
            "variableName" : "sourceImageFace",
            "variableType" : "ComparedSourceImageFace",
            "documentation" : "<p>The face in the source image that was used for comparison.</p>",
            "simpleType" : "ComparedSourceImageFace",
            "variableSetterType" : "ComparedSourceImageFace"
          },
          "xmlNameSpaceUri" : null
        },
        "SourceImageOrientationCorrection" : {
          "c2jName" : "SourceImageOrientationCorrection",
          "c2jShape" : "OrientationCorrection",
          "deprecated" : false,
          "documentation" : "<p> The orientation of the source image (counterclockwise direction). If your application displays the source image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>SourceImageFace</code> represent the location of the face before the image orientation is corrected. </p> <note> <p>If the source image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If the Exif metadata for the source image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>SourceImageFace</code> bounding box coordinates represent the location of the face after Exif metadata is used to correct the orientation. Images in .png format don't contain Exif metadata.</p> </note>",
          "enumType" : "OrientationCorrection",
          "fluentSetterDocumentation" : "/**<p> The orientation of the source image (counterclockwise direction). If your application displays the source image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>SourceImageFace</code> represent the location of the face before the image orientation is corrected. </p> <note> <p>If the source image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If the Exif metadata for the source image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>SourceImageFace</code> bounding box coordinates represent the location of the face after Exif metadata is used to correct the orientation. Images in .png format don't contain Exif metadata.</p> </note>\n@param sourceImageOrientationCorrection The orientation of the source image (counterclockwise direction). If your application displays the source image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>SourceImageFace</code> represent the location of the face before the image orientation is corrected. </p> <note> <p>If the source image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If the Exif metadata for the source image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>SourceImageFace</code> bounding box coordinates represent the location of the face after Exif metadata is used to correct the orientation. Images in .png format don't contain Exif metadata.</p>\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrientationCorrection*/",
          "fluentSetterMethodName" : "withSourceImageOrientationCorrection",
          "getterDocumentation" : "/**<p> The orientation of the source image (counterclockwise direction). If your application displays the source image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>SourceImageFace</code> represent the location of the face before the image orientation is corrected. </p> <note> <p>If the source image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If the Exif metadata for the source image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>SourceImageFace</code> bounding box coordinates represent the location of the face after Exif metadata is used to correct the orientation. Images in .png format don't contain Exif metadata.</p> </note>\n@return The orientation of the source image (counterclockwise direction). If your application displays the source image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>SourceImageFace</code> represent the location of the face before the image orientation is corrected. </p> <note> <p>If the source image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If the Exif metadata for the source image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>SourceImageFace</code> bounding box coordinates represent the location of the face after Exif metadata is used to correct the orientation. Images in .png format don't contain Exif metadata.</p>\n@see OrientationCorrection*/",
          "getterMethodName" : "getSourceImageOrientationCorrection",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "SourceImageOrientationCorrection",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SourceImageOrientationCorrection",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SourceImageOrientationCorrection",
          "setterDocumentation" : "/**<p> The orientation of the source image (counterclockwise direction). If your application displays the source image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>SourceImageFace</code> represent the location of the face before the image orientation is corrected. </p> <note> <p>If the source image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If the Exif metadata for the source image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>SourceImageFace</code> bounding box coordinates represent the location of the face after Exif metadata is used to correct the orientation. Images in .png format don't contain Exif metadata.</p> </note>\n@param sourceImageOrientationCorrection The orientation of the source image (counterclockwise direction). If your application displays the source image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>SourceImageFace</code> represent the location of the face before the image orientation is corrected. </p> <note> <p>If the source image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If the Exif metadata for the source image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>SourceImageFace</code> bounding box coordinates represent the location of the face after Exif metadata is used to correct the orientation. Images in .png format don't contain Exif metadata.</p>\n@see OrientationCorrection*/",
          "setterMethodName" : "setSourceImageOrientationCorrection",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "sourceImageOrientationCorrection",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The orientation of the source image (counterclockwise direction). If your application displays the source image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>SourceImageFace</code> represent the location of the face before the image orientation is corrected. </p> <note> <p>If the source image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If the Exif metadata for the source image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>SourceImageFace</code> bounding box coordinates represent the location of the face after Exif metadata is used to correct the orientation. Images in .png format don't contain Exif metadata.</p> </note>\n@param sourceImageOrientationCorrection The orientation of the source image (counterclockwise direction). If your application displays the source image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>SourceImageFace</code> represent the location of the face before the image orientation is corrected. </p> <note> <p>If the source image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If the Exif metadata for the source image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>SourceImageFace</code> bounding box coordinates represent the location of the face after Exif metadata is used to correct the orientation. Images in .png format don't contain Exif metadata.</p>\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrientationCorrection*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "sourceImageOrientationCorrection",
            "variableType" : "String",
            "documentation" : "<p> The orientation of the source image (counterclockwise direction). If your application displays the source image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>SourceImageFace</code> represent the location of the face before the image orientation is corrected. </p> <note> <p>If the source image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If the Exif metadata for the source image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>SourceImageFace</code> bounding box coordinates represent the location of the face after Exif metadata is used to correct the orientation. Images in .png format don't contain Exif metadata.</p> </note>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TargetImageOrientationCorrection" : {
          "c2jName" : "TargetImageOrientationCorrection",
          "c2jShape" : "OrientationCorrection",
          "deprecated" : false,
          "documentation" : "<p> The orientation of the target image (in counterclockwise direction). If your application displays the target image, you can use this value to correct the orientation of the image. The bounding box coordinates returned in <code>FaceMatches</code> and <code>UnmatchedFaces</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the target image is in .jpg format, it might contain Exif metadata that includes the orientation of the image. If the Exif metadata for the target image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the bounding box coordinates in <code>FaceMatches</code> and <code>UnmatchedFaces</code> represent the location of the face after Exif metadata is used to correct the orientation. Images in .png format don't contain Exif metadata.</p> </note>",
          "enumType" : "OrientationCorrection",
          "fluentSetterDocumentation" : "/**<p> The orientation of the target image (in counterclockwise direction). If your application displays the target image, you can use this value to correct the orientation of the image. The bounding box coordinates returned in <code>FaceMatches</code> and <code>UnmatchedFaces</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the target image is in .jpg format, it might contain Exif metadata that includes the orientation of the image. If the Exif metadata for the target image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the bounding box coordinates in <code>FaceMatches</code> and <code>UnmatchedFaces</code> represent the location of the face after Exif metadata is used to correct the orientation. Images in .png format don't contain Exif metadata.</p> </note>\n@param targetImageOrientationCorrection The orientation of the target image (in counterclockwise direction). If your application displays the target image, you can use this value to correct the orientation of the image. The bounding box coordinates returned in <code>FaceMatches</code> and <code>UnmatchedFaces</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the target image is in .jpg format, it might contain Exif metadata that includes the orientation of the image. If the Exif metadata for the target image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the bounding box coordinates in <code>FaceMatches</code> and <code>UnmatchedFaces</code> represent the location of the face after Exif metadata is used to correct the orientation. Images in .png format don't contain Exif metadata.</p>\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrientationCorrection*/",
          "fluentSetterMethodName" : "withTargetImageOrientationCorrection",
          "getterDocumentation" : "/**<p> The orientation of the target image (in counterclockwise direction). If your application displays the target image, you can use this value to correct the orientation of the image. The bounding box coordinates returned in <code>FaceMatches</code> and <code>UnmatchedFaces</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the target image is in .jpg format, it might contain Exif metadata that includes the orientation of the image. If the Exif metadata for the target image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the bounding box coordinates in <code>FaceMatches</code> and <code>UnmatchedFaces</code> represent the location of the face after Exif metadata is used to correct the orientation. Images in .png format don't contain Exif metadata.</p> </note>\n@return The orientation of the target image (in counterclockwise direction). If your application displays the target image, you can use this value to correct the orientation of the image. The bounding box coordinates returned in <code>FaceMatches</code> and <code>UnmatchedFaces</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the target image is in .jpg format, it might contain Exif metadata that includes the orientation of the image. If the Exif metadata for the target image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the bounding box coordinates in <code>FaceMatches</code> and <code>UnmatchedFaces</code> represent the location of the face after Exif metadata is used to correct the orientation. Images in .png format don't contain Exif metadata.</p>\n@see OrientationCorrection*/",
          "getterMethodName" : "getTargetImageOrientationCorrection",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "TargetImageOrientationCorrection",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TargetImageOrientationCorrection",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TargetImageOrientationCorrection",
          "setterDocumentation" : "/**<p> The orientation of the target image (in counterclockwise direction). If your application displays the target image, you can use this value to correct the orientation of the image. The bounding box coordinates returned in <code>FaceMatches</code> and <code>UnmatchedFaces</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the target image is in .jpg format, it might contain Exif metadata that includes the orientation of the image. If the Exif metadata for the target image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the bounding box coordinates in <code>FaceMatches</code> and <code>UnmatchedFaces</code> represent the location of the face after Exif metadata is used to correct the orientation. Images in .png format don't contain Exif metadata.</p> </note>\n@param targetImageOrientationCorrection The orientation of the target image (in counterclockwise direction). If your application displays the target image, you can use this value to correct the orientation of the image. The bounding box coordinates returned in <code>FaceMatches</code> and <code>UnmatchedFaces</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the target image is in .jpg format, it might contain Exif metadata that includes the orientation of the image. If the Exif metadata for the target image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the bounding box coordinates in <code>FaceMatches</code> and <code>UnmatchedFaces</code> represent the location of the face after Exif metadata is used to correct the orientation. Images in .png format don't contain Exif metadata.</p>\n@see OrientationCorrection*/",
          "setterMethodName" : "setTargetImageOrientationCorrection",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "targetImageOrientationCorrection",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The orientation of the target image (in counterclockwise direction). If your application displays the target image, you can use this value to correct the orientation of the image. The bounding box coordinates returned in <code>FaceMatches</code> and <code>UnmatchedFaces</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the target image is in .jpg format, it might contain Exif metadata that includes the orientation of the image. If the Exif metadata for the target image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the bounding box coordinates in <code>FaceMatches</code> and <code>UnmatchedFaces</code> represent the location of the face after Exif metadata is used to correct the orientation. Images in .png format don't contain Exif metadata.</p> </note>\n@param targetImageOrientationCorrection The orientation of the target image (in counterclockwise direction). If your application displays the target image, you can use this value to correct the orientation of the image. The bounding box coordinates returned in <code>FaceMatches</code> and <code>UnmatchedFaces</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the target image is in .jpg format, it might contain Exif metadata that includes the orientation of the image. If the Exif metadata for the target image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the bounding box coordinates in <code>FaceMatches</code> and <code>UnmatchedFaces</code> represent the location of the face after Exif metadata is used to correct the orientation. Images in .png format don't contain Exif metadata.</p>\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrientationCorrection*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "targetImageOrientationCorrection",
            "variableType" : "String",
            "documentation" : "<p> The orientation of the target image (in counterclockwise direction). If your application displays the target image, you can use this value to correct the orientation of the image. The bounding box coordinates returned in <code>FaceMatches</code> and <code>UnmatchedFaces</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the target image is in .jpg format, it might contain Exif metadata that includes the orientation of the image. If the Exif metadata for the target image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the bounding box coordinates in <code>FaceMatches</code> and <code>UnmatchedFaces</code> represent the location of the face after Exif metadata is used to correct the orientation. Images in .png format don't contain Exif metadata.</p> </note>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "UnmatchedFaces" : {
          "c2jName" : "UnmatchedFaces",
          "c2jShape" : "CompareFacesUnmatchList",
          "deprecated" : false,
          "documentation" : "<p>An array of faces in the target image that did not match the source image face.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An array of faces in the target image that did not match the source image face.</p>\n@param unmatchedFaces An array of faces in the target image that did not match the source image face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withUnmatchedFaces",
          "getterDocumentation" : "/**<p>An array of faces in the target image that did not match the source image face.</p>\n@return An array of faces in the target image that did not match the source image face.*/",
          "getterMethodName" : "getUnmatchedFaces",
          "getterModel" : {
            "returnType" : "java.util.List<ComparedFace>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "UnmatchedFaces",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "UnmatchedFaces",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ComparedFace",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "ComparedFace",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "ComparedFace",
                "variableName" : "member",
                "variableType" : "ComparedFace",
                "documentation" : "",
                "simpleType" : "ComparedFace",
                "variableSetterType" : "ComparedFace"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "ComparedFace",
                "variableName" : "member",
                "variableType" : "ComparedFace",
                "documentation" : "",
                "simpleType" : "ComparedFace",
                "variableSetterType" : "ComparedFace"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "ComparedFace",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "ComparedFace",
            "templateImplType" : "java.util.ArrayList<ComparedFace>",
            "templateType" : "java.util.List<ComparedFace>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "UnmatchedFaces",
          "setterDocumentation" : "/**<p>An array of faces in the target image that did not match the source image face.</p>\n@param unmatchedFaces An array of faces in the target image that did not match the source image face.*/",
          "setterMethodName" : "setUnmatchedFaces",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<ComparedFace>",
            "variableName" : "unmatchedFaces",
            "variableType" : "java.util.List<ComparedFace>",
            "documentation" : "",
            "simpleType" : "List<ComparedFace>",
            "variableSetterType" : "java.util.Collection<ComparedFace>"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An array of faces in the target image that did not match the source image face.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setUnmatchedFaces(java.util.Collection)} or {@link #withUnmatchedFaces(java.util.Collection)} if you want to override the existing values.</p>\n@param unmatchedFaces An array of faces in the target image that did not match the source image face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<ComparedFace>",
            "variableName" : "unmatchedFaces",
            "variableType" : "java.util.List<ComparedFace>",
            "documentation" : "<p>An array of faces in the target image that did not match the source image face.</p>",
            "simpleType" : "List<ComparedFace>",
            "variableSetterType" : "java.util.Collection<ComparedFace>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CompareFacesResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "CompareFacesResult",
        "variableName" : "compareFacesResult",
        "variableType" : "CompareFacesResult",
        "documentation" : null,
        "simpleType" : "CompareFacesResult",
        "variableSetterType" : "CompareFacesResult"
      },
      "wrapper" : false
    },
    "ComparedFace" : {
      "c2jName" : "ComparedFace",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Provides face metadata for target image faces that are analysed by <code>CompareFaces</code> and <code>RecognizeCelebrities</code>.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "BoundingBox",
        "c2jShape" : "BoundingBox",
        "deprecated" : false,
        "documentation" : "<p>Bounding box of the face.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Bounding box of the face.</p>\n@param boundingBox Bounding box of the face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBoundingBox",
        "getterDocumentation" : "/**<p>Bounding box of the face.</p>\n@return Bounding box of the face.*/",
        "getterMethodName" : "getBoundingBox",
        "getterModel" : {
          "returnType" : "BoundingBox",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "BoundingBox",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "BoundingBox",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "BoundingBox",
        "setterDocumentation" : "/**<p>Bounding box of the face.</p>\n@param boundingBox Bounding box of the face.*/",
        "setterMethodName" : "setBoundingBox",
        "setterModel" : {
          "variableDeclarationType" : "BoundingBox",
          "variableName" : "boundingBox",
          "variableType" : "BoundingBox",
          "documentation" : "",
          "simpleType" : "BoundingBox",
          "variableSetterType" : "BoundingBox"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Bounding box of the face.</p>\n@param boundingBox Bounding box of the face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "BoundingBox",
          "variableName" : "boundingBox",
          "variableType" : "BoundingBox",
          "documentation" : "<p>Bounding box of the face.</p>",
          "simpleType" : "BoundingBox",
          "variableSetterType" : "BoundingBox"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Confidence",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>Level of confidence that what the bounding box contains is a face.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Level of confidence that what the bounding box contains is a face.</p>\n@param confidence Level of confidence that what the bounding box contains is a face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withConfidence",
        "getterDocumentation" : "/**<p>Level of confidence that what the bounding box contains is a face.</p>\n@return Level of confidence that what the bounding box contains is a face.*/",
        "getterMethodName" : "getConfidence",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Confidence",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Confidence",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Float",
        "marshallingType" : "FLOAT",
        "name" : "Confidence",
        "setterDocumentation" : "/**<p>Level of confidence that what the bounding box contains is a face.</p>\n@param confidence Level of confidence that what the bounding box contains is a face.*/",
        "setterMethodName" : "setConfidence",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Level of confidence that what the bounding box contains is a face.</p>\n@param confidence Level of confidence that what the bounding box contains is a face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "<p>Level of confidence that what the bounding box contains is a face.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Landmarks",
        "c2jShape" : "Landmarks",
        "deprecated" : false,
        "documentation" : "<p>An array of facial landmarks.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An array of facial landmarks.</p>\n@param landmarks An array of facial landmarks.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLandmarks",
        "getterDocumentation" : "/**<p>An array of facial landmarks.</p>\n@return An array of facial landmarks.*/",
        "getterMethodName" : "getLandmarks",
        "getterModel" : {
          "returnType" : "java.util.List<Landmark>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Landmarks",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Landmarks",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Landmark",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Landmark",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "Landmark",
              "variableName" : "member",
              "variableType" : "Landmark",
              "documentation" : "",
              "simpleType" : "Landmark",
              "variableSetterType" : "Landmark"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "Landmark",
              "variableName" : "member",
              "variableType" : "Landmark",
              "documentation" : "",
              "simpleType" : "Landmark",
              "variableSetterType" : "Landmark"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Landmark",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Landmark",
          "templateImplType" : "java.util.ArrayList<Landmark>",
          "templateType" : "java.util.List<Landmark>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Landmarks",
        "setterDocumentation" : "/**<p>An array of facial landmarks.</p>\n@param landmarks An array of facial landmarks.*/",
        "setterMethodName" : "setLandmarks",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<Landmark>",
          "variableName" : "landmarks",
          "variableType" : "java.util.List<Landmark>",
          "documentation" : "",
          "simpleType" : "List<Landmark>",
          "variableSetterType" : "java.util.Collection<Landmark>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An array of facial landmarks.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLandmarks(java.util.Collection)} or {@link #withLandmarks(java.util.Collection)} if you want to override the existing values.</p>\n@param landmarks An array of facial landmarks.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<Landmark>",
          "variableName" : "landmarks",
          "variableType" : "java.util.List<Landmark>",
          "documentation" : "<p>An array of facial landmarks.</p>",
          "simpleType" : "List<Landmark>",
          "variableSetterType" : "java.util.Collection<Landmark>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Pose",
        "c2jShape" : "Pose",
        "deprecated" : false,
        "documentation" : "<p>Indicates the pose of the face as determined by its pitch, roll, and yaw.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Indicates the pose of the face as determined by its pitch, roll, and yaw.</p>\n@param pose Indicates the pose of the face as determined by its pitch, roll, and yaw.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPose",
        "getterDocumentation" : "/**<p>Indicates the pose of the face as determined by its pitch, roll, and yaw.</p>\n@return Indicates the pose of the face as determined by its pitch, roll, and yaw.*/",
        "getterMethodName" : "getPose",
        "getterModel" : {
          "returnType" : "Pose",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Pose",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Pose",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Pose",
        "setterDocumentation" : "/**<p>Indicates the pose of the face as determined by its pitch, roll, and yaw.</p>\n@param pose Indicates the pose of the face as determined by its pitch, roll, and yaw.*/",
        "setterMethodName" : "setPose",
        "setterModel" : {
          "variableDeclarationType" : "Pose",
          "variableName" : "pose",
          "variableType" : "Pose",
          "documentation" : "",
          "simpleType" : "Pose",
          "variableSetterType" : "Pose"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Indicates the pose of the face as determined by its pitch, roll, and yaw.</p>\n@param pose Indicates the pose of the face as determined by its pitch, roll, and yaw.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Pose",
          "variableName" : "pose",
          "variableType" : "Pose",
          "documentation" : "<p>Indicates the pose of the face as determined by its pitch, roll, and yaw.</p>",
          "simpleType" : "Pose",
          "variableSetterType" : "Pose"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Quality",
        "c2jShape" : "ImageQuality",
        "deprecated" : false,
        "documentation" : "<p>Identifies face image brightness and sharpness. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Identifies face image brightness and sharpness. </p>\n@param quality Identifies face image brightness and sharpness.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withQuality",
        "getterDocumentation" : "/**<p>Identifies face image brightness and sharpness. </p>\n@return Identifies face image brightness and sharpness.*/",
        "getterMethodName" : "getQuality",
        "getterModel" : {
          "returnType" : "ImageQuality",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Quality",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Quality",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Quality",
        "setterDocumentation" : "/**<p>Identifies face image brightness and sharpness. </p>\n@param quality Identifies face image brightness and sharpness.*/",
        "setterMethodName" : "setQuality",
        "setterModel" : {
          "variableDeclarationType" : "ImageQuality",
          "variableName" : "quality",
          "variableType" : "ImageQuality",
          "documentation" : "",
          "simpleType" : "ImageQuality",
          "variableSetterType" : "ImageQuality"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Identifies face image brightness and sharpness. </p>\n@param quality Identifies face image brightness and sharpness.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "ImageQuality",
          "variableName" : "quality",
          "variableType" : "ImageQuality",
          "documentation" : "<p>Identifies face image brightness and sharpness. </p>",
          "simpleType" : "ImageQuality",
          "variableSetterType" : "ImageQuality"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "BoundingBox" : {
          "c2jName" : "BoundingBox",
          "c2jShape" : "BoundingBox",
          "deprecated" : false,
          "documentation" : "<p>Bounding box of the face.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Bounding box of the face.</p>\n@param boundingBox Bounding box of the face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBoundingBox",
          "getterDocumentation" : "/**<p>Bounding box of the face.</p>\n@return Bounding box of the face.*/",
          "getterMethodName" : "getBoundingBox",
          "getterModel" : {
            "returnType" : "BoundingBox",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "BoundingBox",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "BoundingBox",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "BoundingBox",
          "setterDocumentation" : "/**<p>Bounding box of the face.</p>\n@param boundingBox Bounding box of the face.*/",
          "setterMethodName" : "setBoundingBox",
          "setterModel" : {
            "variableDeclarationType" : "BoundingBox",
            "variableName" : "boundingBox",
            "variableType" : "BoundingBox",
            "documentation" : "",
            "simpleType" : "BoundingBox",
            "variableSetterType" : "BoundingBox"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Bounding box of the face.</p>\n@param boundingBox Bounding box of the face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "BoundingBox",
            "variableName" : "boundingBox",
            "variableType" : "BoundingBox",
            "documentation" : "<p>Bounding box of the face.</p>",
            "simpleType" : "BoundingBox",
            "variableSetterType" : "BoundingBox"
          },
          "xmlNameSpaceUri" : null
        },
        "Confidence" : {
          "c2jName" : "Confidence",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>Level of confidence that what the bounding box contains is a face.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Level of confidence that what the bounding box contains is a face.</p>\n@param confidence Level of confidence that what the bounding box contains is a face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withConfidence",
          "getterDocumentation" : "/**<p>Level of confidence that what the bounding box contains is a face.</p>\n@return Level of confidence that what the bounding box contains is a face.*/",
          "getterMethodName" : "getConfidence",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Confidence",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Confidence",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Float",
          "marshallingType" : "FLOAT",
          "name" : "Confidence",
          "setterDocumentation" : "/**<p>Level of confidence that what the bounding box contains is a face.</p>\n@param confidence Level of confidence that what the bounding box contains is a face.*/",
          "setterMethodName" : "setConfidence",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Level of confidence that what the bounding box contains is a face.</p>\n@param confidence Level of confidence that what the bounding box contains is a face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "<p>Level of confidence that what the bounding box contains is a face.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "Landmarks" : {
          "c2jName" : "Landmarks",
          "c2jShape" : "Landmarks",
          "deprecated" : false,
          "documentation" : "<p>An array of facial landmarks.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An array of facial landmarks.</p>\n@param landmarks An array of facial landmarks.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLandmarks",
          "getterDocumentation" : "/**<p>An array of facial landmarks.</p>\n@return An array of facial landmarks.*/",
          "getterMethodName" : "getLandmarks",
          "getterModel" : {
            "returnType" : "java.util.List<Landmark>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Landmarks",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Landmarks",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Landmark",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Landmark",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "Landmark",
                "variableName" : "member",
                "variableType" : "Landmark",
                "documentation" : "",
                "simpleType" : "Landmark",
                "variableSetterType" : "Landmark"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "Landmark",
                "variableName" : "member",
                "variableType" : "Landmark",
                "documentation" : "",
                "simpleType" : "Landmark",
                "variableSetterType" : "Landmark"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Landmark",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Landmark",
            "templateImplType" : "java.util.ArrayList<Landmark>",
            "templateType" : "java.util.List<Landmark>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Landmarks",
          "setterDocumentation" : "/**<p>An array of facial landmarks.</p>\n@param landmarks An array of facial landmarks.*/",
          "setterMethodName" : "setLandmarks",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<Landmark>",
            "variableName" : "landmarks",
            "variableType" : "java.util.List<Landmark>",
            "documentation" : "",
            "simpleType" : "List<Landmark>",
            "variableSetterType" : "java.util.Collection<Landmark>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An array of facial landmarks.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLandmarks(java.util.Collection)} or {@link #withLandmarks(java.util.Collection)} if you want to override the existing values.</p>\n@param landmarks An array of facial landmarks.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<Landmark>",
            "variableName" : "landmarks",
            "variableType" : "java.util.List<Landmark>",
            "documentation" : "<p>An array of facial landmarks.</p>",
            "simpleType" : "List<Landmark>",
            "variableSetterType" : "java.util.Collection<Landmark>"
          },
          "xmlNameSpaceUri" : null
        },
        "Pose" : {
          "c2jName" : "Pose",
          "c2jShape" : "Pose",
          "deprecated" : false,
          "documentation" : "<p>Indicates the pose of the face as determined by its pitch, roll, and yaw.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Indicates the pose of the face as determined by its pitch, roll, and yaw.</p>\n@param pose Indicates the pose of the face as determined by its pitch, roll, and yaw.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPose",
          "getterDocumentation" : "/**<p>Indicates the pose of the face as determined by its pitch, roll, and yaw.</p>\n@return Indicates the pose of the face as determined by its pitch, roll, and yaw.*/",
          "getterMethodName" : "getPose",
          "getterModel" : {
            "returnType" : "Pose",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Pose",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Pose",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Pose",
          "setterDocumentation" : "/**<p>Indicates the pose of the face as determined by its pitch, roll, and yaw.</p>\n@param pose Indicates the pose of the face as determined by its pitch, roll, and yaw.*/",
          "setterMethodName" : "setPose",
          "setterModel" : {
            "variableDeclarationType" : "Pose",
            "variableName" : "pose",
            "variableType" : "Pose",
            "documentation" : "",
            "simpleType" : "Pose",
            "variableSetterType" : "Pose"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Indicates the pose of the face as determined by its pitch, roll, and yaw.</p>\n@param pose Indicates the pose of the face as determined by its pitch, roll, and yaw.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Pose",
            "variableName" : "pose",
            "variableType" : "Pose",
            "documentation" : "<p>Indicates the pose of the face as determined by its pitch, roll, and yaw.</p>",
            "simpleType" : "Pose",
            "variableSetterType" : "Pose"
          },
          "xmlNameSpaceUri" : null
        },
        "Quality" : {
          "c2jName" : "Quality",
          "c2jShape" : "ImageQuality",
          "deprecated" : false,
          "documentation" : "<p>Identifies face image brightness and sharpness. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Identifies face image brightness and sharpness. </p>\n@param quality Identifies face image brightness and sharpness.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withQuality",
          "getterDocumentation" : "/**<p>Identifies face image brightness and sharpness. </p>\n@return Identifies face image brightness and sharpness.*/",
          "getterMethodName" : "getQuality",
          "getterModel" : {
            "returnType" : "ImageQuality",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Quality",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Quality",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Quality",
          "setterDocumentation" : "/**<p>Identifies face image brightness and sharpness. </p>\n@param quality Identifies face image brightness and sharpness.*/",
          "setterMethodName" : "setQuality",
          "setterModel" : {
            "variableDeclarationType" : "ImageQuality",
            "variableName" : "quality",
            "variableType" : "ImageQuality",
            "documentation" : "",
            "simpleType" : "ImageQuality",
            "variableSetterType" : "ImageQuality"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Identifies face image brightness and sharpness. </p>\n@param quality Identifies face image brightness and sharpness.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "ImageQuality",
            "variableName" : "quality",
            "variableType" : "ImageQuality",
            "documentation" : "<p>Identifies face image brightness and sharpness. </p>",
            "simpleType" : "ImageQuality",
            "variableSetterType" : "ImageQuality"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ComparedFace",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "ComparedFace",
        "variableName" : "comparedFace",
        "variableType" : "ComparedFace",
        "documentation" : null,
        "simpleType" : "ComparedFace",
        "variableSetterType" : "ComparedFace"
      },
      "wrapper" : false
    },
    "ComparedSourceImageFace" : {
      "c2jName" : "ComparedSourceImageFace",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Type that describes the face Amazon Rekognition chose to compare with the faces in the target. This contains a bounding box for the selected face and confidence level that the bounding box contains a face. Note that Amazon Rekognition selects the largest face in the source image for this comparison. </p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "BoundingBox",
        "c2jShape" : "BoundingBox",
        "deprecated" : false,
        "documentation" : "<p>Bounding box of the face.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Bounding box of the face.</p>\n@param boundingBox Bounding box of the face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBoundingBox",
        "getterDocumentation" : "/**<p>Bounding box of the face.</p>\n@return Bounding box of the face.*/",
        "getterMethodName" : "getBoundingBox",
        "getterModel" : {
          "returnType" : "BoundingBox",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "BoundingBox",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "BoundingBox",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "BoundingBox",
        "setterDocumentation" : "/**<p>Bounding box of the face.</p>\n@param boundingBox Bounding box of the face.*/",
        "setterMethodName" : "setBoundingBox",
        "setterModel" : {
          "variableDeclarationType" : "BoundingBox",
          "variableName" : "boundingBox",
          "variableType" : "BoundingBox",
          "documentation" : "",
          "simpleType" : "BoundingBox",
          "variableSetterType" : "BoundingBox"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Bounding box of the face.</p>\n@param boundingBox Bounding box of the face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "BoundingBox",
          "variableName" : "boundingBox",
          "variableType" : "BoundingBox",
          "documentation" : "<p>Bounding box of the face.</p>",
          "simpleType" : "BoundingBox",
          "variableSetterType" : "BoundingBox"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Confidence",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>Confidence level that the selected bounding box contains a face.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Confidence level that the selected bounding box contains a face.</p>\n@param confidence Confidence level that the selected bounding box contains a face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withConfidence",
        "getterDocumentation" : "/**<p>Confidence level that the selected bounding box contains a face.</p>\n@return Confidence level that the selected bounding box contains a face.*/",
        "getterMethodName" : "getConfidence",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Confidence",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Confidence",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Float",
        "marshallingType" : "FLOAT",
        "name" : "Confidence",
        "setterDocumentation" : "/**<p>Confidence level that the selected bounding box contains a face.</p>\n@param confidence Confidence level that the selected bounding box contains a face.*/",
        "setterMethodName" : "setConfidence",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Confidence level that the selected bounding box contains a face.</p>\n@param confidence Confidence level that the selected bounding box contains a face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "<p>Confidence level that the selected bounding box contains a face.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "BoundingBox" : {
          "c2jName" : "BoundingBox",
          "c2jShape" : "BoundingBox",
          "deprecated" : false,
          "documentation" : "<p>Bounding box of the face.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Bounding box of the face.</p>\n@param boundingBox Bounding box of the face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBoundingBox",
          "getterDocumentation" : "/**<p>Bounding box of the face.</p>\n@return Bounding box of the face.*/",
          "getterMethodName" : "getBoundingBox",
          "getterModel" : {
            "returnType" : "BoundingBox",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "BoundingBox",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "BoundingBox",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "BoundingBox",
          "setterDocumentation" : "/**<p>Bounding box of the face.</p>\n@param boundingBox Bounding box of the face.*/",
          "setterMethodName" : "setBoundingBox",
          "setterModel" : {
            "variableDeclarationType" : "BoundingBox",
            "variableName" : "boundingBox",
            "variableType" : "BoundingBox",
            "documentation" : "",
            "simpleType" : "BoundingBox",
            "variableSetterType" : "BoundingBox"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Bounding box of the face.</p>\n@param boundingBox Bounding box of the face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "BoundingBox",
            "variableName" : "boundingBox",
            "variableType" : "BoundingBox",
            "documentation" : "<p>Bounding box of the face.</p>",
            "simpleType" : "BoundingBox",
            "variableSetterType" : "BoundingBox"
          },
          "xmlNameSpaceUri" : null
        },
        "Confidence" : {
          "c2jName" : "Confidence",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>Confidence level that the selected bounding box contains a face.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Confidence level that the selected bounding box contains a face.</p>\n@param confidence Confidence level that the selected bounding box contains a face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withConfidence",
          "getterDocumentation" : "/**<p>Confidence level that the selected bounding box contains a face.</p>\n@return Confidence level that the selected bounding box contains a face.*/",
          "getterMethodName" : "getConfidence",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Confidence",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Confidence",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Float",
          "marshallingType" : "FLOAT",
          "name" : "Confidence",
          "setterDocumentation" : "/**<p>Confidence level that the selected bounding box contains a face.</p>\n@param confidence Confidence level that the selected bounding box contains a face.*/",
          "setterMethodName" : "setConfidence",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Confidence level that the selected bounding box contains a face.</p>\n@param confidence Confidence level that the selected bounding box contains a face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "<p>Confidence level that the selected bounding box contains a face.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ComparedSourceImageFace",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "ComparedSourceImageFace",
        "variableName" : "comparedSourceImageFace",
        "variableType" : "ComparedSourceImageFace",
        "documentation" : null,
        "simpleType" : "ComparedSourceImageFace",
        "variableSetterType" : "ComparedSourceImageFace"
      },
      "wrapper" : false
    },
    "CreateCollectionRequest" : {
      "c2jName" : "CreateCollectionRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "CreateCollection",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "RekognitionService.CreateCollection",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "CollectionId",
        "c2jShape" : "CollectionId",
        "deprecated" : false,
        "documentation" : "<p>ID for the collection that you are creating.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>ID for the collection that you are creating.</p>\n@param collectionId ID for the collection that you are creating.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCollectionId",
        "getterDocumentation" : "/**<p>ID for the collection that you are creating.</p>\n@return ID for the collection that you are creating.*/",
        "getterMethodName" : "getCollectionId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "CollectionId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CollectionId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CollectionId",
        "setterDocumentation" : "/**<p>ID for the collection that you are creating.</p>\n@param collectionId ID for the collection that you are creating.*/",
        "setterMethodName" : "setCollectionId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "collectionId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>ID for the collection that you are creating.</p>\n@param collectionId ID for the collection that you are creating.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "collectionId",
          "variableType" : "String",
          "documentation" : "<p>ID for the collection that you are creating.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CollectionId" : {
          "c2jName" : "CollectionId",
          "c2jShape" : "CollectionId",
          "deprecated" : false,
          "documentation" : "<p>ID for the collection that you are creating.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>ID for the collection that you are creating.</p>\n@param collectionId ID for the collection that you are creating.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCollectionId",
          "getterDocumentation" : "/**<p>ID for the collection that you are creating.</p>\n@return ID for the collection that you are creating.*/",
          "getterMethodName" : "getCollectionId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "CollectionId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CollectionId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CollectionId",
          "setterDocumentation" : "/**<p>ID for the collection that you are creating.</p>\n@param collectionId ID for the collection that you are creating.*/",
          "setterMethodName" : "setCollectionId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "collectionId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>ID for the collection that you are creating.</p>\n@param collectionId ID for the collection that you are creating.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "collectionId",
            "variableType" : "String",
            "documentation" : "<p>ID for the collection that you are creating.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "CollectionId" ],
      "shapeName" : "CreateCollectionRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "CreateCollectionRequest",
        "variableName" : "createCollectionRequest",
        "variableType" : "CreateCollectionRequest",
        "documentation" : null,
        "simpleType" : "CreateCollectionRequest",
        "variableSetterType" : "CreateCollectionRequest"
      },
      "wrapper" : false
    },
    "CreateCollectionResult" : {
      "c2jName" : "CreateCollectionResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "StatusCode",
        "c2jShape" : "UInteger",
        "deprecated" : false,
        "documentation" : "<p>HTTP status code indicating the result of the operation.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>HTTP status code indicating the result of the operation.</p>\n@param statusCode HTTP status code indicating the result of the operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withStatusCode",
        "getterDocumentation" : "/**<p>HTTP status code indicating the result of the operation.</p>\n@return HTTP status code indicating the result of the operation.*/",
        "getterMethodName" : "getStatusCode",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "StatusCode",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "StatusCode",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "StatusCode",
        "setterDocumentation" : "/**<p>HTTP status code indicating the result of the operation.</p>\n@param statusCode HTTP status code indicating the result of the operation.*/",
        "setterMethodName" : "setStatusCode",
        "setterModel" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "statusCode",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>HTTP status code indicating the result of the operation.</p>\n@param statusCode HTTP status code indicating the result of the operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "statusCode",
          "variableType" : "Integer",
          "documentation" : "<p>HTTP status code indicating the result of the operation.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "CollectionArn",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>Amazon Resource Name (ARN) of the collection. You can use this to manage permissions on your resources. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Amazon Resource Name (ARN) of the collection. You can use this to manage permissions on your resources. </p>\n@param collectionArn Amazon Resource Name (ARN) of the collection. You can use this to manage permissions on your resources.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCollectionArn",
        "getterDocumentation" : "/**<p>Amazon Resource Name (ARN) of the collection. You can use this to manage permissions on your resources. </p>\n@return Amazon Resource Name (ARN) of the collection. You can use this to manage permissions on your resources.*/",
        "getterMethodName" : "getCollectionArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "CollectionArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CollectionArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CollectionArn",
        "setterDocumentation" : "/**<p>Amazon Resource Name (ARN) of the collection. You can use this to manage permissions on your resources. </p>\n@param collectionArn Amazon Resource Name (ARN) of the collection. You can use this to manage permissions on your resources.*/",
        "setterMethodName" : "setCollectionArn",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "collectionArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Amazon Resource Name (ARN) of the collection. You can use this to manage permissions on your resources. </p>\n@param collectionArn Amazon Resource Name (ARN) of the collection. You can use this to manage permissions on your resources.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "collectionArn",
          "variableType" : "String",
          "documentation" : "<p>Amazon Resource Name (ARN) of the collection. You can use this to manage permissions on your resources. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CollectionArn" : {
          "c2jName" : "CollectionArn",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>Amazon Resource Name (ARN) of the collection. You can use this to manage permissions on your resources. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Amazon Resource Name (ARN) of the collection. You can use this to manage permissions on your resources. </p>\n@param collectionArn Amazon Resource Name (ARN) of the collection. You can use this to manage permissions on your resources.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCollectionArn",
          "getterDocumentation" : "/**<p>Amazon Resource Name (ARN) of the collection. You can use this to manage permissions on your resources. </p>\n@return Amazon Resource Name (ARN) of the collection. You can use this to manage permissions on your resources.*/",
          "getterMethodName" : "getCollectionArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "CollectionArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CollectionArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CollectionArn",
          "setterDocumentation" : "/**<p>Amazon Resource Name (ARN) of the collection. You can use this to manage permissions on your resources. </p>\n@param collectionArn Amazon Resource Name (ARN) of the collection. You can use this to manage permissions on your resources.*/",
          "setterMethodName" : "setCollectionArn",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "collectionArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Amazon Resource Name (ARN) of the collection. You can use this to manage permissions on your resources. </p>\n@param collectionArn Amazon Resource Name (ARN) of the collection. You can use this to manage permissions on your resources.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "collectionArn",
            "variableType" : "String",
            "documentation" : "<p>Amazon Resource Name (ARN) of the collection. You can use this to manage permissions on your resources. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "StatusCode" : {
          "c2jName" : "StatusCode",
          "c2jShape" : "UInteger",
          "deprecated" : false,
          "documentation" : "<p>HTTP status code indicating the result of the operation.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>HTTP status code indicating the result of the operation.</p>\n@param statusCode HTTP status code indicating the result of the operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withStatusCode",
          "getterDocumentation" : "/**<p>HTTP status code indicating the result of the operation.</p>\n@return HTTP status code indicating the result of the operation.*/",
          "getterMethodName" : "getStatusCode",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "StatusCode",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "StatusCode",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "StatusCode",
          "setterDocumentation" : "/**<p>HTTP status code indicating the result of the operation.</p>\n@param statusCode HTTP status code indicating the result of the operation.*/",
          "setterMethodName" : "setStatusCode",
          "setterModel" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "statusCode",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>HTTP status code indicating the result of the operation.</p>\n@param statusCode HTTP status code indicating the result of the operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "statusCode",
            "variableType" : "Integer",
            "documentation" : "<p>HTTP status code indicating the result of the operation.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CreateCollectionResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "CreateCollectionResult",
        "variableName" : "createCollectionResult",
        "variableType" : "CreateCollectionResult",
        "documentation" : null,
        "simpleType" : "CreateCollectionResult",
        "variableSetterType" : "CreateCollectionResult"
      },
      "wrapper" : false
    },
    "DeleteCollectionRequest" : {
      "c2jName" : "DeleteCollectionRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DeleteCollection",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "RekognitionService.DeleteCollection",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "CollectionId",
        "c2jShape" : "CollectionId",
        "deprecated" : false,
        "documentation" : "<p>ID of the collection to delete.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>ID of the collection to delete.</p>\n@param collectionId ID of the collection to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCollectionId",
        "getterDocumentation" : "/**<p>ID of the collection to delete.</p>\n@return ID of the collection to delete.*/",
        "getterMethodName" : "getCollectionId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "CollectionId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CollectionId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CollectionId",
        "setterDocumentation" : "/**<p>ID of the collection to delete.</p>\n@param collectionId ID of the collection to delete.*/",
        "setterMethodName" : "setCollectionId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "collectionId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>ID of the collection to delete.</p>\n@param collectionId ID of the collection to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "collectionId",
          "variableType" : "String",
          "documentation" : "<p>ID of the collection to delete.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CollectionId" : {
          "c2jName" : "CollectionId",
          "c2jShape" : "CollectionId",
          "deprecated" : false,
          "documentation" : "<p>ID of the collection to delete.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>ID of the collection to delete.</p>\n@param collectionId ID of the collection to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCollectionId",
          "getterDocumentation" : "/**<p>ID of the collection to delete.</p>\n@return ID of the collection to delete.*/",
          "getterMethodName" : "getCollectionId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "CollectionId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CollectionId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CollectionId",
          "setterDocumentation" : "/**<p>ID of the collection to delete.</p>\n@param collectionId ID of the collection to delete.*/",
          "setterMethodName" : "setCollectionId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "collectionId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>ID of the collection to delete.</p>\n@param collectionId ID of the collection to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "collectionId",
            "variableType" : "String",
            "documentation" : "<p>ID of the collection to delete.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "CollectionId" ],
      "shapeName" : "DeleteCollectionRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "DeleteCollectionRequest",
        "variableName" : "deleteCollectionRequest",
        "variableType" : "DeleteCollectionRequest",
        "documentation" : null,
        "simpleType" : "DeleteCollectionRequest",
        "variableSetterType" : "DeleteCollectionRequest"
      },
      "wrapper" : false
    },
    "DeleteCollectionResult" : {
      "c2jName" : "DeleteCollectionResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "StatusCode",
        "c2jShape" : "UInteger",
        "deprecated" : false,
        "documentation" : "<p>HTTP status code that indicates the result of the operation.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>HTTP status code that indicates the result of the operation.</p>\n@param statusCode HTTP status code that indicates the result of the operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withStatusCode",
        "getterDocumentation" : "/**<p>HTTP status code that indicates the result of the operation.</p>\n@return HTTP status code that indicates the result of the operation.*/",
        "getterMethodName" : "getStatusCode",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "StatusCode",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "StatusCode",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "StatusCode",
        "setterDocumentation" : "/**<p>HTTP status code that indicates the result of the operation.</p>\n@param statusCode HTTP status code that indicates the result of the operation.*/",
        "setterMethodName" : "setStatusCode",
        "setterModel" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "statusCode",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>HTTP status code that indicates the result of the operation.</p>\n@param statusCode HTTP status code that indicates the result of the operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "statusCode",
          "variableType" : "Integer",
          "documentation" : "<p>HTTP status code that indicates the result of the operation.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "StatusCode" : {
          "c2jName" : "StatusCode",
          "c2jShape" : "UInteger",
          "deprecated" : false,
          "documentation" : "<p>HTTP status code that indicates the result of the operation.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>HTTP status code that indicates the result of the operation.</p>\n@param statusCode HTTP status code that indicates the result of the operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withStatusCode",
          "getterDocumentation" : "/**<p>HTTP status code that indicates the result of the operation.</p>\n@return HTTP status code that indicates the result of the operation.*/",
          "getterMethodName" : "getStatusCode",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "StatusCode",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "StatusCode",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "StatusCode",
          "setterDocumentation" : "/**<p>HTTP status code that indicates the result of the operation.</p>\n@param statusCode HTTP status code that indicates the result of the operation.*/",
          "setterMethodName" : "setStatusCode",
          "setterModel" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "statusCode",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>HTTP status code that indicates the result of the operation.</p>\n@param statusCode HTTP status code that indicates the result of the operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "statusCode",
            "variableType" : "Integer",
            "documentation" : "<p>HTTP status code that indicates the result of the operation.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DeleteCollectionResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "DeleteCollectionResult",
        "variableName" : "deleteCollectionResult",
        "variableType" : "DeleteCollectionResult",
        "documentation" : null,
        "simpleType" : "DeleteCollectionResult",
        "variableSetterType" : "DeleteCollectionResult"
      },
      "wrapper" : false
    },
    "DeleteFacesRequest" : {
      "c2jName" : "DeleteFacesRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DeleteFaces",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "RekognitionService.DeleteFaces",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "CollectionId",
        "c2jShape" : "CollectionId",
        "deprecated" : false,
        "documentation" : "<p>Collection from which to remove the specific faces.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Collection from which to remove the specific faces.</p>\n@param collectionId Collection from which to remove the specific faces.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCollectionId",
        "getterDocumentation" : "/**<p>Collection from which to remove the specific faces.</p>\n@return Collection from which to remove the specific faces.*/",
        "getterMethodName" : "getCollectionId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "CollectionId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CollectionId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CollectionId",
        "setterDocumentation" : "/**<p>Collection from which to remove the specific faces.</p>\n@param collectionId Collection from which to remove the specific faces.*/",
        "setterMethodName" : "setCollectionId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "collectionId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Collection from which to remove the specific faces.</p>\n@param collectionId Collection from which to remove the specific faces.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "collectionId",
          "variableType" : "String",
          "documentation" : "<p>Collection from which to remove the specific faces.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "FaceIds",
        "c2jShape" : "FaceIdList",
        "deprecated" : false,
        "documentation" : "<p>An array of face IDs to delete.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An array of face IDs to delete.</p>\n@param faceIds An array of face IDs to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFaceIds",
        "getterDocumentation" : "/**<p>An array of face IDs to delete.</p>\n@return An array of face IDs to delete.*/",
        "getterMethodName" : "getFaceIds",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "FaceIds",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "FaceIds",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "FaceId",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "FaceIds",
        "setterDocumentation" : "/**<p>An array of face IDs to delete.</p>\n@param faceIds An array of face IDs to delete.*/",
        "setterMethodName" : "setFaceIds",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "faceIds",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An array of face IDs to delete.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFaceIds(java.util.Collection)} or {@link #withFaceIds(java.util.Collection)} if you want to override the existing values.</p>\n@param faceIds An array of face IDs to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "faceIds",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>An array of face IDs to delete.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CollectionId" : {
          "c2jName" : "CollectionId",
          "c2jShape" : "CollectionId",
          "deprecated" : false,
          "documentation" : "<p>Collection from which to remove the specific faces.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Collection from which to remove the specific faces.</p>\n@param collectionId Collection from which to remove the specific faces.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCollectionId",
          "getterDocumentation" : "/**<p>Collection from which to remove the specific faces.</p>\n@return Collection from which to remove the specific faces.*/",
          "getterMethodName" : "getCollectionId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "CollectionId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CollectionId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CollectionId",
          "setterDocumentation" : "/**<p>Collection from which to remove the specific faces.</p>\n@param collectionId Collection from which to remove the specific faces.*/",
          "setterMethodName" : "setCollectionId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "collectionId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Collection from which to remove the specific faces.</p>\n@param collectionId Collection from which to remove the specific faces.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "collectionId",
            "variableType" : "String",
            "documentation" : "<p>Collection from which to remove the specific faces.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "FaceIds" : {
          "c2jName" : "FaceIds",
          "c2jShape" : "FaceIdList",
          "deprecated" : false,
          "documentation" : "<p>An array of face IDs to delete.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An array of face IDs to delete.</p>\n@param faceIds An array of face IDs to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFaceIds",
          "getterDocumentation" : "/**<p>An array of face IDs to delete.</p>\n@return An array of face IDs to delete.*/",
          "getterMethodName" : "getFaceIds",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "FaceIds",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "FaceIds",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "FaceId",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "FaceIds",
          "setterDocumentation" : "/**<p>An array of face IDs to delete.</p>\n@param faceIds An array of face IDs to delete.*/",
          "setterMethodName" : "setFaceIds",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "faceIds",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An array of face IDs to delete.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFaceIds(java.util.Collection)} or {@link #withFaceIds(java.util.Collection)} if you want to override the existing values.</p>\n@param faceIds An array of face IDs to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "faceIds",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>An array of face IDs to delete.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "CollectionId", "FaceIds" ],
      "shapeName" : "DeleteFacesRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "DeleteFacesRequest",
        "variableName" : "deleteFacesRequest",
        "variableType" : "DeleteFacesRequest",
        "documentation" : null,
        "simpleType" : "DeleteFacesRequest",
        "variableSetterType" : "DeleteFacesRequest"
      },
      "wrapper" : false
    },
    "DeleteFacesResult" : {
      "c2jName" : "DeleteFacesResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "DeletedFaces",
        "c2jShape" : "FaceIdList",
        "deprecated" : false,
        "documentation" : "<p>An array of strings (face IDs) of the faces that were deleted.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An array of strings (face IDs) of the faces that were deleted.</p>\n@param deletedFaces An array of strings (face IDs) of the faces that were deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDeletedFaces",
        "getterDocumentation" : "/**<p>An array of strings (face IDs) of the faces that were deleted.</p>\n@return An array of strings (face IDs) of the faces that were deleted.*/",
        "getterMethodName" : "getDeletedFaces",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "DeletedFaces",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "DeletedFaces",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "FaceId",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "DeletedFaces",
        "setterDocumentation" : "/**<p>An array of strings (face IDs) of the faces that were deleted.</p>\n@param deletedFaces An array of strings (face IDs) of the faces that were deleted.*/",
        "setterMethodName" : "setDeletedFaces",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "deletedFaces",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An array of strings (face IDs) of the faces that were deleted.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setDeletedFaces(java.util.Collection)} or {@link #withDeletedFaces(java.util.Collection)} if you want to override the existing values.</p>\n@param deletedFaces An array of strings (face IDs) of the faces that were deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "deletedFaces",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>An array of strings (face IDs) of the faces that were deleted.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "DeletedFaces" : {
          "c2jName" : "DeletedFaces",
          "c2jShape" : "FaceIdList",
          "deprecated" : false,
          "documentation" : "<p>An array of strings (face IDs) of the faces that were deleted.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An array of strings (face IDs) of the faces that were deleted.</p>\n@param deletedFaces An array of strings (face IDs) of the faces that were deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDeletedFaces",
          "getterDocumentation" : "/**<p>An array of strings (face IDs) of the faces that were deleted.</p>\n@return An array of strings (face IDs) of the faces that were deleted.*/",
          "getterMethodName" : "getDeletedFaces",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "DeletedFaces",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "DeletedFaces",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "FaceId",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "DeletedFaces",
          "setterDocumentation" : "/**<p>An array of strings (face IDs) of the faces that were deleted.</p>\n@param deletedFaces An array of strings (face IDs) of the faces that were deleted.*/",
          "setterMethodName" : "setDeletedFaces",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "deletedFaces",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An array of strings (face IDs) of the faces that were deleted.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setDeletedFaces(java.util.Collection)} or {@link #withDeletedFaces(java.util.Collection)} if you want to override the existing values.</p>\n@param deletedFaces An array of strings (face IDs) of the faces that were deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "deletedFaces",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>An array of strings (face IDs) of the faces that were deleted.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DeleteFacesResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "DeleteFacesResult",
        "variableName" : "deleteFacesResult",
        "variableType" : "DeleteFacesResult",
        "documentation" : null,
        "simpleType" : "DeleteFacesResult",
        "variableSetterType" : "DeleteFacesResult"
      },
      "wrapper" : false
    },
    "DetectFacesRequest" : {
      "c2jName" : "DetectFacesRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DetectFaces",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "RekognitionService.DetectFaces",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "Image",
        "c2jShape" : "Image",
        "deprecated" : false,
        "documentation" : "<p>The image in which you want to detect faces. You can specify a blob or an S3 object. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The image in which you want to detect faces. You can specify a blob or an S3 object. </p>\n@param image The image in which you want to detect faces. You can specify a blob or an S3 object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withImage",
        "getterDocumentation" : "/**<p>The image in which you want to detect faces. You can specify a blob or an S3 object. </p>\n@return The image in which you want to detect faces. You can specify a blob or an S3 object.*/",
        "getterMethodName" : "getImage",
        "getterModel" : {
          "returnType" : "Image",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Image",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Image",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Image",
        "setterDocumentation" : "/**<p>The image in which you want to detect faces. You can specify a blob or an S3 object. </p>\n@param image The image in which you want to detect faces. You can specify a blob or an S3 object.*/",
        "setterMethodName" : "setImage",
        "setterModel" : {
          "variableDeclarationType" : "Image",
          "variableName" : "image",
          "variableType" : "Image",
          "documentation" : "",
          "simpleType" : "Image",
          "variableSetterType" : "Image"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The image in which you want to detect faces. You can specify a blob or an S3 object. </p>\n@param image The image in which you want to detect faces. You can specify a blob or an S3 object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Image",
          "variableName" : "image",
          "variableType" : "Image",
          "documentation" : "<p>The image in which you want to detect faces. You can specify a blob or an S3 object. </p>",
          "simpleType" : "Image",
          "variableSetterType" : "Image"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Attributes",
        "c2jShape" : "Attributes",
        "deprecated" : false,
        "documentation" : "<p>An array of facial attributes you want to be returned. This can be the default list of attributes or all attributes. If you don't specify a value for <code>Attributes</code> or if you specify <code>[\"DEFAULT\"]</code>, the API returns the following subset of facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>, <code>Quality</code> and <code>Landmarks</code>. If you provide <code>[\"ALL\"]</code>, all facial attributes are returned but the operation will take longer to complete.</p> <p>If you provide both, <code>[\"ALL\", \"DEFAULT\"]</code>, the service uses a logical AND operator to determine which attributes to return (in this case, all attributes). </p>",
        "enumType" : "Attribute",
        "fluentSetterDocumentation" : "/**<p>An array of facial attributes you want to be returned. This can be the default list of attributes or all attributes. If you don't specify a value for <code>Attributes</code> or if you specify <code>[\"DEFAULT\"]</code>, the API returns the following subset of facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>, <code>Quality</code> and <code>Landmarks</code>. If you provide <code>[\"ALL\"]</code>, all facial attributes are returned but the operation will take longer to complete.</p> <p>If you provide both, <code>[\"ALL\", \"DEFAULT\"]</code>, the service uses a logical AND operator to determine which attributes to return (in this case, all attributes). </p>\n@param attributes An array of facial attributes you want to be returned. This can be the default list of attributes or all attributes. If you don't specify a value for <code>Attributes</code> or if you specify <code>[\"DEFAULT\"]</code>, the API returns the following subset of facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>, <code>Quality</code> and <code>Landmarks</code>. If you provide <code>[\"ALL\"]</code>, all facial attributes are returned but the operation will take longer to complete.</p> <p>If you provide both, <code>[\"ALL\", \"DEFAULT\"]</code>, the service uses a logical AND operator to determine which attributes to return (in this case, all attributes).\n@return Returns a reference to this object so that method calls can be chained together.\n@see Attribute*/",
        "fluentSetterMethodName" : "withAttributes",
        "getterDocumentation" : "/**<p>An array of facial attributes you want to be returned. This can be the default list of attributes or all attributes. If you don't specify a value for <code>Attributes</code> or if you specify <code>[\"DEFAULT\"]</code>, the API returns the following subset of facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>, <code>Quality</code> and <code>Landmarks</code>. If you provide <code>[\"ALL\"]</code>, all facial attributes are returned but the operation will take longer to complete.</p> <p>If you provide both, <code>[\"ALL\", \"DEFAULT\"]</code>, the service uses a logical AND operator to determine which attributes to return (in this case, all attributes). </p>\n@return An array of facial attributes you want to be returned. This can be the default list of attributes or all attributes. If you don't specify a value for <code>Attributes</code> or if you specify <code>[\"DEFAULT\"]</code>, the API returns the following subset of facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>, <code>Quality</code> and <code>Landmarks</code>. If you provide <code>[\"ALL\"]</code>, all facial attributes are returned but the operation will take longer to complete.</p> <p>If you provide both, <code>[\"ALL\", \"DEFAULT\"]</code>, the service uses a logical AND operator to determine which attributes to return (in this case, all attributes).\n@see Attribute*/",
        "getterMethodName" : "getAttributes",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Attributes",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Attributes",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Attribute",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : "Attribute",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.\n@see Attribute*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return \n@see Attribute*/",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member \n@see Attribute*/",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.\n@see Attribute*/",
            "variable" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Attributes",
        "setterDocumentation" : "/**<p>An array of facial attributes you want to be returned. This can be the default list of attributes or all attributes. If you don't specify a value for <code>Attributes</code> or if you specify <code>[\"DEFAULT\"]</code>, the API returns the following subset of facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>, <code>Quality</code> and <code>Landmarks</code>. If you provide <code>[\"ALL\"]</code>, all facial attributes are returned but the operation will take longer to complete.</p> <p>If you provide both, <code>[\"ALL\", \"DEFAULT\"]</code>, the service uses a logical AND operator to determine which attributes to return (in this case, all attributes). </p>\n@param attributes An array of facial attributes you want to be returned. This can be the default list of attributes or all attributes. If you don't specify a value for <code>Attributes</code> or if you specify <code>[\"DEFAULT\"]</code>, the API returns the following subset of facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>, <code>Quality</code> and <code>Landmarks</code>. If you provide <code>[\"ALL\"]</code>, all facial attributes are returned but the operation will take longer to complete.</p> <p>If you provide both, <code>[\"ALL\", \"DEFAULT\"]</code>, the service uses a logical AND operator to determine which attributes to return (in this case, all attributes).\n@see Attribute*/",
        "setterMethodName" : "setAttributes",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "attributes",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An array of facial attributes you want to be returned. This can be the default list of attributes or all attributes. If you don't specify a value for <code>Attributes</code> or if you specify <code>[\"DEFAULT\"]</code>, the API returns the following subset of facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>, <code>Quality</code> and <code>Landmarks</code>. If you provide <code>[\"ALL\"]</code>, all facial attributes are returned but the operation will take longer to complete.</p> <p>If you provide both, <code>[\"ALL\", \"DEFAULT\"]</code>, the service uses a logical AND operator to determine which attributes to return (in this case, all attributes). </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setAttributes(java.util.Collection)} or {@link #withAttributes(java.util.Collection)} if you want to override the existing values.</p>\n@param attributes An array of facial attributes you want to be returned. This can be the default list of attributes or all attributes. If you don't specify a value for <code>Attributes</code> or if you specify <code>[\"DEFAULT\"]</code>, the API returns the following subset of facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>, <code>Quality</code> and <code>Landmarks</code>. If you provide <code>[\"ALL\"]</code>, all facial attributes are returned but the operation will take longer to complete.</p> <p>If you provide both, <code>[\"ALL\", \"DEFAULT\"]</code>, the service uses a logical AND operator to determine which attributes to return (in this case, all attributes).\n@return Returns a reference to this object so that method calls can be chained together.\n@see Attribute*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "attributes",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>An array of facial attributes you want to be returned. This can be the default list of attributes or all attributes. If you don't specify a value for <code>Attributes</code> or if you specify <code>[\"DEFAULT\"]</code>, the API returns the following subset of facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>, <code>Quality</code> and <code>Landmarks</code>. If you provide <code>[\"ALL\"]</code>, all facial attributes are returned but the operation will take longer to complete.</p> <p>If you provide both, <code>[\"ALL\", \"DEFAULT\"]</code>, the service uses a logical AND operator to determine which attributes to return (in this case, all attributes). </p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Attributes" : {
          "c2jName" : "Attributes",
          "c2jShape" : "Attributes",
          "deprecated" : false,
          "documentation" : "<p>An array of facial attributes you want to be returned. This can be the default list of attributes or all attributes. If you don't specify a value for <code>Attributes</code> or if you specify <code>[\"DEFAULT\"]</code>, the API returns the following subset of facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>, <code>Quality</code> and <code>Landmarks</code>. If you provide <code>[\"ALL\"]</code>, all facial attributes are returned but the operation will take longer to complete.</p> <p>If you provide both, <code>[\"ALL\", \"DEFAULT\"]</code>, the service uses a logical AND operator to determine which attributes to return (in this case, all attributes). </p>",
          "enumType" : "Attribute",
          "fluentSetterDocumentation" : "/**<p>An array of facial attributes you want to be returned. This can be the default list of attributes or all attributes. If you don't specify a value for <code>Attributes</code> or if you specify <code>[\"DEFAULT\"]</code>, the API returns the following subset of facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>, <code>Quality</code> and <code>Landmarks</code>. If you provide <code>[\"ALL\"]</code>, all facial attributes are returned but the operation will take longer to complete.</p> <p>If you provide both, <code>[\"ALL\", \"DEFAULT\"]</code>, the service uses a logical AND operator to determine which attributes to return (in this case, all attributes). </p>\n@param attributes An array of facial attributes you want to be returned. This can be the default list of attributes or all attributes. If you don't specify a value for <code>Attributes</code> or if you specify <code>[\"DEFAULT\"]</code>, the API returns the following subset of facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>, <code>Quality</code> and <code>Landmarks</code>. If you provide <code>[\"ALL\"]</code>, all facial attributes are returned but the operation will take longer to complete.</p> <p>If you provide both, <code>[\"ALL\", \"DEFAULT\"]</code>, the service uses a logical AND operator to determine which attributes to return (in this case, all attributes).\n@return Returns a reference to this object so that method calls can be chained together.\n@see Attribute*/",
          "fluentSetterMethodName" : "withAttributes",
          "getterDocumentation" : "/**<p>An array of facial attributes you want to be returned. This can be the default list of attributes or all attributes. If you don't specify a value for <code>Attributes</code> or if you specify <code>[\"DEFAULT\"]</code>, the API returns the following subset of facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>, <code>Quality</code> and <code>Landmarks</code>. If you provide <code>[\"ALL\"]</code>, all facial attributes are returned but the operation will take longer to complete.</p> <p>If you provide both, <code>[\"ALL\", \"DEFAULT\"]</code>, the service uses a logical AND operator to determine which attributes to return (in this case, all attributes). </p>\n@return An array of facial attributes you want to be returned. This can be the default list of attributes or all attributes. If you don't specify a value for <code>Attributes</code> or if you specify <code>[\"DEFAULT\"]</code>, the API returns the following subset of facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>, <code>Quality</code> and <code>Landmarks</code>. If you provide <code>[\"ALL\"]</code>, all facial attributes are returned but the operation will take longer to complete.</p> <p>If you provide both, <code>[\"ALL\", \"DEFAULT\"]</code>, the service uses a logical AND operator to determine which attributes to return (in this case, all attributes).\n@see Attribute*/",
          "getterMethodName" : "getAttributes",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Attributes",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Attributes",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Attribute",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : "Attribute",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.\n@see Attribute*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return \n@see Attribute*/",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member \n@see Attribute*/",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.\n@see Attribute*/",
              "variable" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Attributes",
          "setterDocumentation" : "/**<p>An array of facial attributes you want to be returned. This can be the default list of attributes or all attributes. If you don't specify a value for <code>Attributes</code> or if you specify <code>[\"DEFAULT\"]</code>, the API returns the following subset of facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>, <code>Quality</code> and <code>Landmarks</code>. If you provide <code>[\"ALL\"]</code>, all facial attributes are returned but the operation will take longer to complete.</p> <p>If you provide both, <code>[\"ALL\", \"DEFAULT\"]</code>, the service uses a logical AND operator to determine which attributes to return (in this case, all attributes). </p>\n@param attributes An array of facial attributes you want to be returned. This can be the default list of attributes or all attributes. If you don't specify a value for <code>Attributes</code> or if you specify <code>[\"DEFAULT\"]</code>, the API returns the following subset of facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>, <code>Quality</code> and <code>Landmarks</code>. If you provide <code>[\"ALL\"]</code>, all facial attributes are returned but the operation will take longer to complete.</p> <p>If you provide both, <code>[\"ALL\", \"DEFAULT\"]</code>, the service uses a logical AND operator to determine which attributes to return (in this case, all attributes).\n@see Attribute*/",
          "setterMethodName" : "setAttributes",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "attributes",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An array of facial attributes you want to be returned. This can be the default list of attributes or all attributes. If you don't specify a value for <code>Attributes</code> or if you specify <code>[\"DEFAULT\"]</code>, the API returns the following subset of facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>, <code>Quality</code> and <code>Landmarks</code>. If you provide <code>[\"ALL\"]</code>, all facial attributes are returned but the operation will take longer to complete.</p> <p>If you provide both, <code>[\"ALL\", \"DEFAULT\"]</code>, the service uses a logical AND operator to determine which attributes to return (in this case, all attributes). </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setAttributes(java.util.Collection)} or {@link #withAttributes(java.util.Collection)} if you want to override the existing values.</p>\n@param attributes An array of facial attributes you want to be returned. This can be the default list of attributes or all attributes. If you don't specify a value for <code>Attributes</code> or if you specify <code>[\"DEFAULT\"]</code>, the API returns the following subset of facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>, <code>Quality</code> and <code>Landmarks</code>. If you provide <code>[\"ALL\"]</code>, all facial attributes are returned but the operation will take longer to complete.</p> <p>If you provide both, <code>[\"ALL\", \"DEFAULT\"]</code>, the service uses a logical AND operator to determine which attributes to return (in this case, all attributes).\n@return Returns a reference to this object so that method calls can be chained together.\n@see Attribute*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "attributes",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>An array of facial attributes you want to be returned. This can be the default list of attributes or all attributes. If you don't specify a value for <code>Attributes</code> or if you specify <code>[\"DEFAULT\"]</code>, the API returns the following subset of facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>, <code>Quality</code> and <code>Landmarks</code>. If you provide <code>[\"ALL\"]</code>, all facial attributes are returned but the operation will take longer to complete.</p> <p>If you provide both, <code>[\"ALL\", \"DEFAULT\"]</code>, the service uses a logical AND operator to determine which attributes to return (in this case, all attributes). </p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        },
        "Image" : {
          "c2jName" : "Image",
          "c2jShape" : "Image",
          "deprecated" : false,
          "documentation" : "<p>The image in which you want to detect faces. You can specify a blob or an S3 object. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The image in which you want to detect faces. You can specify a blob or an S3 object. </p>\n@param image The image in which you want to detect faces. You can specify a blob or an S3 object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withImage",
          "getterDocumentation" : "/**<p>The image in which you want to detect faces. You can specify a blob or an S3 object. </p>\n@return The image in which you want to detect faces. You can specify a blob or an S3 object.*/",
          "getterMethodName" : "getImage",
          "getterModel" : {
            "returnType" : "Image",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Image",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Image",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Image",
          "setterDocumentation" : "/**<p>The image in which you want to detect faces. You can specify a blob or an S3 object. </p>\n@param image The image in which you want to detect faces. You can specify a blob or an S3 object.*/",
          "setterMethodName" : "setImage",
          "setterModel" : {
            "variableDeclarationType" : "Image",
            "variableName" : "image",
            "variableType" : "Image",
            "documentation" : "",
            "simpleType" : "Image",
            "variableSetterType" : "Image"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The image in which you want to detect faces. You can specify a blob or an S3 object. </p>\n@param image The image in which you want to detect faces. You can specify a blob or an S3 object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Image",
            "variableName" : "image",
            "variableType" : "Image",
            "documentation" : "<p>The image in which you want to detect faces. You can specify a blob or an S3 object. </p>",
            "simpleType" : "Image",
            "variableSetterType" : "Image"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Image" ],
      "shapeName" : "DetectFacesRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "DetectFacesRequest",
        "variableName" : "detectFacesRequest",
        "variableType" : "DetectFacesRequest",
        "documentation" : null,
        "simpleType" : "DetectFacesRequest",
        "variableSetterType" : "DetectFacesRequest"
      },
      "wrapper" : false
    },
    "DetectFacesResult" : {
      "c2jName" : "DetectFacesResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "FaceDetails",
        "c2jShape" : "FaceDetailList",
        "deprecated" : false,
        "documentation" : "<p>Details of each face found in the image. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Details of each face found in the image. </p>\n@param faceDetails Details of each face found in the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFaceDetails",
        "getterDocumentation" : "/**<p>Details of each face found in the image. </p>\n@return Details of each face found in the image.*/",
        "getterMethodName" : "getFaceDetails",
        "getterModel" : {
          "returnType" : "java.util.List<FaceDetail>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "FaceDetails",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "FaceDetails",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "FaceDetail",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "FaceDetail",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "FaceDetail",
              "variableName" : "member",
              "variableType" : "FaceDetail",
              "documentation" : "",
              "simpleType" : "FaceDetail",
              "variableSetterType" : "FaceDetail"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "FaceDetail",
              "variableName" : "member",
              "variableType" : "FaceDetail",
              "documentation" : "",
              "simpleType" : "FaceDetail",
              "variableSetterType" : "FaceDetail"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "FaceDetail",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "FaceDetail",
          "templateImplType" : "java.util.ArrayList<FaceDetail>",
          "templateType" : "java.util.List<FaceDetail>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "FaceDetails",
        "setterDocumentation" : "/**<p>Details of each face found in the image. </p>\n@param faceDetails Details of each face found in the image.*/",
        "setterMethodName" : "setFaceDetails",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<FaceDetail>",
          "variableName" : "faceDetails",
          "variableType" : "java.util.List<FaceDetail>",
          "documentation" : "",
          "simpleType" : "List<FaceDetail>",
          "variableSetterType" : "java.util.Collection<FaceDetail>"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Details of each face found in the image. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFaceDetails(java.util.Collection)} or {@link #withFaceDetails(java.util.Collection)} if you want to override the existing values.</p>\n@param faceDetails Details of each face found in the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<FaceDetail>",
          "variableName" : "faceDetails",
          "variableType" : "java.util.List<FaceDetail>",
          "documentation" : "<p>Details of each face found in the image. </p>",
          "simpleType" : "List<FaceDetail>",
          "variableSetterType" : "java.util.Collection<FaceDetail>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "OrientationCorrection",
        "c2jShape" : "OrientationCorrection",
        "deprecated" : false,
        "documentation" : "<p> The orientation of the input image (counter-clockwise direction). If your application displays the image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>FaceDetails</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If so, and the Exif metadata for the input image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>FaceDetails</code> bounding box coordinates represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata.</p> </note>",
        "enumType" : "OrientationCorrection",
        "fluentSetterDocumentation" : "/**<p> The orientation of the input image (counter-clockwise direction). If your application displays the image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>FaceDetails</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If so, and the Exif metadata for the input image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>FaceDetails</code> bounding box coordinates represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata.</p> </note>\n@param orientationCorrection The orientation of the input image (counter-clockwise direction). If your application displays the image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>FaceDetails</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If so, and the Exif metadata for the input image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>FaceDetails</code> bounding box coordinates represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata.</p>\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrientationCorrection*/",
        "fluentSetterMethodName" : "withOrientationCorrection",
        "getterDocumentation" : "/**<p> The orientation of the input image (counter-clockwise direction). If your application displays the image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>FaceDetails</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If so, and the Exif metadata for the input image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>FaceDetails</code> bounding box coordinates represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata.</p> </note>\n@return The orientation of the input image (counter-clockwise direction). If your application displays the image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>FaceDetails</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If so, and the Exif metadata for the input image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>FaceDetails</code> bounding box coordinates represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata.</p>\n@see OrientationCorrection*/",
        "getterMethodName" : "getOrientationCorrection",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "OrientationCorrection",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "OrientationCorrection",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "OrientationCorrection",
        "setterDocumentation" : "/**<p> The orientation of the input image (counter-clockwise direction). If your application displays the image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>FaceDetails</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If so, and the Exif metadata for the input image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>FaceDetails</code> bounding box coordinates represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata.</p> </note>\n@param orientationCorrection The orientation of the input image (counter-clockwise direction). If your application displays the image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>FaceDetails</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If so, and the Exif metadata for the input image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>FaceDetails</code> bounding box coordinates represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata.</p>\n@see OrientationCorrection*/",
        "setterMethodName" : "setOrientationCorrection",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "orientationCorrection",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The orientation of the input image (counter-clockwise direction). If your application displays the image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>FaceDetails</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If so, and the Exif metadata for the input image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>FaceDetails</code> bounding box coordinates represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata.</p> </note>\n@param orientationCorrection The orientation of the input image (counter-clockwise direction). If your application displays the image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>FaceDetails</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If so, and the Exif metadata for the input image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>FaceDetails</code> bounding box coordinates represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata.</p>\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrientationCorrection*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "orientationCorrection",
          "variableType" : "String",
          "documentation" : "<p> The orientation of the input image (counter-clockwise direction). If your application displays the image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>FaceDetails</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If so, and the Exif metadata for the input image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>FaceDetails</code> bounding box coordinates represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata.</p> </note>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "FaceDetails" : {
          "c2jName" : "FaceDetails",
          "c2jShape" : "FaceDetailList",
          "deprecated" : false,
          "documentation" : "<p>Details of each face found in the image. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Details of each face found in the image. </p>\n@param faceDetails Details of each face found in the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFaceDetails",
          "getterDocumentation" : "/**<p>Details of each face found in the image. </p>\n@return Details of each face found in the image.*/",
          "getterMethodName" : "getFaceDetails",
          "getterModel" : {
            "returnType" : "java.util.List<FaceDetail>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "FaceDetails",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "FaceDetails",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "FaceDetail",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "FaceDetail",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "FaceDetail",
                "variableName" : "member",
                "variableType" : "FaceDetail",
                "documentation" : "",
                "simpleType" : "FaceDetail",
                "variableSetterType" : "FaceDetail"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "FaceDetail",
                "variableName" : "member",
                "variableType" : "FaceDetail",
                "documentation" : "",
                "simpleType" : "FaceDetail",
                "variableSetterType" : "FaceDetail"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "FaceDetail",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "FaceDetail",
            "templateImplType" : "java.util.ArrayList<FaceDetail>",
            "templateType" : "java.util.List<FaceDetail>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "FaceDetails",
          "setterDocumentation" : "/**<p>Details of each face found in the image. </p>\n@param faceDetails Details of each face found in the image.*/",
          "setterMethodName" : "setFaceDetails",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<FaceDetail>",
            "variableName" : "faceDetails",
            "variableType" : "java.util.List<FaceDetail>",
            "documentation" : "",
            "simpleType" : "List<FaceDetail>",
            "variableSetterType" : "java.util.Collection<FaceDetail>"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Details of each face found in the image. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFaceDetails(java.util.Collection)} or {@link #withFaceDetails(java.util.Collection)} if you want to override the existing values.</p>\n@param faceDetails Details of each face found in the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<FaceDetail>",
            "variableName" : "faceDetails",
            "variableType" : "java.util.List<FaceDetail>",
            "documentation" : "<p>Details of each face found in the image. </p>",
            "simpleType" : "List<FaceDetail>",
            "variableSetterType" : "java.util.Collection<FaceDetail>"
          },
          "xmlNameSpaceUri" : null
        },
        "OrientationCorrection" : {
          "c2jName" : "OrientationCorrection",
          "c2jShape" : "OrientationCorrection",
          "deprecated" : false,
          "documentation" : "<p> The orientation of the input image (counter-clockwise direction). If your application displays the image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>FaceDetails</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If so, and the Exif metadata for the input image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>FaceDetails</code> bounding box coordinates represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata.</p> </note>",
          "enumType" : "OrientationCorrection",
          "fluentSetterDocumentation" : "/**<p> The orientation of the input image (counter-clockwise direction). If your application displays the image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>FaceDetails</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If so, and the Exif metadata for the input image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>FaceDetails</code> bounding box coordinates represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata.</p> </note>\n@param orientationCorrection The orientation of the input image (counter-clockwise direction). If your application displays the image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>FaceDetails</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If so, and the Exif metadata for the input image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>FaceDetails</code> bounding box coordinates represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata.</p>\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrientationCorrection*/",
          "fluentSetterMethodName" : "withOrientationCorrection",
          "getterDocumentation" : "/**<p> The orientation of the input image (counter-clockwise direction). If your application displays the image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>FaceDetails</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If so, and the Exif metadata for the input image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>FaceDetails</code> bounding box coordinates represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata.</p> </note>\n@return The orientation of the input image (counter-clockwise direction). If your application displays the image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>FaceDetails</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If so, and the Exif metadata for the input image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>FaceDetails</code> bounding box coordinates represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata.</p>\n@see OrientationCorrection*/",
          "getterMethodName" : "getOrientationCorrection",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "OrientationCorrection",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "OrientationCorrection",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "OrientationCorrection",
          "setterDocumentation" : "/**<p> The orientation of the input image (counter-clockwise direction). If your application displays the image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>FaceDetails</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If so, and the Exif metadata for the input image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>FaceDetails</code> bounding box coordinates represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata.</p> </note>\n@param orientationCorrection The orientation of the input image (counter-clockwise direction). If your application displays the image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>FaceDetails</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If so, and the Exif metadata for the input image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>FaceDetails</code> bounding box coordinates represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata.</p>\n@see OrientationCorrection*/",
          "setterMethodName" : "setOrientationCorrection",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "orientationCorrection",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The orientation of the input image (counter-clockwise direction). If your application displays the image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>FaceDetails</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If so, and the Exif metadata for the input image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>FaceDetails</code> bounding box coordinates represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata.</p> </note>\n@param orientationCorrection The orientation of the input image (counter-clockwise direction). If your application displays the image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>FaceDetails</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If so, and the Exif metadata for the input image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>FaceDetails</code> bounding box coordinates represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata.</p>\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrientationCorrection*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "orientationCorrection",
            "variableType" : "String",
            "documentation" : "<p> The orientation of the input image (counter-clockwise direction). If your application displays the image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>FaceDetails</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If so, and the Exif metadata for the input image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>FaceDetails</code> bounding box coordinates represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata.</p> </note>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DetectFacesResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "DetectFacesResult",
        "variableName" : "detectFacesResult",
        "variableType" : "DetectFacesResult",
        "documentation" : null,
        "simpleType" : "DetectFacesResult",
        "variableSetterType" : "DetectFacesResult"
      },
      "wrapper" : false
    },
    "DetectLabelsRequest" : {
      "c2jName" : "DetectLabelsRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DetectLabels",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "RekognitionService.DetectLabels",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "Image",
        "c2jShape" : "Image",
        "deprecated" : false,
        "documentation" : "<p>The input image. You can provide a blob of image bytes or an S3 object.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The input image. You can provide a blob of image bytes or an S3 object.</p>\n@param image The input image. You can provide a blob of image bytes or an S3 object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withImage",
        "getterDocumentation" : "/**<p>The input image. You can provide a blob of image bytes or an S3 object.</p>\n@return The input image. You can provide a blob of image bytes or an S3 object.*/",
        "getterMethodName" : "getImage",
        "getterModel" : {
          "returnType" : "Image",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Image",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Image",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Image",
        "setterDocumentation" : "/**<p>The input image. You can provide a blob of image bytes or an S3 object.</p>\n@param image The input image. You can provide a blob of image bytes or an S3 object.*/",
        "setterMethodName" : "setImage",
        "setterModel" : {
          "variableDeclarationType" : "Image",
          "variableName" : "image",
          "variableType" : "Image",
          "documentation" : "",
          "simpleType" : "Image",
          "variableSetterType" : "Image"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The input image. You can provide a blob of image bytes or an S3 object.</p>\n@param image The input image. You can provide a blob of image bytes or an S3 object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Image",
          "variableName" : "image",
          "variableType" : "Image",
          "documentation" : "<p>The input image. You can provide a blob of image bytes or an S3 object.</p>",
          "simpleType" : "Image",
          "variableSetterType" : "Image"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MaxLabels",
        "c2jShape" : "UInteger",
        "deprecated" : false,
        "documentation" : "<p>Maximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Maximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels. </p>\n@param maxLabels Maximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxLabels",
        "getterDocumentation" : "/**<p>Maximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels. </p>\n@return Maximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels.*/",
        "getterMethodName" : "getMaxLabels",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MaxLabels",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxLabels",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxLabels",
        "setterDocumentation" : "/**<p>Maximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels. </p>\n@param maxLabels Maximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels.*/",
        "setterMethodName" : "setMaxLabels",
        "setterModel" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxLabels",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Maximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels. </p>\n@param maxLabels Maximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxLabels",
          "variableType" : "Integer",
          "documentation" : "<p>Maximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels. </p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MinConfidence",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with confidence lower than this specified value.</p> <p>If <code>MinConfidence</code> is not specified, the operation returns labels with a confidence values greater than or equal to 50 percent.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with confidence lower than this specified value.</p> <p>If <code>MinConfidence</code> is not specified, the operation returns labels with a confidence values greater than or equal to 50 percent.</p>\n@param minConfidence Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with confidence lower than this specified value.</p> <p>If <code>MinConfidence</code> is not specified, the operation returns labels with a confidence values greater than or equal to 50 percent.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMinConfidence",
        "getterDocumentation" : "/**<p>Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with confidence lower than this specified value.</p> <p>If <code>MinConfidence</code> is not specified, the operation returns labels with a confidence values greater than or equal to 50 percent.</p>\n@return Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with confidence lower than this specified value.</p> <p>If <code>MinConfidence</code> is not specified, the operation returns labels with a confidence values greater than or equal to 50 percent.*/",
        "getterMethodName" : "getMinConfidence",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MinConfidence",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MinConfidence",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Float",
        "marshallingType" : "FLOAT",
        "name" : "MinConfidence",
        "setterDocumentation" : "/**<p>Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with confidence lower than this specified value.</p> <p>If <code>MinConfidence</code> is not specified, the operation returns labels with a confidence values greater than or equal to 50 percent.</p>\n@param minConfidence Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with confidence lower than this specified value.</p> <p>If <code>MinConfidence</code> is not specified, the operation returns labels with a confidence values greater than or equal to 50 percent.*/",
        "setterMethodName" : "setMinConfidence",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "minConfidence",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with confidence lower than this specified value.</p> <p>If <code>MinConfidence</code> is not specified, the operation returns labels with a confidence values greater than or equal to 50 percent.</p>\n@param minConfidence Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with confidence lower than this specified value.</p> <p>If <code>MinConfidence</code> is not specified, the operation returns labels with a confidence values greater than or equal to 50 percent.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "minConfidence",
          "variableType" : "Float",
          "documentation" : "<p>Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with confidence lower than this specified value.</p> <p>If <code>MinConfidence</code> is not specified, the operation returns labels with a confidence values greater than or equal to 50 percent.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Image" : {
          "c2jName" : "Image",
          "c2jShape" : "Image",
          "deprecated" : false,
          "documentation" : "<p>The input image. You can provide a blob of image bytes or an S3 object.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The input image. You can provide a blob of image bytes or an S3 object.</p>\n@param image The input image. You can provide a blob of image bytes or an S3 object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withImage",
          "getterDocumentation" : "/**<p>The input image. You can provide a blob of image bytes or an S3 object.</p>\n@return The input image. You can provide a blob of image bytes or an S3 object.*/",
          "getterMethodName" : "getImage",
          "getterModel" : {
            "returnType" : "Image",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Image",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Image",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Image",
          "setterDocumentation" : "/**<p>The input image. You can provide a blob of image bytes or an S3 object.</p>\n@param image The input image. You can provide a blob of image bytes or an S3 object.*/",
          "setterMethodName" : "setImage",
          "setterModel" : {
            "variableDeclarationType" : "Image",
            "variableName" : "image",
            "variableType" : "Image",
            "documentation" : "",
            "simpleType" : "Image",
            "variableSetterType" : "Image"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The input image. You can provide a blob of image bytes or an S3 object.</p>\n@param image The input image. You can provide a blob of image bytes or an S3 object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Image",
            "variableName" : "image",
            "variableType" : "Image",
            "documentation" : "<p>The input image. You can provide a blob of image bytes or an S3 object.</p>",
            "simpleType" : "Image",
            "variableSetterType" : "Image"
          },
          "xmlNameSpaceUri" : null
        },
        "MaxLabels" : {
          "c2jName" : "MaxLabels",
          "c2jShape" : "UInteger",
          "deprecated" : false,
          "documentation" : "<p>Maximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Maximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels. </p>\n@param maxLabels Maximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxLabels",
          "getterDocumentation" : "/**<p>Maximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels. </p>\n@return Maximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels.*/",
          "getterMethodName" : "getMaxLabels",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MaxLabels",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxLabels",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxLabels",
          "setterDocumentation" : "/**<p>Maximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels. </p>\n@param maxLabels Maximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels.*/",
          "setterMethodName" : "setMaxLabels",
          "setterModel" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxLabels",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Maximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels. </p>\n@param maxLabels Maximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxLabels",
            "variableType" : "Integer",
            "documentation" : "<p>Maximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels. </p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "MinConfidence" : {
          "c2jName" : "MinConfidence",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with confidence lower than this specified value.</p> <p>If <code>MinConfidence</code> is not specified, the operation returns labels with a confidence values greater than or equal to 50 percent.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with confidence lower than this specified value.</p> <p>If <code>MinConfidence</code> is not specified, the operation returns labels with a confidence values greater than or equal to 50 percent.</p>\n@param minConfidence Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with confidence lower than this specified value.</p> <p>If <code>MinConfidence</code> is not specified, the operation returns labels with a confidence values greater than or equal to 50 percent.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMinConfidence",
          "getterDocumentation" : "/**<p>Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with confidence lower than this specified value.</p> <p>If <code>MinConfidence</code> is not specified, the operation returns labels with a confidence values greater than or equal to 50 percent.</p>\n@return Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with confidence lower than this specified value.</p> <p>If <code>MinConfidence</code> is not specified, the operation returns labels with a confidence values greater than or equal to 50 percent.*/",
          "getterMethodName" : "getMinConfidence",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MinConfidence",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MinConfidence",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Float",
          "marshallingType" : "FLOAT",
          "name" : "MinConfidence",
          "setterDocumentation" : "/**<p>Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with confidence lower than this specified value.</p> <p>If <code>MinConfidence</code> is not specified, the operation returns labels with a confidence values greater than or equal to 50 percent.</p>\n@param minConfidence Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with confidence lower than this specified value.</p> <p>If <code>MinConfidence</code> is not specified, the operation returns labels with a confidence values greater than or equal to 50 percent.*/",
          "setterMethodName" : "setMinConfidence",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "minConfidence",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with confidence lower than this specified value.</p> <p>If <code>MinConfidence</code> is not specified, the operation returns labels with a confidence values greater than or equal to 50 percent.</p>\n@param minConfidence Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with confidence lower than this specified value.</p> <p>If <code>MinConfidence</code> is not specified, the operation returns labels with a confidence values greater than or equal to 50 percent.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "minConfidence",
            "variableType" : "Float",
            "documentation" : "<p>Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with confidence lower than this specified value.</p> <p>If <code>MinConfidence</code> is not specified, the operation returns labels with a confidence values greater than or equal to 50 percent.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Image" ],
      "shapeName" : "DetectLabelsRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "DetectLabelsRequest",
        "variableName" : "detectLabelsRequest",
        "variableType" : "DetectLabelsRequest",
        "documentation" : null,
        "simpleType" : "DetectLabelsRequest",
        "variableSetterType" : "DetectLabelsRequest"
      },
      "wrapper" : false
    },
    "DetectLabelsResult" : {
      "c2jName" : "DetectLabelsResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Labels",
        "c2jShape" : "Labels",
        "deprecated" : false,
        "documentation" : "<p>An array of labels for the real-world objects detected. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An array of labels for the real-world objects detected. </p>\n@param labels An array of labels for the real-world objects detected.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLabels",
        "getterDocumentation" : "/**<p>An array of labels for the real-world objects detected. </p>\n@return An array of labels for the real-world objects detected.*/",
        "getterMethodName" : "getLabels",
        "getterModel" : {
          "returnType" : "java.util.List<Label>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Labels",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Labels",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Label",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Label",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "Label",
              "variableName" : "member",
              "variableType" : "Label",
              "documentation" : "",
              "simpleType" : "Label",
              "variableSetterType" : "Label"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "Label",
              "variableName" : "member",
              "variableType" : "Label",
              "documentation" : "",
              "simpleType" : "Label",
              "variableSetterType" : "Label"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Label",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Label",
          "templateImplType" : "java.util.ArrayList<Label>",
          "templateType" : "java.util.List<Label>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Labels",
        "setterDocumentation" : "/**<p>An array of labels for the real-world objects detected. </p>\n@param labels An array of labels for the real-world objects detected.*/",
        "setterMethodName" : "setLabels",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<Label>",
          "variableName" : "labels",
          "variableType" : "java.util.List<Label>",
          "documentation" : "",
          "simpleType" : "List<Label>",
          "variableSetterType" : "java.util.Collection<Label>"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An array of labels for the real-world objects detected. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLabels(java.util.Collection)} or {@link #withLabels(java.util.Collection)} if you want to override the existing values.</p>\n@param labels An array of labels for the real-world objects detected.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<Label>",
          "variableName" : "labels",
          "variableType" : "java.util.List<Label>",
          "documentation" : "<p>An array of labels for the real-world objects detected. </p>",
          "simpleType" : "List<Label>",
          "variableSetterType" : "java.util.Collection<Label>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "OrientationCorrection",
        "c2jShape" : "OrientationCorrection",
        "deprecated" : false,
        "documentation" : "<p> The orientation of the input image (counter-clockwise direction). If your application displays the image, you can use this value to correct the orientation. If Amazon Rekognition detects that the input image was rotated (for example, by 90 degrees), it first corrects the orientation before detecting the labels. </p> <note> <p>If the input image Exif metadata populates the orientation field, Amazon Rekognition does not perform orientation correction and the value of OrientationCorrection will be null.</p> </note>",
        "enumType" : "OrientationCorrection",
        "fluentSetterDocumentation" : "/**<p> The orientation of the input image (counter-clockwise direction). If your application displays the image, you can use this value to correct the orientation. If Amazon Rekognition detects that the input image was rotated (for example, by 90 degrees), it first corrects the orientation before detecting the labels. </p> <note> <p>If the input image Exif metadata populates the orientation field, Amazon Rekognition does not perform orientation correction and the value of OrientationCorrection will be null.</p> </note>\n@param orientationCorrection The orientation of the input image (counter-clockwise direction). If your application displays the image, you can use this value to correct the orientation. If Amazon Rekognition detects that the input image was rotated (for example, by 90 degrees), it first corrects the orientation before detecting the labels. </p> <note> <p>If the input image Exif metadata populates the orientation field, Amazon Rekognition does not perform orientation correction and the value of OrientationCorrection will be null.</p>\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrientationCorrection*/",
        "fluentSetterMethodName" : "withOrientationCorrection",
        "getterDocumentation" : "/**<p> The orientation of the input image (counter-clockwise direction). If your application displays the image, you can use this value to correct the orientation. If Amazon Rekognition detects that the input image was rotated (for example, by 90 degrees), it first corrects the orientation before detecting the labels. </p> <note> <p>If the input image Exif metadata populates the orientation field, Amazon Rekognition does not perform orientation correction and the value of OrientationCorrection will be null.</p> </note>\n@return The orientation of the input image (counter-clockwise direction). If your application displays the image, you can use this value to correct the orientation. If Amazon Rekognition detects that the input image was rotated (for example, by 90 degrees), it first corrects the orientation before detecting the labels. </p> <note> <p>If the input image Exif metadata populates the orientation field, Amazon Rekognition does not perform orientation correction and the value of OrientationCorrection will be null.</p>\n@see OrientationCorrection*/",
        "getterMethodName" : "getOrientationCorrection",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "OrientationCorrection",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "OrientationCorrection",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "OrientationCorrection",
        "setterDocumentation" : "/**<p> The orientation of the input image (counter-clockwise direction). If your application displays the image, you can use this value to correct the orientation. If Amazon Rekognition detects that the input image was rotated (for example, by 90 degrees), it first corrects the orientation before detecting the labels. </p> <note> <p>If the input image Exif metadata populates the orientation field, Amazon Rekognition does not perform orientation correction and the value of OrientationCorrection will be null.</p> </note>\n@param orientationCorrection The orientation of the input image (counter-clockwise direction). If your application displays the image, you can use this value to correct the orientation. If Amazon Rekognition detects that the input image was rotated (for example, by 90 degrees), it first corrects the orientation before detecting the labels. </p> <note> <p>If the input image Exif metadata populates the orientation field, Amazon Rekognition does not perform orientation correction and the value of OrientationCorrection will be null.</p>\n@see OrientationCorrection*/",
        "setterMethodName" : "setOrientationCorrection",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "orientationCorrection",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The orientation of the input image (counter-clockwise direction). If your application displays the image, you can use this value to correct the orientation. If Amazon Rekognition detects that the input image was rotated (for example, by 90 degrees), it first corrects the orientation before detecting the labels. </p> <note> <p>If the input image Exif metadata populates the orientation field, Amazon Rekognition does not perform orientation correction and the value of OrientationCorrection will be null.</p> </note>\n@param orientationCorrection The orientation of the input image (counter-clockwise direction). If your application displays the image, you can use this value to correct the orientation. If Amazon Rekognition detects that the input image was rotated (for example, by 90 degrees), it first corrects the orientation before detecting the labels. </p> <note> <p>If the input image Exif metadata populates the orientation field, Amazon Rekognition does not perform orientation correction and the value of OrientationCorrection will be null.</p>\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrientationCorrection*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "orientationCorrection",
          "variableType" : "String",
          "documentation" : "<p> The orientation of the input image (counter-clockwise direction). If your application displays the image, you can use this value to correct the orientation. If Amazon Rekognition detects that the input image was rotated (for example, by 90 degrees), it first corrects the orientation before detecting the labels. </p> <note> <p>If the input image Exif metadata populates the orientation field, Amazon Rekognition does not perform orientation correction and the value of OrientationCorrection will be null.</p> </note>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Labels" : {
          "c2jName" : "Labels",
          "c2jShape" : "Labels",
          "deprecated" : false,
          "documentation" : "<p>An array of labels for the real-world objects detected. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An array of labels for the real-world objects detected. </p>\n@param labels An array of labels for the real-world objects detected.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLabels",
          "getterDocumentation" : "/**<p>An array of labels for the real-world objects detected. </p>\n@return An array of labels for the real-world objects detected.*/",
          "getterMethodName" : "getLabels",
          "getterModel" : {
            "returnType" : "java.util.List<Label>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Labels",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Labels",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Label",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Label",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "Label",
                "variableName" : "member",
                "variableType" : "Label",
                "documentation" : "",
                "simpleType" : "Label",
                "variableSetterType" : "Label"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "Label",
                "variableName" : "member",
                "variableType" : "Label",
                "documentation" : "",
                "simpleType" : "Label",
                "variableSetterType" : "Label"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Label",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Label",
            "templateImplType" : "java.util.ArrayList<Label>",
            "templateType" : "java.util.List<Label>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Labels",
          "setterDocumentation" : "/**<p>An array of labels for the real-world objects detected. </p>\n@param labels An array of labels for the real-world objects detected.*/",
          "setterMethodName" : "setLabels",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<Label>",
            "variableName" : "labels",
            "variableType" : "java.util.List<Label>",
            "documentation" : "",
            "simpleType" : "List<Label>",
            "variableSetterType" : "java.util.Collection<Label>"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An array of labels for the real-world objects detected. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLabels(java.util.Collection)} or {@link #withLabels(java.util.Collection)} if you want to override the existing values.</p>\n@param labels An array of labels for the real-world objects detected.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<Label>",
            "variableName" : "labels",
            "variableType" : "java.util.List<Label>",
            "documentation" : "<p>An array of labels for the real-world objects detected. </p>",
            "simpleType" : "List<Label>",
            "variableSetterType" : "java.util.Collection<Label>"
          },
          "xmlNameSpaceUri" : null
        },
        "OrientationCorrection" : {
          "c2jName" : "OrientationCorrection",
          "c2jShape" : "OrientationCorrection",
          "deprecated" : false,
          "documentation" : "<p> The orientation of the input image (counter-clockwise direction). If your application displays the image, you can use this value to correct the orientation. If Amazon Rekognition detects that the input image was rotated (for example, by 90 degrees), it first corrects the orientation before detecting the labels. </p> <note> <p>If the input image Exif metadata populates the orientation field, Amazon Rekognition does not perform orientation correction and the value of OrientationCorrection will be null.</p> </note>",
          "enumType" : "OrientationCorrection",
          "fluentSetterDocumentation" : "/**<p> The orientation of the input image (counter-clockwise direction). If your application displays the image, you can use this value to correct the orientation. If Amazon Rekognition detects that the input image was rotated (for example, by 90 degrees), it first corrects the orientation before detecting the labels. </p> <note> <p>If the input image Exif metadata populates the orientation field, Amazon Rekognition does not perform orientation correction and the value of OrientationCorrection will be null.</p> </note>\n@param orientationCorrection The orientation of the input image (counter-clockwise direction). If your application displays the image, you can use this value to correct the orientation. If Amazon Rekognition detects that the input image was rotated (for example, by 90 degrees), it first corrects the orientation before detecting the labels. </p> <note> <p>If the input image Exif metadata populates the orientation field, Amazon Rekognition does not perform orientation correction and the value of OrientationCorrection will be null.</p>\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrientationCorrection*/",
          "fluentSetterMethodName" : "withOrientationCorrection",
          "getterDocumentation" : "/**<p> The orientation of the input image (counter-clockwise direction). If your application displays the image, you can use this value to correct the orientation. If Amazon Rekognition detects that the input image was rotated (for example, by 90 degrees), it first corrects the orientation before detecting the labels. </p> <note> <p>If the input image Exif metadata populates the orientation field, Amazon Rekognition does not perform orientation correction and the value of OrientationCorrection will be null.</p> </note>\n@return The orientation of the input image (counter-clockwise direction). If your application displays the image, you can use this value to correct the orientation. If Amazon Rekognition detects that the input image was rotated (for example, by 90 degrees), it first corrects the orientation before detecting the labels. </p> <note> <p>If the input image Exif metadata populates the orientation field, Amazon Rekognition does not perform orientation correction and the value of OrientationCorrection will be null.</p>\n@see OrientationCorrection*/",
          "getterMethodName" : "getOrientationCorrection",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "OrientationCorrection",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "OrientationCorrection",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "OrientationCorrection",
          "setterDocumentation" : "/**<p> The orientation of the input image (counter-clockwise direction). If your application displays the image, you can use this value to correct the orientation. If Amazon Rekognition detects that the input image was rotated (for example, by 90 degrees), it first corrects the orientation before detecting the labels. </p> <note> <p>If the input image Exif metadata populates the orientation field, Amazon Rekognition does not perform orientation correction and the value of OrientationCorrection will be null.</p> </note>\n@param orientationCorrection The orientation of the input image (counter-clockwise direction). If your application displays the image, you can use this value to correct the orientation. If Amazon Rekognition detects that the input image was rotated (for example, by 90 degrees), it first corrects the orientation before detecting the labels. </p> <note> <p>If the input image Exif metadata populates the orientation field, Amazon Rekognition does not perform orientation correction and the value of OrientationCorrection will be null.</p>\n@see OrientationCorrection*/",
          "setterMethodName" : "setOrientationCorrection",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "orientationCorrection",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The orientation of the input image (counter-clockwise direction). If your application displays the image, you can use this value to correct the orientation. If Amazon Rekognition detects that the input image was rotated (for example, by 90 degrees), it first corrects the orientation before detecting the labels. </p> <note> <p>If the input image Exif metadata populates the orientation field, Amazon Rekognition does not perform orientation correction and the value of OrientationCorrection will be null.</p> </note>\n@param orientationCorrection The orientation of the input image (counter-clockwise direction). If your application displays the image, you can use this value to correct the orientation. If Amazon Rekognition detects that the input image was rotated (for example, by 90 degrees), it first corrects the orientation before detecting the labels. </p> <note> <p>If the input image Exif metadata populates the orientation field, Amazon Rekognition does not perform orientation correction and the value of OrientationCorrection will be null.</p>\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrientationCorrection*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "orientationCorrection",
            "variableType" : "String",
            "documentation" : "<p> The orientation of the input image (counter-clockwise direction). If your application displays the image, you can use this value to correct the orientation. If Amazon Rekognition detects that the input image was rotated (for example, by 90 degrees), it first corrects the orientation before detecting the labels. </p> <note> <p>If the input image Exif metadata populates the orientation field, Amazon Rekognition does not perform orientation correction and the value of OrientationCorrection will be null.</p> </note>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DetectLabelsResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "DetectLabelsResult",
        "variableName" : "detectLabelsResult",
        "variableType" : "DetectLabelsResult",
        "documentation" : null,
        "simpleType" : "DetectLabelsResult",
        "variableSetterType" : "DetectLabelsResult"
      },
      "wrapper" : false
    },
    "DetectModerationLabelsRequest" : {
      "c2jName" : "DetectModerationLabelsRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DetectModerationLabels",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "RekognitionService.DetectModerationLabels",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "Image",
        "c2jShape" : "Image",
        "deprecated" : false,
        "documentation" : "<p>The input image as bytes or an S3 object.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The input image as bytes or an S3 object.</p>\n@param image The input image as bytes or an S3 object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withImage",
        "getterDocumentation" : "/**<p>The input image as bytes or an S3 object.</p>\n@return The input image as bytes or an S3 object.*/",
        "getterMethodName" : "getImage",
        "getterModel" : {
          "returnType" : "Image",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Image",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Image",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Image",
        "setterDocumentation" : "/**<p>The input image as bytes or an S3 object.</p>\n@param image The input image as bytes or an S3 object.*/",
        "setterMethodName" : "setImage",
        "setterModel" : {
          "variableDeclarationType" : "Image",
          "variableName" : "image",
          "variableType" : "Image",
          "documentation" : "",
          "simpleType" : "Image",
          "variableSetterType" : "Image"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The input image as bytes or an S3 object.</p>\n@param image The input image as bytes or an S3 object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Image",
          "variableName" : "image",
          "variableType" : "Image",
          "documentation" : "<p>The input image as bytes or an S3 object.</p>",
          "simpleType" : "Image",
          "variableSetterType" : "Image"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MinConfidence",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with a confidence level lower than this specified value.</p> <p>If you don't specify <code>MinConfidence</code>, the operation returns labels with confidence values greater than or equal to 50 percent.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with a confidence level lower than this specified value.</p> <p>If you don't specify <code>MinConfidence</code>, the operation returns labels with confidence values greater than or equal to 50 percent.</p>\n@param minConfidence Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with a confidence level lower than this specified value.</p> <p>If you don't specify <code>MinConfidence</code>, the operation returns labels with confidence values greater than or equal to 50 percent.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMinConfidence",
        "getterDocumentation" : "/**<p>Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with a confidence level lower than this specified value.</p> <p>If you don't specify <code>MinConfidence</code>, the operation returns labels with confidence values greater than or equal to 50 percent.</p>\n@return Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with a confidence level lower than this specified value.</p> <p>If you don't specify <code>MinConfidence</code>, the operation returns labels with confidence values greater than or equal to 50 percent.*/",
        "getterMethodName" : "getMinConfidence",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MinConfidence",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MinConfidence",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Float",
        "marshallingType" : "FLOAT",
        "name" : "MinConfidence",
        "setterDocumentation" : "/**<p>Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with a confidence level lower than this specified value.</p> <p>If you don't specify <code>MinConfidence</code>, the operation returns labels with confidence values greater than or equal to 50 percent.</p>\n@param minConfidence Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with a confidence level lower than this specified value.</p> <p>If you don't specify <code>MinConfidence</code>, the operation returns labels with confidence values greater than or equal to 50 percent.*/",
        "setterMethodName" : "setMinConfidence",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "minConfidence",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with a confidence level lower than this specified value.</p> <p>If you don't specify <code>MinConfidence</code>, the operation returns labels with confidence values greater than or equal to 50 percent.</p>\n@param minConfidence Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with a confidence level lower than this specified value.</p> <p>If you don't specify <code>MinConfidence</code>, the operation returns labels with confidence values greater than or equal to 50 percent.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "minConfidence",
          "variableType" : "Float",
          "documentation" : "<p>Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with a confidence level lower than this specified value.</p> <p>If you don't specify <code>MinConfidence</code>, the operation returns labels with confidence values greater than or equal to 50 percent.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Image" : {
          "c2jName" : "Image",
          "c2jShape" : "Image",
          "deprecated" : false,
          "documentation" : "<p>The input image as bytes or an S3 object.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The input image as bytes or an S3 object.</p>\n@param image The input image as bytes or an S3 object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withImage",
          "getterDocumentation" : "/**<p>The input image as bytes or an S3 object.</p>\n@return The input image as bytes or an S3 object.*/",
          "getterMethodName" : "getImage",
          "getterModel" : {
            "returnType" : "Image",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Image",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Image",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Image",
          "setterDocumentation" : "/**<p>The input image as bytes or an S3 object.</p>\n@param image The input image as bytes or an S3 object.*/",
          "setterMethodName" : "setImage",
          "setterModel" : {
            "variableDeclarationType" : "Image",
            "variableName" : "image",
            "variableType" : "Image",
            "documentation" : "",
            "simpleType" : "Image",
            "variableSetterType" : "Image"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The input image as bytes or an S3 object.</p>\n@param image The input image as bytes or an S3 object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Image",
            "variableName" : "image",
            "variableType" : "Image",
            "documentation" : "<p>The input image as bytes or an S3 object.</p>",
            "simpleType" : "Image",
            "variableSetterType" : "Image"
          },
          "xmlNameSpaceUri" : null
        },
        "MinConfidence" : {
          "c2jName" : "MinConfidence",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with a confidence level lower than this specified value.</p> <p>If you don't specify <code>MinConfidence</code>, the operation returns labels with confidence values greater than or equal to 50 percent.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with a confidence level lower than this specified value.</p> <p>If you don't specify <code>MinConfidence</code>, the operation returns labels with confidence values greater than or equal to 50 percent.</p>\n@param minConfidence Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with a confidence level lower than this specified value.</p> <p>If you don't specify <code>MinConfidence</code>, the operation returns labels with confidence values greater than or equal to 50 percent.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMinConfidence",
          "getterDocumentation" : "/**<p>Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with a confidence level lower than this specified value.</p> <p>If you don't specify <code>MinConfidence</code>, the operation returns labels with confidence values greater than or equal to 50 percent.</p>\n@return Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with a confidence level lower than this specified value.</p> <p>If you don't specify <code>MinConfidence</code>, the operation returns labels with confidence values greater than or equal to 50 percent.*/",
          "getterMethodName" : "getMinConfidence",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MinConfidence",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MinConfidence",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Float",
          "marshallingType" : "FLOAT",
          "name" : "MinConfidence",
          "setterDocumentation" : "/**<p>Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with a confidence level lower than this specified value.</p> <p>If you don't specify <code>MinConfidence</code>, the operation returns labels with confidence values greater than or equal to 50 percent.</p>\n@param minConfidence Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with a confidence level lower than this specified value.</p> <p>If you don't specify <code>MinConfidence</code>, the operation returns labels with confidence values greater than or equal to 50 percent.*/",
          "setterMethodName" : "setMinConfidence",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "minConfidence",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with a confidence level lower than this specified value.</p> <p>If you don't specify <code>MinConfidence</code>, the operation returns labels with confidence values greater than or equal to 50 percent.</p>\n@param minConfidence Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with a confidence level lower than this specified value.</p> <p>If you don't specify <code>MinConfidence</code>, the operation returns labels with confidence values greater than or equal to 50 percent.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "minConfidence",
            "variableType" : "Float",
            "documentation" : "<p>Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with a confidence level lower than this specified value.</p> <p>If you don't specify <code>MinConfidence</code>, the operation returns labels with confidence values greater than or equal to 50 percent.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Image" ],
      "shapeName" : "DetectModerationLabelsRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "DetectModerationLabelsRequest",
        "variableName" : "detectModerationLabelsRequest",
        "variableType" : "DetectModerationLabelsRequest",
        "documentation" : null,
        "simpleType" : "DetectModerationLabelsRequest",
        "variableSetterType" : "DetectModerationLabelsRequest"
      },
      "wrapper" : false
    },
    "DetectModerationLabelsResult" : {
      "c2jName" : "DetectModerationLabelsResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "ModerationLabels",
        "c2jShape" : "ModerationLabels",
        "deprecated" : false,
        "documentation" : "<p>An array of labels for explicit or suggestive adult content found in the image. The list includes the top-level label and each child label detected in the image. This is useful for filtering specific categories of content. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An array of labels for explicit or suggestive adult content found in the image. The list includes the top-level label and each child label detected in the image. This is useful for filtering specific categories of content. </p>\n@param moderationLabels An array of labels for explicit or suggestive adult content found in the image. The list includes the top-level label and each child label detected in the image. This is useful for filtering specific categories of content.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withModerationLabels",
        "getterDocumentation" : "/**<p>An array of labels for explicit or suggestive adult content found in the image. The list includes the top-level label and each child label detected in the image. This is useful for filtering specific categories of content. </p>\n@return An array of labels for explicit or suggestive adult content found in the image. The list includes the top-level label and each child label detected in the image. This is useful for filtering specific categories of content.*/",
        "getterMethodName" : "getModerationLabels",
        "getterModel" : {
          "returnType" : "java.util.List<ModerationLabel>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ModerationLabels",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ModerationLabels",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ModerationLabel",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "ModerationLabel",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "ModerationLabel",
              "variableName" : "member",
              "variableType" : "ModerationLabel",
              "documentation" : "",
              "simpleType" : "ModerationLabel",
              "variableSetterType" : "ModerationLabel"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "ModerationLabel",
              "variableName" : "member",
              "variableType" : "ModerationLabel",
              "documentation" : "",
              "simpleType" : "ModerationLabel",
              "variableSetterType" : "ModerationLabel"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "ModerationLabel",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "ModerationLabel",
          "templateImplType" : "java.util.ArrayList<ModerationLabel>",
          "templateType" : "java.util.List<ModerationLabel>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "ModerationLabels",
        "setterDocumentation" : "/**<p>An array of labels for explicit or suggestive adult content found in the image. The list includes the top-level label and each child label detected in the image. This is useful for filtering specific categories of content. </p>\n@param moderationLabels An array of labels for explicit or suggestive adult content found in the image. The list includes the top-level label and each child label detected in the image. This is useful for filtering specific categories of content.*/",
        "setterMethodName" : "setModerationLabels",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<ModerationLabel>",
          "variableName" : "moderationLabels",
          "variableType" : "java.util.List<ModerationLabel>",
          "documentation" : "",
          "simpleType" : "List<ModerationLabel>",
          "variableSetterType" : "java.util.Collection<ModerationLabel>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An array of labels for explicit or suggestive adult content found in the image. The list includes the top-level label and each child label detected in the image. This is useful for filtering specific categories of content. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setModerationLabels(java.util.Collection)} or {@link #withModerationLabels(java.util.Collection)} if you want to override the existing values.</p>\n@param moderationLabels An array of labels for explicit or suggestive adult content found in the image. The list includes the top-level label and each child label detected in the image. This is useful for filtering specific categories of content.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<ModerationLabel>",
          "variableName" : "moderationLabels",
          "variableType" : "java.util.List<ModerationLabel>",
          "documentation" : "<p>An array of labels for explicit or suggestive adult content found in the image. The list includes the top-level label and each child label detected in the image. This is useful for filtering specific categories of content. </p>",
          "simpleType" : "List<ModerationLabel>",
          "variableSetterType" : "java.util.Collection<ModerationLabel>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ModerationLabels" : {
          "c2jName" : "ModerationLabels",
          "c2jShape" : "ModerationLabels",
          "deprecated" : false,
          "documentation" : "<p>An array of labels for explicit or suggestive adult content found in the image. The list includes the top-level label and each child label detected in the image. This is useful for filtering specific categories of content. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An array of labels for explicit or suggestive adult content found in the image. The list includes the top-level label and each child label detected in the image. This is useful for filtering specific categories of content. </p>\n@param moderationLabels An array of labels for explicit or suggestive adult content found in the image. The list includes the top-level label and each child label detected in the image. This is useful for filtering specific categories of content.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withModerationLabels",
          "getterDocumentation" : "/**<p>An array of labels for explicit or suggestive adult content found in the image. The list includes the top-level label and each child label detected in the image. This is useful for filtering specific categories of content. </p>\n@return An array of labels for explicit or suggestive adult content found in the image. The list includes the top-level label and each child label detected in the image. This is useful for filtering specific categories of content.*/",
          "getterMethodName" : "getModerationLabels",
          "getterModel" : {
            "returnType" : "java.util.List<ModerationLabel>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ModerationLabels",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ModerationLabels",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ModerationLabel",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "ModerationLabel",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "ModerationLabel",
                "variableName" : "member",
                "variableType" : "ModerationLabel",
                "documentation" : "",
                "simpleType" : "ModerationLabel",
                "variableSetterType" : "ModerationLabel"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "ModerationLabel",
                "variableName" : "member",
                "variableType" : "ModerationLabel",
                "documentation" : "",
                "simpleType" : "ModerationLabel",
                "variableSetterType" : "ModerationLabel"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "ModerationLabel",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "ModerationLabel",
            "templateImplType" : "java.util.ArrayList<ModerationLabel>",
            "templateType" : "java.util.List<ModerationLabel>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "ModerationLabels",
          "setterDocumentation" : "/**<p>An array of labels for explicit or suggestive adult content found in the image. The list includes the top-level label and each child label detected in the image. This is useful for filtering specific categories of content. </p>\n@param moderationLabels An array of labels for explicit or suggestive adult content found in the image. The list includes the top-level label and each child label detected in the image. This is useful for filtering specific categories of content.*/",
          "setterMethodName" : "setModerationLabels",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<ModerationLabel>",
            "variableName" : "moderationLabels",
            "variableType" : "java.util.List<ModerationLabel>",
            "documentation" : "",
            "simpleType" : "List<ModerationLabel>",
            "variableSetterType" : "java.util.Collection<ModerationLabel>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An array of labels for explicit or suggestive adult content found in the image. The list includes the top-level label and each child label detected in the image. This is useful for filtering specific categories of content. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setModerationLabels(java.util.Collection)} or {@link #withModerationLabels(java.util.Collection)} if you want to override the existing values.</p>\n@param moderationLabels An array of labels for explicit or suggestive adult content found in the image. The list includes the top-level label and each child label detected in the image. This is useful for filtering specific categories of content.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<ModerationLabel>",
            "variableName" : "moderationLabels",
            "variableType" : "java.util.List<ModerationLabel>",
            "documentation" : "<p>An array of labels for explicit or suggestive adult content found in the image. The list includes the top-level label and each child label detected in the image. This is useful for filtering specific categories of content. </p>",
            "simpleType" : "List<ModerationLabel>",
            "variableSetterType" : "java.util.Collection<ModerationLabel>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DetectModerationLabelsResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "DetectModerationLabelsResult",
        "variableName" : "detectModerationLabelsResult",
        "variableType" : "DetectModerationLabelsResult",
        "documentation" : null,
        "simpleType" : "DetectModerationLabelsResult",
        "variableSetterType" : "DetectModerationLabelsResult"
      },
      "wrapper" : false
    },
    "Emotion" : {
      "c2jName" : "Emotion",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The emotions detected on the face, and the confidence level in the determination. For example, HAPPY, SAD, and ANGRY.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Type",
        "c2jShape" : "EmotionName",
        "deprecated" : false,
        "documentation" : "<p>Type of emotion detected.</p>",
        "enumType" : "EmotionName",
        "fluentSetterDocumentation" : "/**<p>Type of emotion detected.</p>\n@param type Type of emotion detected.\n@return Returns a reference to this object so that method calls can be chained together.\n@see EmotionName*/",
        "fluentSetterMethodName" : "withType",
        "getterDocumentation" : "/**<p>Type of emotion detected.</p>\n@return Type of emotion detected.\n@see EmotionName*/",
        "getterMethodName" : "getType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Type",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Type",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Type",
        "setterDocumentation" : "/**<p>Type of emotion detected.</p>\n@param type Type of emotion detected.\n@see EmotionName*/",
        "setterMethodName" : "setType",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "type",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Type of emotion detected.</p>\n@param type Type of emotion detected.\n@return Returns a reference to this object so that method calls can be chained together.\n@see EmotionName*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "type",
          "variableType" : "String",
          "documentation" : "<p>Type of emotion detected.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Confidence",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>Level of confidence in the determination.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withConfidence",
        "getterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@return Level of confidence in the determination.*/",
        "getterMethodName" : "getConfidence",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Confidence",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Confidence",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Float",
        "marshallingType" : "FLOAT",
        "name" : "Confidence",
        "setterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.*/",
        "setterMethodName" : "setConfidence",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "<p>Level of confidence in the determination.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Confidence" : {
          "c2jName" : "Confidence",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>Level of confidence in the determination.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withConfidence",
          "getterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@return Level of confidence in the determination.*/",
          "getterMethodName" : "getConfidence",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Confidence",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Confidence",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Float",
          "marshallingType" : "FLOAT",
          "name" : "Confidence",
          "setterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.*/",
          "setterMethodName" : "setConfidence",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "<p>Level of confidence in the determination.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "Type" : {
          "c2jName" : "Type",
          "c2jShape" : "EmotionName",
          "deprecated" : false,
          "documentation" : "<p>Type of emotion detected.</p>",
          "enumType" : "EmotionName",
          "fluentSetterDocumentation" : "/**<p>Type of emotion detected.</p>\n@param type Type of emotion detected.\n@return Returns a reference to this object so that method calls can be chained together.\n@see EmotionName*/",
          "fluentSetterMethodName" : "withType",
          "getterDocumentation" : "/**<p>Type of emotion detected.</p>\n@return Type of emotion detected.\n@see EmotionName*/",
          "getterMethodName" : "getType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Type",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Type",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Type",
          "setterDocumentation" : "/**<p>Type of emotion detected.</p>\n@param type Type of emotion detected.\n@see EmotionName*/",
          "setterMethodName" : "setType",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "type",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Type of emotion detected.</p>\n@param type Type of emotion detected.\n@return Returns a reference to this object so that method calls can be chained together.\n@see EmotionName*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "type",
            "variableType" : "String",
            "documentation" : "<p>Type of emotion detected.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Emotion",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "Emotion",
        "variableName" : "emotion",
        "variableType" : "Emotion",
        "documentation" : null,
        "simpleType" : "Emotion",
        "variableSetterType" : "Emotion"
      },
      "wrapper" : false
    },
    "EmotionName" : {
      "c2jName" : "EmotionName",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "HAPPY",
        "value" : "HAPPY"
      }, {
        "name" : "SAD",
        "value" : "SAD"
      }, {
        "name" : "ANGRY",
        "value" : "ANGRY"
      }, {
        "name" : "CONFUSED",
        "value" : "CONFUSED"
      }, {
        "name" : "DISGUSTED",
        "value" : "DISGUSTED"
      }, {
        "name" : "SURPRISED",
        "value" : "SURPRISED"
      }, {
        "name" : "CALM",
        "value" : "CALM"
      }, {
        "name" : "UNKNOWN",
        "value" : "UNKNOWN"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "EmotionName",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "EmotionName",
        "variableName" : "emotionName",
        "variableType" : "EmotionName",
        "documentation" : null,
        "simpleType" : "EmotionName",
        "variableSetterType" : "EmotionName"
      },
      "wrapper" : false
    },
    "EyeOpen" : {
      "c2jName" : "EyeOpen",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Indicates whether or not the eyes on the face are open, and the confidence level in the determination.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Value",
        "c2jShape" : "Boolean",
        "deprecated" : false,
        "documentation" : "<p>Boolean value that indicates whether the eyes on the face are open.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Boolean value that indicates whether the eyes on the face are open.</p>\n@param value Boolean value that indicates whether the eyes on the face are open.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withValue",
        "getterDocumentation" : "/**<p>Boolean value that indicates whether the eyes on the face are open.</p>\n@return Boolean value that indicates whether the eyes on the face are open.*/",
        "getterMethodName" : "getValue",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Value",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Value",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "Value",
        "setterDocumentation" : "/**<p>Boolean value that indicates whether the eyes on the face are open.</p>\n@param value Boolean value that indicates whether the eyes on the face are open.*/",
        "setterMethodName" : "setValue",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "value",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Boolean value that indicates whether the eyes on the face are open.</p>\n@param value Boolean value that indicates whether the eyes on the face are open.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "value",
          "variableType" : "Boolean",
          "documentation" : "<p>Boolean value that indicates whether the eyes on the face are open.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Confidence",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>Level of confidence in the determination.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withConfidence",
        "getterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@return Level of confidence in the determination.*/",
        "getterMethodName" : "getConfidence",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Confidence",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Confidence",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Float",
        "marshallingType" : "FLOAT",
        "name" : "Confidence",
        "setterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.*/",
        "setterMethodName" : "setConfidence",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "<p>Level of confidence in the determination.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Confidence" : {
          "c2jName" : "Confidence",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>Level of confidence in the determination.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withConfidence",
          "getterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@return Level of confidence in the determination.*/",
          "getterMethodName" : "getConfidence",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Confidence",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Confidence",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Float",
          "marshallingType" : "FLOAT",
          "name" : "Confidence",
          "setterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.*/",
          "setterMethodName" : "setConfidence",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "<p>Level of confidence in the determination.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "Value" : {
          "c2jName" : "Value",
          "c2jShape" : "Boolean",
          "deprecated" : false,
          "documentation" : "<p>Boolean value that indicates whether the eyes on the face are open.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Boolean value that indicates whether the eyes on the face are open.</p>\n@param value Boolean value that indicates whether the eyes on the face are open.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withValue",
          "getterDocumentation" : "/**<p>Boolean value that indicates whether the eyes on the face are open.</p>\n@return Boolean value that indicates whether the eyes on the face are open.*/",
          "getterMethodName" : "getValue",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Value",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Value",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "Value",
          "setterDocumentation" : "/**<p>Boolean value that indicates whether the eyes on the face are open.</p>\n@param value Boolean value that indicates whether the eyes on the face are open.*/",
          "setterMethodName" : "setValue",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "value",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Boolean value that indicates whether the eyes on the face are open.</p>\n@param value Boolean value that indicates whether the eyes on the face are open.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "value",
            "variableType" : "Boolean",
            "documentation" : "<p>Boolean value that indicates whether the eyes on the face are open.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "EyeOpen",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "EyeOpen",
        "variableName" : "eyeOpen",
        "variableType" : "EyeOpen",
        "documentation" : null,
        "simpleType" : "EyeOpen",
        "variableSetterType" : "EyeOpen"
      },
      "wrapper" : false
    },
    "Eyeglasses" : {
      "c2jName" : "Eyeglasses",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Indicates whether or not the face is wearing eye glasses, and the confidence level in the determination.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Value",
        "c2jShape" : "Boolean",
        "deprecated" : false,
        "documentation" : "<p>Boolean value that indicates whether the face is wearing eye glasses or not.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Boolean value that indicates whether the face is wearing eye glasses or not.</p>\n@param value Boolean value that indicates whether the face is wearing eye glasses or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withValue",
        "getterDocumentation" : "/**<p>Boolean value that indicates whether the face is wearing eye glasses or not.</p>\n@return Boolean value that indicates whether the face is wearing eye glasses or not.*/",
        "getterMethodName" : "getValue",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Value",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Value",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "Value",
        "setterDocumentation" : "/**<p>Boolean value that indicates whether the face is wearing eye glasses or not.</p>\n@param value Boolean value that indicates whether the face is wearing eye glasses or not.*/",
        "setterMethodName" : "setValue",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "value",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Boolean value that indicates whether the face is wearing eye glasses or not.</p>\n@param value Boolean value that indicates whether the face is wearing eye glasses or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "value",
          "variableType" : "Boolean",
          "documentation" : "<p>Boolean value that indicates whether the face is wearing eye glasses or not.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Confidence",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>Level of confidence in the determination.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withConfidence",
        "getterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@return Level of confidence in the determination.*/",
        "getterMethodName" : "getConfidence",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Confidence",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Confidence",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Float",
        "marshallingType" : "FLOAT",
        "name" : "Confidence",
        "setterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.*/",
        "setterMethodName" : "setConfidence",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "<p>Level of confidence in the determination.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Confidence" : {
          "c2jName" : "Confidence",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>Level of confidence in the determination.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withConfidence",
          "getterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@return Level of confidence in the determination.*/",
          "getterMethodName" : "getConfidence",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Confidence",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Confidence",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Float",
          "marshallingType" : "FLOAT",
          "name" : "Confidence",
          "setterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.*/",
          "setterMethodName" : "setConfidence",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "<p>Level of confidence in the determination.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "Value" : {
          "c2jName" : "Value",
          "c2jShape" : "Boolean",
          "deprecated" : false,
          "documentation" : "<p>Boolean value that indicates whether the face is wearing eye glasses or not.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Boolean value that indicates whether the face is wearing eye glasses or not.</p>\n@param value Boolean value that indicates whether the face is wearing eye glasses or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withValue",
          "getterDocumentation" : "/**<p>Boolean value that indicates whether the face is wearing eye glasses or not.</p>\n@return Boolean value that indicates whether the face is wearing eye glasses or not.*/",
          "getterMethodName" : "getValue",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Value",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Value",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "Value",
          "setterDocumentation" : "/**<p>Boolean value that indicates whether the face is wearing eye glasses or not.</p>\n@param value Boolean value that indicates whether the face is wearing eye glasses or not.*/",
          "setterMethodName" : "setValue",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "value",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Boolean value that indicates whether the face is wearing eye glasses or not.</p>\n@param value Boolean value that indicates whether the face is wearing eye glasses or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "value",
            "variableType" : "Boolean",
            "documentation" : "<p>Boolean value that indicates whether the face is wearing eye glasses or not.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Eyeglasses",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "Eyeglasses",
        "variableName" : "eyeglasses",
        "variableType" : "Eyeglasses",
        "documentation" : null,
        "simpleType" : "Eyeglasses",
        "variableSetterType" : "Eyeglasses"
      },
      "wrapper" : false
    },
    "Face" : {
      "c2jName" : "Face",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Describes the face properties such as the bounding box, face ID, image ID of the input image, and external image ID that you assigned. </p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "FaceId",
        "c2jShape" : "FaceId",
        "deprecated" : false,
        "documentation" : "<p>Unique identifier that Amazon Rekognition assigns to the face.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Unique identifier that Amazon Rekognition assigns to the face.</p>\n@param faceId Unique identifier that Amazon Rekognition assigns to the face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFaceId",
        "getterDocumentation" : "/**<p>Unique identifier that Amazon Rekognition assigns to the face.</p>\n@return Unique identifier that Amazon Rekognition assigns to the face.*/",
        "getterMethodName" : "getFaceId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "FaceId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "FaceId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "FaceId",
        "setterDocumentation" : "/**<p>Unique identifier that Amazon Rekognition assigns to the face.</p>\n@param faceId Unique identifier that Amazon Rekognition assigns to the face.*/",
        "setterMethodName" : "setFaceId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "faceId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Unique identifier that Amazon Rekognition assigns to the face.</p>\n@param faceId Unique identifier that Amazon Rekognition assigns to the face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "faceId",
          "variableType" : "String",
          "documentation" : "<p>Unique identifier that Amazon Rekognition assigns to the face.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "BoundingBox",
        "c2jShape" : "BoundingBox",
        "deprecated" : false,
        "documentation" : "<p>Bounding box of the face.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Bounding box of the face.</p>\n@param boundingBox Bounding box of the face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBoundingBox",
        "getterDocumentation" : "/**<p>Bounding box of the face.</p>\n@return Bounding box of the face.*/",
        "getterMethodName" : "getBoundingBox",
        "getterModel" : {
          "returnType" : "BoundingBox",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "BoundingBox",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "BoundingBox",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "BoundingBox",
        "setterDocumentation" : "/**<p>Bounding box of the face.</p>\n@param boundingBox Bounding box of the face.*/",
        "setterMethodName" : "setBoundingBox",
        "setterModel" : {
          "variableDeclarationType" : "BoundingBox",
          "variableName" : "boundingBox",
          "variableType" : "BoundingBox",
          "documentation" : "",
          "simpleType" : "BoundingBox",
          "variableSetterType" : "BoundingBox"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Bounding box of the face.</p>\n@param boundingBox Bounding box of the face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "BoundingBox",
          "variableName" : "boundingBox",
          "variableType" : "BoundingBox",
          "documentation" : "<p>Bounding box of the face.</p>",
          "simpleType" : "BoundingBox",
          "variableSetterType" : "BoundingBox"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ImageId",
        "c2jShape" : "ImageId",
        "deprecated" : false,
        "documentation" : "<p>Unique identifier that Amazon Rekognition assigns to the input image.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Unique identifier that Amazon Rekognition assigns to the input image.</p>\n@param imageId Unique identifier that Amazon Rekognition assigns to the input image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withImageId",
        "getterDocumentation" : "/**<p>Unique identifier that Amazon Rekognition assigns to the input image.</p>\n@return Unique identifier that Amazon Rekognition assigns to the input image.*/",
        "getterMethodName" : "getImageId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ImageId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ImageId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ImageId",
        "setterDocumentation" : "/**<p>Unique identifier that Amazon Rekognition assigns to the input image.</p>\n@param imageId Unique identifier that Amazon Rekognition assigns to the input image.*/",
        "setterMethodName" : "setImageId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "imageId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Unique identifier that Amazon Rekognition assigns to the input image.</p>\n@param imageId Unique identifier that Amazon Rekognition assigns to the input image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "imageId",
          "variableType" : "String",
          "documentation" : "<p>Unique identifier that Amazon Rekognition assigns to the input image.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ExternalImageId",
        "c2jShape" : "ExternalImageId",
        "deprecated" : false,
        "documentation" : "<p>Identifier that you assign to all the faces in the input image.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Identifier that you assign to all the faces in the input image.</p>\n@param externalImageId Identifier that you assign to all the faces in the input image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withExternalImageId",
        "getterDocumentation" : "/**<p>Identifier that you assign to all the faces in the input image.</p>\n@return Identifier that you assign to all the faces in the input image.*/",
        "getterMethodName" : "getExternalImageId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ExternalImageId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ExternalImageId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ExternalImageId",
        "setterDocumentation" : "/**<p>Identifier that you assign to all the faces in the input image.</p>\n@param externalImageId Identifier that you assign to all the faces in the input image.*/",
        "setterMethodName" : "setExternalImageId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "externalImageId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Identifier that you assign to all the faces in the input image.</p>\n@param externalImageId Identifier that you assign to all the faces in the input image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "externalImageId",
          "variableType" : "String",
          "documentation" : "<p>Identifier that you assign to all the faces in the input image.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Confidence",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>\n@param confidence Confidence level that the bounding box contains a face (and not a different object such as a tree).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withConfidence",
        "getterDocumentation" : "/**<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>\n@return Confidence level that the bounding box contains a face (and not a different object such as a tree).*/",
        "getterMethodName" : "getConfidence",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Confidence",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Confidence",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Float",
        "marshallingType" : "FLOAT",
        "name" : "Confidence",
        "setterDocumentation" : "/**<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>\n@param confidence Confidence level that the bounding box contains a face (and not a different object such as a tree).*/",
        "setterMethodName" : "setConfidence",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>\n@param confidence Confidence level that the bounding box contains a face (and not a different object such as a tree).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "BoundingBox" : {
          "c2jName" : "BoundingBox",
          "c2jShape" : "BoundingBox",
          "deprecated" : false,
          "documentation" : "<p>Bounding box of the face.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Bounding box of the face.</p>\n@param boundingBox Bounding box of the face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBoundingBox",
          "getterDocumentation" : "/**<p>Bounding box of the face.</p>\n@return Bounding box of the face.*/",
          "getterMethodName" : "getBoundingBox",
          "getterModel" : {
            "returnType" : "BoundingBox",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "BoundingBox",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "BoundingBox",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "BoundingBox",
          "setterDocumentation" : "/**<p>Bounding box of the face.</p>\n@param boundingBox Bounding box of the face.*/",
          "setterMethodName" : "setBoundingBox",
          "setterModel" : {
            "variableDeclarationType" : "BoundingBox",
            "variableName" : "boundingBox",
            "variableType" : "BoundingBox",
            "documentation" : "",
            "simpleType" : "BoundingBox",
            "variableSetterType" : "BoundingBox"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Bounding box of the face.</p>\n@param boundingBox Bounding box of the face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "BoundingBox",
            "variableName" : "boundingBox",
            "variableType" : "BoundingBox",
            "documentation" : "<p>Bounding box of the face.</p>",
            "simpleType" : "BoundingBox",
            "variableSetterType" : "BoundingBox"
          },
          "xmlNameSpaceUri" : null
        },
        "Confidence" : {
          "c2jName" : "Confidence",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>\n@param confidence Confidence level that the bounding box contains a face (and not a different object such as a tree).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withConfidence",
          "getterDocumentation" : "/**<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>\n@return Confidence level that the bounding box contains a face (and not a different object such as a tree).*/",
          "getterMethodName" : "getConfidence",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Confidence",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Confidence",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Float",
          "marshallingType" : "FLOAT",
          "name" : "Confidence",
          "setterDocumentation" : "/**<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>\n@param confidence Confidence level that the bounding box contains a face (and not a different object such as a tree).*/",
          "setterMethodName" : "setConfidence",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>\n@param confidence Confidence level that the bounding box contains a face (and not a different object such as a tree).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "ExternalImageId" : {
          "c2jName" : "ExternalImageId",
          "c2jShape" : "ExternalImageId",
          "deprecated" : false,
          "documentation" : "<p>Identifier that you assign to all the faces in the input image.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Identifier that you assign to all the faces in the input image.</p>\n@param externalImageId Identifier that you assign to all the faces in the input image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withExternalImageId",
          "getterDocumentation" : "/**<p>Identifier that you assign to all the faces in the input image.</p>\n@return Identifier that you assign to all the faces in the input image.*/",
          "getterMethodName" : "getExternalImageId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ExternalImageId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ExternalImageId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ExternalImageId",
          "setterDocumentation" : "/**<p>Identifier that you assign to all the faces in the input image.</p>\n@param externalImageId Identifier that you assign to all the faces in the input image.*/",
          "setterMethodName" : "setExternalImageId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "externalImageId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Identifier that you assign to all the faces in the input image.</p>\n@param externalImageId Identifier that you assign to all the faces in the input image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "externalImageId",
            "variableType" : "String",
            "documentation" : "<p>Identifier that you assign to all the faces in the input image.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "FaceId" : {
          "c2jName" : "FaceId",
          "c2jShape" : "FaceId",
          "deprecated" : false,
          "documentation" : "<p>Unique identifier that Amazon Rekognition assigns to the face.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Unique identifier that Amazon Rekognition assigns to the face.</p>\n@param faceId Unique identifier that Amazon Rekognition assigns to the face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFaceId",
          "getterDocumentation" : "/**<p>Unique identifier that Amazon Rekognition assigns to the face.</p>\n@return Unique identifier that Amazon Rekognition assigns to the face.*/",
          "getterMethodName" : "getFaceId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "FaceId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "FaceId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "FaceId",
          "setterDocumentation" : "/**<p>Unique identifier that Amazon Rekognition assigns to the face.</p>\n@param faceId Unique identifier that Amazon Rekognition assigns to the face.*/",
          "setterMethodName" : "setFaceId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "faceId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Unique identifier that Amazon Rekognition assigns to the face.</p>\n@param faceId Unique identifier that Amazon Rekognition assigns to the face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "faceId",
            "variableType" : "String",
            "documentation" : "<p>Unique identifier that Amazon Rekognition assigns to the face.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ImageId" : {
          "c2jName" : "ImageId",
          "c2jShape" : "ImageId",
          "deprecated" : false,
          "documentation" : "<p>Unique identifier that Amazon Rekognition assigns to the input image.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Unique identifier that Amazon Rekognition assigns to the input image.</p>\n@param imageId Unique identifier that Amazon Rekognition assigns to the input image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withImageId",
          "getterDocumentation" : "/**<p>Unique identifier that Amazon Rekognition assigns to the input image.</p>\n@return Unique identifier that Amazon Rekognition assigns to the input image.*/",
          "getterMethodName" : "getImageId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ImageId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ImageId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ImageId",
          "setterDocumentation" : "/**<p>Unique identifier that Amazon Rekognition assigns to the input image.</p>\n@param imageId Unique identifier that Amazon Rekognition assigns to the input image.*/",
          "setterMethodName" : "setImageId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "imageId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Unique identifier that Amazon Rekognition assigns to the input image.</p>\n@param imageId Unique identifier that Amazon Rekognition assigns to the input image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "imageId",
            "variableType" : "String",
            "documentation" : "<p>Unique identifier that Amazon Rekognition assigns to the input image.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Face",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "Face",
        "variableName" : "face",
        "variableType" : "Face",
        "documentation" : null,
        "simpleType" : "Face",
        "variableSetterType" : "Face"
      },
      "wrapper" : false
    },
    "FaceDetail" : {
      "c2jName" : "FaceDetail",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Structure containing attributes of the face that the algorithm detected.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "BoundingBox",
        "c2jShape" : "BoundingBox",
        "deprecated" : false,
        "documentation" : "<p>Bounding box of the face.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Bounding box of the face.</p>\n@param boundingBox Bounding box of the face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBoundingBox",
        "getterDocumentation" : "/**<p>Bounding box of the face.</p>\n@return Bounding box of the face.*/",
        "getterMethodName" : "getBoundingBox",
        "getterModel" : {
          "returnType" : "BoundingBox",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "BoundingBox",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "BoundingBox",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "BoundingBox",
        "setterDocumentation" : "/**<p>Bounding box of the face.</p>\n@param boundingBox Bounding box of the face.*/",
        "setterMethodName" : "setBoundingBox",
        "setterModel" : {
          "variableDeclarationType" : "BoundingBox",
          "variableName" : "boundingBox",
          "variableType" : "BoundingBox",
          "documentation" : "",
          "simpleType" : "BoundingBox",
          "variableSetterType" : "BoundingBox"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Bounding box of the face.</p>\n@param boundingBox Bounding box of the face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "BoundingBox",
          "variableName" : "boundingBox",
          "variableType" : "BoundingBox",
          "documentation" : "<p>Bounding box of the face.</p>",
          "simpleType" : "BoundingBox",
          "variableSetterType" : "BoundingBox"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "AgeRange",
        "c2jShape" : "AgeRange",
        "deprecated" : false,
        "documentation" : "<p>The estimated age range, in years, for the face. Low represents the lowest estimated age and High represents the highest estimated age.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The estimated age range, in years, for the face. Low represents the lowest estimated age and High represents the highest estimated age.</p>\n@param ageRange The estimated age range, in years, for the face. Low represents the lowest estimated age and High represents the highest estimated age.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAgeRange",
        "getterDocumentation" : "/**<p>The estimated age range, in years, for the face. Low represents the lowest estimated age and High represents the highest estimated age.</p>\n@return The estimated age range, in years, for the face. Low represents the lowest estimated age and High represents the highest estimated age.*/",
        "getterMethodName" : "getAgeRange",
        "getterModel" : {
          "returnType" : "AgeRange",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "AgeRange",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "AgeRange",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "AgeRange",
        "setterDocumentation" : "/**<p>The estimated age range, in years, for the face. Low represents the lowest estimated age and High represents the highest estimated age.</p>\n@param ageRange The estimated age range, in years, for the face. Low represents the lowest estimated age and High represents the highest estimated age.*/",
        "setterMethodName" : "setAgeRange",
        "setterModel" : {
          "variableDeclarationType" : "AgeRange",
          "variableName" : "ageRange",
          "variableType" : "AgeRange",
          "documentation" : "",
          "simpleType" : "AgeRange",
          "variableSetterType" : "AgeRange"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The estimated age range, in years, for the face. Low represents the lowest estimated age and High represents the highest estimated age.</p>\n@param ageRange The estimated age range, in years, for the face. Low represents the lowest estimated age and High represents the highest estimated age.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "AgeRange",
          "variableName" : "ageRange",
          "variableType" : "AgeRange",
          "documentation" : "<p>The estimated age range, in years, for the face. Low represents the lowest estimated age and High represents the highest estimated age.</p>",
          "simpleType" : "AgeRange",
          "variableSetterType" : "AgeRange"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Smile",
        "c2jShape" : "Smile",
        "deprecated" : false,
        "documentation" : "<p>Indicates whether or not the face is smiling, and the confidence level in the determination.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Indicates whether or not the face is smiling, and the confidence level in the determination.</p>\n@param smile Indicates whether or not the face is smiling, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSmile",
        "getterDocumentation" : "/**<p>Indicates whether or not the face is smiling, and the confidence level in the determination.</p>\n@return Indicates whether or not the face is smiling, and the confidence level in the determination.*/",
        "getterMethodName" : "getSmile",
        "getterModel" : {
          "returnType" : "Smile",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Smile",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Smile",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Smile",
        "setterDocumentation" : "/**<p>Indicates whether or not the face is smiling, and the confidence level in the determination.</p>\n@param smile Indicates whether or not the face is smiling, and the confidence level in the determination.*/",
        "setterMethodName" : "setSmile",
        "setterModel" : {
          "variableDeclarationType" : "Smile",
          "variableName" : "smile",
          "variableType" : "Smile",
          "documentation" : "",
          "simpleType" : "Smile",
          "variableSetterType" : "Smile"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Indicates whether or not the face is smiling, and the confidence level in the determination.</p>\n@param smile Indicates whether or not the face is smiling, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Smile",
          "variableName" : "smile",
          "variableType" : "Smile",
          "documentation" : "<p>Indicates whether or not the face is smiling, and the confidence level in the determination.</p>",
          "simpleType" : "Smile",
          "variableSetterType" : "Smile"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Eyeglasses",
        "c2jShape" : "Eyeglasses",
        "deprecated" : false,
        "documentation" : "<p>Indicates whether or not the face is wearing eye glasses, and the confidence level in the determination.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Indicates whether or not the face is wearing eye glasses, and the confidence level in the determination.</p>\n@param eyeglasses Indicates whether or not the face is wearing eye glasses, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withEyeglasses",
        "getterDocumentation" : "/**<p>Indicates whether or not the face is wearing eye glasses, and the confidence level in the determination.</p>\n@return Indicates whether or not the face is wearing eye glasses, and the confidence level in the determination.*/",
        "getterMethodName" : "getEyeglasses",
        "getterModel" : {
          "returnType" : "Eyeglasses",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Eyeglasses",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Eyeglasses",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Eyeglasses",
        "setterDocumentation" : "/**<p>Indicates whether or not the face is wearing eye glasses, and the confidence level in the determination.</p>\n@param eyeglasses Indicates whether or not the face is wearing eye glasses, and the confidence level in the determination.*/",
        "setterMethodName" : "setEyeglasses",
        "setterModel" : {
          "variableDeclarationType" : "Eyeglasses",
          "variableName" : "eyeglasses",
          "variableType" : "Eyeglasses",
          "documentation" : "",
          "simpleType" : "Eyeglasses",
          "variableSetterType" : "Eyeglasses"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Indicates whether or not the face is wearing eye glasses, and the confidence level in the determination.</p>\n@param eyeglasses Indicates whether or not the face is wearing eye glasses, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Eyeglasses",
          "variableName" : "eyeglasses",
          "variableType" : "Eyeglasses",
          "documentation" : "<p>Indicates whether or not the face is wearing eye glasses, and the confidence level in the determination.</p>",
          "simpleType" : "Eyeglasses",
          "variableSetterType" : "Eyeglasses"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Sunglasses",
        "c2jShape" : "Sunglasses",
        "deprecated" : false,
        "documentation" : "<p>Indicates whether or not the face is wearing sunglasses, and the confidence level in the determination.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Indicates whether or not the face is wearing sunglasses, and the confidence level in the determination.</p>\n@param sunglasses Indicates whether or not the face is wearing sunglasses, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSunglasses",
        "getterDocumentation" : "/**<p>Indicates whether or not the face is wearing sunglasses, and the confidence level in the determination.</p>\n@return Indicates whether or not the face is wearing sunglasses, and the confidence level in the determination.*/",
        "getterMethodName" : "getSunglasses",
        "getterModel" : {
          "returnType" : "Sunglasses",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Sunglasses",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Sunglasses",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Sunglasses",
        "setterDocumentation" : "/**<p>Indicates whether or not the face is wearing sunglasses, and the confidence level in the determination.</p>\n@param sunglasses Indicates whether or not the face is wearing sunglasses, and the confidence level in the determination.*/",
        "setterMethodName" : "setSunglasses",
        "setterModel" : {
          "variableDeclarationType" : "Sunglasses",
          "variableName" : "sunglasses",
          "variableType" : "Sunglasses",
          "documentation" : "",
          "simpleType" : "Sunglasses",
          "variableSetterType" : "Sunglasses"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Indicates whether or not the face is wearing sunglasses, and the confidence level in the determination.</p>\n@param sunglasses Indicates whether or not the face is wearing sunglasses, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Sunglasses",
          "variableName" : "sunglasses",
          "variableType" : "Sunglasses",
          "documentation" : "<p>Indicates whether or not the face is wearing sunglasses, and the confidence level in the determination.</p>",
          "simpleType" : "Sunglasses",
          "variableSetterType" : "Sunglasses"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Gender",
        "c2jShape" : "Gender",
        "deprecated" : false,
        "documentation" : "<p>Gender of the face and the confidence level in the determination.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Gender of the face and the confidence level in the determination.</p>\n@param gender Gender of the face and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withGender",
        "getterDocumentation" : "/**<p>Gender of the face and the confidence level in the determination.</p>\n@return Gender of the face and the confidence level in the determination.*/",
        "getterMethodName" : "getGender",
        "getterModel" : {
          "returnType" : "Gender",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Gender",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Gender",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Gender",
        "setterDocumentation" : "/**<p>Gender of the face and the confidence level in the determination.</p>\n@param gender Gender of the face and the confidence level in the determination.*/",
        "setterMethodName" : "setGender",
        "setterModel" : {
          "variableDeclarationType" : "Gender",
          "variableName" : "gender",
          "variableType" : "Gender",
          "documentation" : "",
          "simpleType" : "Gender",
          "variableSetterType" : "Gender"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Gender of the face and the confidence level in the determination.</p>\n@param gender Gender of the face and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Gender",
          "variableName" : "gender",
          "variableType" : "Gender",
          "documentation" : "<p>Gender of the face and the confidence level in the determination.</p>",
          "simpleType" : "Gender",
          "variableSetterType" : "Gender"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Beard",
        "c2jShape" : "Beard",
        "deprecated" : false,
        "documentation" : "<p>Indicates whether or not the face has a beard, and the confidence level in the determination.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Indicates whether or not the face has a beard, and the confidence level in the determination.</p>\n@param beard Indicates whether or not the face has a beard, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBeard",
        "getterDocumentation" : "/**<p>Indicates whether or not the face has a beard, and the confidence level in the determination.</p>\n@return Indicates whether or not the face has a beard, and the confidence level in the determination.*/",
        "getterMethodName" : "getBeard",
        "getterModel" : {
          "returnType" : "Beard",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Beard",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Beard",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Beard",
        "setterDocumentation" : "/**<p>Indicates whether or not the face has a beard, and the confidence level in the determination.</p>\n@param beard Indicates whether or not the face has a beard, and the confidence level in the determination.*/",
        "setterMethodName" : "setBeard",
        "setterModel" : {
          "variableDeclarationType" : "Beard",
          "variableName" : "beard",
          "variableType" : "Beard",
          "documentation" : "",
          "simpleType" : "Beard",
          "variableSetterType" : "Beard"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Indicates whether or not the face has a beard, and the confidence level in the determination.</p>\n@param beard Indicates whether or not the face has a beard, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Beard",
          "variableName" : "beard",
          "variableType" : "Beard",
          "documentation" : "<p>Indicates whether or not the face has a beard, and the confidence level in the determination.</p>",
          "simpleType" : "Beard",
          "variableSetterType" : "Beard"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Mustache",
        "c2jShape" : "Mustache",
        "deprecated" : false,
        "documentation" : "<p>Indicates whether or not the face has a mustache, and the confidence level in the determination.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Indicates whether or not the face has a mustache, and the confidence level in the determination.</p>\n@param mustache Indicates whether or not the face has a mustache, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMustache",
        "getterDocumentation" : "/**<p>Indicates whether or not the face has a mustache, and the confidence level in the determination.</p>\n@return Indicates whether or not the face has a mustache, and the confidence level in the determination.*/",
        "getterMethodName" : "getMustache",
        "getterModel" : {
          "returnType" : "Mustache",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Mustache",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Mustache",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Mustache",
        "setterDocumentation" : "/**<p>Indicates whether or not the face has a mustache, and the confidence level in the determination.</p>\n@param mustache Indicates whether or not the face has a mustache, and the confidence level in the determination.*/",
        "setterMethodName" : "setMustache",
        "setterModel" : {
          "variableDeclarationType" : "Mustache",
          "variableName" : "mustache",
          "variableType" : "Mustache",
          "documentation" : "",
          "simpleType" : "Mustache",
          "variableSetterType" : "Mustache"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Indicates whether or not the face has a mustache, and the confidence level in the determination.</p>\n@param mustache Indicates whether or not the face has a mustache, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Mustache",
          "variableName" : "mustache",
          "variableType" : "Mustache",
          "documentation" : "<p>Indicates whether or not the face has a mustache, and the confidence level in the determination.</p>",
          "simpleType" : "Mustache",
          "variableSetterType" : "Mustache"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "EyesOpen",
        "c2jShape" : "EyeOpen",
        "deprecated" : false,
        "documentation" : "<p>Indicates whether or not the eyes on the face are open, and the confidence level in the determination.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Indicates whether or not the eyes on the face are open, and the confidence level in the determination.</p>\n@param eyesOpen Indicates whether or not the eyes on the face are open, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withEyesOpen",
        "getterDocumentation" : "/**<p>Indicates whether or not the eyes on the face are open, and the confidence level in the determination.</p>\n@return Indicates whether or not the eyes on the face are open, and the confidence level in the determination.*/",
        "getterMethodName" : "getEyesOpen",
        "getterModel" : {
          "returnType" : "EyeOpen",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "EyesOpen",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "EyesOpen",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "EyesOpen",
        "setterDocumentation" : "/**<p>Indicates whether or not the eyes on the face are open, and the confidence level in the determination.</p>\n@param eyesOpen Indicates whether or not the eyes on the face are open, and the confidence level in the determination.*/",
        "setterMethodName" : "setEyesOpen",
        "setterModel" : {
          "variableDeclarationType" : "EyeOpen",
          "variableName" : "eyesOpen",
          "variableType" : "EyeOpen",
          "documentation" : "",
          "simpleType" : "EyeOpen",
          "variableSetterType" : "EyeOpen"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Indicates whether or not the eyes on the face are open, and the confidence level in the determination.</p>\n@param eyesOpen Indicates whether or not the eyes on the face are open, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "EyeOpen",
          "variableName" : "eyesOpen",
          "variableType" : "EyeOpen",
          "documentation" : "<p>Indicates whether or not the eyes on the face are open, and the confidence level in the determination.</p>",
          "simpleType" : "EyeOpen",
          "variableSetterType" : "EyeOpen"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MouthOpen",
        "c2jShape" : "MouthOpen",
        "deprecated" : false,
        "documentation" : "<p>Indicates whether or not the mouth on the face is open, and the confidence level in the determination.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Indicates whether or not the mouth on the face is open, and the confidence level in the determination.</p>\n@param mouthOpen Indicates whether or not the mouth on the face is open, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMouthOpen",
        "getterDocumentation" : "/**<p>Indicates whether or not the mouth on the face is open, and the confidence level in the determination.</p>\n@return Indicates whether or not the mouth on the face is open, and the confidence level in the determination.*/",
        "getterMethodName" : "getMouthOpen",
        "getterModel" : {
          "returnType" : "MouthOpen",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MouthOpen",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MouthOpen",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "MouthOpen",
        "setterDocumentation" : "/**<p>Indicates whether or not the mouth on the face is open, and the confidence level in the determination.</p>\n@param mouthOpen Indicates whether or not the mouth on the face is open, and the confidence level in the determination.*/",
        "setterMethodName" : "setMouthOpen",
        "setterModel" : {
          "variableDeclarationType" : "MouthOpen",
          "variableName" : "mouthOpen",
          "variableType" : "MouthOpen",
          "documentation" : "",
          "simpleType" : "MouthOpen",
          "variableSetterType" : "MouthOpen"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Indicates whether or not the mouth on the face is open, and the confidence level in the determination.</p>\n@param mouthOpen Indicates whether or not the mouth on the face is open, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "MouthOpen",
          "variableName" : "mouthOpen",
          "variableType" : "MouthOpen",
          "documentation" : "<p>Indicates whether or not the mouth on the face is open, and the confidence level in the determination.</p>",
          "simpleType" : "MouthOpen",
          "variableSetterType" : "MouthOpen"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Emotions",
        "c2jShape" : "Emotions",
        "deprecated" : false,
        "documentation" : "<p>The emotions detected on the face, and the confidence level in the determination. For example, HAPPY, SAD, and ANGRY. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The emotions detected on the face, and the confidence level in the determination. For example, HAPPY, SAD, and ANGRY. </p>\n@param emotions The emotions detected on the face, and the confidence level in the determination. For example, HAPPY, SAD, and ANGRY.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withEmotions",
        "getterDocumentation" : "/**<p>The emotions detected on the face, and the confidence level in the determination. For example, HAPPY, SAD, and ANGRY. </p>\n@return The emotions detected on the face, and the confidence level in the determination. For example, HAPPY, SAD, and ANGRY.*/",
        "getterMethodName" : "getEmotions",
        "getterModel" : {
          "returnType" : "java.util.List<Emotion>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Emotions",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Emotions",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Emotion",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Emotion",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "Emotion",
              "variableName" : "member",
              "variableType" : "Emotion",
              "documentation" : "",
              "simpleType" : "Emotion",
              "variableSetterType" : "Emotion"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "Emotion",
              "variableName" : "member",
              "variableType" : "Emotion",
              "documentation" : "",
              "simpleType" : "Emotion",
              "variableSetterType" : "Emotion"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Emotion",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Emotion",
          "templateImplType" : "java.util.ArrayList<Emotion>",
          "templateType" : "java.util.List<Emotion>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Emotions",
        "setterDocumentation" : "/**<p>The emotions detected on the face, and the confidence level in the determination. For example, HAPPY, SAD, and ANGRY. </p>\n@param emotions The emotions detected on the face, and the confidence level in the determination. For example, HAPPY, SAD, and ANGRY.*/",
        "setterMethodName" : "setEmotions",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<Emotion>",
          "variableName" : "emotions",
          "variableType" : "java.util.List<Emotion>",
          "documentation" : "",
          "simpleType" : "List<Emotion>",
          "variableSetterType" : "java.util.Collection<Emotion>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The emotions detected on the face, and the confidence level in the determination. For example, HAPPY, SAD, and ANGRY. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setEmotions(java.util.Collection)} or {@link #withEmotions(java.util.Collection)} if you want to override the existing values.</p>\n@param emotions The emotions detected on the face, and the confidence level in the determination. For example, HAPPY, SAD, and ANGRY.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<Emotion>",
          "variableName" : "emotions",
          "variableType" : "java.util.List<Emotion>",
          "documentation" : "<p>The emotions detected on the face, and the confidence level in the determination. For example, HAPPY, SAD, and ANGRY. </p>",
          "simpleType" : "List<Emotion>",
          "variableSetterType" : "java.util.Collection<Emotion>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Landmarks",
        "c2jShape" : "Landmarks",
        "deprecated" : false,
        "documentation" : "<p>Indicates the location of landmarks on the face.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Indicates the location of landmarks on the face.</p>\n@param landmarks Indicates the location of landmarks on the face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLandmarks",
        "getterDocumentation" : "/**<p>Indicates the location of landmarks on the face.</p>\n@return Indicates the location of landmarks on the face.*/",
        "getterMethodName" : "getLandmarks",
        "getterModel" : {
          "returnType" : "java.util.List<Landmark>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Landmarks",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Landmarks",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Landmark",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Landmark",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "Landmark",
              "variableName" : "member",
              "variableType" : "Landmark",
              "documentation" : "",
              "simpleType" : "Landmark",
              "variableSetterType" : "Landmark"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "Landmark",
              "variableName" : "member",
              "variableType" : "Landmark",
              "documentation" : "",
              "simpleType" : "Landmark",
              "variableSetterType" : "Landmark"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Landmark",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Landmark",
          "templateImplType" : "java.util.ArrayList<Landmark>",
          "templateType" : "java.util.List<Landmark>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Landmarks",
        "setterDocumentation" : "/**<p>Indicates the location of landmarks on the face.</p>\n@param landmarks Indicates the location of landmarks on the face.*/",
        "setterMethodName" : "setLandmarks",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<Landmark>",
          "variableName" : "landmarks",
          "variableType" : "java.util.List<Landmark>",
          "documentation" : "",
          "simpleType" : "List<Landmark>",
          "variableSetterType" : "java.util.Collection<Landmark>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Indicates the location of landmarks on the face.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLandmarks(java.util.Collection)} or {@link #withLandmarks(java.util.Collection)} if you want to override the existing values.</p>\n@param landmarks Indicates the location of landmarks on the face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<Landmark>",
          "variableName" : "landmarks",
          "variableType" : "java.util.List<Landmark>",
          "documentation" : "<p>Indicates the location of landmarks on the face.</p>",
          "simpleType" : "List<Landmark>",
          "variableSetterType" : "java.util.Collection<Landmark>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Pose",
        "c2jShape" : "Pose",
        "deprecated" : false,
        "documentation" : "<p>Indicates the pose of the face as determined by its pitch, roll, and yaw.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Indicates the pose of the face as determined by its pitch, roll, and yaw.</p>\n@param pose Indicates the pose of the face as determined by its pitch, roll, and yaw.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPose",
        "getterDocumentation" : "/**<p>Indicates the pose of the face as determined by its pitch, roll, and yaw.</p>\n@return Indicates the pose of the face as determined by its pitch, roll, and yaw.*/",
        "getterMethodName" : "getPose",
        "getterModel" : {
          "returnType" : "Pose",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Pose",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Pose",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Pose",
        "setterDocumentation" : "/**<p>Indicates the pose of the face as determined by its pitch, roll, and yaw.</p>\n@param pose Indicates the pose of the face as determined by its pitch, roll, and yaw.*/",
        "setterMethodName" : "setPose",
        "setterModel" : {
          "variableDeclarationType" : "Pose",
          "variableName" : "pose",
          "variableType" : "Pose",
          "documentation" : "",
          "simpleType" : "Pose",
          "variableSetterType" : "Pose"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Indicates the pose of the face as determined by its pitch, roll, and yaw.</p>\n@param pose Indicates the pose of the face as determined by its pitch, roll, and yaw.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Pose",
          "variableName" : "pose",
          "variableType" : "Pose",
          "documentation" : "<p>Indicates the pose of the face as determined by its pitch, roll, and yaw.</p>",
          "simpleType" : "Pose",
          "variableSetterType" : "Pose"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Quality",
        "c2jShape" : "ImageQuality",
        "deprecated" : false,
        "documentation" : "<p>Identifies image brightness and sharpness.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Identifies image brightness and sharpness.</p>\n@param quality Identifies image brightness and sharpness.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withQuality",
        "getterDocumentation" : "/**<p>Identifies image brightness and sharpness.</p>\n@return Identifies image brightness and sharpness.*/",
        "getterMethodName" : "getQuality",
        "getterModel" : {
          "returnType" : "ImageQuality",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Quality",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Quality",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Quality",
        "setterDocumentation" : "/**<p>Identifies image brightness and sharpness.</p>\n@param quality Identifies image brightness and sharpness.*/",
        "setterMethodName" : "setQuality",
        "setterModel" : {
          "variableDeclarationType" : "ImageQuality",
          "variableName" : "quality",
          "variableType" : "ImageQuality",
          "documentation" : "",
          "simpleType" : "ImageQuality",
          "variableSetterType" : "ImageQuality"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Identifies image brightness and sharpness.</p>\n@param quality Identifies image brightness and sharpness.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "ImageQuality",
          "variableName" : "quality",
          "variableType" : "ImageQuality",
          "documentation" : "<p>Identifies image brightness and sharpness.</p>",
          "simpleType" : "ImageQuality",
          "variableSetterType" : "ImageQuality"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Confidence",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>\n@param confidence Confidence level that the bounding box contains a face (and not a different object such as a tree).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withConfidence",
        "getterDocumentation" : "/**<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>\n@return Confidence level that the bounding box contains a face (and not a different object such as a tree).*/",
        "getterMethodName" : "getConfidence",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Confidence",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Confidence",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Float",
        "marshallingType" : "FLOAT",
        "name" : "Confidence",
        "setterDocumentation" : "/**<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>\n@param confidence Confidence level that the bounding box contains a face (and not a different object such as a tree).*/",
        "setterMethodName" : "setConfidence",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>\n@param confidence Confidence level that the bounding box contains a face (and not a different object such as a tree).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AgeRange" : {
          "c2jName" : "AgeRange",
          "c2jShape" : "AgeRange",
          "deprecated" : false,
          "documentation" : "<p>The estimated age range, in years, for the face. Low represents the lowest estimated age and High represents the highest estimated age.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The estimated age range, in years, for the face. Low represents the lowest estimated age and High represents the highest estimated age.</p>\n@param ageRange The estimated age range, in years, for the face. Low represents the lowest estimated age and High represents the highest estimated age.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAgeRange",
          "getterDocumentation" : "/**<p>The estimated age range, in years, for the face. Low represents the lowest estimated age and High represents the highest estimated age.</p>\n@return The estimated age range, in years, for the face. Low represents the lowest estimated age and High represents the highest estimated age.*/",
          "getterMethodName" : "getAgeRange",
          "getterModel" : {
            "returnType" : "AgeRange",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "AgeRange",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "AgeRange",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "AgeRange",
          "setterDocumentation" : "/**<p>The estimated age range, in years, for the face. Low represents the lowest estimated age and High represents the highest estimated age.</p>\n@param ageRange The estimated age range, in years, for the face. Low represents the lowest estimated age and High represents the highest estimated age.*/",
          "setterMethodName" : "setAgeRange",
          "setterModel" : {
            "variableDeclarationType" : "AgeRange",
            "variableName" : "ageRange",
            "variableType" : "AgeRange",
            "documentation" : "",
            "simpleType" : "AgeRange",
            "variableSetterType" : "AgeRange"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The estimated age range, in years, for the face. Low represents the lowest estimated age and High represents the highest estimated age.</p>\n@param ageRange The estimated age range, in years, for the face. Low represents the lowest estimated age and High represents the highest estimated age.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "AgeRange",
            "variableName" : "ageRange",
            "variableType" : "AgeRange",
            "documentation" : "<p>The estimated age range, in years, for the face. Low represents the lowest estimated age and High represents the highest estimated age.</p>",
            "simpleType" : "AgeRange",
            "variableSetterType" : "AgeRange"
          },
          "xmlNameSpaceUri" : null
        },
        "Beard" : {
          "c2jName" : "Beard",
          "c2jShape" : "Beard",
          "deprecated" : false,
          "documentation" : "<p>Indicates whether or not the face has a beard, and the confidence level in the determination.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Indicates whether or not the face has a beard, and the confidence level in the determination.</p>\n@param beard Indicates whether or not the face has a beard, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBeard",
          "getterDocumentation" : "/**<p>Indicates whether or not the face has a beard, and the confidence level in the determination.</p>\n@return Indicates whether or not the face has a beard, and the confidence level in the determination.*/",
          "getterMethodName" : "getBeard",
          "getterModel" : {
            "returnType" : "Beard",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Beard",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Beard",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Beard",
          "setterDocumentation" : "/**<p>Indicates whether or not the face has a beard, and the confidence level in the determination.</p>\n@param beard Indicates whether or not the face has a beard, and the confidence level in the determination.*/",
          "setterMethodName" : "setBeard",
          "setterModel" : {
            "variableDeclarationType" : "Beard",
            "variableName" : "beard",
            "variableType" : "Beard",
            "documentation" : "",
            "simpleType" : "Beard",
            "variableSetterType" : "Beard"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Indicates whether or not the face has a beard, and the confidence level in the determination.</p>\n@param beard Indicates whether or not the face has a beard, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Beard",
            "variableName" : "beard",
            "variableType" : "Beard",
            "documentation" : "<p>Indicates whether or not the face has a beard, and the confidence level in the determination.</p>",
            "simpleType" : "Beard",
            "variableSetterType" : "Beard"
          },
          "xmlNameSpaceUri" : null
        },
        "BoundingBox" : {
          "c2jName" : "BoundingBox",
          "c2jShape" : "BoundingBox",
          "deprecated" : false,
          "documentation" : "<p>Bounding box of the face.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Bounding box of the face.</p>\n@param boundingBox Bounding box of the face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBoundingBox",
          "getterDocumentation" : "/**<p>Bounding box of the face.</p>\n@return Bounding box of the face.*/",
          "getterMethodName" : "getBoundingBox",
          "getterModel" : {
            "returnType" : "BoundingBox",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "BoundingBox",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "BoundingBox",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "BoundingBox",
          "setterDocumentation" : "/**<p>Bounding box of the face.</p>\n@param boundingBox Bounding box of the face.*/",
          "setterMethodName" : "setBoundingBox",
          "setterModel" : {
            "variableDeclarationType" : "BoundingBox",
            "variableName" : "boundingBox",
            "variableType" : "BoundingBox",
            "documentation" : "",
            "simpleType" : "BoundingBox",
            "variableSetterType" : "BoundingBox"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Bounding box of the face.</p>\n@param boundingBox Bounding box of the face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "BoundingBox",
            "variableName" : "boundingBox",
            "variableType" : "BoundingBox",
            "documentation" : "<p>Bounding box of the face.</p>",
            "simpleType" : "BoundingBox",
            "variableSetterType" : "BoundingBox"
          },
          "xmlNameSpaceUri" : null
        },
        "Confidence" : {
          "c2jName" : "Confidence",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>\n@param confidence Confidence level that the bounding box contains a face (and not a different object such as a tree).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withConfidence",
          "getterDocumentation" : "/**<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>\n@return Confidence level that the bounding box contains a face (and not a different object such as a tree).*/",
          "getterMethodName" : "getConfidence",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Confidence",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Confidence",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Float",
          "marshallingType" : "FLOAT",
          "name" : "Confidence",
          "setterDocumentation" : "/**<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>\n@param confidence Confidence level that the bounding box contains a face (and not a different object such as a tree).*/",
          "setterMethodName" : "setConfidence",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>\n@param confidence Confidence level that the bounding box contains a face (and not a different object such as a tree).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "Emotions" : {
          "c2jName" : "Emotions",
          "c2jShape" : "Emotions",
          "deprecated" : false,
          "documentation" : "<p>The emotions detected on the face, and the confidence level in the determination. For example, HAPPY, SAD, and ANGRY. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The emotions detected on the face, and the confidence level in the determination. For example, HAPPY, SAD, and ANGRY. </p>\n@param emotions The emotions detected on the face, and the confidence level in the determination. For example, HAPPY, SAD, and ANGRY.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withEmotions",
          "getterDocumentation" : "/**<p>The emotions detected on the face, and the confidence level in the determination. For example, HAPPY, SAD, and ANGRY. </p>\n@return The emotions detected on the face, and the confidence level in the determination. For example, HAPPY, SAD, and ANGRY.*/",
          "getterMethodName" : "getEmotions",
          "getterModel" : {
            "returnType" : "java.util.List<Emotion>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Emotions",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Emotions",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Emotion",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Emotion",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "Emotion",
                "variableName" : "member",
                "variableType" : "Emotion",
                "documentation" : "",
                "simpleType" : "Emotion",
                "variableSetterType" : "Emotion"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "Emotion",
                "variableName" : "member",
                "variableType" : "Emotion",
                "documentation" : "",
                "simpleType" : "Emotion",
                "variableSetterType" : "Emotion"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Emotion",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Emotion",
            "templateImplType" : "java.util.ArrayList<Emotion>",
            "templateType" : "java.util.List<Emotion>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Emotions",
          "setterDocumentation" : "/**<p>The emotions detected on the face, and the confidence level in the determination. For example, HAPPY, SAD, and ANGRY. </p>\n@param emotions The emotions detected on the face, and the confidence level in the determination. For example, HAPPY, SAD, and ANGRY.*/",
          "setterMethodName" : "setEmotions",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<Emotion>",
            "variableName" : "emotions",
            "variableType" : "java.util.List<Emotion>",
            "documentation" : "",
            "simpleType" : "List<Emotion>",
            "variableSetterType" : "java.util.Collection<Emotion>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The emotions detected on the face, and the confidence level in the determination. For example, HAPPY, SAD, and ANGRY. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setEmotions(java.util.Collection)} or {@link #withEmotions(java.util.Collection)} if you want to override the existing values.</p>\n@param emotions The emotions detected on the face, and the confidence level in the determination. For example, HAPPY, SAD, and ANGRY.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<Emotion>",
            "variableName" : "emotions",
            "variableType" : "java.util.List<Emotion>",
            "documentation" : "<p>The emotions detected on the face, and the confidence level in the determination. For example, HAPPY, SAD, and ANGRY. </p>",
            "simpleType" : "List<Emotion>",
            "variableSetterType" : "java.util.Collection<Emotion>"
          },
          "xmlNameSpaceUri" : null
        },
        "Eyeglasses" : {
          "c2jName" : "Eyeglasses",
          "c2jShape" : "Eyeglasses",
          "deprecated" : false,
          "documentation" : "<p>Indicates whether or not the face is wearing eye glasses, and the confidence level in the determination.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Indicates whether or not the face is wearing eye glasses, and the confidence level in the determination.</p>\n@param eyeglasses Indicates whether or not the face is wearing eye glasses, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withEyeglasses",
          "getterDocumentation" : "/**<p>Indicates whether or not the face is wearing eye glasses, and the confidence level in the determination.</p>\n@return Indicates whether or not the face is wearing eye glasses, and the confidence level in the determination.*/",
          "getterMethodName" : "getEyeglasses",
          "getterModel" : {
            "returnType" : "Eyeglasses",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Eyeglasses",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Eyeglasses",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Eyeglasses",
          "setterDocumentation" : "/**<p>Indicates whether or not the face is wearing eye glasses, and the confidence level in the determination.</p>\n@param eyeglasses Indicates whether or not the face is wearing eye glasses, and the confidence level in the determination.*/",
          "setterMethodName" : "setEyeglasses",
          "setterModel" : {
            "variableDeclarationType" : "Eyeglasses",
            "variableName" : "eyeglasses",
            "variableType" : "Eyeglasses",
            "documentation" : "",
            "simpleType" : "Eyeglasses",
            "variableSetterType" : "Eyeglasses"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Indicates whether or not the face is wearing eye glasses, and the confidence level in the determination.</p>\n@param eyeglasses Indicates whether or not the face is wearing eye glasses, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Eyeglasses",
            "variableName" : "eyeglasses",
            "variableType" : "Eyeglasses",
            "documentation" : "<p>Indicates whether or not the face is wearing eye glasses, and the confidence level in the determination.</p>",
            "simpleType" : "Eyeglasses",
            "variableSetterType" : "Eyeglasses"
          },
          "xmlNameSpaceUri" : null
        },
        "EyesOpen" : {
          "c2jName" : "EyesOpen",
          "c2jShape" : "EyeOpen",
          "deprecated" : false,
          "documentation" : "<p>Indicates whether or not the eyes on the face are open, and the confidence level in the determination.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Indicates whether or not the eyes on the face are open, and the confidence level in the determination.</p>\n@param eyesOpen Indicates whether or not the eyes on the face are open, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withEyesOpen",
          "getterDocumentation" : "/**<p>Indicates whether or not the eyes on the face are open, and the confidence level in the determination.</p>\n@return Indicates whether or not the eyes on the face are open, and the confidence level in the determination.*/",
          "getterMethodName" : "getEyesOpen",
          "getterModel" : {
            "returnType" : "EyeOpen",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "EyesOpen",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "EyesOpen",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "EyesOpen",
          "setterDocumentation" : "/**<p>Indicates whether or not the eyes on the face are open, and the confidence level in the determination.</p>\n@param eyesOpen Indicates whether or not the eyes on the face are open, and the confidence level in the determination.*/",
          "setterMethodName" : "setEyesOpen",
          "setterModel" : {
            "variableDeclarationType" : "EyeOpen",
            "variableName" : "eyesOpen",
            "variableType" : "EyeOpen",
            "documentation" : "",
            "simpleType" : "EyeOpen",
            "variableSetterType" : "EyeOpen"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Indicates whether or not the eyes on the face are open, and the confidence level in the determination.</p>\n@param eyesOpen Indicates whether or not the eyes on the face are open, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "EyeOpen",
            "variableName" : "eyesOpen",
            "variableType" : "EyeOpen",
            "documentation" : "<p>Indicates whether or not the eyes on the face are open, and the confidence level in the determination.</p>",
            "simpleType" : "EyeOpen",
            "variableSetterType" : "EyeOpen"
          },
          "xmlNameSpaceUri" : null
        },
        "Gender" : {
          "c2jName" : "Gender",
          "c2jShape" : "Gender",
          "deprecated" : false,
          "documentation" : "<p>Gender of the face and the confidence level in the determination.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Gender of the face and the confidence level in the determination.</p>\n@param gender Gender of the face and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withGender",
          "getterDocumentation" : "/**<p>Gender of the face and the confidence level in the determination.</p>\n@return Gender of the face and the confidence level in the determination.*/",
          "getterMethodName" : "getGender",
          "getterModel" : {
            "returnType" : "Gender",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Gender",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Gender",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Gender",
          "setterDocumentation" : "/**<p>Gender of the face and the confidence level in the determination.</p>\n@param gender Gender of the face and the confidence level in the determination.*/",
          "setterMethodName" : "setGender",
          "setterModel" : {
            "variableDeclarationType" : "Gender",
            "variableName" : "gender",
            "variableType" : "Gender",
            "documentation" : "",
            "simpleType" : "Gender",
            "variableSetterType" : "Gender"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Gender of the face and the confidence level in the determination.</p>\n@param gender Gender of the face and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Gender",
            "variableName" : "gender",
            "variableType" : "Gender",
            "documentation" : "<p>Gender of the face and the confidence level in the determination.</p>",
            "simpleType" : "Gender",
            "variableSetterType" : "Gender"
          },
          "xmlNameSpaceUri" : null
        },
        "Landmarks" : {
          "c2jName" : "Landmarks",
          "c2jShape" : "Landmarks",
          "deprecated" : false,
          "documentation" : "<p>Indicates the location of landmarks on the face.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Indicates the location of landmarks on the face.</p>\n@param landmarks Indicates the location of landmarks on the face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLandmarks",
          "getterDocumentation" : "/**<p>Indicates the location of landmarks on the face.</p>\n@return Indicates the location of landmarks on the face.*/",
          "getterMethodName" : "getLandmarks",
          "getterModel" : {
            "returnType" : "java.util.List<Landmark>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Landmarks",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Landmarks",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Landmark",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Landmark",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "Landmark",
                "variableName" : "member",
                "variableType" : "Landmark",
                "documentation" : "",
                "simpleType" : "Landmark",
                "variableSetterType" : "Landmark"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "Landmark",
                "variableName" : "member",
                "variableType" : "Landmark",
                "documentation" : "",
                "simpleType" : "Landmark",
                "variableSetterType" : "Landmark"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Landmark",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Landmark",
            "templateImplType" : "java.util.ArrayList<Landmark>",
            "templateType" : "java.util.List<Landmark>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Landmarks",
          "setterDocumentation" : "/**<p>Indicates the location of landmarks on the face.</p>\n@param landmarks Indicates the location of landmarks on the face.*/",
          "setterMethodName" : "setLandmarks",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<Landmark>",
            "variableName" : "landmarks",
            "variableType" : "java.util.List<Landmark>",
            "documentation" : "",
            "simpleType" : "List<Landmark>",
            "variableSetterType" : "java.util.Collection<Landmark>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Indicates the location of landmarks on the face.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLandmarks(java.util.Collection)} or {@link #withLandmarks(java.util.Collection)} if you want to override the existing values.</p>\n@param landmarks Indicates the location of landmarks on the face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<Landmark>",
            "variableName" : "landmarks",
            "variableType" : "java.util.List<Landmark>",
            "documentation" : "<p>Indicates the location of landmarks on the face.</p>",
            "simpleType" : "List<Landmark>",
            "variableSetterType" : "java.util.Collection<Landmark>"
          },
          "xmlNameSpaceUri" : null
        },
        "MouthOpen" : {
          "c2jName" : "MouthOpen",
          "c2jShape" : "MouthOpen",
          "deprecated" : false,
          "documentation" : "<p>Indicates whether or not the mouth on the face is open, and the confidence level in the determination.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Indicates whether or not the mouth on the face is open, and the confidence level in the determination.</p>\n@param mouthOpen Indicates whether or not the mouth on the face is open, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMouthOpen",
          "getterDocumentation" : "/**<p>Indicates whether or not the mouth on the face is open, and the confidence level in the determination.</p>\n@return Indicates whether or not the mouth on the face is open, and the confidence level in the determination.*/",
          "getterMethodName" : "getMouthOpen",
          "getterModel" : {
            "returnType" : "MouthOpen",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MouthOpen",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MouthOpen",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "MouthOpen",
          "setterDocumentation" : "/**<p>Indicates whether or not the mouth on the face is open, and the confidence level in the determination.</p>\n@param mouthOpen Indicates whether or not the mouth on the face is open, and the confidence level in the determination.*/",
          "setterMethodName" : "setMouthOpen",
          "setterModel" : {
            "variableDeclarationType" : "MouthOpen",
            "variableName" : "mouthOpen",
            "variableType" : "MouthOpen",
            "documentation" : "",
            "simpleType" : "MouthOpen",
            "variableSetterType" : "MouthOpen"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Indicates whether or not the mouth on the face is open, and the confidence level in the determination.</p>\n@param mouthOpen Indicates whether or not the mouth on the face is open, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "MouthOpen",
            "variableName" : "mouthOpen",
            "variableType" : "MouthOpen",
            "documentation" : "<p>Indicates whether or not the mouth on the face is open, and the confidence level in the determination.</p>",
            "simpleType" : "MouthOpen",
            "variableSetterType" : "MouthOpen"
          },
          "xmlNameSpaceUri" : null
        },
        "Mustache" : {
          "c2jName" : "Mustache",
          "c2jShape" : "Mustache",
          "deprecated" : false,
          "documentation" : "<p>Indicates whether or not the face has a mustache, and the confidence level in the determination.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Indicates whether or not the face has a mustache, and the confidence level in the determination.</p>\n@param mustache Indicates whether or not the face has a mustache, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMustache",
          "getterDocumentation" : "/**<p>Indicates whether or not the face has a mustache, and the confidence level in the determination.</p>\n@return Indicates whether or not the face has a mustache, and the confidence level in the determination.*/",
          "getterMethodName" : "getMustache",
          "getterModel" : {
            "returnType" : "Mustache",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Mustache",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Mustache",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Mustache",
          "setterDocumentation" : "/**<p>Indicates whether or not the face has a mustache, and the confidence level in the determination.</p>\n@param mustache Indicates whether or not the face has a mustache, and the confidence level in the determination.*/",
          "setterMethodName" : "setMustache",
          "setterModel" : {
            "variableDeclarationType" : "Mustache",
            "variableName" : "mustache",
            "variableType" : "Mustache",
            "documentation" : "",
            "simpleType" : "Mustache",
            "variableSetterType" : "Mustache"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Indicates whether or not the face has a mustache, and the confidence level in the determination.</p>\n@param mustache Indicates whether or not the face has a mustache, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Mustache",
            "variableName" : "mustache",
            "variableType" : "Mustache",
            "documentation" : "<p>Indicates whether or not the face has a mustache, and the confidence level in the determination.</p>",
            "simpleType" : "Mustache",
            "variableSetterType" : "Mustache"
          },
          "xmlNameSpaceUri" : null
        },
        "Pose" : {
          "c2jName" : "Pose",
          "c2jShape" : "Pose",
          "deprecated" : false,
          "documentation" : "<p>Indicates the pose of the face as determined by its pitch, roll, and yaw.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Indicates the pose of the face as determined by its pitch, roll, and yaw.</p>\n@param pose Indicates the pose of the face as determined by its pitch, roll, and yaw.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPose",
          "getterDocumentation" : "/**<p>Indicates the pose of the face as determined by its pitch, roll, and yaw.</p>\n@return Indicates the pose of the face as determined by its pitch, roll, and yaw.*/",
          "getterMethodName" : "getPose",
          "getterModel" : {
            "returnType" : "Pose",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Pose",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Pose",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Pose",
          "setterDocumentation" : "/**<p>Indicates the pose of the face as determined by its pitch, roll, and yaw.</p>\n@param pose Indicates the pose of the face as determined by its pitch, roll, and yaw.*/",
          "setterMethodName" : "setPose",
          "setterModel" : {
            "variableDeclarationType" : "Pose",
            "variableName" : "pose",
            "variableType" : "Pose",
            "documentation" : "",
            "simpleType" : "Pose",
            "variableSetterType" : "Pose"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Indicates the pose of the face as determined by its pitch, roll, and yaw.</p>\n@param pose Indicates the pose of the face as determined by its pitch, roll, and yaw.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Pose",
            "variableName" : "pose",
            "variableType" : "Pose",
            "documentation" : "<p>Indicates the pose of the face as determined by its pitch, roll, and yaw.</p>",
            "simpleType" : "Pose",
            "variableSetterType" : "Pose"
          },
          "xmlNameSpaceUri" : null
        },
        "Quality" : {
          "c2jName" : "Quality",
          "c2jShape" : "ImageQuality",
          "deprecated" : false,
          "documentation" : "<p>Identifies image brightness and sharpness.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Identifies image brightness and sharpness.</p>\n@param quality Identifies image brightness and sharpness.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withQuality",
          "getterDocumentation" : "/**<p>Identifies image brightness and sharpness.</p>\n@return Identifies image brightness and sharpness.*/",
          "getterMethodName" : "getQuality",
          "getterModel" : {
            "returnType" : "ImageQuality",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Quality",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Quality",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Quality",
          "setterDocumentation" : "/**<p>Identifies image brightness and sharpness.</p>\n@param quality Identifies image brightness and sharpness.*/",
          "setterMethodName" : "setQuality",
          "setterModel" : {
            "variableDeclarationType" : "ImageQuality",
            "variableName" : "quality",
            "variableType" : "ImageQuality",
            "documentation" : "",
            "simpleType" : "ImageQuality",
            "variableSetterType" : "ImageQuality"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Identifies image brightness and sharpness.</p>\n@param quality Identifies image brightness and sharpness.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "ImageQuality",
            "variableName" : "quality",
            "variableType" : "ImageQuality",
            "documentation" : "<p>Identifies image brightness and sharpness.</p>",
            "simpleType" : "ImageQuality",
            "variableSetterType" : "ImageQuality"
          },
          "xmlNameSpaceUri" : null
        },
        "Smile" : {
          "c2jName" : "Smile",
          "c2jShape" : "Smile",
          "deprecated" : false,
          "documentation" : "<p>Indicates whether or not the face is smiling, and the confidence level in the determination.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Indicates whether or not the face is smiling, and the confidence level in the determination.</p>\n@param smile Indicates whether or not the face is smiling, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSmile",
          "getterDocumentation" : "/**<p>Indicates whether or not the face is smiling, and the confidence level in the determination.</p>\n@return Indicates whether or not the face is smiling, and the confidence level in the determination.*/",
          "getterMethodName" : "getSmile",
          "getterModel" : {
            "returnType" : "Smile",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Smile",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Smile",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Smile",
          "setterDocumentation" : "/**<p>Indicates whether or not the face is smiling, and the confidence level in the determination.</p>\n@param smile Indicates whether or not the face is smiling, and the confidence level in the determination.*/",
          "setterMethodName" : "setSmile",
          "setterModel" : {
            "variableDeclarationType" : "Smile",
            "variableName" : "smile",
            "variableType" : "Smile",
            "documentation" : "",
            "simpleType" : "Smile",
            "variableSetterType" : "Smile"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Indicates whether or not the face is smiling, and the confidence level in the determination.</p>\n@param smile Indicates whether or not the face is smiling, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Smile",
            "variableName" : "smile",
            "variableType" : "Smile",
            "documentation" : "<p>Indicates whether or not the face is smiling, and the confidence level in the determination.</p>",
            "simpleType" : "Smile",
            "variableSetterType" : "Smile"
          },
          "xmlNameSpaceUri" : null
        },
        "Sunglasses" : {
          "c2jName" : "Sunglasses",
          "c2jShape" : "Sunglasses",
          "deprecated" : false,
          "documentation" : "<p>Indicates whether or not the face is wearing sunglasses, and the confidence level in the determination.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Indicates whether or not the face is wearing sunglasses, and the confidence level in the determination.</p>\n@param sunglasses Indicates whether or not the face is wearing sunglasses, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSunglasses",
          "getterDocumentation" : "/**<p>Indicates whether or not the face is wearing sunglasses, and the confidence level in the determination.</p>\n@return Indicates whether or not the face is wearing sunglasses, and the confidence level in the determination.*/",
          "getterMethodName" : "getSunglasses",
          "getterModel" : {
            "returnType" : "Sunglasses",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Sunglasses",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Sunglasses",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Sunglasses",
          "setterDocumentation" : "/**<p>Indicates whether or not the face is wearing sunglasses, and the confidence level in the determination.</p>\n@param sunglasses Indicates whether or not the face is wearing sunglasses, and the confidence level in the determination.*/",
          "setterMethodName" : "setSunglasses",
          "setterModel" : {
            "variableDeclarationType" : "Sunglasses",
            "variableName" : "sunglasses",
            "variableType" : "Sunglasses",
            "documentation" : "",
            "simpleType" : "Sunglasses",
            "variableSetterType" : "Sunglasses"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Indicates whether or not the face is wearing sunglasses, and the confidence level in the determination.</p>\n@param sunglasses Indicates whether or not the face is wearing sunglasses, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Sunglasses",
            "variableName" : "sunglasses",
            "variableType" : "Sunglasses",
            "documentation" : "<p>Indicates whether or not the face is wearing sunglasses, and the confidence level in the determination.</p>",
            "simpleType" : "Sunglasses",
            "variableSetterType" : "Sunglasses"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "FaceDetail",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "FaceDetail",
        "variableName" : "faceDetail",
        "variableType" : "FaceDetail",
        "documentation" : null,
        "simpleType" : "FaceDetail",
        "variableSetterType" : "FaceDetail"
      },
      "wrapper" : false
    },
    "FaceMatch" : {
      "c2jName" : "FaceMatch",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Provides face metadata. In addition, it also provides the confidence in the match of this face with the input face.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Similarity",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>Confidence in the match of this face with the input face.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Confidence in the match of this face with the input face.</p>\n@param similarity Confidence in the match of this face with the input face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSimilarity",
        "getterDocumentation" : "/**<p>Confidence in the match of this face with the input face.</p>\n@return Confidence in the match of this face with the input face.*/",
        "getterMethodName" : "getSimilarity",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Similarity",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Similarity",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Float",
        "marshallingType" : "FLOAT",
        "name" : "Similarity",
        "setterDocumentation" : "/**<p>Confidence in the match of this face with the input face.</p>\n@param similarity Confidence in the match of this face with the input face.*/",
        "setterMethodName" : "setSimilarity",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "similarity",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Confidence in the match of this face with the input face.</p>\n@param similarity Confidence in the match of this face with the input face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "similarity",
          "variableType" : "Float",
          "documentation" : "<p>Confidence in the match of this face with the input face.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Face",
        "c2jShape" : "Face",
        "deprecated" : false,
        "documentation" : "<p>Describes the face properties such as the bounding box, face ID, image ID of the source image, and external image ID that you assigned.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Describes the face properties such as the bounding box, face ID, image ID of the source image, and external image ID that you assigned.</p>\n@param face Describes the face properties such as the bounding box, face ID, image ID of the source image, and external image ID that you assigned.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFace",
        "getterDocumentation" : "/**<p>Describes the face properties such as the bounding box, face ID, image ID of the source image, and external image ID that you assigned.</p>\n@return Describes the face properties such as the bounding box, face ID, image ID of the source image, and external image ID that you assigned.*/",
        "getterMethodName" : "getFace",
        "getterModel" : {
          "returnType" : "Face",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Face",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Face",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Face",
        "setterDocumentation" : "/**<p>Describes the face properties such as the bounding box, face ID, image ID of the source image, and external image ID that you assigned.</p>\n@param face Describes the face properties such as the bounding box, face ID, image ID of the source image, and external image ID that you assigned.*/",
        "setterMethodName" : "setFace",
        "setterModel" : {
          "variableDeclarationType" : "Face",
          "variableName" : "face",
          "variableType" : "Face",
          "documentation" : "",
          "simpleType" : "Face",
          "variableSetterType" : "Face"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Describes the face properties such as the bounding box, face ID, image ID of the source image, and external image ID that you assigned.</p>\n@param face Describes the face properties such as the bounding box, face ID, image ID of the source image, and external image ID that you assigned.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Face",
          "variableName" : "face",
          "variableType" : "Face",
          "documentation" : "<p>Describes the face properties such as the bounding box, face ID, image ID of the source image, and external image ID that you assigned.</p>",
          "simpleType" : "Face",
          "variableSetterType" : "Face"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Face" : {
          "c2jName" : "Face",
          "c2jShape" : "Face",
          "deprecated" : false,
          "documentation" : "<p>Describes the face properties such as the bounding box, face ID, image ID of the source image, and external image ID that you assigned.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Describes the face properties such as the bounding box, face ID, image ID of the source image, and external image ID that you assigned.</p>\n@param face Describes the face properties such as the bounding box, face ID, image ID of the source image, and external image ID that you assigned.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFace",
          "getterDocumentation" : "/**<p>Describes the face properties such as the bounding box, face ID, image ID of the source image, and external image ID that you assigned.</p>\n@return Describes the face properties such as the bounding box, face ID, image ID of the source image, and external image ID that you assigned.*/",
          "getterMethodName" : "getFace",
          "getterModel" : {
            "returnType" : "Face",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Face",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Face",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Face",
          "setterDocumentation" : "/**<p>Describes the face properties such as the bounding box, face ID, image ID of the source image, and external image ID that you assigned.</p>\n@param face Describes the face properties such as the bounding box, face ID, image ID of the source image, and external image ID that you assigned.*/",
          "setterMethodName" : "setFace",
          "setterModel" : {
            "variableDeclarationType" : "Face",
            "variableName" : "face",
            "variableType" : "Face",
            "documentation" : "",
            "simpleType" : "Face",
            "variableSetterType" : "Face"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Describes the face properties such as the bounding box, face ID, image ID of the source image, and external image ID that you assigned.</p>\n@param face Describes the face properties such as the bounding box, face ID, image ID of the source image, and external image ID that you assigned.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Face",
            "variableName" : "face",
            "variableType" : "Face",
            "documentation" : "<p>Describes the face properties such as the bounding box, face ID, image ID of the source image, and external image ID that you assigned.</p>",
            "simpleType" : "Face",
            "variableSetterType" : "Face"
          },
          "xmlNameSpaceUri" : null
        },
        "Similarity" : {
          "c2jName" : "Similarity",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>Confidence in the match of this face with the input face.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Confidence in the match of this face with the input face.</p>\n@param similarity Confidence in the match of this face with the input face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSimilarity",
          "getterDocumentation" : "/**<p>Confidence in the match of this face with the input face.</p>\n@return Confidence in the match of this face with the input face.*/",
          "getterMethodName" : "getSimilarity",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Similarity",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Similarity",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Float",
          "marshallingType" : "FLOAT",
          "name" : "Similarity",
          "setterDocumentation" : "/**<p>Confidence in the match of this face with the input face.</p>\n@param similarity Confidence in the match of this face with the input face.*/",
          "setterMethodName" : "setSimilarity",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "similarity",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Confidence in the match of this face with the input face.</p>\n@param similarity Confidence in the match of this face with the input face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "similarity",
            "variableType" : "Float",
            "documentation" : "<p>Confidence in the match of this face with the input face.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "FaceMatch",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "FaceMatch",
        "variableName" : "faceMatch",
        "variableType" : "FaceMatch",
        "documentation" : null,
        "simpleType" : "FaceMatch",
        "variableSetterType" : "FaceMatch"
      },
      "wrapper" : false
    },
    "FaceRecord" : {
      "c2jName" : "FaceRecord",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Object containing both the face metadata (stored in the back-end database) and facial attributes that are detected but aren't stored in the database.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Face",
        "c2jShape" : "Face",
        "deprecated" : false,
        "documentation" : "<p>Describes the face properties such as the bounding box, face ID, image ID of the input image, and external image ID that you assigned. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Describes the face properties such as the bounding box, face ID, image ID of the input image, and external image ID that you assigned. </p>\n@param face Describes the face properties such as the bounding box, face ID, image ID of the input image, and external image ID that you assigned.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFace",
        "getterDocumentation" : "/**<p>Describes the face properties such as the bounding box, face ID, image ID of the input image, and external image ID that you assigned. </p>\n@return Describes the face properties such as the bounding box, face ID, image ID of the input image, and external image ID that you assigned.*/",
        "getterMethodName" : "getFace",
        "getterModel" : {
          "returnType" : "Face",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Face",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Face",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Face",
        "setterDocumentation" : "/**<p>Describes the face properties such as the bounding box, face ID, image ID of the input image, and external image ID that you assigned. </p>\n@param face Describes the face properties such as the bounding box, face ID, image ID of the input image, and external image ID that you assigned.*/",
        "setterMethodName" : "setFace",
        "setterModel" : {
          "variableDeclarationType" : "Face",
          "variableName" : "face",
          "variableType" : "Face",
          "documentation" : "",
          "simpleType" : "Face",
          "variableSetterType" : "Face"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Describes the face properties such as the bounding box, face ID, image ID of the input image, and external image ID that you assigned. </p>\n@param face Describes the face properties such as the bounding box, face ID, image ID of the input image, and external image ID that you assigned.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Face",
          "variableName" : "face",
          "variableType" : "Face",
          "documentation" : "<p>Describes the face properties such as the bounding box, face ID, image ID of the input image, and external image ID that you assigned. </p>",
          "simpleType" : "Face",
          "variableSetterType" : "Face"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "FaceDetail",
        "c2jShape" : "FaceDetail",
        "deprecated" : false,
        "documentation" : "<p>Structure containing attributes of the face that the algorithm detected.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Structure containing attributes of the face that the algorithm detected.</p>\n@param faceDetail Structure containing attributes of the face that the algorithm detected.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFaceDetail",
        "getterDocumentation" : "/**<p>Structure containing attributes of the face that the algorithm detected.</p>\n@return Structure containing attributes of the face that the algorithm detected.*/",
        "getterMethodName" : "getFaceDetail",
        "getterModel" : {
          "returnType" : "FaceDetail",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "FaceDetail",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "FaceDetail",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "FaceDetail",
        "setterDocumentation" : "/**<p>Structure containing attributes of the face that the algorithm detected.</p>\n@param faceDetail Structure containing attributes of the face that the algorithm detected.*/",
        "setterMethodName" : "setFaceDetail",
        "setterModel" : {
          "variableDeclarationType" : "FaceDetail",
          "variableName" : "faceDetail",
          "variableType" : "FaceDetail",
          "documentation" : "",
          "simpleType" : "FaceDetail",
          "variableSetterType" : "FaceDetail"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Structure containing attributes of the face that the algorithm detected.</p>\n@param faceDetail Structure containing attributes of the face that the algorithm detected.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "FaceDetail",
          "variableName" : "faceDetail",
          "variableType" : "FaceDetail",
          "documentation" : "<p>Structure containing attributes of the face that the algorithm detected.</p>",
          "simpleType" : "FaceDetail",
          "variableSetterType" : "FaceDetail"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Face" : {
          "c2jName" : "Face",
          "c2jShape" : "Face",
          "deprecated" : false,
          "documentation" : "<p>Describes the face properties such as the bounding box, face ID, image ID of the input image, and external image ID that you assigned. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Describes the face properties such as the bounding box, face ID, image ID of the input image, and external image ID that you assigned. </p>\n@param face Describes the face properties such as the bounding box, face ID, image ID of the input image, and external image ID that you assigned.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFace",
          "getterDocumentation" : "/**<p>Describes the face properties such as the bounding box, face ID, image ID of the input image, and external image ID that you assigned. </p>\n@return Describes the face properties such as the bounding box, face ID, image ID of the input image, and external image ID that you assigned.*/",
          "getterMethodName" : "getFace",
          "getterModel" : {
            "returnType" : "Face",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Face",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Face",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Face",
          "setterDocumentation" : "/**<p>Describes the face properties such as the bounding box, face ID, image ID of the input image, and external image ID that you assigned. </p>\n@param face Describes the face properties such as the bounding box, face ID, image ID of the input image, and external image ID that you assigned.*/",
          "setterMethodName" : "setFace",
          "setterModel" : {
            "variableDeclarationType" : "Face",
            "variableName" : "face",
            "variableType" : "Face",
            "documentation" : "",
            "simpleType" : "Face",
            "variableSetterType" : "Face"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Describes the face properties such as the bounding box, face ID, image ID of the input image, and external image ID that you assigned. </p>\n@param face Describes the face properties such as the bounding box, face ID, image ID of the input image, and external image ID that you assigned.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Face",
            "variableName" : "face",
            "variableType" : "Face",
            "documentation" : "<p>Describes the face properties such as the bounding box, face ID, image ID of the input image, and external image ID that you assigned. </p>",
            "simpleType" : "Face",
            "variableSetterType" : "Face"
          },
          "xmlNameSpaceUri" : null
        },
        "FaceDetail" : {
          "c2jName" : "FaceDetail",
          "c2jShape" : "FaceDetail",
          "deprecated" : false,
          "documentation" : "<p>Structure containing attributes of the face that the algorithm detected.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Structure containing attributes of the face that the algorithm detected.</p>\n@param faceDetail Structure containing attributes of the face that the algorithm detected.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFaceDetail",
          "getterDocumentation" : "/**<p>Structure containing attributes of the face that the algorithm detected.</p>\n@return Structure containing attributes of the face that the algorithm detected.*/",
          "getterMethodName" : "getFaceDetail",
          "getterModel" : {
            "returnType" : "FaceDetail",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "FaceDetail",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "FaceDetail",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "FaceDetail",
          "setterDocumentation" : "/**<p>Structure containing attributes of the face that the algorithm detected.</p>\n@param faceDetail Structure containing attributes of the face that the algorithm detected.*/",
          "setterMethodName" : "setFaceDetail",
          "setterModel" : {
            "variableDeclarationType" : "FaceDetail",
            "variableName" : "faceDetail",
            "variableType" : "FaceDetail",
            "documentation" : "",
            "simpleType" : "FaceDetail",
            "variableSetterType" : "FaceDetail"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Structure containing attributes of the face that the algorithm detected.</p>\n@param faceDetail Structure containing attributes of the face that the algorithm detected.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "FaceDetail",
            "variableName" : "faceDetail",
            "variableType" : "FaceDetail",
            "documentation" : "<p>Structure containing attributes of the face that the algorithm detected.</p>",
            "simpleType" : "FaceDetail",
            "variableSetterType" : "FaceDetail"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "FaceRecord",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "FaceRecord",
        "variableName" : "faceRecord",
        "variableType" : "FaceRecord",
        "documentation" : null,
        "simpleType" : "FaceRecord",
        "variableSetterType" : "FaceRecord"
      },
      "wrapper" : false
    },
    "Gender" : {
      "c2jName" : "Gender",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Gender of the face and the confidence level in the determination.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Value",
        "c2jShape" : "GenderType",
        "deprecated" : false,
        "documentation" : "<p>Gender of the face.</p>",
        "enumType" : "GenderType",
        "fluentSetterDocumentation" : "/**<p>Gender of the face.</p>\n@param value Gender of the face.\n@return Returns a reference to this object so that method calls can be chained together.\n@see GenderType*/",
        "fluentSetterMethodName" : "withValue",
        "getterDocumentation" : "/**<p>Gender of the face.</p>\n@return Gender of the face.\n@see GenderType*/",
        "getterMethodName" : "getValue",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Value",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Value",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Value",
        "setterDocumentation" : "/**<p>Gender of the face.</p>\n@param value Gender of the face.\n@see GenderType*/",
        "setterMethodName" : "setValue",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "value",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Gender of the face.</p>\n@param value Gender of the face.\n@return Returns a reference to this object so that method calls can be chained together.\n@see GenderType*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "value",
          "variableType" : "String",
          "documentation" : "<p>Gender of the face.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Confidence",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>Level of confidence in the determination.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withConfidence",
        "getterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@return Level of confidence in the determination.*/",
        "getterMethodName" : "getConfidence",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Confidence",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Confidence",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Float",
        "marshallingType" : "FLOAT",
        "name" : "Confidence",
        "setterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.*/",
        "setterMethodName" : "setConfidence",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "<p>Level of confidence in the determination.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Confidence" : {
          "c2jName" : "Confidence",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>Level of confidence in the determination.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withConfidence",
          "getterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@return Level of confidence in the determination.*/",
          "getterMethodName" : "getConfidence",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Confidence",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Confidence",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Float",
          "marshallingType" : "FLOAT",
          "name" : "Confidence",
          "setterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.*/",
          "setterMethodName" : "setConfidence",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "<p>Level of confidence in the determination.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "Value" : {
          "c2jName" : "Value",
          "c2jShape" : "GenderType",
          "deprecated" : false,
          "documentation" : "<p>Gender of the face.</p>",
          "enumType" : "GenderType",
          "fluentSetterDocumentation" : "/**<p>Gender of the face.</p>\n@param value Gender of the face.\n@return Returns a reference to this object so that method calls can be chained together.\n@see GenderType*/",
          "fluentSetterMethodName" : "withValue",
          "getterDocumentation" : "/**<p>Gender of the face.</p>\n@return Gender of the face.\n@see GenderType*/",
          "getterMethodName" : "getValue",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Value",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Value",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Value",
          "setterDocumentation" : "/**<p>Gender of the face.</p>\n@param value Gender of the face.\n@see GenderType*/",
          "setterMethodName" : "setValue",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "value",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Gender of the face.</p>\n@param value Gender of the face.\n@return Returns a reference to this object so that method calls can be chained together.\n@see GenderType*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "value",
            "variableType" : "String",
            "documentation" : "<p>Gender of the face.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Gender",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "Gender",
        "variableName" : "gender",
        "variableType" : "Gender",
        "documentation" : null,
        "simpleType" : "Gender",
        "variableSetterType" : "Gender"
      },
      "wrapper" : false
    },
    "GenderType" : {
      "c2jName" : "GenderType",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "Male",
        "value" : "Male"
      }, {
        "name" : "Female",
        "value" : "Female"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GenderType",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "GenderType",
        "variableName" : "genderType",
        "variableType" : "GenderType",
        "documentation" : null,
        "simpleType" : "GenderType",
        "variableSetterType" : "GenderType"
      },
      "wrapper" : false
    },
    "GetCelebrityInfoRequest" : {
      "c2jName" : "GetCelebrityInfoRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetCelebrityInfo",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "RekognitionService.GetCelebrityInfo",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "Id",
        "c2jShape" : "RekognitionUniqueId",
        "deprecated" : false,
        "documentation" : "<p>The ID for the celebrity. You get the celebrity ID from a call to the operation, which recognizes celebrities in an image. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID for the celebrity. You get the celebrity ID from a call to the operation, which recognizes celebrities in an image. </p>\n@param id The ID for the celebrity. You get the celebrity ID from a call to the operation, which recognizes celebrities in an image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withId",
        "getterDocumentation" : "/**<p>The ID for the celebrity. You get the celebrity ID from a call to the operation, which recognizes celebrities in an image. </p>\n@return The ID for the celebrity. You get the celebrity ID from a call to the operation, which recognizes celebrities in an image.*/",
        "getterMethodName" : "getId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Id",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Id",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Id",
        "setterDocumentation" : "/**<p>The ID for the celebrity. You get the celebrity ID from a call to the operation, which recognizes celebrities in an image. </p>\n@param id The ID for the celebrity. You get the celebrity ID from a call to the operation, which recognizes celebrities in an image.*/",
        "setterMethodName" : "setId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "id",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID for the celebrity. You get the celebrity ID from a call to the operation, which recognizes celebrities in an image. </p>\n@param id The ID for the celebrity. You get the celebrity ID from a call to the operation, which recognizes celebrities in an image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "id",
          "variableType" : "String",
          "documentation" : "<p>The ID for the celebrity. You get the celebrity ID from a call to the operation, which recognizes celebrities in an image. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Id" : {
          "c2jName" : "Id",
          "c2jShape" : "RekognitionUniqueId",
          "deprecated" : false,
          "documentation" : "<p>The ID for the celebrity. You get the celebrity ID from a call to the operation, which recognizes celebrities in an image. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID for the celebrity. You get the celebrity ID from a call to the operation, which recognizes celebrities in an image. </p>\n@param id The ID for the celebrity. You get the celebrity ID from a call to the operation, which recognizes celebrities in an image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withId",
          "getterDocumentation" : "/**<p>The ID for the celebrity. You get the celebrity ID from a call to the operation, which recognizes celebrities in an image. </p>\n@return The ID for the celebrity. You get the celebrity ID from a call to the operation, which recognizes celebrities in an image.*/",
          "getterMethodName" : "getId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Id",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Id",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Id",
          "setterDocumentation" : "/**<p>The ID for the celebrity. You get the celebrity ID from a call to the operation, which recognizes celebrities in an image. </p>\n@param id The ID for the celebrity. You get the celebrity ID from a call to the operation, which recognizes celebrities in an image.*/",
          "setterMethodName" : "setId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "id",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID for the celebrity. You get the celebrity ID from a call to the operation, which recognizes celebrities in an image. </p>\n@param id The ID for the celebrity. You get the celebrity ID from a call to the operation, which recognizes celebrities in an image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "id",
            "variableType" : "String",
            "documentation" : "<p>The ID for the celebrity. You get the celebrity ID from a call to the operation, which recognizes celebrities in an image. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Id" ],
      "shapeName" : "GetCelebrityInfoRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "GetCelebrityInfoRequest",
        "variableName" : "getCelebrityInfoRequest",
        "variableType" : "GetCelebrityInfoRequest",
        "documentation" : null,
        "simpleType" : "GetCelebrityInfoRequest",
        "variableSetterType" : "GetCelebrityInfoRequest"
      },
      "wrapper" : false
    },
    "GetCelebrityInfoResult" : {
      "c2jName" : "GetCelebrityInfoResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Urls",
        "c2jShape" : "Urls",
        "deprecated" : false,
        "documentation" : "<p>An array of URLs pointing to additional celebrity information. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An array of URLs pointing to additional celebrity information. </p>\n@param urls An array of URLs pointing to additional celebrity information.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withUrls",
        "getterDocumentation" : "/**<p>An array of URLs pointing to additional celebrity information. </p>\n@return An array of URLs pointing to additional celebrity information.*/",
        "getterMethodName" : "getUrls",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Urls",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Urls",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Url",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Urls",
        "setterDocumentation" : "/**<p>An array of URLs pointing to additional celebrity information. </p>\n@param urls An array of URLs pointing to additional celebrity information.*/",
        "setterMethodName" : "setUrls",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "urls",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An array of URLs pointing to additional celebrity information. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setUrls(java.util.Collection)} or {@link #withUrls(java.util.Collection)} if you want to override the existing values.</p>\n@param urls An array of URLs pointing to additional celebrity information.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "urls",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>An array of URLs pointing to additional celebrity information. </p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Name",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>The name of the celebrity.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the celebrity.</p>\n@param name The name of the celebrity.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>The name of the celebrity.</p>\n@return The name of the celebrity.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Name",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "setterDocumentation" : "/**<p>The name of the celebrity.</p>\n@param name The name of the celebrity.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the celebrity.</p>\n@param name The name of the celebrity.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>The name of the celebrity.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Name" : {
          "c2jName" : "Name",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>The name of the celebrity.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the celebrity.</p>\n@param name The name of the celebrity.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>The name of the celebrity.</p>\n@return The name of the celebrity.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Name",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "setterDocumentation" : "/**<p>The name of the celebrity.</p>\n@param name The name of the celebrity.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the celebrity.</p>\n@param name The name of the celebrity.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>The name of the celebrity.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Urls" : {
          "c2jName" : "Urls",
          "c2jShape" : "Urls",
          "deprecated" : false,
          "documentation" : "<p>An array of URLs pointing to additional celebrity information. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An array of URLs pointing to additional celebrity information. </p>\n@param urls An array of URLs pointing to additional celebrity information.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withUrls",
          "getterDocumentation" : "/**<p>An array of URLs pointing to additional celebrity information. </p>\n@return An array of URLs pointing to additional celebrity information.*/",
          "getterMethodName" : "getUrls",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Urls",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Urls",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Url",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Urls",
          "setterDocumentation" : "/**<p>An array of URLs pointing to additional celebrity information. </p>\n@param urls An array of URLs pointing to additional celebrity information.*/",
          "setterMethodName" : "setUrls",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "urls",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An array of URLs pointing to additional celebrity information. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setUrls(java.util.Collection)} or {@link #withUrls(java.util.Collection)} if you want to override the existing values.</p>\n@param urls An array of URLs pointing to additional celebrity information.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "urls",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>An array of URLs pointing to additional celebrity information. </p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetCelebrityInfoResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "GetCelebrityInfoResult",
        "variableName" : "getCelebrityInfoResult",
        "variableType" : "GetCelebrityInfoResult",
        "documentation" : null,
        "simpleType" : "GetCelebrityInfoResult",
        "variableSetterType" : "GetCelebrityInfoResult"
      },
      "wrapper" : false
    },
    "Image" : {
      "c2jName" : "Image",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Provides the input image either as bytes or an S3 object.</p> <p>You pass image bytes to a Rekognition API operation by using the <code>Bytes</code> property. For example, you would use the <code>Bytes</code> property to pass an image loaded from a local file system. Image bytes passed by using the <code>Bytes</code> property must be base64-encoded. Your code may not need to encode image bytes if you are using an AWS SDK to call Rekognition API operations. For more information, see <a>example4</a>.</p> <p> You pass images stored in an S3 bucket to a Rekognition API operation by using the <code>S3Object</code> property. Images stored in an S3 bucket do not need to be base64-encoded.</p> <p>The region for the S3 bucket containing the S3 object must match the region you use for Amazon Rekognition operations.</p> <p>If you use the Amazon CLI to call Amazon Rekognition operations, passing image bytes using the Bytes property is not supported. You must first upload the image to an Amazon S3 bucket and then call the operation using the S3Object property.</p> <p>For Amazon Rekognition to process an S3 object, the user must have permission to access the S3 object. For more information, see <a>manage-access-resource-policies</a>. </p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Bytes",
        "c2jShape" : "ImageBlob",
        "deprecated" : false,
        "documentation" : "<p>Blob of image bytes up to 5 MBs.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Blob of image bytes up to 5 MBs.</p><p>\nThe AWS SDK for Java performs a Base64 encoding on this field before sending this request to the AWS service. Users of the SDK should not perform Base64 encoding on this field.\n</p>\n<p>\nWarning: ByteBuffers returned by the SDK are mutable. Changes to the content or position of the byte buffer will be seen by all objects that have a reference to this object. It is recommended to call ByteBuffer.duplicate() or ByteBuffer.asReadOnlyBuffer() before using or reading from the buffer. This behavior will be changed in a future major version of the SDK.\n</p>\n\n@param bytes Blob of image bytes up to 5 MBs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBytes",
        "getterDocumentation" : "/**<p>Blob of image bytes up to 5 MBs.</p>\n<p>\n{@code ByteBuffer}s are stateful. Calling their {@code get} methods changes their {@code position}. We recommend using {@link java.nio.ByteBuffer#asReadOnlyBuffer()} to create a read-only view of the buffer with an independent {@code position}, and calling {@code get} methods on this rather than directly on the returned {@code ByteBuffer}. Doing so will ensure that anyone else using the {@code ByteBuffer} will not be affected by changes to the {@code position}.\n</p>\n@return Blob of image bytes up to 5 MBs.*/",
        "getterMethodName" : "getBytes",
        "getterModel" : {
          "returnType" : "java.nio.ByteBuffer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Bytes",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Bytes",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.nio.ByteBuffer",
        "marshallingType" : "BYTE_BUFFER",
        "name" : "Bytes",
        "setterDocumentation" : "/**<p>Blob of image bytes up to 5 MBs.</p><p>\nThe AWS SDK for Java performs a Base64 encoding on this field before sending this request to the AWS service. Users of the SDK should not perform Base64 encoding on this field.\n</p>\n<p>\nWarning: ByteBuffers returned by the SDK are mutable. Changes to the content or position of the byte buffer will be seen by all objects that have a reference to this object. It is recommended to call ByteBuffer.duplicate() or ByteBuffer.asReadOnlyBuffer() before using or reading from the buffer. This behavior will be changed in a future major version of the SDK.\n</p>\n\n@param bytes Blob of image bytes up to 5 MBs.*/",
        "setterMethodName" : "setBytes",
        "setterModel" : {
          "variableDeclarationType" : "java.nio.ByteBuffer",
          "variableName" : "bytes",
          "variableType" : "java.nio.ByteBuffer",
          "documentation" : "",
          "simpleType" : "ByteBuffer",
          "variableSetterType" : "java.nio.ByteBuffer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Blob of image bytes up to 5 MBs.</p>\n@param bytes Blob of image bytes up to 5 MBs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.nio.ByteBuffer",
          "variableName" : "bytes",
          "variableType" : "java.nio.ByteBuffer",
          "documentation" : "<p>Blob of image bytes up to 5 MBs.</p>",
          "simpleType" : "ByteBuffer",
          "variableSetterType" : "java.nio.ByteBuffer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "S3Object",
        "c2jShape" : "S3Object",
        "deprecated" : false,
        "documentation" : "<p>Identifies an S3 object as the image source.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Identifies an S3 object as the image source.</p>\n@param s3Object Identifies an S3 object as the image source.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withS3Object",
        "getterDocumentation" : "/**<p>Identifies an S3 object as the image source.</p>\n@return Identifies an S3 object as the image source.*/",
        "getterMethodName" : "getS3Object",
        "getterModel" : {
          "returnType" : "S3Object",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "S3Object",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "S3Object",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "S3Object",
        "setterDocumentation" : "/**<p>Identifies an S3 object as the image source.</p>\n@param s3Object Identifies an S3 object as the image source.*/",
        "setterMethodName" : "setS3Object",
        "setterModel" : {
          "variableDeclarationType" : "S3Object",
          "variableName" : "s3Object",
          "variableType" : "S3Object",
          "documentation" : "",
          "simpleType" : "S3Object",
          "variableSetterType" : "S3Object"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Identifies an S3 object as the image source.</p>\n@param s3Object Identifies an S3 object as the image source.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "S3Object",
          "variableName" : "s3Object",
          "variableType" : "S3Object",
          "documentation" : "<p>Identifies an S3 object as the image source.</p>",
          "simpleType" : "S3Object",
          "variableSetterType" : "S3Object"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Bytes" : {
          "c2jName" : "Bytes",
          "c2jShape" : "ImageBlob",
          "deprecated" : false,
          "documentation" : "<p>Blob of image bytes up to 5 MBs.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Blob of image bytes up to 5 MBs.</p><p>\nThe AWS SDK for Java performs a Base64 encoding on this field before sending this request to the AWS service. Users of the SDK should not perform Base64 encoding on this field.\n</p>\n<p>\nWarning: ByteBuffers returned by the SDK are mutable. Changes to the content or position of the byte buffer will be seen by all objects that have a reference to this object. It is recommended to call ByteBuffer.duplicate() or ByteBuffer.asReadOnlyBuffer() before using or reading from the buffer. This behavior will be changed in a future major version of the SDK.\n</p>\n\n@param bytes Blob of image bytes up to 5 MBs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBytes",
          "getterDocumentation" : "/**<p>Blob of image bytes up to 5 MBs.</p>\n<p>\n{@code ByteBuffer}s are stateful. Calling their {@code get} methods changes their {@code position}. We recommend using {@link java.nio.ByteBuffer#asReadOnlyBuffer()} to create a read-only view of the buffer with an independent {@code position}, and calling {@code get} methods on this rather than directly on the returned {@code ByteBuffer}. Doing so will ensure that anyone else using the {@code ByteBuffer} will not be affected by changes to the {@code position}.\n</p>\n@return Blob of image bytes up to 5 MBs.*/",
          "getterMethodName" : "getBytes",
          "getterModel" : {
            "returnType" : "java.nio.ByteBuffer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Bytes",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Bytes",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.nio.ByteBuffer",
          "marshallingType" : "BYTE_BUFFER",
          "name" : "Bytes",
          "setterDocumentation" : "/**<p>Blob of image bytes up to 5 MBs.</p><p>\nThe AWS SDK for Java performs a Base64 encoding on this field before sending this request to the AWS service. Users of the SDK should not perform Base64 encoding on this field.\n</p>\n<p>\nWarning: ByteBuffers returned by the SDK are mutable. Changes to the content or position of the byte buffer will be seen by all objects that have a reference to this object. It is recommended to call ByteBuffer.duplicate() or ByteBuffer.asReadOnlyBuffer() before using or reading from the buffer. This behavior will be changed in a future major version of the SDK.\n</p>\n\n@param bytes Blob of image bytes up to 5 MBs.*/",
          "setterMethodName" : "setBytes",
          "setterModel" : {
            "variableDeclarationType" : "java.nio.ByteBuffer",
            "variableName" : "bytes",
            "variableType" : "java.nio.ByteBuffer",
            "documentation" : "",
            "simpleType" : "ByteBuffer",
            "variableSetterType" : "java.nio.ByteBuffer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Blob of image bytes up to 5 MBs.</p>\n@param bytes Blob of image bytes up to 5 MBs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.nio.ByteBuffer",
            "variableName" : "bytes",
            "variableType" : "java.nio.ByteBuffer",
            "documentation" : "<p>Blob of image bytes up to 5 MBs.</p>",
            "simpleType" : "ByteBuffer",
            "variableSetterType" : "java.nio.ByteBuffer"
          },
          "xmlNameSpaceUri" : null
        },
        "S3Object" : {
          "c2jName" : "S3Object",
          "c2jShape" : "S3Object",
          "deprecated" : false,
          "documentation" : "<p>Identifies an S3 object as the image source.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Identifies an S3 object as the image source.</p>\n@param s3Object Identifies an S3 object as the image source.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withS3Object",
          "getterDocumentation" : "/**<p>Identifies an S3 object as the image source.</p>\n@return Identifies an S3 object as the image source.*/",
          "getterMethodName" : "getS3Object",
          "getterModel" : {
            "returnType" : "S3Object",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "S3Object",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "S3Object",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "S3Object",
          "setterDocumentation" : "/**<p>Identifies an S3 object as the image source.</p>\n@param s3Object Identifies an S3 object as the image source.*/",
          "setterMethodName" : "setS3Object",
          "setterModel" : {
            "variableDeclarationType" : "S3Object",
            "variableName" : "s3Object",
            "variableType" : "S3Object",
            "documentation" : "",
            "simpleType" : "S3Object",
            "variableSetterType" : "S3Object"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Identifies an S3 object as the image source.</p>\n@param s3Object Identifies an S3 object as the image source.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "S3Object",
            "variableName" : "s3Object",
            "variableType" : "S3Object",
            "documentation" : "<p>Identifies an S3 object as the image source.</p>",
            "simpleType" : "S3Object",
            "variableSetterType" : "S3Object"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Image",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "Image",
        "variableName" : "image",
        "variableType" : "Image",
        "documentation" : null,
        "simpleType" : "Image",
        "variableSetterType" : "Image"
      },
      "wrapper" : false
    },
    "ImageQuality" : {
      "c2jName" : "ImageQuality",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Identifies face image brightness and sharpness. </p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Brightness",
        "c2jShape" : "Float",
        "deprecated" : false,
        "documentation" : "<p>Value representing brightness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a brighter face image.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Value representing brightness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a brighter face image.</p>\n@param brightness Value representing brightness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a brighter face image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBrightness",
        "getterDocumentation" : "/**<p>Value representing brightness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a brighter face image.</p>\n@return Value representing brightness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a brighter face image.*/",
        "getterMethodName" : "getBrightness",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Brightness",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Brightness",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Float",
        "marshallingType" : "FLOAT",
        "name" : "Brightness",
        "setterDocumentation" : "/**<p>Value representing brightness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a brighter face image.</p>\n@param brightness Value representing brightness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a brighter face image.*/",
        "setterMethodName" : "setBrightness",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "brightness",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Value representing brightness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a brighter face image.</p>\n@param brightness Value representing brightness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a brighter face image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "brightness",
          "variableType" : "Float",
          "documentation" : "<p>Value representing brightness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a brighter face image.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Sharpness",
        "c2jShape" : "Float",
        "deprecated" : false,
        "documentation" : "<p>Value representing sharpness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a sharper face image.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Value representing sharpness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a sharper face image.</p>\n@param sharpness Value representing sharpness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a sharper face image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSharpness",
        "getterDocumentation" : "/**<p>Value representing sharpness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a sharper face image.</p>\n@return Value representing sharpness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a sharper face image.*/",
        "getterMethodName" : "getSharpness",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Sharpness",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Sharpness",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Float",
        "marshallingType" : "FLOAT",
        "name" : "Sharpness",
        "setterDocumentation" : "/**<p>Value representing sharpness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a sharper face image.</p>\n@param sharpness Value representing sharpness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a sharper face image.*/",
        "setterMethodName" : "setSharpness",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "sharpness",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Value representing sharpness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a sharper face image.</p>\n@param sharpness Value representing sharpness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a sharper face image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "sharpness",
          "variableType" : "Float",
          "documentation" : "<p>Value representing sharpness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a sharper face image.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Brightness" : {
          "c2jName" : "Brightness",
          "c2jShape" : "Float",
          "deprecated" : false,
          "documentation" : "<p>Value representing brightness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a brighter face image.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Value representing brightness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a brighter face image.</p>\n@param brightness Value representing brightness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a brighter face image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBrightness",
          "getterDocumentation" : "/**<p>Value representing brightness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a brighter face image.</p>\n@return Value representing brightness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a brighter face image.*/",
          "getterMethodName" : "getBrightness",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Brightness",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Brightness",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Float",
          "marshallingType" : "FLOAT",
          "name" : "Brightness",
          "setterDocumentation" : "/**<p>Value representing brightness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a brighter face image.</p>\n@param brightness Value representing brightness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a brighter face image.*/",
          "setterMethodName" : "setBrightness",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "brightness",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Value representing brightness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a brighter face image.</p>\n@param brightness Value representing brightness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a brighter face image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "brightness",
            "variableType" : "Float",
            "documentation" : "<p>Value representing brightness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a brighter face image.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "Sharpness" : {
          "c2jName" : "Sharpness",
          "c2jShape" : "Float",
          "deprecated" : false,
          "documentation" : "<p>Value representing sharpness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a sharper face image.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Value representing sharpness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a sharper face image.</p>\n@param sharpness Value representing sharpness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a sharper face image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSharpness",
          "getterDocumentation" : "/**<p>Value representing sharpness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a sharper face image.</p>\n@return Value representing sharpness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a sharper face image.*/",
          "getterMethodName" : "getSharpness",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Sharpness",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Sharpness",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Float",
          "marshallingType" : "FLOAT",
          "name" : "Sharpness",
          "setterDocumentation" : "/**<p>Value representing sharpness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a sharper face image.</p>\n@param sharpness Value representing sharpness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a sharper face image.*/",
          "setterMethodName" : "setSharpness",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "sharpness",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Value representing sharpness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a sharper face image.</p>\n@param sharpness Value representing sharpness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a sharper face image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "sharpness",
            "variableType" : "Float",
            "documentation" : "<p>Value representing sharpness of the face. The service returns a value between 0 and 100 (inclusive). A higher value indicates a sharper face image.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ImageQuality",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "ImageQuality",
        "variableName" : "imageQuality",
        "variableType" : "ImageQuality",
        "documentation" : null,
        "simpleType" : "ImageQuality",
        "variableSetterType" : "ImageQuality"
      },
      "wrapper" : false
    },
    "ImageTooLargeException" : {
      "c2jName" : "ImageTooLargeException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input image size exceeds the allowed limit. For more information, see <a>limits</a>. </p>",
      "enums" : null,
      "errorCode" : "ImageTooLargeException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ImageTooLargeException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ImageTooLargeException",
        "variableName" : "imageTooLargeException",
        "variableType" : "ImageTooLargeException",
        "documentation" : null,
        "simpleType" : "ImageTooLargeException",
        "variableSetterType" : "ImageTooLargeException"
      },
      "wrapper" : false
    },
    "IndexFacesRequest" : {
      "c2jName" : "IndexFacesRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "IndexFaces",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "RekognitionService.IndexFaces",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "CollectionId",
        "c2jShape" : "CollectionId",
        "deprecated" : false,
        "documentation" : "<p>The ID of an existing collection to which you want to add the faces that are detected in the input images.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of an existing collection to which you want to add the faces that are detected in the input images.</p>\n@param collectionId The ID of an existing collection to which you want to add the faces that are detected in the input images.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCollectionId",
        "getterDocumentation" : "/**<p>The ID of an existing collection to which you want to add the faces that are detected in the input images.</p>\n@return The ID of an existing collection to which you want to add the faces that are detected in the input images.*/",
        "getterMethodName" : "getCollectionId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "CollectionId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CollectionId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CollectionId",
        "setterDocumentation" : "/**<p>The ID of an existing collection to which you want to add the faces that are detected in the input images.</p>\n@param collectionId The ID of an existing collection to which you want to add the faces that are detected in the input images.*/",
        "setterMethodName" : "setCollectionId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "collectionId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of an existing collection to which you want to add the faces that are detected in the input images.</p>\n@param collectionId The ID of an existing collection to which you want to add the faces that are detected in the input images.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "collectionId",
          "variableType" : "String",
          "documentation" : "<p>The ID of an existing collection to which you want to add the faces that are detected in the input images.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Image",
        "c2jShape" : "Image",
        "deprecated" : false,
        "documentation" : "<p>The input image as bytes or an S3 object.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The input image as bytes or an S3 object.</p>\n@param image The input image as bytes or an S3 object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withImage",
        "getterDocumentation" : "/**<p>The input image as bytes or an S3 object.</p>\n@return The input image as bytes or an S3 object.*/",
        "getterMethodName" : "getImage",
        "getterModel" : {
          "returnType" : "Image",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Image",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Image",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Image",
        "setterDocumentation" : "/**<p>The input image as bytes or an S3 object.</p>\n@param image The input image as bytes or an S3 object.*/",
        "setterMethodName" : "setImage",
        "setterModel" : {
          "variableDeclarationType" : "Image",
          "variableName" : "image",
          "variableType" : "Image",
          "documentation" : "",
          "simpleType" : "Image",
          "variableSetterType" : "Image"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The input image as bytes or an S3 object.</p>\n@param image The input image as bytes or an S3 object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Image",
          "variableName" : "image",
          "variableType" : "Image",
          "documentation" : "<p>The input image as bytes or an S3 object.</p>",
          "simpleType" : "Image",
          "variableSetterType" : "Image"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ExternalImageId",
        "c2jShape" : "ExternalImageId",
        "deprecated" : false,
        "documentation" : "<p>ID you want to assign to all the faces detected in the image.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>ID you want to assign to all the faces detected in the image.</p>\n@param externalImageId ID you want to assign to all the faces detected in the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withExternalImageId",
        "getterDocumentation" : "/**<p>ID you want to assign to all the faces detected in the image.</p>\n@return ID you want to assign to all the faces detected in the image.*/",
        "getterMethodName" : "getExternalImageId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ExternalImageId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ExternalImageId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ExternalImageId",
        "setterDocumentation" : "/**<p>ID you want to assign to all the faces detected in the image.</p>\n@param externalImageId ID you want to assign to all the faces detected in the image.*/",
        "setterMethodName" : "setExternalImageId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "externalImageId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>ID you want to assign to all the faces detected in the image.</p>\n@param externalImageId ID you want to assign to all the faces detected in the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "externalImageId",
          "variableType" : "String",
          "documentation" : "<p>ID you want to assign to all the faces detected in the image.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "DetectionAttributes",
        "c2jShape" : "Attributes",
        "deprecated" : false,
        "documentation" : "<p>An array of facial attributes that you want to be returned. This can be the default list of attributes or all attributes. If you don't specify a value for <code>Attributes</code> or if you specify <code>[\"DEFAULT\"]</code>, the API returns the following subset of facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>, <code>Quality</code> and <code>Landmarks</code>. If you provide <code>[\"ALL\"]</code>, all facial attributes are returned but the operation will take longer to complete.</p> <p>If you provide both, <code>[\"ALL\", \"DEFAULT\"]</code>, the service uses a logical AND operator to determine which attributes to return (in this case, all attributes). </p>",
        "enumType" : "Attribute",
        "fluentSetterDocumentation" : "/**<p>An array of facial attributes that you want to be returned. This can be the default list of attributes or all attributes. If you don't specify a value for <code>Attributes</code> or if you specify <code>[\"DEFAULT\"]</code>, the API returns the following subset of facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>, <code>Quality</code> and <code>Landmarks</code>. If you provide <code>[\"ALL\"]</code>, all facial attributes are returned but the operation will take longer to complete.</p> <p>If you provide both, <code>[\"ALL\", \"DEFAULT\"]</code>, the service uses a logical AND operator to determine which attributes to return (in this case, all attributes). </p>\n@param detectionAttributes An array of facial attributes that you want to be returned. This can be the default list of attributes or all attributes. If you don't specify a value for <code>Attributes</code> or if you specify <code>[\"DEFAULT\"]</code>, the API returns the following subset of facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>, <code>Quality</code> and <code>Landmarks</code>. If you provide <code>[\"ALL\"]</code>, all facial attributes are returned but the operation will take longer to complete.</p> <p>If you provide both, <code>[\"ALL\", \"DEFAULT\"]</code>, the service uses a logical AND operator to determine which attributes to return (in this case, all attributes).\n@return Returns a reference to this object so that method calls can be chained together.\n@see Attribute*/",
        "fluentSetterMethodName" : "withDetectionAttributes",
        "getterDocumentation" : "/**<p>An array of facial attributes that you want to be returned. This can be the default list of attributes or all attributes. If you don't specify a value for <code>Attributes</code> or if you specify <code>[\"DEFAULT\"]</code>, the API returns the following subset of facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>, <code>Quality</code> and <code>Landmarks</code>. If you provide <code>[\"ALL\"]</code>, all facial attributes are returned but the operation will take longer to complete.</p> <p>If you provide both, <code>[\"ALL\", \"DEFAULT\"]</code>, the service uses a logical AND operator to determine which attributes to return (in this case, all attributes). </p>\n@return An array of facial attributes that you want to be returned. This can be the default list of attributes or all attributes. If you don't specify a value for <code>Attributes</code> or if you specify <code>[\"DEFAULT\"]</code>, the API returns the following subset of facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>, <code>Quality</code> and <code>Landmarks</code>. If you provide <code>[\"ALL\"]</code>, all facial attributes are returned but the operation will take longer to complete.</p> <p>If you provide both, <code>[\"ALL\", \"DEFAULT\"]</code>, the service uses a logical AND operator to determine which attributes to return (in this case, all attributes).\n@see Attribute*/",
        "getterMethodName" : "getDetectionAttributes",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "DetectionAttributes",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "DetectionAttributes",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Attribute",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : "Attribute",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.\n@see Attribute*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return \n@see Attribute*/",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member \n@see Attribute*/",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.\n@see Attribute*/",
            "variable" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "DetectionAttributes",
        "setterDocumentation" : "/**<p>An array of facial attributes that you want to be returned. This can be the default list of attributes or all attributes. If you don't specify a value for <code>Attributes</code> or if you specify <code>[\"DEFAULT\"]</code>, the API returns the following subset of facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>, <code>Quality</code> and <code>Landmarks</code>. If you provide <code>[\"ALL\"]</code>, all facial attributes are returned but the operation will take longer to complete.</p> <p>If you provide both, <code>[\"ALL\", \"DEFAULT\"]</code>, the service uses a logical AND operator to determine which attributes to return (in this case, all attributes). </p>\n@param detectionAttributes An array of facial attributes that you want to be returned. This can be the default list of attributes or all attributes. If you don't specify a value for <code>Attributes</code> or if you specify <code>[\"DEFAULT\"]</code>, the API returns the following subset of facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>, <code>Quality</code> and <code>Landmarks</code>. If you provide <code>[\"ALL\"]</code>, all facial attributes are returned but the operation will take longer to complete.</p> <p>If you provide both, <code>[\"ALL\", \"DEFAULT\"]</code>, the service uses a logical AND operator to determine which attributes to return (in this case, all attributes).\n@see Attribute*/",
        "setterMethodName" : "setDetectionAttributes",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "detectionAttributes",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An array of facial attributes that you want to be returned. This can be the default list of attributes or all attributes. If you don't specify a value for <code>Attributes</code> or if you specify <code>[\"DEFAULT\"]</code>, the API returns the following subset of facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>, <code>Quality</code> and <code>Landmarks</code>. If you provide <code>[\"ALL\"]</code>, all facial attributes are returned but the operation will take longer to complete.</p> <p>If you provide both, <code>[\"ALL\", \"DEFAULT\"]</code>, the service uses a logical AND operator to determine which attributes to return (in this case, all attributes). </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setDetectionAttributes(java.util.Collection)} or {@link #withDetectionAttributes(java.util.Collection)} if you want to override the existing values.</p>\n@param detectionAttributes An array of facial attributes that you want to be returned. This can be the default list of attributes or all attributes. If you don't specify a value for <code>Attributes</code> or if you specify <code>[\"DEFAULT\"]</code>, the API returns the following subset of facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>, <code>Quality</code> and <code>Landmarks</code>. If you provide <code>[\"ALL\"]</code>, all facial attributes are returned but the operation will take longer to complete.</p> <p>If you provide both, <code>[\"ALL\", \"DEFAULT\"]</code>, the service uses a logical AND operator to determine which attributes to return (in this case, all attributes).\n@return Returns a reference to this object so that method calls can be chained together.\n@see Attribute*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "detectionAttributes",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>An array of facial attributes that you want to be returned. This can be the default list of attributes or all attributes. If you don't specify a value for <code>Attributes</code> or if you specify <code>[\"DEFAULT\"]</code>, the API returns the following subset of facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>, <code>Quality</code> and <code>Landmarks</code>. If you provide <code>[\"ALL\"]</code>, all facial attributes are returned but the operation will take longer to complete.</p> <p>If you provide both, <code>[\"ALL\", \"DEFAULT\"]</code>, the service uses a logical AND operator to determine which attributes to return (in this case, all attributes). </p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CollectionId" : {
          "c2jName" : "CollectionId",
          "c2jShape" : "CollectionId",
          "deprecated" : false,
          "documentation" : "<p>The ID of an existing collection to which you want to add the faces that are detected in the input images.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of an existing collection to which you want to add the faces that are detected in the input images.</p>\n@param collectionId The ID of an existing collection to which you want to add the faces that are detected in the input images.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCollectionId",
          "getterDocumentation" : "/**<p>The ID of an existing collection to which you want to add the faces that are detected in the input images.</p>\n@return The ID of an existing collection to which you want to add the faces that are detected in the input images.*/",
          "getterMethodName" : "getCollectionId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "CollectionId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CollectionId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CollectionId",
          "setterDocumentation" : "/**<p>The ID of an existing collection to which you want to add the faces that are detected in the input images.</p>\n@param collectionId The ID of an existing collection to which you want to add the faces that are detected in the input images.*/",
          "setterMethodName" : "setCollectionId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "collectionId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of an existing collection to which you want to add the faces that are detected in the input images.</p>\n@param collectionId The ID of an existing collection to which you want to add the faces that are detected in the input images.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "collectionId",
            "variableType" : "String",
            "documentation" : "<p>The ID of an existing collection to which you want to add the faces that are detected in the input images.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "DetectionAttributes" : {
          "c2jName" : "DetectionAttributes",
          "c2jShape" : "Attributes",
          "deprecated" : false,
          "documentation" : "<p>An array of facial attributes that you want to be returned. This can be the default list of attributes or all attributes. If you don't specify a value for <code>Attributes</code> or if you specify <code>[\"DEFAULT\"]</code>, the API returns the following subset of facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>, <code>Quality</code> and <code>Landmarks</code>. If you provide <code>[\"ALL\"]</code>, all facial attributes are returned but the operation will take longer to complete.</p> <p>If you provide both, <code>[\"ALL\", \"DEFAULT\"]</code>, the service uses a logical AND operator to determine which attributes to return (in this case, all attributes). </p>",
          "enumType" : "Attribute",
          "fluentSetterDocumentation" : "/**<p>An array of facial attributes that you want to be returned. This can be the default list of attributes or all attributes. If you don't specify a value for <code>Attributes</code> or if you specify <code>[\"DEFAULT\"]</code>, the API returns the following subset of facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>, <code>Quality</code> and <code>Landmarks</code>. If you provide <code>[\"ALL\"]</code>, all facial attributes are returned but the operation will take longer to complete.</p> <p>If you provide both, <code>[\"ALL\", \"DEFAULT\"]</code>, the service uses a logical AND operator to determine which attributes to return (in this case, all attributes). </p>\n@param detectionAttributes An array of facial attributes that you want to be returned. This can be the default list of attributes or all attributes. If you don't specify a value for <code>Attributes</code> or if you specify <code>[\"DEFAULT\"]</code>, the API returns the following subset of facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>, <code>Quality</code> and <code>Landmarks</code>. If you provide <code>[\"ALL\"]</code>, all facial attributes are returned but the operation will take longer to complete.</p> <p>If you provide both, <code>[\"ALL\", \"DEFAULT\"]</code>, the service uses a logical AND operator to determine which attributes to return (in this case, all attributes).\n@return Returns a reference to this object so that method calls can be chained together.\n@see Attribute*/",
          "fluentSetterMethodName" : "withDetectionAttributes",
          "getterDocumentation" : "/**<p>An array of facial attributes that you want to be returned. This can be the default list of attributes or all attributes. If you don't specify a value for <code>Attributes</code> or if you specify <code>[\"DEFAULT\"]</code>, the API returns the following subset of facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>, <code>Quality</code> and <code>Landmarks</code>. If you provide <code>[\"ALL\"]</code>, all facial attributes are returned but the operation will take longer to complete.</p> <p>If you provide both, <code>[\"ALL\", \"DEFAULT\"]</code>, the service uses a logical AND operator to determine which attributes to return (in this case, all attributes). </p>\n@return An array of facial attributes that you want to be returned. This can be the default list of attributes or all attributes. If you don't specify a value for <code>Attributes</code> or if you specify <code>[\"DEFAULT\"]</code>, the API returns the following subset of facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>, <code>Quality</code> and <code>Landmarks</code>. If you provide <code>[\"ALL\"]</code>, all facial attributes are returned but the operation will take longer to complete.</p> <p>If you provide both, <code>[\"ALL\", \"DEFAULT\"]</code>, the service uses a logical AND operator to determine which attributes to return (in this case, all attributes).\n@see Attribute*/",
          "getterMethodName" : "getDetectionAttributes",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "DetectionAttributes",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "DetectionAttributes",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Attribute",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : "Attribute",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.\n@see Attribute*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return \n@see Attribute*/",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member \n@see Attribute*/",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.\n@see Attribute*/",
              "variable" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "DetectionAttributes",
          "setterDocumentation" : "/**<p>An array of facial attributes that you want to be returned. This can be the default list of attributes or all attributes. If you don't specify a value for <code>Attributes</code> or if you specify <code>[\"DEFAULT\"]</code>, the API returns the following subset of facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>, <code>Quality</code> and <code>Landmarks</code>. If you provide <code>[\"ALL\"]</code>, all facial attributes are returned but the operation will take longer to complete.</p> <p>If you provide both, <code>[\"ALL\", \"DEFAULT\"]</code>, the service uses a logical AND operator to determine which attributes to return (in this case, all attributes). </p>\n@param detectionAttributes An array of facial attributes that you want to be returned. This can be the default list of attributes or all attributes. If you don't specify a value for <code>Attributes</code> or if you specify <code>[\"DEFAULT\"]</code>, the API returns the following subset of facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>, <code>Quality</code> and <code>Landmarks</code>. If you provide <code>[\"ALL\"]</code>, all facial attributes are returned but the operation will take longer to complete.</p> <p>If you provide both, <code>[\"ALL\", \"DEFAULT\"]</code>, the service uses a logical AND operator to determine which attributes to return (in this case, all attributes).\n@see Attribute*/",
          "setterMethodName" : "setDetectionAttributes",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "detectionAttributes",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An array of facial attributes that you want to be returned. This can be the default list of attributes or all attributes. If you don't specify a value for <code>Attributes</code> or if you specify <code>[\"DEFAULT\"]</code>, the API returns the following subset of facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>, <code>Quality</code> and <code>Landmarks</code>. If you provide <code>[\"ALL\"]</code>, all facial attributes are returned but the operation will take longer to complete.</p> <p>If you provide both, <code>[\"ALL\", \"DEFAULT\"]</code>, the service uses a logical AND operator to determine which attributes to return (in this case, all attributes). </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setDetectionAttributes(java.util.Collection)} or {@link #withDetectionAttributes(java.util.Collection)} if you want to override the existing values.</p>\n@param detectionAttributes An array of facial attributes that you want to be returned. This can be the default list of attributes or all attributes. If you don't specify a value for <code>Attributes</code> or if you specify <code>[\"DEFAULT\"]</code>, the API returns the following subset of facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>, <code>Quality</code> and <code>Landmarks</code>. If you provide <code>[\"ALL\"]</code>, all facial attributes are returned but the operation will take longer to complete.</p> <p>If you provide both, <code>[\"ALL\", \"DEFAULT\"]</code>, the service uses a logical AND operator to determine which attributes to return (in this case, all attributes).\n@return Returns a reference to this object so that method calls can be chained together.\n@see Attribute*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "detectionAttributes",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>An array of facial attributes that you want to be returned. This can be the default list of attributes or all attributes. If you don't specify a value for <code>Attributes</code> or if you specify <code>[\"DEFAULT\"]</code>, the API returns the following subset of facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>, <code>Quality</code> and <code>Landmarks</code>. If you provide <code>[\"ALL\"]</code>, all facial attributes are returned but the operation will take longer to complete.</p> <p>If you provide both, <code>[\"ALL\", \"DEFAULT\"]</code>, the service uses a logical AND operator to determine which attributes to return (in this case, all attributes). </p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        },
        "ExternalImageId" : {
          "c2jName" : "ExternalImageId",
          "c2jShape" : "ExternalImageId",
          "deprecated" : false,
          "documentation" : "<p>ID you want to assign to all the faces detected in the image.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>ID you want to assign to all the faces detected in the image.</p>\n@param externalImageId ID you want to assign to all the faces detected in the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withExternalImageId",
          "getterDocumentation" : "/**<p>ID you want to assign to all the faces detected in the image.</p>\n@return ID you want to assign to all the faces detected in the image.*/",
          "getterMethodName" : "getExternalImageId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ExternalImageId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ExternalImageId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ExternalImageId",
          "setterDocumentation" : "/**<p>ID you want to assign to all the faces detected in the image.</p>\n@param externalImageId ID you want to assign to all the faces detected in the image.*/",
          "setterMethodName" : "setExternalImageId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "externalImageId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>ID you want to assign to all the faces detected in the image.</p>\n@param externalImageId ID you want to assign to all the faces detected in the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "externalImageId",
            "variableType" : "String",
            "documentation" : "<p>ID you want to assign to all the faces detected in the image.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Image" : {
          "c2jName" : "Image",
          "c2jShape" : "Image",
          "deprecated" : false,
          "documentation" : "<p>The input image as bytes or an S3 object.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The input image as bytes or an S3 object.</p>\n@param image The input image as bytes or an S3 object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withImage",
          "getterDocumentation" : "/**<p>The input image as bytes or an S3 object.</p>\n@return The input image as bytes or an S3 object.*/",
          "getterMethodName" : "getImage",
          "getterModel" : {
            "returnType" : "Image",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Image",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Image",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Image",
          "setterDocumentation" : "/**<p>The input image as bytes or an S3 object.</p>\n@param image The input image as bytes or an S3 object.*/",
          "setterMethodName" : "setImage",
          "setterModel" : {
            "variableDeclarationType" : "Image",
            "variableName" : "image",
            "variableType" : "Image",
            "documentation" : "",
            "simpleType" : "Image",
            "variableSetterType" : "Image"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The input image as bytes or an S3 object.</p>\n@param image The input image as bytes or an S3 object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Image",
            "variableName" : "image",
            "variableType" : "Image",
            "documentation" : "<p>The input image as bytes or an S3 object.</p>",
            "simpleType" : "Image",
            "variableSetterType" : "Image"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "CollectionId", "Image" ],
      "shapeName" : "IndexFacesRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "IndexFacesRequest",
        "variableName" : "indexFacesRequest",
        "variableType" : "IndexFacesRequest",
        "documentation" : null,
        "simpleType" : "IndexFacesRequest",
        "variableSetterType" : "IndexFacesRequest"
      },
      "wrapper" : false
    },
    "IndexFacesResult" : {
      "c2jName" : "IndexFacesResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "FaceRecords",
        "c2jShape" : "FaceRecordList",
        "deprecated" : false,
        "documentation" : "<p>An array of faces detected and added to the collection. For more information, see <a>howitworks-index-faces</a>. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An array of faces detected and added to the collection. For more information, see <a>howitworks-index-faces</a>. </p>\n@param faceRecords An array of faces detected and added to the collection. For more information, see <a>howitworks-index-faces</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFaceRecords",
        "getterDocumentation" : "/**<p>An array of faces detected and added to the collection. For more information, see <a>howitworks-index-faces</a>. </p>\n@return An array of faces detected and added to the collection. For more information, see <a>howitworks-index-faces</a>.*/",
        "getterMethodName" : "getFaceRecords",
        "getterModel" : {
          "returnType" : "java.util.List<FaceRecord>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "FaceRecords",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "FaceRecords",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "FaceRecord",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "FaceRecord",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "FaceRecord",
              "variableName" : "member",
              "variableType" : "FaceRecord",
              "documentation" : "",
              "simpleType" : "FaceRecord",
              "variableSetterType" : "FaceRecord"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "FaceRecord",
              "variableName" : "member",
              "variableType" : "FaceRecord",
              "documentation" : "",
              "simpleType" : "FaceRecord",
              "variableSetterType" : "FaceRecord"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "FaceRecord",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "FaceRecord",
          "templateImplType" : "java.util.ArrayList<FaceRecord>",
          "templateType" : "java.util.List<FaceRecord>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "FaceRecords",
        "setterDocumentation" : "/**<p>An array of faces detected and added to the collection. For more information, see <a>howitworks-index-faces</a>. </p>\n@param faceRecords An array of faces detected and added to the collection. For more information, see <a>howitworks-index-faces</a>.*/",
        "setterMethodName" : "setFaceRecords",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<FaceRecord>",
          "variableName" : "faceRecords",
          "variableType" : "java.util.List<FaceRecord>",
          "documentation" : "",
          "simpleType" : "List<FaceRecord>",
          "variableSetterType" : "java.util.Collection<FaceRecord>"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An array of faces detected and added to the collection. For more information, see <a>howitworks-index-faces</a>. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFaceRecords(java.util.Collection)} or {@link #withFaceRecords(java.util.Collection)} if you want to override the existing values.</p>\n@param faceRecords An array of faces detected and added to the collection. For more information, see <a>howitworks-index-faces</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<FaceRecord>",
          "variableName" : "faceRecords",
          "variableType" : "java.util.List<FaceRecord>",
          "documentation" : "<p>An array of faces detected and added to the collection. For more information, see <a>howitworks-index-faces</a>. </p>",
          "simpleType" : "List<FaceRecord>",
          "variableSetterType" : "java.util.Collection<FaceRecord>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "OrientationCorrection",
        "c2jShape" : "OrientationCorrection",
        "deprecated" : false,
        "documentation" : "<p>The orientation of the input image (counterclockwise direction). If your application displays the image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>FaceRecords</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in jpeg format, it might contain exchangeable image (Exif) metadata. If so, and the Exif metadata populates the orientation field, the value of <code>OrientationCorrection</code> is null and the bounding box coordinates in <code>FaceRecords</code> represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata.</p> </note>",
        "enumType" : "OrientationCorrection",
        "fluentSetterDocumentation" : "/**<p>The orientation of the input image (counterclockwise direction). If your application displays the image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>FaceRecords</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in jpeg format, it might contain exchangeable image (Exif) metadata. If so, and the Exif metadata populates the orientation field, the value of <code>OrientationCorrection</code> is null and the bounding box coordinates in <code>FaceRecords</code> represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata.</p> </note>\n@param orientationCorrection The orientation of the input image (counterclockwise direction). If your application displays the image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>FaceRecords</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in jpeg format, it might contain exchangeable image (Exif) metadata. If so, and the Exif metadata populates the orientation field, the value of <code>OrientationCorrection</code> is null and the bounding box coordinates in <code>FaceRecords</code> represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata.</p>\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrientationCorrection*/",
        "fluentSetterMethodName" : "withOrientationCorrection",
        "getterDocumentation" : "/**<p>The orientation of the input image (counterclockwise direction). If your application displays the image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>FaceRecords</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in jpeg format, it might contain exchangeable image (Exif) metadata. If so, and the Exif metadata populates the orientation field, the value of <code>OrientationCorrection</code> is null and the bounding box coordinates in <code>FaceRecords</code> represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata.</p> </note>\n@return The orientation of the input image (counterclockwise direction). If your application displays the image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>FaceRecords</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in jpeg format, it might contain exchangeable image (Exif) metadata. If so, and the Exif metadata populates the orientation field, the value of <code>OrientationCorrection</code> is null and the bounding box coordinates in <code>FaceRecords</code> represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata.</p>\n@see OrientationCorrection*/",
        "getterMethodName" : "getOrientationCorrection",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "OrientationCorrection",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "OrientationCorrection",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "OrientationCorrection",
        "setterDocumentation" : "/**<p>The orientation of the input image (counterclockwise direction). If your application displays the image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>FaceRecords</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in jpeg format, it might contain exchangeable image (Exif) metadata. If so, and the Exif metadata populates the orientation field, the value of <code>OrientationCorrection</code> is null and the bounding box coordinates in <code>FaceRecords</code> represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata.</p> </note>\n@param orientationCorrection The orientation of the input image (counterclockwise direction). If your application displays the image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>FaceRecords</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in jpeg format, it might contain exchangeable image (Exif) metadata. If so, and the Exif metadata populates the orientation field, the value of <code>OrientationCorrection</code> is null and the bounding box coordinates in <code>FaceRecords</code> represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata.</p>\n@see OrientationCorrection*/",
        "setterMethodName" : "setOrientationCorrection",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "orientationCorrection",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The orientation of the input image (counterclockwise direction). If your application displays the image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>FaceRecords</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in jpeg format, it might contain exchangeable image (Exif) metadata. If so, and the Exif metadata populates the orientation field, the value of <code>OrientationCorrection</code> is null and the bounding box coordinates in <code>FaceRecords</code> represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata.</p> </note>\n@param orientationCorrection The orientation of the input image (counterclockwise direction). If your application displays the image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>FaceRecords</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in jpeg format, it might contain exchangeable image (Exif) metadata. If so, and the Exif metadata populates the orientation field, the value of <code>OrientationCorrection</code> is null and the bounding box coordinates in <code>FaceRecords</code> represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata.</p>\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrientationCorrection*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "orientationCorrection",
          "variableType" : "String",
          "documentation" : "<p>The orientation of the input image (counterclockwise direction). If your application displays the image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>FaceRecords</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in jpeg format, it might contain exchangeable image (Exif) metadata. If so, and the Exif metadata populates the orientation field, the value of <code>OrientationCorrection</code> is null and the bounding box coordinates in <code>FaceRecords</code> represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata.</p> </note>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "FaceRecords" : {
          "c2jName" : "FaceRecords",
          "c2jShape" : "FaceRecordList",
          "deprecated" : false,
          "documentation" : "<p>An array of faces detected and added to the collection. For more information, see <a>howitworks-index-faces</a>. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An array of faces detected and added to the collection. For more information, see <a>howitworks-index-faces</a>. </p>\n@param faceRecords An array of faces detected and added to the collection. For more information, see <a>howitworks-index-faces</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFaceRecords",
          "getterDocumentation" : "/**<p>An array of faces detected and added to the collection. For more information, see <a>howitworks-index-faces</a>. </p>\n@return An array of faces detected and added to the collection. For more information, see <a>howitworks-index-faces</a>.*/",
          "getterMethodName" : "getFaceRecords",
          "getterModel" : {
            "returnType" : "java.util.List<FaceRecord>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "FaceRecords",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "FaceRecords",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "FaceRecord",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "FaceRecord",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "FaceRecord",
                "variableName" : "member",
                "variableType" : "FaceRecord",
                "documentation" : "",
                "simpleType" : "FaceRecord",
                "variableSetterType" : "FaceRecord"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "FaceRecord",
                "variableName" : "member",
                "variableType" : "FaceRecord",
                "documentation" : "",
                "simpleType" : "FaceRecord",
                "variableSetterType" : "FaceRecord"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "FaceRecord",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "FaceRecord",
            "templateImplType" : "java.util.ArrayList<FaceRecord>",
            "templateType" : "java.util.List<FaceRecord>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "FaceRecords",
          "setterDocumentation" : "/**<p>An array of faces detected and added to the collection. For more information, see <a>howitworks-index-faces</a>. </p>\n@param faceRecords An array of faces detected and added to the collection. For more information, see <a>howitworks-index-faces</a>.*/",
          "setterMethodName" : "setFaceRecords",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<FaceRecord>",
            "variableName" : "faceRecords",
            "variableType" : "java.util.List<FaceRecord>",
            "documentation" : "",
            "simpleType" : "List<FaceRecord>",
            "variableSetterType" : "java.util.Collection<FaceRecord>"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An array of faces detected and added to the collection. For more information, see <a>howitworks-index-faces</a>. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFaceRecords(java.util.Collection)} or {@link #withFaceRecords(java.util.Collection)} if you want to override the existing values.</p>\n@param faceRecords An array of faces detected and added to the collection. For more information, see <a>howitworks-index-faces</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<FaceRecord>",
            "variableName" : "faceRecords",
            "variableType" : "java.util.List<FaceRecord>",
            "documentation" : "<p>An array of faces detected and added to the collection. For more information, see <a>howitworks-index-faces</a>. </p>",
            "simpleType" : "List<FaceRecord>",
            "variableSetterType" : "java.util.Collection<FaceRecord>"
          },
          "xmlNameSpaceUri" : null
        },
        "OrientationCorrection" : {
          "c2jName" : "OrientationCorrection",
          "c2jShape" : "OrientationCorrection",
          "deprecated" : false,
          "documentation" : "<p>The orientation of the input image (counterclockwise direction). If your application displays the image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>FaceRecords</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in jpeg format, it might contain exchangeable image (Exif) metadata. If so, and the Exif metadata populates the orientation field, the value of <code>OrientationCorrection</code> is null and the bounding box coordinates in <code>FaceRecords</code> represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata.</p> </note>",
          "enumType" : "OrientationCorrection",
          "fluentSetterDocumentation" : "/**<p>The orientation of the input image (counterclockwise direction). If your application displays the image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>FaceRecords</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in jpeg format, it might contain exchangeable image (Exif) metadata. If so, and the Exif metadata populates the orientation field, the value of <code>OrientationCorrection</code> is null and the bounding box coordinates in <code>FaceRecords</code> represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata.</p> </note>\n@param orientationCorrection The orientation of the input image (counterclockwise direction). If your application displays the image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>FaceRecords</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in jpeg format, it might contain exchangeable image (Exif) metadata. If so, and the Exif metadata populates the orientation field, the value of <code>OrientationCorrection</code> is null and the bounding box coordinates in <code>FaceRecords</code> represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata.</p>\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrientationCorrection*/",
          "fluentSetterMethodName" : "withOrientationCorrection",
          "getterDocumentation" : "/**<p>The orientation of the input image (counterclockwise direction). If your application displays the image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>FaceRecords</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in jpeg format, it might contain exchangeable image (Exif) metadata. If so, and the Exif metadata populates the orientation field, the value of <code>OrientationCorrection</code> is null and the bounding box coordinates in <code>FaceRecords</code> represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata.</p> </note>\n@return The orientation of the input image (counterclockwise direction). If your application displays the image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>FaceRecords</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in jpeg format, it might contain exchangeable image (Exif) metadata. If so, and the Exif metadata populates the orientation field, the value of <code>OrientationCorrection</code> is null and the bounding box coordinates in <code>FaceRecords</code> represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata.</p>\n@see OrientationCorrection*/",
          "getterMethodName" : "getOrientationCorrection",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "OrientationCorrection",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "OrientationCorrection",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "OrientationCorrection",
          "setterDocumentation" : "/**<p>The orientation of the input image (counterclockwise direction). If your application displays the image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>FaceRecords</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in jpeg format, it might contain exchangeable image (Exif) metadata. If so, and the Exif metadata populates the orientation field, the value of <code>OrientationCorrection</code> is null and the bounding box coordinates in <code>FaceRecords</code> represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata.</p> </note>\n@param orientationCorrection The orientation of the input image (counterclockwise direction). If your application displays the image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>FaceRecords</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in jpeg format, it might contain exchangeable image (Exif) metadata. If so, and the Exif metadata populates the orientation field, the value of <code>OrientationCorrection</code> is null and the bounding box coordinates in <code>FaceRecords</code> represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata.</p>\n@see OrientationCorrection*/",
          "setterMethodName" : "setOrientationCorrection",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "orientationCorrection",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The orientation of the input image (counterclockwise direction). If your application displays the image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>FaceRecords</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in jpeg format, it might contain exchangeable image (Exif) metadata. If so, and the Exif metadata populates the orientation field, the value of <code>OrientationCorrection</code> is null and the bounding box coordinates in <code>FaceRecords</code> represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata.</p> </note>\n@param orientationCorrection The orientation of the input image (counterclockwise direction). If your application displays the image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>FaceRecords</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in jpeg format, it might contain exchangeable image (Exif) metadata. If so, and the Exif metadata populates the orientation field, the value of <code>OrientationCorrection</code> is null and the bounding box coordinates in <code>FaceRecords</code> represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata.</p>\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrientationCorrection*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "orientationCorrection",
            "variableType" : "String",
            "documentation" : "<p>The orientation of the input image (counterclockwise direction). If your application displays the image, you can use this value to correct image orientation. The bounding box coordinates returned in <code>FaceRecords</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in jpeg format, it might contain exchangeable image (Exif) metadata. If so, and the Exif metadata populates the orientation field, the value of <code>OrientationCorrection</code> is null and the bounding box coordinates in <code>FaceRecords</code> represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata.</p> </note>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "IndexFacesResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "IndexFacesResult",
        "variableName" : "indexFacesResult",
        "variableType" : "IndexFacesResult",
        "documentation" : null,
        "simpleType" : "IndexFacesResult",
        "variableSetterType" : "IndexFacesResult"
      },
      "wrapper" : false
    },
    "InternalServerErrorException" : {
      "c2jName" : "InternalServerError",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Amazon Rekognition experienced a service issue. Try your call again.</p>",
      "enums" : null,
      "errorCode" : "InternalServerError",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InternalServerErrorException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InternalServerErrorException",
        "variableName" : "internalServerErrorException",
        "variableType" : "InternalServerErrorException",
        "documentation" : null,
        "simpleType" : "InternalServerErrorException",
        "variableSetterType" : "InternalServerErrorException"
      },
      "wrapper" : false
    },
    "InvalidImageFormatException" : {
      "c2jName" : "InvalidImageFormatException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The provided image format is not supported. </p>",
      "enums" : null,
      "errorCode" : "InvalidImageFormatException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidImageFormatException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidImageFormatException",
        "variableName" : "invalidImageFormatException",
        "variableType" : "InvalidImageFormatException",
        "documentation" : null,
        "simpleType" : "InvalidImageFormatException",
        "variableSetterType" : "InvalidImageFormatException"
      },
      "wrapper" : false
    },
    "InvalidPaginationTokenException" : {
      "c2jName" : "InvalidPaginationTokenException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Pagination token in the request is not valid.</p>",
      "enums" : null,
      "errorCode" : "InvalidPaginationTokenException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidPaginationTokenException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidPaginationTokenException",
        "variableName" : "invalidPaginationTokenException",
        "variableType" : "InvalidPaginationTokenException",
        "documentation" : null,
        "simpleType" : "InvalidPaginationTokenException",
        "variableSetterType" : "InvalidPaginationTokenException"
      },
      "wrapper" : false
    },
    "InvalidParameterException" : {
      "c2jName" : "InvalidParameterException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Input parameter violated a constraint. Validate your parameter before calling the API operation again.</p>",
      "enums" : null,
      "errorCode" : "InvalidParameterException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidParameterException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidParameterException",
        "variableName" : "invalidParameterException",
        "variableType" : "InvalidParameterException",
        "documentation" : null,
        "simpleType" : "InvalidParameterException",
        "variableSetterType" : "InvalidParameterException"
      },
      "wrapper" : false
    },
    "InvalidS3ObjectException" : {
      "c2jName" : "InvalidS3ObjectException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Amazon Rekognition is unable to access the S3 object specified in the request.</p>",
      "enums" : null,
      "errorCode" : "InvalidS3ObjectException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidS3ObjectException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidS3ObjectException",
        "variableName" : "invalidS3ObjectException",
        "variableType" : "InvalidS3ObjectException",
        "documentation" : null,
        "simpleType" : "InvalidS3ObjectException",
        "variableSetterType" : "InvalidS3ObjectException"
      },
      "wrapper" : false
    },
    "Label" : {
      "c2jName" : "Label",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Structure containing details about the detected label, including name, and level of confidence.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Name",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>The name (label) of the object.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name (label) of the object.</p>\n@param name The name (label) of the object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>The name (label) of the object.</p>\n@return The name (label) of the object.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Name",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "setterDocumentation" : "/**<p>The name (label) of the object.</p>\n@param name The name (label) of the object.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name (label) of the object.</p>\n@param name The name (label) of the object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>The name (label) of the object.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Confidence",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>Level of confidence.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Level of confidence.</p>\n@param confidence Level of confidence.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withConfidence",
        "getterDocumentation" : "/**<p>Level of confidence.</p>\n@return Level of confidence.*/",
        "getterMethodName" : "getConfidence",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Confidence",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Confidence",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Float",
        "marshallingType" : "FLOAT",
        "name" : "Confidence",
        "setterDocumentation" : "/**<p>Level of confidence.</p>\n@param confidence Level of confidence.*/",
        "setterMethodName" : "setConfidence",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Level of confidence.</p>\n@param confidence Level of confidence.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "<p>Level of confidence.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Confidence" : {
          "c2jName" : "Confidence",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>Level of confidence.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Level of confidence.</p>\n@param confidence Level of confidence.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withConfidence",
          "getterDocumentation" : "/**<p>Level of confidence.</p>\n@return Level of confidence.*/",
          "getterMethodName" : "getConfidence",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Confidence",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Confidence",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Float",
          "marshallingType" : "FLOAT",
          "name" : "Confidence",
          "setterDocumentation" : "/**<p>Level of confidence.</p>\n@param confidence Level of confidence.*/",
          "setterMethodName" : "setConfidence",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Level of confidence.</p>\n@param confidence Level of confidence.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "<p>Level of confidence.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "Name" : {
          "c2jName" : "Name",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>The name (label) of the object.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name (label) of the object.</p>\n@param name The name (label) of the object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>The name (label) of the object.</p>\n@return The name (label) of the object.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Name",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "setterDocumentation" : "/**<p>The name (label) of the object.</p>\n@param name The name (label) of the object.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name (label) of the object.</p>\n@param name The name (label) of the object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>The name (label) of the object.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Label",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "Label",
        "variableName" : "label",
        "variableType" : "Label",
        "documentation" : null,
        "simpleType" : "Label",
        "variableSetterType" : "Label"
      },
      "wrapper" : false
    },
    "Landmark" : {
      "c2jName" : "Landmark",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Indicates the location of the landmark on the face.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Type",
        "c2jShape" : "LandmarkType",
        "deprecated" : false,
        "documentation" : "<p>Type of the landmark.</p>",
        "enumType" : "LandmarkType",
        "fluentSetterDocumentation" : "/**<p>Type of the landmark.</p>\n@param type Type of the landmark.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LandmarkType*/",
        "fluentSetterMethodName" : "withType",
        "getterDocumentation" : "/**<p>Type of the landmark.</p>\n@return Type of the landmark.\n@see LandmarkType*/",
        "getterMethodName" : "getType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Type",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Type",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Type",
        "setterDocumentation" : "/**<p>Type of the landmark.</p>\n@param type Type of the landmark.\n@see LandmarkType*/",
        "setterMethodName" : "setType",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "type",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Type of the landmark.</p>\n@param type Type of the landmark.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LandmarkType*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "type",
          "variableType" : "String",
          "documentation" : "<p>Type of the landmark.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "X",
        "c2jShape" : "Float",
        "deprecated" : false,
        "documentation" : "<p>x-coordinate from the top left of the landmark expressed as the ratio of the width of the image. For example, if the images is 700x200 and the x-coordinate of the landmark is at 350 pixels, this value is 0.5. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>x-coordinate from the top left of the landmark expressed as the ratio of the width of the image. For example, if the images is 700x200 and the x-coordinate of the landmark is at 350 pixels, this value is 0.5. </p>\n@param x x-coordinate from the top left of the landmark expressed as the ratio of the width of the image. For example, if the images is 700x200 and the x-coordinate of the landmark is at 350 pixels, this value is 0.5.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withX",
        "getterDocumentation" : "/**<p>x-coordinate from the top left of the landmark expressed as the ratio of the width of the image. For example, if the images is 700x200 and the x-coordinate of the landmark is at 350 pixels, this value is 0.5. </p>\n@return x-coordinate from the top left of the landmark expressed as the ratio of the width of the image. For example, if the images is 700x200 and the x-coordinate of the landmark is at 350 pixels, this value is 0.5.*/",
        "getterMethodName" : "getX",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "X",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "X",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Float",
        "marshallingType" : "FLOAT",
        "name" : "X",
        "setterDocumentation" : "/**<p>x-coordinate from the top left of the landmark expressed as the ratio of the width of the image. For example, if the images is 700x200 and the x-coordinate of the landmark is at 350 pixels, this value is 0.5. </p>\n@param x x-coordinate from the top left of the landmark expressed as the ratio of the width of the image. For example, if the images is 700x200 and the x-coordinate of the landmark is at 350 pixels, this value is 0.5.*/",
        "setterMethodName" : "setX",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "x",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>x-coordinate from the top left of the landmark expressed as the ratio of the width of the image. For example, if the images is 700x200 and the x-coordinate of the landmark is at 350 pixels, this value is 0.5. </p>\n@param x x-coordinate from the top left of the landmark expressed as the ratio of the width of the image. For example, if the images is 700x200 and the x-coordinate of the landmark is at 350 pixels, this value is 0.5.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "x",
          "variableType" : "Float",
          "documentation" : "<p>x-coordinate from the top left of the landmark expressed as the ratio of the width of the image. For example, if the images is 700x200 and the x-coordinate of the landmark is at 350 pixels, this value is 0.5. </p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Y",
        "c2jShape" : "Float",
        "deprecated" : false,
        "documentation" : "<p>y-coordinate from the top left of the landmark expressed as the ratio of the height of the image. For example, if the images is 700x200 and the y-coordinate of the landmark is at 100 pixels, this value is 0.5.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>y-coordinate from the top left of the landmark expressed as the ratio of the height of the image. For example, if the images is 700x200 and the y-coordinate of the landmark is at 100 pixels, this value is 0.5.</p>\n@param y y-coordinate from the top left of the landmark expressed as the ratio of the height of the image. For example, if the images is 700x200 and the y-coordinate of the landmark is at 100 pixels, this value is 0.5.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withY",
        "getterDocumentation" : "/**<p>y-coordinate from the top left of the landmark expressed as the ratio of the height of the image. For example, if the images is 700x200 and the y-coordinate of the landmark is at 100 pixels, this value is 0.5.</p>\n@return y-coordinate from the top left of the landmark expressed as the ratio of the height of the image. For example, if the images is 700x200 and the y-coordinate of the landmark is at 100 pixels, this value is 0.5.*/",
        "getterMethodName" : "getY",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Y",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Y",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Float",
        "marshallingType" : "FLOAT",
        "name" : "Y",
        "setterDocumentation" : "/**<p>y-coordinate from the top left of the landmark expressed as the ratio of the height of the image. For example, if the images is 700x200 and the y-coordinate of the landmark is at 100 pixels, this value is 0.5.</p>\n@param y y-coordinate from the top left of the landmark expressed as the ratio of the height of the image. For example, if the images is 700x200 and the y-coordinate of the landmark is at 100 pixels, this value is 0.5.*/",
        "setterMethodName" : "setY",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "y",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>y-coordinate from the top left of the landmark expressed as the ratio of the height of the image. For example, if the images is 700x200 and the y-coordinate of the landmark is at 100 pixels, this value is 0.5.</p>\n@param y y-coordinate from the top left of the landmark expressed as the ratio of the height of the image. For example, if the images is 700x200 and the y-coordinate of the landmark is at 100 pixels, this value is 0.5.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "y",
          "variableType" : "Float",
          "documentation" : "<p>y-coordinate from the top left of the landmark expressed as the ratio of the height of the image. For example, if the images is 700x200 and the y-coordinate of the landmark is at 100 pixels, this value is 0.5.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Type" : {
          "c2jName" : "Type",
          "c2jShape" : "LandmarkType",
          "deprecated" : false,
          "documentation" : "<p>Type of the landmark.</p>",
          "enumType" : "LandmarkType",
          "fluentSetterDocumentation" : "/**<p>Type of the landmark.</p>\n@param type Type of the landmark.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LandmarkType*/",
          "fluentSetterMethodName" : "withType",
          "getterDocumentation" : "/**<p>Type of the landmark.</p>\n@return Type of the landmark.\n@see LandmarkType*/",
          "getterMethodName" : "getType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Type",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Type",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Type",
          "setterDocumentation" : "/**<p>Type of the landmark.</p>\n@param type Type of the landmark.\n@see LandmarkType*/",
          "setterMethodName" : "setType",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "type",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Type of the landmark.</p>\n@param type Type of the landmark.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LandmarkType*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "type",
            "variableType" : "String",
            "documentation" : "<p>Type of the landmark.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "X" : {
          "c2jName" : "X",
          "c2jShape" : "Float",
          "deprecated" : false,
          "documentation" : "<p>x-coordinate from the top left of the landmark expressed as the ratio of the width of the image. For example, if the images is 700x200 and the x-coordinate of the landmark is at 350 pixels, this value is 0.5. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>x-coordinate from the top left of the landmark expressed as the ratio of the width of the image. For example, if the images is 700x200 and the x-coordinate of the landmark is at 350 pixels, this value is 0.5. </p>\n@param x x-coordinate from the top left of the landmark expressed as the ratio of the width of the image. For example, if the images is 700x200 and the x-coordinate of the landmark is at 350 pixels, this value is 0.5.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withX",
          "getterDocumentation" : "/**<p>x-coordinate from the top left of the landmark expressed as the ratio of the width of the image. For example, if the images is 700x200 and the x-coordinate of the landmark is at 350 pixels, this value is 0.5. </p>\n@return x-coordinate from the top left of the landmark expressed as the ratio of the width of the image. For example, if the images is 700x200 and the x-coordinate of the landmark is at 350 pixels, this value is 0.5.*/",
          "getterMethodName" : "getX",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "X",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "X",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Float",
          "marshallingType" : "FLOAT",
          "name" : "X",
          "setterDocumentation" : "/**<p>x-coordinate from the top left of the landmark expressed as the ratio of the width of the image. For example, if the images is 700x200 and the x-coordinate of the landmark is at 350 pixels, this value is 0.5. </p>\n@param x x-coordinate from the top left of the landmark expressed as the ratio of the width of the image. For example, if the images is 700x200 and the x-coordinate of the landmark is at 350 pixels, this value is 0.5.*/",
          "setterMethodName" : "setX",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "x",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>x-coordinate from the top left of the landmark expressed as the ratio of the width of the image. For example, if the images is 700x200 and the x-coordinate of the landmark is at 350 pixels, this value is 0.5. </p>\n@param x x-coordinate from the top left of the landmark expressed as the ratio of the width of the image. For example, if the images is 700x200 and the x-coordinate of the landmark is at 350 pixels, this value is 0.5.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "x",
            "variableType" : "Float",
            "documentation" : "<p>x-coordinate from the top left of the landmark expressed as the ratio of the width of the image. For example, if the images is 700x200 and the x-coordinate of the landmark is at 350 pixels, this value is 0.5. </p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "Y" : {
          "c2jName" : "Y",
          "c2jShape" : "Float",
          "deprecated" : false,
          "documentation" : "<p>y-coordinate from the top left of the landmark expressed as the ratio of the height of the image. For example, if the images is 700x200 and the y-coordinate of the landmark is at 100 pixels, this value is 0.5.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>y-coordinate from the top left of the landmark expressed as the ratio of the height of the image. For example, if the images is 700x200 and the y-coordinate of the landmark is at 100 pixels, this value is 0.5.</p>\n@param y y-coordinate from the top left of the landmark expressed as the ratio of the height of the image. For example, if the images is 700x200 and the y-coordinate of the landmark is at 100 pixels, this value is 0.5.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withY",
          "getterDocumentation" : "/**<p>y-coordinate from the top left of the landmark expressed as the ratio of the height of the image. For example, if the images is 700x200 and the y-coordinate of the landmark is at 100 pixels, this value is 0.5.</p>\n@return y-coordinate from the top left of the landmark expressed as the ratio of the height of the image. For example, if the images is 700x200 and the y-coordinate of the landmark is at 100 pixels, this value is 0.5.*/",
          "getterMethodName" : "getY",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Y",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Y",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Float",
          "marshallingType" : "FLOAT",
          "name" : "Y",
          "setterDocumentation" : "/**<p>y-coordinate from the top left of the landmark expressed as the ratio of the height of the image. For example, if the images is 700x200 and the y-coordinate of the landmark is at 100 pixels, this value is 0.5.</p>\n@param y y-coordinate from the top left of the landmark expressed as the ratio of the height of the image. For example, if the images is 700x200 and the y-coordinate of the landmark is at 100 pixels, this value is 0.5.*/",
          "setterMethodName" : "setY",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "y",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>y-coordinate from the top left of the landmark expressed as the ratio of the height of the image. For example, if the images is 700x200 and the y-coordinate of the landmark is at 100 pixels, this value is 0.5.</p>\n@param y y-coordinate from the top left of the landmark expressed as the ratio of the height of the image. For example, if the images is 700x200 and the y-coordinate of the landmark is at 100 pixels, this value is 0.5.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "y",
            "variableType" : "Float",
            "documentation" : "<p>y-coordinate from the top left of the landmark expressed as the ratio of the height of the image. For example, if the images is 700x200 and the y-coordinate of the landmark is at 100 pixels, this value is 0.5.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Landmark",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "Landmark",
        "variableName" : "landmark",
        "variableType" : "Landmark",
        "documentation" : null,
        "simpleType" : "Landmark",
        "variableSetterType" : "Landmark"
      },
      "wrapper" : false
    },
    "LandmarkType" : {
      "c2jName" : "LandmarkType",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "EyeLeft",
        "value" : "eyeLeft"
      }, {
        "name" : "EyeRight",
        "value" : "eyeRight"
      }, {
        "name" : "Nose",
        "value" : "nose"
      }, {
        "name" : "MouthLeft",
        "value" : "mouthLeft"
      }, {
        "name" : "MouthRight",
        "value" : "mouthRight"
      }, {
        "name" : "LeftEyeBrowLeft",
        "value" : "leftEyeBrowLeft"
      }, {
        "name" : "LeftEyeBrowRight",
        "value" : "leftEyeBrowRight"
      }, {
        "name" : "LeftEyeBrowUp",
        "value" : "leftEyeBrowUp"
      }, {
        "name" : "RightEyeBrowLeft",
        "value" : "rightEyeBrowLeft"
      }, {
        "name" : "RightEyeBrowRight",
        "value" : "rightEyeBrowRight"
      }, {
        "name" : "RightEyeBrowUp",
        "value" : "rightEyeBrowUp"
      }, {
        "name" : "LeftEyeLeft",
        "value" : "leftEyeLeft"
      }, {
        "name" : "LeftEyeRight",
        "value" : "leftEyeRight"
      }, {
        "name" : "LeftEyeUp",
        "value" : "leftEyeUp"
      }, {
        "name" : "LeftEyeDown",
        "value" : "leftEyeDown"
      }, {
        "name" : "RightEyeLeft",
        "value" : "rightEyeLeft"
      }, {
        "name" : "RightEyeRight",
        "value" : "rightEyeRight"
      }, {
        "name" : "RightEyeUp",
        "value" : "rightEyeUp"
      }, {
        "name" : "RightEyeDown",
        "value" : "rightEyeDown"
      }, {
        "name" : "NoseLeft",
        "value" : "noseLeft"
      }, {
        "name" : "NoseRight",
        "value" : "noseRight"
      }, {
        "name" : "MouthUp",
        "value" : "mouthUp"
      }, {
        "name" : "MouthDown",
        "value" : "mouthDown"
      }, {
        "name" : "LeftPupil",
        "value" : "leftPupil"
      }, {
        "name" : "RightPupil",
        "value" : "rightPupil"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "LandmarkType",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "LandmarkType",
        "variableName" : "landmarkType",
        "variableType" : "LandmarkType",
        "documentation" : null,
        "simpleType" : "LandmarkType",
        "variableSetterType" : "LandmarkType"
      },
      "wrapper" : false
    },
    "ListCollectionsRequest" : {
      "c2jName" : "ListCollectionsRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListCollections",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "RekognitionService.ListCollections",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "NextToken",
        "c2jShape" : "PaginationToken",
        "deprecated" : false,
        "documentation" : "<p>Pagination token from the previous response.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Pagination token from the previous response.</p>\n@param nextToken Pagination token from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>Pagination token from the previous response.</p>\n@return Pagination token from the previous response.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "setterDocumentation" : "/**<p>Pagination token from the previous response.</p>\n@param nextToken Pagination token from the previous response.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Pagination token from the previous response.</p>\n@param nextToken Pagination token from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>Pagination token from the previous response.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MaxResults",
        "c2jShape" : "PageSize",
        "deprecated" : false,
        "documentation" : "<p>Maximum number of collection IDs to return.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Maximum number of collection IDs to return.</p>\n@param maxResults Maximum number of collection IDs to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>Maximum number of collection IDs to return.</p>\n@return Maximum number of collection IDs to return.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MaxResults",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "setterDocumentation" : "/**<p>Maximum number of collection IDs to return.</p>\n@param maxResults Maximum number of collection IDs to return.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Maximum number of collection IDs to return.</p>\n@param maxResults Maximum number of collection IDs to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>Maximum number of collection IDs to return.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "MaxResults" : {
          "c2jName" : "MaxResults",
          "c2jShape" : "PageSize",
          "deprecated" : false,
          "documentation" : "<p>Maximum number of collection IDs to return.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Maximum number of collection IDs to return.</p>\n@param maxResults Maximum number of collection IDs to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>Maximum number of collection IDs to return.</p>\n@return Maximum number of collection IDs to return.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MaxResults",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "setterDocumentation" : "/**<p>Maximum number of collection IDs to return.</p>\n@param maxResults Maximum number of collection IDs to return.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Maximum number of collection IDs to return.</p>\n@param maxResults Maximum number of collection IDs to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>Maximum number of collection IDs to return.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "PaginationToken",
          "deprecated" : false,
          "documentation" : "<p>Pagination token from the previous response.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Pagination token from the previous response.</p>\n@param nextToken Pagination token from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>Pagination token from the previous response.</p>\n@return Pagination token from the previous response.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "setterDocumentation" : "/**<p>Pagination token from the previous response.</p>\n@param nextToken Pagination token from the previous response.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Pagination token from the previous response.</p>\n@param nextToken Pagination token from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>Pagination token from the previous response.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListCollectionsRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ListCollectionsRequest",
        "variableName" : "listCollectionsRequest",
        "variableType" : "ListCollectionsRequest",
        "documentation" : null,
        "simpleType" : "ListCollectionsRequest",
        "variableSetterType" : "ListCollectionsRequest"
      },
      "wrapper" : false
    },
    "ListCollectionsResult" : {
      "c2jName" : "ListCollectionsResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "CollectionIds",
        "c2jShape" : "CollectionIdList",
        "deprecated" : false,
        "documentation" : "<p>An array of collection IDs.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An array of collection IDs.</p>\n@param collectionIds An array of collection IDs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCollectionIds",
        "getterDocumentation" : "/**<p>An array of collection IDs.</p>\n@return An array of collection IDs.*/",
        "getterMethodName" : "getCollectionIds",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "CollectionIds",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CollectionIds",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "CollectionId",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "CollectionIds",
        "setterDocumentation" : "/**<p>An array of collection IDs.</p>\n@param collectionIds An array of collection IDs.*/",
        "setterMethodName" : "setCollectionIds",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "collectionIds",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An array of collection IDs.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setCollectionIds(java.util.Collection)} or {@link #withCollectionIds(java.util.Collection)} if you want to override the existing values.</p>\n@param collectionIds An array of collection IDs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "collectionIds",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>An array of collection IDs.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "PaginationToken",
        "deprecated" : false,
        "documentation" : "<p>If the result is truncated, the response provides a <code>NextToken</code> that you can use in the subsequent request to fetch the next set of collection IDs.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>If the result is truncated, the response provides a <code>NextToken</code> that you can use in the subsequent request to fetch the next set of collection IDs.</p>\n@param nextToken If the result is truncated, the response provides a <code>NextToken</code> that you can use in the subsequent request to fetch the next set of collection IDs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>If the result is truncated, the response provides a <code>NextToken</code> that you can use in the subsequent request to fetch the next set of collection IDs.</p>\n@return If the result is truncated, the response provides a <code>NextToken</code> that you can use in the subsequent request to fetch the next set of collection IDs.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "setterDocumentation" : "/**<p>If the result is truncated, the response provides a <code>NextToken</code> that you can use in the subsequent request to fetch the next set of collection IDs.</p>\n@param nextToken If the result is truncated, the response provides a <code>NextToken</code> that you can use in the subsequent request to fetch the next set of collection IDs.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>If the result is truncated, the response provides a <code>NextToken</code> that you can use in the subsequent request to fetch the next set of collection IDs.</p>\n@param nextToken If the result is truncated, the response provides a <code>NextToken</code> that you can use in the subsequent request to fetch the next set of collection IDs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>If the result is truncated, the response provides a <code>NextToken</code> that you can use in the subsequent request to fetch the next set of collection IDs.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CollectionIds" : {
          "c2jName" : "CollectionIds",
          "c2jShape" : "CollectionIdList",
          "deprecated" : false,
          "documentation" : "<p>An array of collection IDs.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An array of collection IDs.</p>\n@param collectionIds An array of collection IDs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCollectionIds",
          "getterDocumentation" : "/**<p>An array of collection IDs.</p>\n@return An array of collection IDs.*/",
          "getterMethodName" : "getCollectionIds",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "CollectionIds",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CollectionIds",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "CollectionId",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "CollectionIds",
          "setterDocumentation" : "/**<p>An array of collection IDs.</p>\n@param collectionIds An array of collection IDs.*/",
          "setterMethodName" : "setCollectionIds",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "collectionIds",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An array of collection IDs.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setCollectionIds(java.util.Collection)} or {@link #withCollectionIds(java.util.Collection)} if you want to override the existing values.</p>\n@param collectionIds An array of collection IDs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "collectionIds",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>An array of collection IDs.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "PaginationToken",
          "deprecated" : false,
          "documentation" : "<p>If the result is truncated, the response provides a <code>NextToken</code> that you can use in the subsequent request to fetch the next set of collection IDs.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>If the result is truncated, the response provides a <code>NextToken</code> that you can use in the subsequent request to fetch the next set of collection IDs.</p>\n@param nextToken If the result is truncated, the response provides a <code>NextToken</code> that you can use in the subsequent request to fetch the next set of collection IDs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>If the result is truncated, the response provides a <code>NextToken</code> that you can use in the subsequent request to fetch the next set of collection IDs.</p>\n@return If the result is truncated, the response provides a <code>NextToken</code> that you can use in the subsequent request to fetch the next set of collection IDs.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "setterDocumentation" : "/**<p>If the result is truncated, the response provides a <code>NextToken</code> that you can use in the subsequent request to fetch the next set of collection IDs.</p>\n@param nextToken If the result is truncated, the response provides a <code>NextToken</code> that you can use in the subsequent request to fetch the next set of collection IDs.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>If the result is truncated, the response provides a <code>NextToken</code> that you can use in the subsequent request to fetch the next set of collection IDs.</p>\n@param nextToken If the result is truncated, the response provides a <code>NextToken</code> that you can use in the subsequent request to fetch the next set of collection IDs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>If the result is truncated, the response provides a <code>NextToken</code> that you can use in the subsequent request to fetch the next set of collection IDs.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListCollectionsResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "ListCollectionsResult",
        "variableName" : "listCollectionsResult",
        "variableType" : "ListCollectionsResult",
        "documentation" : null,
        "simpleType" : "ListCollectionsResult",
        "variableSetterType" : "ListCollectionsResult"
      },
      "wrapper" : false
    },
    "ListFacesRequest" : {
      "c2jName" : "ListFacesRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListFaces",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "RekognitionService.ListFaces",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "CollectionId",
        "c2jShape" : "CollectionId",
        "deprecated" : false,
        "documentation" : "<p>ID of the collection from which to list the faces.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>ID of the collection from which to list the faces.</p>\n@param collectionId ID of the collection from which to list the faces.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCollectionId",
        "getterDocumentation" : "/**<p>ID of the collection from which to list the faces.</p>\n@return ID of the collection from which to list the faces.*/",
        "getterMethodName" : "getCollectionId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "CollectionId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CollectionId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CollectionId",
        "setterDocumentation" : "/**<p>ID of the collection from which to list the faces.</p>\n@param collectionId ID of the collection from which to list the faces.*/",
        "setterMethodName" : "setCollectionId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "collectionId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>ID of the collection from which to list the faces.</p>\n@param collectionId ID of the collection from which to list the faces.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "collectionId",
          "variableType" : "String",
          "documentation" : "<p>ID of the collection from which to list the faces.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "PaginationToken",
        "deprecated" : false,
        "documentation" : "<p>If the previous response was incomplete (because there is more data to retrieve), Amazon Rekognition returns a pagination token in the response. You can use this pagination token to retrieve the next set of faces.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>If the previous response was incomplete (because there is more data to retrieve), Amazon Rekognition returns a pagination token in the response. You can use this pagination token to retrieve the next set of faces.</p>\n@param nextToken If the previous response was incomplete (because there is more data to retrieve), Amazon Rekognition returns a pagination token in the response. You can use this pagination token to retrieve the next set of faces.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>If the previous response was incomplete (because there is more data to retrieve), Amazon Rekognition returns a pagination token in the response. You can use this pagination token to retrieve the next set of faces.</p>\n@return If the previous response was incomplete (because there is more data to retrieve), Amazon Rekognition returns a pagination token in the response. You can use this pagination token to retrieve the next set of faces.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "setterDocumentation" : "/**<p>If the previous response was incomplete (because there is more data to retrieve), Amazon Rekognition returns a pagination token in the response. You can use this pagination token to retrieve the next set of faces.</p>\n@param nextToken If the previous response was incomplete (because there is more data to retrieve), Amazon Rekognition returns a pagination token in the response. You can use this pagination token to retrieve the next set of faces.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>If the previous response was incomplete (because there is more data to retrieve), Amazon Rekognition returns a pagination token in the response. You can use this pagination token to retrieve the next set of faces.</p>\n@param nextToken If the previous response was incomplete (because there is more data to retrieve), Amazon Rekognition returns a pagination token in the response. You can use this pagination token to retrieve the next set of faces.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>If the previous response was incomplete (because there is more data to retrieve), Amazon Rekognition returns a pagination token in the response. You can use this pagination token to retrieve the next set of faces.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MaxResults",
        "c2jShape" : "PageSize",
        "deprecated" : false,
        "documentation" : "<p>Maximum number of faces to return.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Maximum number of faces to return.</p>\n@param maxResults Maximum number of faces to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>Maximum number of faces to return.</p>\n@return Maximum number of faces to return.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MaxResults",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "setterDocumentation" : "/**<p>Maximum number of faces to return.</p>\n@param maxResults Maximum number of faces to return.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Maximum number of faces to return.</p>\n@param maxResults Maximum number of faces to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>Maximum number of faces to return.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CollectionId" : {
          "c2jName" : "CollectionId",
          "c2jShape" : "CollectionId",
          "deprecated" : false,
          "documentation" : "<p>ID of the collection from which to list the faces.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>ID of the collection from which to list the faces.</p>\n@param collectionId ID of the collection from which to list the faces.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCollectionId",
          "getterDocumentation" : "/**<p>ID of the collection from which to list the faces.</p>\n@return ID of the collection from which to list the faces.*/",
          "getterMethodName" : "getCollectionId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "CollectionId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CollectionId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CollectionId",
          "setterDocumentation" : "/**<p>ID of the collection from which to list the faces.</p>\n@param collectionId ID of the collection from which to list the faces.*/",
          "setterMethodName" : "setCollectionId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "collectionId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>ID of the collection from which to list the faces.</p>\n@param collectionId ID of the collection from which to list the faces.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "collectionId",
            "variableType" : "String",
            "documentation" : "<p>ID of the collection from which to list the faces.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "MaxResults" : {
          "c2jName" : "MaxResults",
          "c2jShape" : "PageSize",
          "deprecated" : false,
          "documentation" : "<p>Maximum number of faces to return.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Maximum number of faces to return.</p>\n@param maxResults Maximum number of faces to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>Maximum number of faces to return.</p>\n@return Maximum number of faces to return.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MaxResults",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "setterDocumentation" : "/**<p>Maximum number of faces to return.</p>\n@param maxResults Maximum number of faces to return.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Maximum number of faces to return.</p>\n@param maxResults Maximum number of faces to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>Maximum number of faces to return.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "PaginationToken",
          "deprecated" : false,
          "documentation" : "<p>If the previous response was incomplete (because there is more data to retrieve), Amazon Rekognition returns a pagination token in the response. You can use this pagination token to retrieve the next set of faces.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>If the previous response was incomplete (because there is more data to retrieve), Amazon Rekognition returns a pagination token in the response. You can use this pagination token to retrieve the next set of faces.</p>\n@param nextToken If the previous response was incomplete (because there is more data to retrieve), Amazon Rekognition returns a pagination token in the response. You can use this pagination token to retrieve the next set of faces.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>If the previous response was incomplete (because there is more data to retrieve), Amazon Rekognition returns a pagination token in the response. You can use this pagination token to retrieve the next set of faces.</p>\n@return If the previous response was incomplete (because there is more data to retrieve), Amazon Rekognition returns a pagination token in the response. You can use this pagination token to retrieve the next set of faces.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "setterDocumentation" : "/**<p>If the previous response was incomplete (because there is more data to retrieve), Amazon Rekognition returns a pagination token in the response. You can use this pagination token to retrieve the next set of faces.</p>\n@param nextToken If the previous response was incomplete (because there is more data to retrieve), Amazon Rekognition returns a pagination token in the response. You can use this pagination token to retrieve the next set of faces.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>If the previous response was incomplete (because there is more data to retrieve), Amazon Rekognition returns a pagination token in the response. You can use this pagination token to retrieve the next set of faces.</p>\n@param nextToken If the previous response was incomplete (because there is more data to retrieve), Amazon Rekognition returns a pagination token in the response. You can use this pagination token to retrieve the next set of faces.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>If the previous response was incomplete (because there is more data to retrieve), Amazon Rekognition returns a pagination token in the response. You can use this pagination token to retrieve the next set of faces.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "CollectionId" ],
      "shapeName" : "ListFacesRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ListFacesRequest",
        "variableName" : "listFacesRequest",
        "variableType" : "ListFacesRequest",
        "documentation" : null,
        "simpleType" : "ListFacesRequest",
        "variableSetterType" : "ListFacesRequest"
      },
      "wrapper" : false
    },
    "ListFacesResult" : {
      "c2jName" : "ListFacesResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Faces",
        "c2jShape" : "FaceList",
        "deprecated" : false,
        "documentation" : "<p>An array of <code>Face</code> objects. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An array of <code>Face</code> objects. </p>\n@param faces An array of <code>Face</code> objects.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFaces",
        "getterDocumentation" : "/**<p>An array of <code>Face</code> objects. </p>\n@return An array of <code>Face</code> objects.*/",
        "getterMethodName" : "getFaces",
        "getterModel" : {
          "returnType" : "java.util.List<Face>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Faces",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Faces",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Face",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Face",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "Face",
              "variableName" : "member",
              "variableType" : "Face",
              "documentation" : "",
              "simpleType" : "Face",
              "variableSetterType" : "Face"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "Face",
              "variableName" : "member",
              "variableType" : "Face",
              "documentation" : "",
              "simpleType" : "Face",
              "variableSetterType" : "Face"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Face",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Face",
          "templateImplType" : "java.util.ArrayList<Face>",
          "templateType" : "java.util.List<Face>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Faces",
        "setterDocumentation" : "/**<p>An array of <code>Face</code> objects. </p>\n@param faces An array of <code>Face</code> objects.*/",
        "setterMethodName" : "setFaces",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<Face>",
          "variableName" : "faces",
          "variableType" : "java.util.List<Face>",
          "documentation" : "",
          "simpleType" : "List<Face>",
          "variableSetterType" : "java.util.Collection<Face>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An array of <code>Face</code> objects. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFaces(java.util.Collection)} or {@link #withFaces(java.util.Collection)} if you want to override the existing values.</p>\n@param faces An array of <code>Face</code> objects.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<Face>",
          "variableName" : "faces",
          "variableType" : "java.util.List<Face>",
          "documentation" : "<p>An array of <code>Face</code> objects. </p>",
          "simpleType" : "List<Face>",
          "variableSetterType" : "java.util.Collection<Face>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>If the response is truncated, Amazon Rekognition returns this token that you can use in the subsequent request to retrieve the next set of faces.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>If the response is truncated, Amazon Rekognition returns this token that you can use in the subsequent request to retrieve the next set of faces.</p>\n@param nextToken If the response is truncated, Amazon Rekognition returns this token that you can use in the subsequent request to retrieve the next set of faces.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p>If the response is truncated, Amazon Rekognition returns this token that you can use in the subsequent request to retrieve the next set of faces.</p>\n@return If the response is truncated, Amazon Rekognition returns this token that you can use in the subsequent request to retrieve the next set of faces.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "setterDocumentation" : "/**<p>If the response is truncated, Amazon Rekognition returns this token that you can use in the subsequent request to retrieve the next set of faces.</p>\n@param nextToken If the response is truncated, Amazon Rekognition returns this token that you can use in the subsequent request to retrieve the next set of faces.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>If the response is truncated, Amazon Rekognition returns this token that you can use in the subsequent request to retrieve the next set of faces.</p>\n@param nextToken If the response is truncated, Amazon Rekognition returns this token that you can use in the subsequent request to retrieve the next set of faces.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>If the response is truncated, Amazon Rekognition returns this token that you can use in the subsequent request to retrieve the next set of faces.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Faces" : {
          "c2jName" : "Faces",
          "c2jShape" : "FaceList",
          "deprecated" : false,
          "documentation" : "<p>An array of <code>Face</code> objects. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An array of <code>Face</code> objects. </p>\n@param faces An array of <code>Face</code> objects.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFaces",
          "getterDocumentation" : "/**<p>An array of <code>Face</code> objects. </p>\n@return An array of <code>Face</code> objects.*/",
          "getterMethodName" : "getFaces",
          "getterModel" : {
            "returnType" : "java.util.List<Face>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Faces",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Faces",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Face",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Face",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "Face",
                "variableName" : "member",
                "variableType" : "Face",
                "documentation" : "",
                "simpleType" : "Face",
                "variableSetterType" : "Face"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "Face",
                "variableName" : "member",
                "variableType" : "Face",
                "documentation" : "",
                "simpleType" : "Face",
                "variableSetterType" : "Face"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Face",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Face",
            "templateImplType" : "java.util.ArrayList<Face>",
            "templateType" : "java.util.List<Face>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Faces",
          "setterDocumentation" : "/**<p>An array of <code>Face</code> objects. </p>\n@param faces An array of <code>Face</code> objects.*/",
          "setterMethodName" : "setFaces",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<Face>",
            "variableName" : "faces",
            "variableType" : "java.util.List<Face>",
            "documentation" : "",
            "simpleType" : "List<Face>",
            "variableSetterType" : "java.util.Collection<Face>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An array of <code>Face</code> objects. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFaces(java.util.Collection)} or {@link #withFaces(java.util.Collection)} if you want to override the existing values.</p>\n@param faces An array of <code>Face</code> objects.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<Face>",
            "variableName" : "faces",
            "variableType" : "java.util.List<Face>",
            "documentation" : "<p>An array of <code>Face</code> objects. </p>",
            "simpleType" : "List<Face>",
            "variableSetterType" : "java.util.Collection<Face>"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>If the response is truncated, Amazon Rekognition returns this token that you can use in the subsequent request to retrieve the next set of faces.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>If the response is truncated, Amazon Rekognition returns this token that you can use in the subsequent request to retrieve the next set of faces.</p>\n@param nextToken If the response is truncated, Amazon Rekognition returns this token that you can use in the subsequent request to retrieve the next set of faces.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p>If the response is truncated, Amazon Rekognition returns this token that you can use in the subsequent request to retrieve the next set of faces.</p>\n@return If the response is truncated, Amazon Rekognition returns this token that you can use in the subsequent request to retrieve the next set of faces.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "setterDocumentation" : "/**<p>If the response is truncated, Amazon Rekognition returns this token that you can use in the subsequent request to retrieve the next set of faces.</p>\n@param nextToken If the response is truncated, Amazon Rekognition returns this token that you can use in the subsequent request to retrieve the next set of faces.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>If the response is truncated, Amazon Rekognition returns this token that you can use in the subsequent request to retrieve the next set of faces.</p>\n@param nextToken If the response is truncated, Amazon Rekognition returns this token that you can use in the subsequent request to retrieve the next set of faces.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>If the response is truncated, Amazon Rekognition returns this token that you can use in the subsequent request to retrieve the next set of faces.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ListFacesResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "ListFacesResult",
        "variableName" : "listFacesResult",
        "variableType" : "ListFacesResult",
        "documentation" : null,
        "simpleType" : "ListFacesResult",
        "variableSetterType" : "ListFacesResult"
      },
      "wrapper" : false
    },
    "ModerationLabel" : {
      "c2jName" : "ModerationLabel",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Provides information about a single type of moderated content found in an image. Each type of moderated content has a label within a hierarchical taxonomy. For more information, see <a>image-moderation</a>.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Confidence",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>Specifies the confidence that Amazon Rekognition has that the label has been correctly identified.</p> <p>If you don't specify the <code>MinConfidence</code> parameter in the call to <code>DetectModerationLabels</code>, the operation returns labels with a confidence value greater than or equal to 50 percent.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Specifies the confidence that Amazon Rekognition has that the label has been correctly identified.</p> <p>If you don't specify the <code>MinConfidence</code> parameter in the call to <code>DetectModerationLabels</code>, the operation returns labels with a confidence value greater than or equal to 50 percent.</p>\n@param confidence Specifies the confidence that Amazon Rekognition has that the label has been correctly identified.</p> <p>If you don't specify the <code>MinConfidence</code> parameter in the call to <code>DetectModerationLabels</code>, the operation returns labels with a confidence value greater than or equal to 50 percent.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withConfidence",
        "getterDocumentation" : "/**<p>Specifies the confidence that Amazon Rekognition has that the label has been correctly identified.</p> <p>If you don't specify the <code>MinConfidence</code> parameter in the call to <code>DetectModerationLabels</code>, the operation returns labels with a confidence value greater than or equal to 50 percent.</p>\n@return Specifies the confidence that Amazon Rekognition has that the label has been correctly identified.</p> <p>If you don't specify the <code>MinConfidence</code> parameter in the call to <code>DetectModerationLabels</code>, the operation returns labels with a confidence value greater than or equal to 50 percent.*/",
        "getterMethodName" : "getConfidence",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Confidence",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Confidence",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Float",
        "marshallingType" : "FLOAT",
        "name" : "Confidence",
        "setterDocumentation" : "/**<p>Specifies the confidence that Amazon Rekognition has that the label has been correctly identified.</p> <p>If you don't specify the <code>MinConfidence</code> parameter in the call to <code>DetectModerationLabels</code>, the operation returns labels with a confidence value greater than or equal to 50 percent.</p>\n@param confidence Specifies the confidence that Amazon Rekognition has that the label has been correctly identified.</p> <p>If you don't specify the <code>MinConfidence</code> parameter in the call to <code>DetectModerationLabels</code>, the operation returns labels with a confidence value greater than or equal to 50 percent.*/",
        "setterMethodName" : "setConfidence",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Specifies the confidence that Amazon Rekognition has that the label has been correctly identified.</p> <p>If you don't specify the <code>MinConfidence</code> parameter in the call to <code>DetectModerationLabels</code>, the operation returns labels with a confidence value greater than or equal to 50 percent.</p>\n@param confidence Specifies the confidence that Amazon Rekognition has that the label has been correctly identified.</p> <p>If you don't specify the <code>MinConfidence</code> parameter in the call to <code>DetectModerationLabels</code>, the operation returns labels with a confidence value greater than or equal to 50 percent.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "<p>Specifies the confidence that Amazon Rekognition has that the label has been correctly identified.</p> <p>If you don't specify the <code>MinConfidence</code> parameter in the call to <code>DetectModerationLabels</code>, the operation returns labels with a confidence value greater than or equal to 50 percent.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Name",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>The label name for the type of content detected in the image.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The label name for the type of content detected in the image.</p>\n@param name The label name for the type of content detected in the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>The label name for the type of content detected in the image.</p>\n@return The label name for the type of content detected in the image.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Name",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "setterDocumentation" : "/**<p>The label name for the type of content detected in the image.</p>\n@param name The label name for the type of content detected in the image.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The label name for the type of content detected in the image.</p>\n@param name The label name for the type of content detected in the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>The label name for the type of content detected in the image.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ParentName",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>The name for the parent label. Labels at the top-level of the hierarchy have the parent label <code>\"\"</code>.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name for the parent label. Labels at the top-level of the hierarchy have the parent label <code>\"\"</code>.</p>\n@param parentName The name for the parent label. Labels at the top-level of the hierarchy have the parent label <code>\"\"</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withParentName",
        "getterDocumentation" : "/**<p>The name for the parent label. Labels at the top-level of the hierarchy have the parent label <code>\"\"</code>.</p>\n@return The name for the parent label. Labels at the top-level of the hierarchy have the parent label <code>\"\"</code>.*/",
        "getterMethodName" : "getParentName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ParentName",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ParentName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ParentName",
        "setterDocumentation" : "/**<p>The name for the parent label. Labels at the top-level of the hierarchy have the parent label <code>\"\"</code>.</p>\n@param parentName The name for the parent label. Labels at the top-level of the hierarchy have the parent label <code>\"\"</code>.*/",
        "setterMethodName" : "setParentName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "parentName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name for the parent label. Labels at the top-level of the hierarchy have the parent label <code>\"\"</code>.</p>\n@param parentName The name for the parent label. Labels at the top-level of the hierarchy have the parent label <code>\"\"</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "parentName",
          "variableType" : "String",
          "documentation" : "<p>The name for the parent label. Labels at the top-level of the hierarchy have the parent label <code>\"\"</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Confidence" : {
          "c2jName" : "Confidence",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>Specifies the confidence that Amazon Rekognition has that the label has been correctly identified.</p> <p>If you don't specify the <code>MinConfidence</code> parameter in the call to <code>DetectModerationLabels</code>, the operation returns labels with a confidence value greater than or equal to 50 percent.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Specifies the confidence that Amazon Rekognition has that the label has been correctly identified.</p> <p>If you don't specify the <code>MinConfidence</code> parameter in the call to <code>DetectModerationLabels</code>, the operation returns labels with a confidence value greater than or equal to 50 percent.</p>\n@param confidence Specifies the confidence that Amazon Rekognition has that the label has been correctly identified.</p> <p>If you don't specify the <code>MinConfidence</code> parameter in the call to <code>DetectModerationLabels</code>, the operation returns labels with a confidence value greater than or equal to 50 percent.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withConfidence",
          "getterDocumentation" : "/**<p>Specifies the confidence that Amazon Rekognition has that the label has been correctly identified.</p> <p>If you don't specify the <code>MinConfidence</code> parameter in the call to <code>DetectModerationLabels</code>, the operation returns labels with a confidence value greater than or equal to 50 percent.</p>\n@return Specifies the confidence that Amazon Rekognition has that the label has been correctly identified.</p> <p>If you don't specify the <code>MinConfidence</code> parameter in the call to <code>DetectModerationLabels</code>, the operation returns labels with a confidence value greater than or equal to 50 percent.*/",
          "getterMethodName" : "getConfidence",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Confidence",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Confidence",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Float",
          "marshallingType" : "FLOAT",
          "name" : "Confidence",
          "setterDocumentation" : "/**<p>Specifies the confidence that Amazon Rekognition has that the label has been correctly identified.</p> <p>If you don't specify the <code>MinConfidence</code> parameter in the call to <code>DetectModerationLabels</code>, the operation returns labels with a confidence value greater than or equal to 50 percent.</p>\n@param confidence Specifies the confidence that Amazon Rekognition has that the label has been correctly identified.</p> <p>If you don't specify the <code>MinConfidence</code> parameter in the call to <code>DetectModerationLabels</code>, the operation returns labels with a confidence value greater than or equal to 50 percent.*/",
          "setterMethodName" : "setConfidence",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Specifies the confidence that Amazon Rekognition has that the label has been correctly identified.</p> <p>If you don't specify the <code>MinConfidence</code> parameter in the call to <code>DetectModerationLabels</code>, the operation returns labels with a confidence value greater than or equal to 50 percent.</p>\n@param confidence Specifies the confidence that Amazon Rekognition has that the label has been correctly identified.</p> <p>If you don't specify the <code>MinConfidence</code> parameter in the call to <code>DetectModerationLabels</code>, the operation returns labels with a confidence value greater than or equal to 50 percent.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "<p>Specifies the confidence that Amazon Rekognition has that the label has been correctly identified.</p> <p>If you don't specify the <code>MinConfidence</code> parameter in the call to <code>DetectModerationLabels</code>, the operation returns labels with a confidence value greater than or equal to 50 percent.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "Name" : {
          "c2jName" : "Name",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>The label name for the type of content detected in the image.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The label name for the type of content detected in the image.</p>\n@param name The label name for the type of content detected in the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>The label name for the type of content detected in the image.</p>\n@return The label name for the type of content detected in the image.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Name",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "setterDocumentation" : "/**<p>The label name for the type of content detected in the image.</p>\n@param name The label name for the type of content detected in the image.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The label name for the type of content detected in the image.</p>\n@param name The label name for the type of content detected in the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>The label name for the type of content detected in the image.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ParentName" : {
          "c2jName" : "ParentName",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>The name for the parent label. Labels at the top-level of the hierarchy have the parent label <code>\"\"</code>.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name for the parent label. Labels at the top-level of the hierarchy have the parent label <code>\"\"</code>.</p>\n@param parentName The name for the parent label. Labels at the top-level of the hierarchy have the parent label <code>\"\"</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withParentName",
          "getterDocumentation" : "/**<p>The name for the parent label. Labels at the top-level of the hierarchy have the parent label <code>\"\"</code>.</p>\n@return The name for the parent label. Labels at the top-level of the hierarchy have the parent label <code>\"\"</code>.*/",
          "getterMethodName" : "getParentName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ParentName",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ParentName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ParentName",
          "setterDocumentation" : "/**<p>The name for the parent label. Labels at the top-level of the hierarchy have the parent label <code>\"\"</code>.</p>\n@param parentName The name for the parent label. Labels at the top-level of the hierarchy have the parent label <code>\"\"</code>.*/",
          "setterMethodName" : "setParentName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "parentName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name for the parent label. Labels at the top-level of the hierarchy have the parent label <code>\"\"</code>.</p>\n@param parentName The name for the parent label. Labels at the top-level of the hierarchy have the parent label <code>\"\"</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "parentName",
            "variableType" : "String",
            "documentation" : "<p>The name for the parent label. Labels at the top-level of the hierarchy have the parent label <code>\"\"</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ModerationLabel",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "ModerationLabel",
        "variableName" : "moderationLabel",
        "variableType" : "ModerationLabel",
        "documentation" : null,
        "simpleType" : "ModerationLabel",
        "variableSetterType" : "ModerationLabel"
      },
      "wrapper" : false
    },
    "MouthOpen" : {
      "c2jName" : "MouthOpen",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Indicates whether or not the mouth on the face is open, and the confidence level in the determination.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Value",
        "c2jShape" : "Boolean",
        "deprecated" : false,
        "documentation" : "<p>Boolean value that indicates whether the mouth on the face is open or not.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Boolean value that indicates whether the mouth on the face is open or not.</p>\n@param value Boolean value that indicates whether the mouth on the face is open or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withValue",
        "getterDocumentation" : "/**<p>Boolean value that indicates whether the mouth on the face is open or not.</p>\n@return Boolean value that indicates whether the mouth on the face is open or not.*/",
        "getterMethodName" : "getValue",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Value",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Value",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "Value",
        "setterDocumentation" : "/**<p>Boolean value that indicates whether the mouth on the face is open or not.</p>\n@param value Boolean value that indicates whether the mouth on the face is open or not.*/",
        "setterMethodName" : "setValue",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "value",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Boolean value that indicates whether the mouth on the face is open or not.</p>\n@param value Boolean value that indicates whether the mouth on the face is open or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "value",
          "variableType" : "Boolean",
          "documentation" : "<p>Boolean value that indicates whether the mouth on the face is open or not.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Confidence",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>Level of confidence in the determination.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withConfidence",
        "getterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@return Level of confidence in the determination.*/",
        "getterMethodName" : "getConfidence",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Confidence",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Confidence",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Float",
        "marshallingType" : "FLOAT",
        "name" : "Confidence",
        "setterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.*/",
        "setterMethodName" : "setConfidence",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "<p>Level of confidence in the determination.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Confidence" : {
          "c2jName" : "Confidence",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>Level of confidence in the determination.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withConfidence",
          "getterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@return Level of confidence in the determination.*/",
          "getterMethodName" : "getConfidence",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Confidence",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Confidence",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Float",
          "marshallingType" : "FLOAT",
          "name" : "Confidence",
          "setterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.*/",
          "setterMethodName" : "setConfidence",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "<p>Level of confidence in the determination.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "Value" : {
          "c2jName" : "Value",
          "c2jShape" : "Boolean",
          "deprecated" : false,
          "documentation" : "<p>Boolean value that indicates whether the mouth on the face is open or not.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Boolean value that indicates whether the mouth on the face is open or not.</p>\n@param value Boolean value that indicates whether the mouth on the face is open or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withValue",
          "getterDocumentation" : "/**<p>Boolean value that indicates whether the mouth on the face is open or not.</p>\n@return Boolean value that indicates whether the mouth on the face is open or not.*/",
          "getterMethodName" : "getValue",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Value",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Value",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "Value",
          "setterDocumentation" : "/**<p>Boolean value that indicates whether the mouth on the face is open or not.</p>\n@param value Boolean value that indicates whether the mouth on the face is open or not.*/",
          "setterMethodName" : "setValue",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "value",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Boolean value that indicates whether the mouth on the face is open or not.</p>\n@param value Boolean value that indicates whether the mouth on the face is open or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "value",
            "variableType" : "Boolean",
            "documentation" : "<p>Boolean value that indicates whether the mouth on the face is open or not.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "MouthOpen",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "MouthOpen",
        "variableName" : "mouthOpen",
        "variableType" : "MouthOpen",
        "documentation" : null,
        "simpleType" : "MouthOpen",
        "variableSetterType" : "MouthOpen"
      },
      "wrapper" : false
    },
    "Mustache" : {
      "c2jName" : "Mustache",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Indicates whether or not the face has a mustache, and the confidence level in the determination.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Value",
        "c2jShape" : "Boolean",
        "deprecated" : false,
        "documentation" : "<p>Boolean value that indicates whether the face has mustache or not.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Boolean value that indicates whether the face has mustache or not.</p>\n@param value Boolean value that indicates whether the face has mustache or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withValue",
        "getterDocumentation" : "/**<p>Boolean value that indicates whether the face has mustache or not.</p>\n@return Boolean value that indicates whether the face has mustache or not.*/",
        "getterMethodName" : "getValue",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Value",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Value",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "Value",
        "setterDocumentation" : "/**<p>Boolean value that indicates whether the face has mustache or not.</p>\n@param value Boolean value that indicates whether the face has mustache or not.*/",
        "setterMethodName" : "setValue",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "value",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Boolean value that indicates whether the face has mustache or not.</p>\n@param value Boolean value that indicates whether the face has mustache or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "value",
          "variableType" : "Boolean",
          "documentation" : "<p>Boolean value that indicates whether the face has mustache or not.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Confidence",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>Level of confidence in the determination.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withConfidence",
        "getterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@return Level of confidence in the determination.*/",
        "getterMethodName" : "getConfidence",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Confidence",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Confidence",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Float",
        "marshallingType" : "FLOAT",
        "name" : "Confidence",
        "setterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.*/",
        "setterMethodName" : "setConfidence",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "<p>Level of confidence in the determination.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Confidence" : {
          "c2jName" : "Confidence",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>Level of confidence in the determination.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withConfidence",
          "getterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@return Level of confidence in the determination.*/",
          "getterMethodName" : "getConfidence",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Confidence",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Confidence",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Float",
          "marshallingType" : "FLOAT",
          "name" : "Confidence",
          "setterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.*/",
          "setterMethodName" : "setConfidence",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "<p>Level of confidence in the determination.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "Value" : {
          "c2jName" : "Value",
          "c2jShape" : "Boolean",
          "deprecated" : false,
          "documentation" : "<p>Boolean value that indicates whether the face has mustache or not.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Boolean value that indicates whether the face has mustache or not.</p>\n@param value Boolean value that indicates whether the face has mustache or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withValue",
          "getterDocumentation" : "/**<p>Boolean value that indicates whether the face has mustache or not.</p>\n@return Boolean value that indicates whether the face has mustache or not.*/",
          "getterMethodName" : "getValue",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Value",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Value",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "Value",
          "setterDocumentation" : "/**<p>Boolean value that indicates whether the face has mustache or not.</p>\n@param value Boolean value that indicates whether the face has mustache or not.*/",
          "setterMethodName" : "setValue",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "value",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Boolean value that indicates whether the face has mustache or not.</p>\n@param value Boolean value that indicates whether the face has mustache or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "value",
            "variableType" : "Boolean",
            "documentation" : "<p>Boolean value that indicates whether the face has mustache or not.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Mustache",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "Mustache",
        "variableName" : "mustache",
        "variableType" : "Mustache",
        "documentation" : null,
        "simpleType" : "Mustache",
        "variableSetterType" : "Mustache"
      },
      "wrapper" : false
    },
    "OrientationCorrection" : {
      "c2jName" : "OrientationCorrection",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "ROTATE_0",
        "value" : "ROTATE_0"
      }, {
        "name" : "ROTATE_90",
        "value" : "ROTATE_90"
      }, {
        "name" : "ROTATE_180",
        "value" : "ROTATE_180"
      }, {
        "name" : "ROTATE_270",
        "value" : "ROTATE_270"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "OrientationCorrection",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "OrientationCorrection",
        "variableName" : "orientationCorrection",
        "variableType" : "OrientationCorrection",
        "documentation" : null,
        "simpleType" : "OrientationCorrection",
        "variableSetterType" : "OrientationCorrection"
      },
      "wrapper" : false
    },
    "Pose" : {
      "c2jName" : "Pose",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Indicates the pose of the face as determined by its pitch, roll, and yaw.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Roll",
        "c2jShape" : "Degree",
        "deprecated" : false,
        "documentation" : "<p>Value representing the face rotation on the roll axis.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Value representing the face rotation on the roll axis.</p>\n@param roll Value representing the face rotation on the roll axis.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRoll",
        "getterDocumentation" : "/**<p>Value representing the face rotation on the roll axis.</p>\n@return Value representing the face rotation on the roll axis.*/",
        "getterMethodName" : "getRoll",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Roll",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Roll",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Float",
        "marshallingType" : "FLOAT",
        "name" : "Roll",
        "setterDocumentation" : "/**<p>Value representing the face rotation on the roll axis.</p>\n@param roll Value representing the face rotation on the roll axis.*/",
        "setterMethodName" : "setRoll",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "roll",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Value representing the face rotation on the roll axis.</p>\n@param roll Value representing the face rotation on the roll axis.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "roll",
          "variableType" : "Float",
          "documentation" : "<p>Value representing the face rotation on the roll axis.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Yaw",
        "c2jShape" : "Degree",
        "deprecated" : false,
        "documentation" : "<p>Value representing the face rotation on the yaw axis.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Value representing the face rotation on the yaw axis.</p>\n@param yaw Value representing the face rotation on the yaw axis.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withYaw",
        "getterDocumentation" : "/**<p>Value representing the face rotation on the yaw axis.</p>\n@return Value representing the face rotation on the yaw axis.*/",
        "getterMethodName" : "getYaw",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Yaw",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Yaw",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Float",
        "marshallingType" : "FLOAT",
        "name" : "Yaw",
        "setterDocumentation" : "/**<p>Value representing the face rotation on the yaw axis.</p>\n@param yaw Value representing the face rotation on the yaw axis.*/",
        "setterMethodName" : "setYaw",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "yaw",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Value representing the face rotation on the yaw axis.</p>\n@param yaw Value representing the face rotation on the yaw axis.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "yaw",
          "variableType" : "Float",
          "documentation" : "<p>Value representing the face rotation on the yaw axis.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Pitch",
        "c2jShape" : "Degree",
        "deprecated" : false,
        "documentation" : "<p>Value representing the face rotation on the pitch axis.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Value representing the face rotation on the pitch axis.</p>\n@param pitch Value representing the face rotation on the pitch axis.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPitch",
        "getterDocumentation" : "/**<p>Value representing the face rotation on the pitch axis.</p>\n@return Value representing the face rotation on the pitch axis.*/",
        "getterMethodName" : "getPitch",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Pitch",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Pitch",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Float",
        "marshallingType" : "FLOAT",
        "name" : "Pitch",
        "setterDocumentation" : "/**<p>Value representing the face rotation on the pitch axis.</p>\n@param pitch Value representing the face rotation on the pitch axis.*/",
        "setterMethodName" : "setPitch",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "pitch",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Value representing the face rotation on the pitch axis.</p>\n@param pitch Value representing the face rotation on the pitch axis.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "pitch",
          "variableType" : "Float",
          "documentation" : "<p>Value representing the face rotation on the pitch axis.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Pitch" : {
          "c2jName" : "Pitch",
          "c2jShape" : "Degree",
          "deprecated" : false,
          "documentation" : "<p>Value representing the face rotation on the pitch axis.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Value representing the face rotation on the pitch axis.</p>\n@param pitch Value representing the face rotation on the pitch axis.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPitch",
          "getterDocumentation" : "/**<p>Value representing the face rotation on the pitch axis.</p>\n@return Value representing the face rotation on the pitch axis.*/",
          "getterMethodName" : "getPitch",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Pitch",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Pitch",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Float",
          "marshallingType" : "FLOAT",
          "name" : "Pitch",
          "setterDocumentation" : "/**<p>Value representing the face rotation on the pitch axis.</p>\n@param pitch Value representing the face rotation on the pitch axis.*/",
          "setterMethodName" : "setPitch",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "pitch",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Value representing the face rotation on the pitch axis.</p>\n@param pitch Value representing the face rotation on the pitch axis.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "pitch",
            "variableType" : "Float",
            "documentation" : "<p>Value representing the face rotation on the pitch axis.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "Roll" : {
          "c2jName" : "Roll",
          "c2jShape" : "Degree",
          "deprecated" : false,
          "documentation" : "<p>Value representing the face rotation on the roll axis.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Value representing the face rotation on the roll axis.</p>\n@param roll Value representing the face rotation on the roll axis.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRoll",
          "getterDocumentation" : "/**<p>Value representing the face rotation on the roll axis.</p>\n@return Value representing the face rotation on the roll axis.*/",
          "getterMethodName" : "getRoll",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Roll",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Roll",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Float",
          "marshallingType" : "FLOAT",
          "name" : "Roll",
          "setterDocumentation" : "/**<p>Value representing the face rotation on the roll axis.</p>\n@param roll Value representing the face rotation on the roll axis.*/",
          "setterMethodName" : "setRoll",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "roll",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Value representing the face rotation on the roll axis.</p>\n@param roll Value representing the face rotation on the roll axis.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "roll",
            "variableType" : "Float",
            "documentation" : "<p>Value representing the face rotation on the roll axis.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "Yaw" : {
          "c2jName" : "Yaw",
          "c2jShape" : "Degree",
          "deprecated" : false,
          "documentation" : "<p>Value representing the face rotation on the yaw axis.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Value representing the face rotation on the yaw axis.</p>\n@param yaw Value representing the face rotation on the yaw axis.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withYaw",
          "getterDocumentation" : "/**<p>Value representing the face rotation on the yaw axis.</p>\n@return Value representing the face rotation on the yaw axis.*/",
          "getterMethodName" : "getYaw",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Yaw",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Yaw",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Float",
          "marshallingType" : "FLOAT",
          "name" : "Yaw",
          "setterDocumentation" : "/**<p>Value representing the face rotation on the yaw axis.</p>\n@param yaw Value representing the face rotation on the yaw axis.*/",
          "setterMethodName" : "setYaw",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "yaw",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Value representing the face rotation on the yaw axis.</p>\n@param yaw Value representing the face rotation on the yaw axis.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "yaw",
            "variableType" : "Float",
            "documentation" : "<p>Value representing the face rotation on the yaw axis.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Pose",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "Pose",
        "variableName" : "pose",
        "variableType" : "Pose",
        "documentation" : null,
        "simpleType" : "Pose",
        "variableSetterType" : "Pose"
      },
      "wrapper" : false
    },
    "ProvisionedThroughputExceededException" : {
      "c2jName" : "ProvisionedThroughputExceededException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The number of requests exceeded your throughput limit. If you want to increase this limit, contact Amazon Rekognition.</p>",
      "enums" : null,
      "errorCode" : "ProvisionedThroughputExceededException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ProvisionedThroughputExceededException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ProvisionedThroughputExceededException",
        "variableName" : "provisionedThroughputExceededException",
        "variableType" : "ProvisionedThroughputExceededException",
        "documentation" : null,
        "simpleType" : "ProvisionedThroughputExceededException",
        "variableSetterType" : "ProvisionedThroughputExceededException"
      },
      "wrapper" : false
    },
    "RecognizeCelebritiesRequest" : {
      "c2jName" : "RecognizeCelebritiesRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "RecognizeCelebrities",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "RekognitionService.RecognizeCelebrities",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "Image",
        "c2jShape" : "Image",
        "deprecated" : false,
        "documentation" : "<p>The input image to use for celebrity recognition.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The input image to use for celebrity recognition.</p>\n@param image The input image to use for celebrity recognition.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withImage",
        "getterDocumentation" : "/**<p>The input image to use for celebrity recognition.</p>\n@return The input image to use for celebrity recognition.*/",
        "getterMethodName" : "getImage",
        "getterModel" : {
          "returnType" : "Image",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Image",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Image",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Image",
        "setterDocumentation" : "/**<p>The input image to use for celebrity recognition.</p>\n@param image The input image to use for celebrity recognition.*/",
        "setterMethodName" : "setImage",
        "setterModel" : {
          "variableDeclarationType" : "Image",
          "variableName" : "image",
          "variableType" : "Image",
          "documentation" : "",
          "simpleType" : "Image",
          "variableSetterType" : "Image"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The input image to use for celebrity recognition.</p>\n@param image The input image to use for celebrity recognition.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Image",
          "variableName" : "image",
          "variableType" : "Image",
          "documentation" : "<p>The input image to use for celebrity recognition.</p>",
          "simpleType" : "Image",
          "variableSetterType" : "Image"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Image" : {
          "c2jName" : "Image",
          "c2jShape" : "Image",
          "deprecated" : false,
          "documentation" : "<p>The input image to use for celebrity recognition.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The input image to use for celebrity recognition.</p>\n@param image The input image to use for celebrity recognition.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withImage",
          "getterDocumentation" : "/**<p>The input image to use for celebrity recognition.</p>\n@return The input image to use for celebrity recognition.*/",
          "getterMethodName" : "getImage",
          "getterModel" : {
            "returnType" : "Image",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Image",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Image",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Image",
          "setterDocumentation" : "/**<p>The input image to use for celebrity recognition.</p>\n@param image The input image to use for celebrity recognition.*/",
          "setterMethodName" : "setImage",
          "setterModel" : {
            "variableDeclarationType" : "Image",
            "variableName" : "image",
            "variableType" : "Image",
            "documentation" : "",
            "simpleType" : "Image",
            "variableSetterType" : "Image"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The input image to use for celebrity recognition.</p>\n@param image The input image to use for celebrity recognition.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Image",
            "variableName" : "image",
            "variableType" : "Image",
            "documentation" : "<p>The input image to use for celebrity recognition.</p>",
            "simpleType" : "Image",
            "variableSetterType" : "Image"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "Image" ],
      "shapeName" : "RecognizeCelebritiesRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "RecognizeCelebritiesRequest",
        "variableName" : "recognizeCelebritiesRequest",
        "variableType" : "RecognizeCelebritiesRequest",
        "documentation" : null,
        "simpleType" : "RecognizeCelebritiesRequest",
        "variableSetterType" : "RecognizeCelebritiesRequest"
      },
      "wrapper" : false
    },
    "RecognizeCelebritiesResult" : {
      "c2jName" : "RecognizeCelebritiesResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "CelebrityFaces",
        "c2jShape" : "CelebrityList",
        "deprecated" : false,
        "documentation" : "<p>Details about each celebrity found in the image. Amazon Rekognition can detect a maximum of 15 celebrities in an image.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Details about each celebrity found in the image. Amazon Rekognition can detect a maximum of 15 celebrities in an image.</p>\n@param celebrityFaces Details about each celebrity found in the image. Amazon Rekognition can detect a maximum of 15 celebrities in an image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCelebrityFaces",
        "getterDocumentation" : "/**<p>Details about each celebrity found in the image. Amazon Rekognition can detect a maximum of 15 celebrities in an image.</p>\n@return Details about each celebrity found in the image. Amazon Rekognition can detect a maximum of 15 celebrities in an image.*/",
        "getterMethodName" : "getCelebrityFaces",
        "getterModel" : {
          "returnType" : "java.util.List<Celebrity>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "CelebrityFaces",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CelebrityFaces",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Celebrity",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Celebrity",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "Celebrity",
              "variableName" : "member",
              "variableType" : "Celebrity",
              "documentation" : "",
              "simpleType" : "Celebrity",
              "variableSetterType" : "Celebrity"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "Celebrity",
              "variableName" : "member",
              "variableType" : "Celebrity",
              "documentation" : "",
              "simpleType" : "Celebrity",
              "variableSetterType" : "Celebrity"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Celebrity",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Celebrity",
          "templateImplType" : "java.util.ArrayList<Celebrity>",
          "templateType" : "java.util.List<Celebrity>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "CelebrityFaces",
        "setterDocumentation" : "/**<p>Details about each celebrity found in the image. Amazon Rekognition can detect a maximum of 15 celebrities in an image.</p>\n@param celebrityFaces Details about each celebrity found in the image. Amazon Rekognition can detect a maximum of 15 celebrities in an image.*/",
        "setterMethodName" : "setCelebrityFaces",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<Celebrity>",
          "variableName" : "celebrityFaces",
          "variableType" : "java.util.List<Celebrity>",
          "documentation" : "",
          "simpleType" : "List<Celebrity>",
          "variableSetterType" : "java.util.Collection<Celebrity>"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Details about each celebrity found in the image. Amazon Rekognition can detect a maximum of 15 celebrities in an image.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setCelebrityFaces(java.util.Collection)} or {@link #withCelebrityFaces(java.util.Collection)} if you want to override the existing values.</p>\n@param celebrityFaces Details about each celebrity found in the image. Amazon Rekognition can detect a maximum of 15 celebrities in an image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<Celebrity>",
          "variableName" : "celebrityFaces",
          "variableType" : "java.util.List<Celebrity>",
          "documentation" : "<p>Details about each celebrity found in the image. Amazon Rekognition can detect a maximum of 15 celebrities in an image.</p>",
          "simpleType" : "List<Celebrity>",
          "variableSetterType" : "java.util.Collection<Celebrity>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "UnrecognizedFaces",
        "c2jShape" : "ComparedFaceList",
        "deprecated" : false,
        "documentation" : "<p>Details about each unrecognized face in the image.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Details about each unrecognized face in the image.</p>\n@param unrecognizedFaces Details about each unrecognized face in the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withUnrecognizedFaces",
        "getterDocumentation" : "/**<p>Details about each unrecognized face in the image.</p>\n@return Details about each unrecognized face in the image.*/",
        "getterMethodName" : "getUnrecognizedFaces",
        "getterModel" : {
          "returnType" : "java.util.List<ComparedFace>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "UnrecognizedFaces",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "UnrecognizedFaces",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ComparedFace",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "ComparedFace",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "ComparedFace",
              "variableName" : "member",
              "variableType" : "ComparedFace",
              "documentation" : "",
              "simpleType" : "ComparedFace",
              "variableSetterType" : "ComparedFace"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "ComparedFace",
              "variableName" : "member",
              "variableType" : "ComparedFace",
              "documentation" : "",
              "simpleType" : "ComparedFace",
              "variableSetterType" : "ComparedFace"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "ComparedFace",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "ComparedFace",
          "templateImplType" : "java.util.ArrayList<ComparedFace>",
          "templateType" : "java.util.List<ComparedFace>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "UnrecognizedFaces",
        "setterDocumentation" : "/**<p>Details about each unrecognized face in the image.</p>\n@param unrecognizedFaces Details about each unrecognized face in the image.*/",
        "setterMethodName" : "setUnrecognizedFaces",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<ComparedFace>",
          "variableName" : "unrecognizedFaces",
          "variableType" : "java.util.List<ComparedFace>",
          "documentation" : "",
          "simpleType" : "List<ComparedFace>",
          "variableSetterType" : "java.util.Collection<ComparedFace>"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Details about each unrecognized face in the image.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setUnrecognizedFaces(java.util.Collection)} or {@link #withUnrecognizedFaces(java.util.Collection)} if you want to override the existing values.</p>\n@param unrecognizedFaces Details about each unrecognized face in the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<ComparedFace>",
          "variableName" : "unrecognizedFaces",
          "variableType" : "java.util.List<ComparedFace>",
          "documentation" : "<p>Details about each unrecognized face in the image.</p>",
          "simpleType" : "List<ComparedFace>",
          "variableSetterType" : "java.util.Collection<ComparedFace>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "OrientationCorrection",
        "c2jShape" : "OrientationCorrection",
        "deprecated" : false,
        "documentation" : "<p>The orientation of the input image (counterclockwise direction). If your application displays the image, you can use this value to correct the orientation. The bounding box coordinates returned in <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If so, and the Exif metadata for the input image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code> bounding box coordinates represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata. </p> </note>",
        "enumType" : "OrientationCorrection",
        "fluentSetterDocumentation" : "/**<p>The orientation of the input image (counterclockwise direction). If your application displays the image, you can use this value to correct the orientation. The bounding box coordinates returned in <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If so, and the Exif metadata for the input image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code> bounding box coordinates represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata. </p> </note>\n@param orientationCorrection The orientation of the input image (counterclockwise direction). If your application displays the image, you can use this value to correct the orientation. The bounding box coordinates returned in <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If so, and the Exif metadata for the input image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code> bounding box coordinates represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata. </p>\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrientationCorrection*/",
        "fluentSetterMethodName" : "withOrientationCorrection",
        "getterDocumentation" : "/**<p>The orientation of the input image (counterclockwise direction). If your application displays the image, you can use this value to correct the orientation. The bounding box coordinates returned in <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If so, and the Exif metadata for the input image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code> bounding box coordinates represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata. </p> </note>\n@return The orientation of the input image (counterclockwise direction). If your application displays the image, you can use this value to correct the orientation. The bounding box coordinates returned in <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If so, and the Exif metadata for the input image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code> bounding box coordinates represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata. </p>\n@see OrientationCorrection*/",
        "getterMethodName" : "getOrientationCorrection",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "OrientationCorrection",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "OrientationCorrection",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "OrientationCorrection",
        "setterDocumentation" : "/**<p>The orientation of the input image (counterclockwise direction). If your application displays the image, you can use this value to correct the orientation. The bounding box coordinates returned in <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If so, and the Exif metadata for the input image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code> bounding box coordinates represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata. </p> </note>\n@param orientationCorrection The orientation of the input image (counterclockwise direction). If your application displays the image, you can use this value to correct the orientation. The bounding box coordinates returned in <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If so, and the Exif metadata for the input image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code> bounding box coordinates represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata. </p>\n@see OrientationCorrection*/",
        "setterMethodName" : "setOrientationCorrection",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "orientationCorrection",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : true,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The orientation of the input image (counterclockwise direction). If your application displays the image, you can use this value to correct the orientation. The bounding box coordinates returned in <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If so, and the Exif metadata for the input image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code> bounding box coordinates represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata. </p> </note>\n@param orientationCorrection The orientation of the input image (counterclockwise direction). If your application displays the image, you can use this value to correct the orientation. The bounding box coordinates returned in <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If so, and the Exif metadata for the input image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code> bounding box coordinates represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata. </p>\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrientationCorrection*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "orientationCorrection",
          "variableType" : "String",
          "documentation" : "<p>The orientation of the input image (counterclockwise direction). If your application displays the image, you can use this value to correct the orientation. The bounding box coordinates returned in <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If so, and the Exif metadata for the input image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code> bounding box coordinates represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata. </p> </note>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CelebrityFaces" : {
          "c2jName" : "CelebrityFaces",
          "c2jShape" : "CelebrityList",
          "deprecated" : false,
          "documentation" : "<p>Details about each celebrity found in the image. Amazon Rekognition can detect a maximum of 15 celebrities in an image.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Details about each celebrity found in the image. Amazon Rekognition can detect a maximum of 15 celebrities in an image.</p>\n@param celebrityFaces Details about each celebrity found in the image. Amazon Rekognition can detect a maximum of 15 celebrities in an image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCelebrityFaces",
          "getterDocumentation" : "/**<p>Details about each celebrity found in the image. Amazon Rekognition can detect a maximum of 15 celebrities in an image.</p>\n@return Details about each celebrity found in the image. Amazon Rekognition can detect a maximum of 15 celebrities in an image.*/",
          "getterMethodName" : "getCelebrityFaces",
          "getterModel" : {
            "returnType" : "java.util.List<Celebrity>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "CelebrityFaces",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CelebrityFaces",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Celebrity",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Celebrity",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "Celebrity",
                "variableName" : "member",
                "variableType" : "Celebrity",
                "documentation" : "",
                "simpleType" : "Celebrity",
                "variableSetterType" : "Celebrity"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "Celebrity",
                "variableName" : "member",
                "variableType" : "Celebrity",
                "documentation" : "",
                "simpleType" : "Celebrity",
                "variableSetterType" : "Celebrity"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Celebrity",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Celebrity",
            "templateImplType" : "java.util.ArrayList<Celebrity>",
            "templateType" : "java.util.List<Celebrity>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "CelebrityFaces",
          "setterDocumentation" : "/**<p>Details about each celebrity found in the image. Amazon Rekognition can detect a maximum of 15 celebrities in an image.</p>\n@param celebrityFaces Details about each celebrity found in the image. Amazon Rekognition can detect a maximum of 15 celebrities in an image.*/",
          "setterMethodName" : "setCelebrityFaces",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<Celebrity>",
            "variableName" : "celebrityFaces",
            "variableType" : "java.util.List<Celebrity>",
            "documentation" : "",
            "simpleType" : "List<Celebrity>",
            "variableSetterType" : "java.util.Collection<Celebrity>"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Details about each celebrity found in the image. Amazon Rekognition can detect a maximum of 15 celebrities in an image.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setCelebrityFaces(java.util.Collection)} or {@link #withCelebrityFaces(java.util.Collection)} if you want to override the existing values.</p>\n@param celebrityFaces Details about each celebrity found in the image. Amazon Rekognition can detect a maximum of 15 celebrities in an image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<Celebrity>",
            "variableName" : "celebrityFaces",
            "variableType" : "java.util.List<Celebrity>",
            "documentation" : "<p>Details about each celebrity found in the image. Amazon Rekognition can detect a maximum of 15 celebrities in an image.</p>",
            "simpleType" : "List<Celebrity>",
            "variableSetterType" : "java.util.Collection<Celebrity>"
          },
          "xmlNameSpaceUri" : null
        },
        "OrientationCorrection" : {
          "c2jName" : "OrientationCorrection",
          "c2jShape" : "OrientationCorrection",
          "deprecated" : false,
          "documentation" : "<p>The orientation of the input image (counterclockwise direction). If your application displays the image, you can use this value to correct the orientation. The bounding box coordinates returned in <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If so, and the Exif metadata for the input image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code> bounding box coordinates represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata. </p> </note>",
          "enumType" : "OrientationCorrection",
          "fluentSetterDocumentation" : "/**<p>The orientation of the input image (counterclockwise direction). If your application displays the image, you can use this value to correct the orientation. The bounding box coordinates returned in <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If so, and the Exif metadata for the input image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code> bounding box coordinates represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata. </p> </note>\n@param orientationCorrection The orientation of the input image (counterclockwise direction). If your application displays the image, you can use this value to correct the orientation. The bounding box coordinates returned in <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If so, and the Exif metadata for the input image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code> bounding box coordinates represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata. </p>\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrientationCorrection*/",
          "fluentSetterMethodName" : "withOrientationCorrection",
          "getterDocumentation" : "/**<p>The orientation of the input image (counterclockwise direction). If your application displays the image, you can use this value to correct the orientation. The bounding box coordinates returned in <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If so, and the Exif metadata for the input image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code> bounding box coordinates represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata. </p> </note>\n@return The orientation of the input image (counterclockwise direction). If your application displays the image, you can use this value to correct the orientation. The bounding box coordinates returned in <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If so, and the Exif metadata for the input image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code> bounding box coordinates represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata. </p>\n@see OrientationCorrection*/",
          "getterMethodName" : "getOrientationCorrection",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "OrientationCorrection",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "OrientationCorrection",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "OrientationCorrection",
          "setterDocumentation" : "/**<p>The orientation of the input image (counterclockwise direction). If your application displays the image, you can use this value to correct the orientation. The bounding box coordinates returned in <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If so, and the Exif metadata for the input image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code> bounding box coordinates represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata. </p> </note>\n@param orientationCorrection The orientation of the input image (counterclockwise direction). If your application displays the image, you can use this value to correct the orientation. The bounding box coordinates returned in <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If so, and the Exif metadata for the input image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code> bounding box coordinates represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata. </p>\n@see OrientationCorrection*/",
          "setterMethodName" : "setOrientationCorrection",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "orientationCorrection",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The orientation of the input image (counterclockwise direction). If your application displays the image, you can use this value to correct the orientation. The bounding box coordinates returned in <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If so, and the Exif metadata for the input image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code> bounding box coordinates represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata. </p> </note>\n@param orientationCorrection The orientation of the input image (counterclockwise direction). If your application displays the image, you can use this value to correct the orientation. The bounding box coordinates returned in <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If so, and the Exif metadata for the input image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code> bounding box coordinates represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata. </p>\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrientationCorrection*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "orientationCorrection",
            "variableType" : "String",
            "documentation" : "<p>The orientation of the input image (counterclockwise direction). If your application displays the image, you can use this value to correct the orientation. The bounding box coordinates returned in <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code> represent face locations before the image orientation is corrected. </p> <note> <p>If the input image is in .jpeg format, it might contain exchangeable image (Exif) metadata that includes the image's orientation. If so, and the Exif metadata for the input image populates the orientation field, the value of <code>OrientationCorrection</code> is null and the <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code> bounding box coordinates represent face locations after Exif metadata is used to correct the image orientation. Images in .png format don't contain Exif metadata. </p> </note>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "UnrecognizedFaces" : {
          "c2jName" : "UnrecognizedFaces",
          "c2jShape" : "ComparedFaceList",
          "deprecated" : false,
          "documentation" : "<p>Details about each unrecognized face in the image.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Details about each unrecognized face in the image.</p>\n@param unrecognizedFaces Details about each unrecognized face in the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withUnrecognizedFaces",
          "getterDocumentation" : "/**<p>Details about each unrecognized face in the image.</p>\n@return Details about each unrecognized face in the image.*/",
          "getterMethodName" : "getUnrecognizedFaces",
          "getterModel" : {
            "returnType" : "java.util.List<ComparedFace>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "UnrecognizedFaces",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "UnrecognizedFaces",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ComparedFace",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "ComparedFace",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "ComparedFace",
                "variableName" : "member",
                "variableType" : "ComparedFace",
                "documentation" : "",
                "simpleType" : "ComparedFace",
                "variableSetterType" : "ComparedFace"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "ComparedFace",
                "variableName" : "member",
                "variableType" : "ComparedFace",
                "documentation" : "",
                "simpleType" : "ComparedFace",
                "variableSetterType" : "ComparedFace"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "ComparedFace",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "ComparedFace",
            "templateImplType" : "java.util.ArrayList<ComparedFace>",
            "templateType" : "java.util.List<ComparedFace>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "UnrecognizedFaces",
          "setterDocumentation" : "/**<p>Details about each unrecognized face in the image.</p>\n@param unrecognizedFaces Details about each unrecognized face in the image.*/",
          "setterMethodName" : "setUnrecognizedFaces",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<ComparedFace>",
            "variableName" : "unrecognizedFaces",
            "variableType" : "java.util.List<ComparedFace>",
            "documentation" : "",
            "simpleType" : "List<ComparedFace>",
            "variableSetterType" : "java.util.Collection<ComparedFace>"
          },
          "shouldEmitLegacyEnumSetter" : true,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Details about each unrecognized face in the image.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setUnrecognizedFaces(java.util.Collection)} or {@link #withUnrecognizedFaces(java.util.Collection)} if you want to override the existing values.</p>\n@param unrecognizedFaces Details about each unrecognized face in the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<ComparedFace>",
            "variableName" : "unrecognizedFaces",
            "variableType" : "java.util.List<ComparedFace>",
            "documentation" : "<p>Details about each unrecognized face in the image.</p>",
            "simpleType" : "List<ComparedFace>",
            "variableSetterType" : "java.util.Collection<ComparedFace>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RecognizeCelebritiesResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "RecognizeCelebritiesResult",
        "variableName" : "recognizeCelebritiesResult",
        "variableType" : "RecognizeCelebritiesResult",
        "documentation" : null,
        "simpleType" : "RecognizeCelebritiesResult",
        "variableSetterType" : "RecognizeCelebritiesResult"
      },
      "wrapper" : false
    },
    "ResourceAlreadyExistsException" : {
      "c2jName" : "ResourceAlreadyExistsException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A collection with the specified ID already exists.</p>",
      "enums" : null,
      "errorCode" : "ResourceAlreadyExistsException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ResourceAlreadyExistsException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ResourceAlreadyExistsException",
        "variableName" : "resourceAlreadyExistsException",
        "variableType" : "ResourceAlreadyExistsException",
        "documentation" : null,
        "simpleType" : "ResourceAlreadyExistsException",
        "variableSetterType" : "ResourceAlreadyExistsException"
      },
      "wrapper" : false
    },
    "ResourceNotFoundException" : {
      "c2jName" : "ResourceNotFoundException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Collection specified in the request is not found.</p>",
      "enums" : null,
      "errorCode" : "ResourceNotFoundException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ResourceNotFoundException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ResourceNotFoundException",
        "variableName" : "resourceNotFoundException",
        "variableType" : "ResourceNotFoundException",
        "documentation" : null,
        "simpleType" : "ResourceNotFoundException",
        "variableSetterType" : "ResourceNotFoundException"
      },
      "wrapper" : false
    },
    "S3Object" : {
      "c2jName" : "S3Object",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Provides the S3 bucket name and object name.</p> <p>The region for the S3 bucket containing the S3 object must match the region you use for Amazon Rekognition operations.</p> <p>For Amazon Rekognition to process an S3 object, the user must have permission to access the S3 object. For more information, see <a>manage-access-resource-policies</a>. </p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Bucket",
        "c2jShape" : "S3Bucket",
        "deprecated" : false,
        "documentation" : "<p>Name of the S3 bucket.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Name of the S3 bucket.</p>\n@param bucket Name of the S3 bucket.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBucket",
        "getterDocumentation" : "/**<p>Name of the S3 bucket.</p>\n@return Name of the S3 bucket.*/",
        "getterMethodName" : "getBucket",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Bucket",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Bucket",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Bucket",
        "setterDocumentation" : "/**<p>Name of the S3 bucket.</p>\n@param bucket Name of the S3 bucket.*/",
        "setterMethodName" : "setBucket",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "bucket",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Name of the S3 bucket.</p>\n@param bucket Name of the S3 bucket.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "bucket",
          "variableType" : "String",
          "documentation" : "<p>Name of the S3 bucket.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Name",
        "c2jShape" : "S3ObjectName",
        "deprecated" : false,
        "documentation" : "<p>S3 object key name.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>S3 object key name.</p>\n@param name S3 object key name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>S3 object key name.</p>\n@return S3 object key name.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Name",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "setterDocumentation" : "/**<p>S3 object key name.</p>\n@param name S3 object key name.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>S3 object key name.</p>\n@param name S3 object key name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>S3 object key name.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Version",
        "c2jShape" : "S3ObjectVersion",
        "deprecated" : false,
        "documentation" : "<p>If the bucket is versioning enabled, you can specify the object version. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>If the bucket is versioning enabled, you can specify the object version. </p>\n@param version If the bucket is versioning enabled, you can specify the object version.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withVersion",
        "getterDocumentation" : "/**<p>If the bucket is versioning enabled, you can specify the object version. </p>\n@return If the bucket is versioning enabled, you can specify the object version.*/",
        "getterMethodName" : "getVersion",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Version",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Version",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Version",
        "setterDocumentation" : "/**<p>If the bucket is versioning enabled, you can specify the object version. </p>\n@param version If the bucket is versioning enabled, you can specify the object version.*/",
        "setterMethodName" : "setVersion",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "version",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>If the bucket is versioning enabled, you can specify the object version. </p>\n@param version If the bucket is versioning enabled, you can specify the object version.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "version",
          "variableType" : "String",
          "documentation" : "<p>If the bucket is versioning enabled, you can specify the object version. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Bucket" : {
          "c2jName" : "Bucket",
          "c2jShape" : "S3Bucket",
          "deprecated" : false,
          "documentation" : "<p>Name of the S3 bucket.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Name of the S3 bucket.</p>\n@param bucket Name of the S3 bucket.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBucket",
          "getterDocumentation" : "/**<p>Name of the S3 bucket.</p>\n@return Name of the S3 bucket.*/",
          "getterMethodName" : "getBucket",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Bucket",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Bucket",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Bucket",
          "setterDocumentation" : "/**<p>Name of the S3 bucket.</p>\n@param bucket Name of the S3 bucket.*/",
          "setterMethodName" : "setBucket",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "bucket",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Name of the S3 bucket.</p>\n@param bucket Name of the S3 bucket.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "bucket",
            "variableType" : "String",
            "documentation" : "<p>Name of the S3 bucket.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Name" : {
          "c2jName" : "Name",
          "c2jShape" : "S3ObjectName",
          "deprecated" : false,
          "documentation" : "<p>S3 object key name.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>S3 object key name.</p>\n@param name S3 object key name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>S3 object key name.</p>\n@return S3 object key name.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Name",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "setterDocumentation" : "/**<p>S3 object key name.</p>\n@param name S3 object key name.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>S3 object key name.</p>\n@param name S3 object key name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>S3 object key name.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Version" : {
          "c2jName" : "Version",
          "c2jShape" : "S3ObjectVersion",
          "deprecated" : false,
          "documentation" : "<p>If the bucket is versioning enabled, you can specify the object version. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>If the bucket is versioning enabled, you can specify the object version. </p>\n@param version If the bucket is versioning enabled, you can specify the object version.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withVersion",
          "getterDocumentation" : "/**<p>If the bucket is versioning enabled, you can specify the object version. </p>\n@return If the bucket is versioning enabled, you can specify the object version.*/",
          "getterMethodName" : "getVersion",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Version",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Version",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Version",
          "setterDocumentation" : "/**<p>If the bucket is versioning enabled, you can specify the object version. </p>\n@param version If the bucket is versioning enabled, you can specify the object version.*/",
          "setterMethodName" : "setVersion",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "version",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>If the bucket is versioning enabled, you can specify the object version. </p>\n@param version If the bucket is versioning enabled, you can specify the object version.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "version",
            "variableType" : "String",
            "documentation" : "<p>If the bucket is versioning enabled, you can specify the object version. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "S3Object",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "S3Object",
        "variableName" : "s3Object",
        "variableType" : "S3Object",
        "documentation" : null,
        "simpleType" : "S3Object",
        "variableSetterType" : "S3Object"
      },
      "wrapper" : false
    },
    "SearchFacesByImageRequest" : {
      "c2jName" : "SearchFacesByImageRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "SearchFacesByImage",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "RekognitionService.SearchFacesByImage",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "CollectionId",
        "c2jShape" : "CollectionId",
        "deprecated" : false,
        "documentation" : "<p>ID of the collection to search.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>ID of the collection to search.</p>\n@param collectionId ID of the collection to search.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCollectionId",
        "getterDocumentation" : "/**<p>ID of the collection to search.</p>\n@return ID of the collection to search.*/",
        "getterMethodName" : "getCollectionId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "CollectionId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CollectionId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CollectionId",
        "setterDocumentation" : "/**<p>ID of the collection to search.</p>\n@param collectionId ID of the collection to search.*/",
        "setterMethodName" : "setCollectionId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "collectionId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>ID of the collection to search.</p>\n@param collectionId ID of the collection to search.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "collectionId",
          "variableType" : "String",
          "documentation" : "<p>ID of the collection to search.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Image",
        "c2jShape" : "Image",
        "deprecated" : false,
        "documentation" : "<p>The input image as bytes or an S3 object.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The input image as bytes or an S3 object.</p>\n@param image The input image as bytes or an S3 object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withImage",
        "getterDocumentation" : "/**<p>The input image as bytes or an S3 object.</p>\n@return The input image as bytes or an S3 object.*/",
        "getterMethodName" : "getImage",
        "getterModel" : {
          "returnType" : "Image",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Image",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Image",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Image",
        "setterDocumentation" : "/**<p>The input image as bytes or an S3 object.</p>\n@param image The input image as bytes or an S3 object.*/",
        "setterMethodName" : "setImage",
        "setterModel" : {
          "variableDeclarationType" : "Image",
          "variableName" : "image",
          "variableType" : "Image",
          "documentation" : "",
          "simpleType" : "Image",
          "variableSetterType" : "Image"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The input image as bytes or an S3 object.</p>\n@param image The input image as bytes or an S3 object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Image",
          "variableName" : "image",
          "variableType" : "Image",
          "documentation" : "<p>The input image as bytes or an S3 object.</p>",
          "simpleType" : "Image",
          "variableSetterType" : "Image"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MaxFaces",
        "c2jShape" : "MaxFaces",
        "deprecated" : false,
        "documentation" : "<p>Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.</p>\n@param maxFaces Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxFaces",
        "getterDocumentation" : "/**<p>Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.</p>\n@return Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.*/",
        "getterMethodName" : "getMaxFaces",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MaxFaces",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxFaces",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxFaces",
        "setterDocumentation" : "/**<p>Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.</p>\n@param maxFaces Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.*/",
        "setterMethodName" : "setMaxFaces",
        "setterModel" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxFaces",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.</p>\n@param maxFaces Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxFaces",
          "variableType" : "Integer",
          "documentation" : "<p>Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "FaceMatchThreshold",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>(Optional) Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>(Optional) Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>\n@param faceMatchThreshold (Optional) Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFaceMatchThreshold",
        "getterDocumentation" : "/**<p>(Optional) Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>\n@return (Optional) Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.*/",
        "getterMethodName" : "getFaceMatchThreshold",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "FaceMatchThreshold",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "FaceMatchThreshold",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Float",
        "marshallingType" : "FLOAT",
        "name" : "FaceMatchThreshold",
        "setterDocumentation" : "/**<p>(Optional) Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>\n@param faceMatchThreshold (Optional) Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.*/",
        "setterMethodName" : "setFaceMatchThreshold",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "faceMatchThreshold",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>(Optional) Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>\n@param faceMatchThreshold (Optional) Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "faceMatchThreshold",
          "variableType" : "Float",
          "documentation" : "<p>(Optional) Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CollectionId" : {
          "c2jName" : "CollectionId",
          "c2jShape" : "CollectionId",
          "deprecated" : false,
          "documentation" : "<p>ID of the collection to search.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>ID of the collection to search.</p>\n@param collectionId ID of the collection to search.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCollectionId",
          "getterDocumentation" : "/**<p>ID of the collection to search.</p>\n@return ID of the collection to search.*/",
          "getterMethodName" : "getCollectionId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "CollectionId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CollectionId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CollectionId",
          "setterDocumentation" : "/**<p>ID of the collection to search.</p>\n@param collectionId ID of the collection to search.*/",
          "setterMethodName" : "setCollectionId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "collectionId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>ID of the collection to search.</p>\n@param collectionId ID of the collection to search.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "collectionId",
            "variableType" : "String",
            "documentation" : "<p>ID of the collection to search.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "FaceMatchThreshold" : {
          "c2jName" : "FaceMatchThreshold",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>(Optional) Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>(Optional) Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>\n@param faceMatchThreshold (Optional) Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFaceMatchThreshold",
          "getterDocumentation" : "/**<p>(Optional) Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>\n@return (Optional) Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.*/",
          "getterMethodName" : "getFaceMatchThreshold",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "FaceMatchThreshold",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "FaceMatchThreshold",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Float",
          "marshallingType" : "FLOAT",
          "name" : "FaceMatchThreshold",
          "setterDocumentation" : "/**<p>(Optional) Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>\n@param faceMatchThreshold (Optional) Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.*/",
          "setterMethodName" : "setFaceMatchThreshold",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "faceMatchThreshold",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>(Optional) Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>\n@param faceMatchThreshold (Optional) Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "faceMatchThreshold",
            "variableType" : "Float",
            "documentation" : "<p>(Optional) Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "Image" : {
          "c2jName" : "Image",
          "c2jShape" : "Image",
          "deprecated" : false,
          "documentation" : "<p>The input image as bytes or an S3 object.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The input image as bytes or an S3 object.</p>\n@param image The input image as bytes or an S3 object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withImage",
          "getterDocumentation" : "/**<p>The input image as bytes or an S3 object.</p>\n@return The input image as bytes or an S3 object.*/",
          "getterMethodName" : "getImage",
          "getterModel" : {
            "returnType" : "Image",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Image",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Image",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Image",
          "setterDocumentation" : "/**<p>The input image as bytes or an S3 object.</p>\n@param image The input image as bytes or an S3 object.*/",
          "setterMethodName" : "setImage",
          "setterModel" : {
            "variableDeclarationType" : "Image",
            "variableName" : "image",
            "variableType" : "Image",
            "documentation" : "",
            "simpleType" : "Image",
            "variableSetterType" : "Image"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The input image as bytes or an S3 object.</p>\n@param image The input image as bytes or an S3 object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Image",
            "variableName" : "image",
            "variableType" : "Image",
            "documentation" : "<p>The input image as bytes or an S3 object.</p>",
            "simpleType" : "Image",
            "variableSetterType" : "Image"
          },
          "xmlNameSpaceUri" : null
        },
        "MaxFaces" : {
          "c2jName" : "MaxFaces",
          "c2jShape" : "MaxFaces",
          "deprecated" : false,
          "documentation" : "<p>Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.</p>\n@param maxFaces Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxFaces",
          "getterDocumentation" : "/**<p>Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.</p>\n@return Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.*/",
          "getterMethodName" : "getMaxFaces",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MaxFaces",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxFaces",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxFaces",
          "setterDocumentation" : "/**<p>Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.</p>\n@param maxFaces Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.*/",
          "setterMethodName" : "setMaxFaces",
          "setterModel" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxFaces",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.</p>\n@param maxFaces Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxFaces",
            "variableType" : "Integer",
            "documentation" : "<p>Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "CollectionId", "Image" ],
      "shapeName" : "SearchFacesByImageRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "SearchFacesByImageRequest",
        "variableName" : "searchFacesByImageRequest",
        "variableType" : "SearchFacesByImageRequest",
        "documentation" : null,
        "simpleType" : "SearchFacesByImageRequest",
        "variableSetterType" : "SearchFacesByImageRequest"
      },
      "wrapper" : false
    },
    "SearchFacesByImageResult" : {
      "c2jName" : "SearchFacesByImageResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "SearchedFaceBoundingBox",
        "c2jShape" : "BoundingBox",
        "deprecated" : false,
        "documentation" : "<p>The bounding box around the face in the input image that Amazon Rekognition used for the search.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The bounding box around the face in the input image that Amazon Rekognition used for the search.</p>\n@param searchedFaceBoundingBox The bounding box around the face in the input image that Amazon Rekognition used for the search.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSearchedFaceBoundingBox",
        "getterDocumentation" : "/**<p>The bounding box around the face in the input image that Amazon Rekognition used for the search.</p>\n@return The bounding box around the face in the input image that Amazon Rekognition used for the search.*/",
        "getterMethodName" : "getSearchedFaceBoundingBox",
        "getterModel" : {
          "returnType" : "BoundingBox",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "SearchedFaceBoundingBox",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SearchedFaceBoundingBox",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "SearchedFaceBoundingBox",
        "setterDocumentation" : "/**<p>The bounding box around the face in the input image that Amazon Rekognition used for the search.</p>\n@param searchedFaceBoundingBox The bounding box around the face in the input image that Amazon Rekognition used for the search.*/",
        "setterMethodName" : "setSearchedFaceBoundingBox",
        "setterModel" : {
          "variableDeclarationType" : "BoundingBox",
          "variableName" : "searchedFaceBoundingBox",
          "variableType" : "BoundingBox",
          "documentation" : "",
          "simpleType" : "BoundingBox",
          "variableSetterType" : "BoundingBox"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The bounding box around the face in the input image that Amazon Rekognition used for the search.</p>\n@param searchedFaceBoundingBox The bounding box around the face in the input image that Amazon Rekognition used for the search.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "BoundingBox",
          "variableName" : "searchedFaceBoundingBox",
          "variableType" : "BoundingBox",
          "documentation" : "<p>The bounding box around the face in the input image that Amazon Rekognition used for the search.</p>",
          "simpleType" : "BoundingBox",
          "variableSetterType" : "BoundingBox"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "SearchedFaceConfidence",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a face.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a face.</p>\n@param searchedFaceConfidence The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSearchedFaceConfidence",
        "getterDocumentation" : "/**<p>The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a face.</p>\n@return The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a face.*/",
        "getterMethodName" : "getSearchedFaceConfidence",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "SearchedFaceConfidence",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SearchedFaceConfidence",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Float",
        "marshallingType" : "FLOAT",
        "name" : "SearchedFaceConfidence",
        "setterDocumentation" : "/**<p>The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a face.</p>\n@param searchedFaceConfidence The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a face.*/",
        "setterMethodName" : "setSearchedFaceConfidence",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "searchedFaceConfidence",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a face.</p>\n@param searchedFaceConfidence The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "searchedFaceConfidence",
          "variableType" : "Float",
          "documentation" : "<p>The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a face.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "FaceMatches",
        "c2jShape" : "FaceMatchList",
        "deprecated" : false,
        "documentation" : "<p>An array of faces that match the input face, along with the confidence in the match.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An array of faces that match the input face, along with the confidence in the match.</p>\n@param faceMatches An array of faces that match the input face, along with the confidence in the match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFaceMatches",
        "getterDocumentation" : "/**<p>An array of faces that match the input face, along with the confidence in the match.</p>\n@return An array of faces that match the input face, along with the confidence in the match.*/",
        "getterMethodName" : "getFaceMatches",
        "getterModel" : {
          "returnType" : "java.util.List<FaceMatch>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "FaceMatches",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "FaceMatches",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "FaceMatch",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "FaceMatch",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "FaceMatch",
              "variableName" : "member",
              "variableType" : "FaceMatch",
              "documentation" : "",
              "simpleType" : "FaceMatch",
              "variableSetterType" : "FaceMatch"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "FaceMatch",
              "variableName" : "member",
              "variableType" : "FaceMatch",
              "documentation" : "",
              "simpleType" : "FaceMatch",
              "variableSetterType" : "FaceMatch"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "FaceMatch",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "FaceMatch",
          "templateImplType" : "java.util.ArrayList<FaceMatch>",
          "templateType" : "java.util.List<FaceMatch>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "FaceMatches",
        "setterDocumentation" : "/**<p>An array of faces that match the input face, along with the confidence in the match.</p>\n@param faceMatches An array of faces that match the input face, along with the confidence in the match.*/",
        "setterMethodName" : "setFaceMatches",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<FaceMatch>",
          "variableName" : "faceMatches",
          "variableType" : "java.util.List<FaceMatch>",
          "documentation" : "",
          "simpleType" : "List<FaceMatch>",
          "variableSetterType" : "java.util.Collection<FaceMatch>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An array of faces that match the input face, along with the confidence in the match.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFaceMatches(java.util.Collection)} or {@link #withFaceMatches(java.util.Collection)} if you want to override the existing values.</p>\n@param faceMatches An array of faces that match the input face, along with the confidence in the match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<FaceMatch>",
          "variableName" : "faceMatches",
          "variableType" : "java.util.List<FaceMatch>",
          "documentation" : "<p>An array of faces that match the input face, along with the confidence in the match.</p>",
          "simpleType" : "List<FaceMatch>",
          "variableSetterType" : "java.util.Collection<FaceMatch>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "FaceMatches" : {
          "c2jName" : "FaceMatches",
          "c2jShape" : "FaceMatchList",
          "deprecated" : false,
          "documentation" : "<p>An array of faces that match the input face, along with the confidence in the match.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An array of faces that match the input face, along with the confidence in the match.</p>\n@param faceMatches An array of faces that match the input face, along with the confidence in the match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFaceMatches",
          "getterDocumentation" : "/**<p>An array of faces that match the input face, along with the confidence in the match.</p>\n@return An array of faces that match the input face, along with the confidence in the match.*/",
          "getterMethodName" : "getFaceMatches",
          "getterModel" : {
            "returnType" : "java.util.List<FaceMatch>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "FaceMatches",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "FaceMatches",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "FaceMatch",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "FaceMatch",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "FaceMatch",
                "variableName" : "member",
                "variableType" : "FaceMatch",
                "documentation" : "",
                "simpleType" : "FaceMatch",
                "variableSetterType" : "FaceMatch"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "FaceMatch",
                "variableName" : "member",
                "variableType" : "FaceMatch",
                "documentation" : "",
                "simpleType" : "FaceMatch",
                "variableSetterType" : "FaceMatch"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "FaceMatch",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "FaceMatch",
            "templateImplType" : "java.util.ArrayList<FaceMatch>",
            "templateType" : "java.util.List<FaceMatch>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "FaceMatches",
          "setterDocumentation" : "/**<p>An array of faces that match the input face, along with the confidence in the match.</p>\n@param faceMatches An array of faces that match the input face, along with the confidence in the match.*/",
          "setterMethodName" : "setFaceMatches",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<FaceMatch>",
            "variableName" : "faceMatches",
            "variableType" : "java.util.List<FaceMatch>",
            "documentation" : "",
            "simpleType" : "List<FaceMatch>",
            "variableSetterType" : "java.util.Collection<FaceMatch>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An array of faces that match the input face, along with the confidence in the match.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFaceMatches(java.util.Collection)} or {@link #withFaceMatches(java.util.Collection)} if you want to override the existing values.</p>\n@param faceMatches An array of faces that match the input face, along with the confidence in the match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<FaceMatch>",
            "variableName" : "faceMatches",
            "variableType" : "java.util.List<FaceMatch>",
            "documentation" : "<p>An array of faces that match the input face, along with the confidence in the match.</p>",
            "simpleType" : "List<FaceMatch>",
            "variableSetterType" : "java.util.Collection<FaceMatch>"
          },
          "xmlNameSpaceUri" : null
        },
        "SearchedFaceBoundingBox" : {
          "c2jName" : "SearchedFaceBoundingBox",
          "c2jShape" : "BoundingBox",
          "deprecated" : false,
          "documentation" : "<p>The bounding box around the face in the input image that Amazon Rekognition used for the search.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The bounding box around the face in the input image that Amazon Rekognition used for the search.</p>\n@param searchedFaceBoundingBox The bounding box around the face in the input image that Amazon Rekognition used for the search.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSearchedFaceBoundingBox",
          "getterDocumentation" : "/**<p>The bounding box around the face in the input image that Amazon Rekognition used for the search.</p>\n@return The bounding box around the face in the input image that Amazon Rekognition used for the search.*/",
          "getterMethodName" : "getSearchedFaceBoundingBox",
          "getterModel" : {
            "returnType" : "BoundingBox",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "SearchedFaceBoundingBox",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SearchedFaceBoundingBox",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "SearchedFaceBoundingBox",
          "setterDocumentation" : "/**<p>The bounding box around the face in the input image that Amazon Rekognition used for the search.</p>\n@param searchedFaceBoundingBox The bounding box around the face in the input image that Amazon Rekognition used for the search.*/",
          "setterMethodName" : "setSearchedFaceBoundingBox",
          "setterModel" : {
            "variableDeclarationType" : "BoundingBox",
            "variableName" : "searchedFaceBoundingBox",
            "variableType" : "BoundingBox",
            "documentation" : "",
            "simpleType" : "BoundingBox",
            "variableSetterType" : "BoundingBox"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The bounding box around the face in the input image that Amazon Rekognition used for the search.</p>\n@param searchedFaceBoundingBox The bounding box around the face in the input image that Amazon Rekognition used for the search.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "BoundingBox",
            "variableName" : "searchedFaceBoundingBox",
            "variableType" : "BoundingBox",
            "documentation" : "<p>The bounding box around the face in the input image that Amazon Rekognition used for the search.</p>",
            "simpleType" : "BoundingBox",
            "variableSetterType" : "BoundingBox"
          },
          "xmlNameSpaceUri" : null
        },
        "SearchedFaceConfidence" : {
          "c2jName" : "SearchedFaceConfidence",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a face.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a face.</p>\n@param searchedFaceConfidence The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSearchedFaceConfidence",
          "getterDocumentation" : "/**<p>The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a face.</p>\n@return The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a face.*/",
          "getterMethodName" : "getSearchedFaceConfidence",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "SearchedFaceConfidence",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SearchedFaceConfidence",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Float",
          "marshallingType" : "FLOAT",
          "name" : "SearchedFaceConfidence",
          "setterDocumentation" : "/**<p>The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a face.</p>\n@param searchedFaceConfidence The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a face.*/",
          "setterMethodName" : "setSearchedFaceConfidence",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "searchedFaceConfidence",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a face.</p>\n@param searchedFaceConfidence The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "searchedFaceConfidence",
            "variableType" : "Float",
            "documentation" : "<p>The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a face.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "SearchFacesByImageResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "SearchFacesByImageResult",
        "variableName" : "searchFacesByImageResult",
        "variableType" : "SearchFacesByImageResult",
        "documentation" : null,
        "simpleType" : "SearchFacesByImageResult",
        "variableSetterType" : "SearchFacesByImageResult"
      },
      "wrapper" : false
    },
    "SearchFacesRequest" : {
      "c2jName" : "SearchFacesRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "SearchFaces",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "RekognitionService.SearchFaces",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "CollectionId",
        "c2jShape" : "CollectionId",
        "deprecated" : false,
        "documentation" : "<p>ID of the collection the face belongs to.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>ID of the collection the face belongs to.</p>\n@param collectionId ID of the collection the face belongs to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCollectionId",
        "getterDocumentation" : "/**<p>ID of the collection the face belongs to.</p>\n@return ID of the collection the face belongs to.*/",
        "getterMethodName" : "getCollectionId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "CollectionId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CollectionId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "CollectionId",
        "setterDocumentation" : "/**<p>ID of the collection the face belongs to.</p>\n@param collectionId ID of the collection the face belongs to.*/",
        "setterMethodName" : "setCollectionId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "collectionId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>ID of the collection the face belongs to.</p>\n@param collectionId ID of the collection the face belongs to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "collectionId",
          "variableType" : "String",
          "documentation" : "<p>ID of the collection the face belongs to.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "FaceId",
        "c2jShape" : "FaceId",
        "deprecated" : false,
        "documentation" : "<p>ID of a face to find matches for in the collection.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>ID of a face to find matches for in the collection.</p>\n@param faceId ID of a face to find matches for in the collection.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFaceId",
        "getterDocumentation" : "/**<p>ID of a face to find matches for in the collection.</p>\n@return ID of a face to find matches for in the collection.*/",
        "getterMethodName" : "getFaceId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "FaceId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "FaceId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "FaceId",
        "setterDocumentation" : "/**<p>ID of a face to find matches for in the collection.</p>\n@param faceId ID of a face to find matches for in the collection.*/",
        "setterMethodName" : "setFaceId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "faceId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>ID of a face to find matches for in the collection.</p>\n@param faceId ID of a face to find matches for in the collection.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "faceId",
          "variableType" : "String",
          "documentation" : "<p>ID of a face to find matches for in the collection.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MaxFaces",
        "c2jShape" : "MaxFaces",
        "deprecated" : false,
        "documentation" : "<p>Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.</p>\n@param maxFaces Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxFaces",
        "getterDocumentation" : "/**<p>Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.</p>\n@return Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.*/",
        "getterMethodName" : "getMaxFaces",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "MaxFaces",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxFaces",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxFaces",
        "setterDocumentation" : "/**<p>Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.</p>\n@param maxFaces Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.*/",
        "setterMethodName" : "setMaxFaces",
        "setterModel" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxFaces",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.</p>\n@param maxFaces Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxFaces",
          "variableType" : "Integer",
          "documentation" : "<p>Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "FaceMatchThreshold",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>Optional value specifying the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Optional value specifying the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>\n@param faceMatchThreshold Optional value specifying the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFaceMatchThreshold",
        "getterDocumentation" : "/**<p>Optional value specifying the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>\n@return Optional value specifying the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.*/",
        "getterMethodName" : "getFaceMatchThreshold",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "FaceMatchThreshold",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "FaceMatchThreshold",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Float",
        "marshallingType" : "FLOAT",
        "name" : "FaceMatchThreshold",
        "setterDocumentation" : "/**<p>Optional value specifying the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>\n@param faceMatchThreshold Optional value specifying the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.*/",
        "setterMethodName" : "setFaceMatchThreshold",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "faceMatchThreshold",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Optional value specifying the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>\n@param faceMatchThreshold Optional value specifying the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "faceMatchThreshold",
          "variableType" : "Float",
          "documentation" : "<p>Optional value specifying the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CollectionId" : {
          "c2jName" : "CollectionId",
          "c2jShape" : "CollectionId",
          "deprecated" : false,
          "documentation" : "<p>ID of the collection the face belongs to.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>ID of the collection the face belongs to.</p>\n@param collectionId ID of the collection the face belongs to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCollectionId",
          "getterDocumentation" : "/**<p>ID of the collection the face belongs to.</p>\n@return ID of the collection the face belongs to.*/",
          "getterMethodName" : "getCollectionId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "CollectionId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CollectionId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "CollectionId",
          "setterDocumentation" : "/**<p>ID of the collection the face belongs to.</p>\n@param collectionId ID of the collection the face belongs to.*/",
          "setterMethodName" : "setCollectionId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "collectionId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>ID of the collection the face belongs to.</p>\n@param collectionId ID of the collection the face belongs to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "collectionId",
            "variableType" : "String",
            "documentation" : "<p>ID of the collection the face belongs to.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "FaceId" : {
          "c2jName" : "FaceId",
          "c2jShape" : "FaceId",
          "deprecated" : false,
          "documentation" : "<p>ID of a face to find matches for in the collection.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>ID of a face to find matches for in the collection.</p>\n@param faceId ID of a face to find matches for in the collection.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFaceId",
          "getterDocumentation" : "/**<p>ID of a face to find matches for in the collection.</p>\n@return ID of a face to find matches for in the collection.*/",
          "getterMethodName" : "getFaceId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "FaceId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "FaceId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "FaceId",
          "setterDocumentation" : "/**<p>ID of a face to find matches for in the collection.</p>\n@param faceId ID of a face to find matches for in the collection.*/",
          "setterMethodName" : "setFaceId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "faceId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>ID of a face to find matches for in the collection.</p>\n@param faceId ID of a face to find matches for in the collection.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "faceId",
            "variableType" : "String",
            "documentation" : "<p>ID of a face to find matches for in the collection.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "FaceMatchThreshold" : {
          "c2jName" : "FaceMatchThreshold",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>Optional value specifying the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Optional value specifying the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>\n@param faceMatchThreshold Optional value specifying the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFaceMatchThreshold",
          "getterDocumentation" : "/**<p>Optional value specifying the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>\n@return Optional value specifying the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.*/",
          "getterMethodName" : "getFaceMatchThreshold",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "FaceMatchThreshold",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "FaceMatchThreshold",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Float",
          "marshallingType" : "FLOAT",
          "name" : "FaceMatchThreshold",
          "setterDocumentation" : "/**<p>Optional value specifying the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>\n@param faceMatchThreshold Optional value specifying the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.*/",
          "setterMethodName" : "setFaceMatchThreshold",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "faceMatchThreshold",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Optional value specifying the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>\n@param faceMatchThreshold Optional value specifying the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "faceMatchThreshold",
            "variableType" : "Float",
            "documentation" : "<p>Optional value specifying the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "MaxFaces" : {
          "c2jName" : "MaxFaces",
          "c2jShape" : "MaxFaces",
          "deprecated" : false,
          "documentation" : "<p>Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.</p>\n@param maxFaces Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxFaces",
          "getterDocumentation" : "/**<p>Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.</p>\n@return Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.*/",
          "getterMethodName" : "getMaxFaces",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "MaxFaces",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxFaces",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxFaces",
          "setterDocumentation" : "/**<p>Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.</p>\n@param maxFaces Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.*/",
          "setterMethodName" : "setMaxFaces",
          "setterModel" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxFaces",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.</p>\n@param maxFaces Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxFaces",
            "variableType" : "Integer",
            "documentation" : "<p>Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "CollectionId", "FaceId" ],
      "shapeName" : "SearchFacesRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "SearchFacesRequest",
        "variableName" : "searchFacesRequest",
        "variableType" : "SearchFacesRequest",
        "documentation" : null,
        "simpleType" : "SearchFacesRequest",
        "variableSetterType" : "SearchFacesRequest"
      },
      "wrapper" : false
    },
    "SearchFacesResult" : {
      "c2jName" : "SearchFacesResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "SearchedFaceId",
        "c2jShape" : "FaceId",
        "deprecated" : false,
        "documentation" : "<p>ID of the face that was searched for matches in a collection.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>ID of the face that was searched for matches in a collection.</p>\n@param searchedFaceId ID of the face that was searched for matches in a collection.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSearchedFaceId",
        "getterDocumentation" : "/**<p>ID of the face that was searched for matches in a collection.</p>\n@return ID of the face that was searched for matches in a collection.*/",
        "getterMethodName" : "getSearchedFaceId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "SearchedFaceId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SearchedFaceId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SearchedFaceId",
        "setterDocumentation" : "/**<p>ID of the face that was searched for matches in a collection.</p>\n@param searchedFaceId ID of the face that was searched for matches in a collection.*/",
        "setterMethodName" : "setSearchedFaceId",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "searchedFaceId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>ID of the face that was searched for matches in a collection.</p>\n@param searchedFaceId ID of the face that was searched for matches in a collection.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "searchedFaceId",
          "variableType" : "String",
          "documentation" : "<p>ID of the face that was searched for matches in a collection.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "FaceMatches",
        "c2jShape" : "FaceMatchList",
        "deprecated" : false,
        "documentation" : "<p>An array of faces that matched the input face, along with the confidence in the match.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An array of faces that matched the input face, along with the confidence in the match.</p>\n@param faceMatches An array of faces that matched the input face, along with the confidence in the match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFaceMatches",
        "getterDocumentation" : "/**<p>An array of faces that matched the input face, along with the confidence in the match.</p>\n@return An array of faces that matched the input face, along with the confidence in the match.*/",
        "getterMethodName" : "getFaceMatches",
        "getterModel" : {
          "returnType" : "java.util.List<FaceMatch>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "FaceMatches",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "FaceMatches",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "FaceMatch",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "FaceMatch",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "variableDeclarationType" : "FaceMatch",
              "variableName" : "member",
              "variableType" : "FaceMatch",
              "documentation" : "",
              "simpleType" : "FaceMatch",
              "variableSetterType" : "FaceMatch"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "FaceMatch",
              "variableName" : "member",
              "variableType" : "FaceMatch",
              "documentation" : "",
              "simpleType" : "FaceMatch",
              "variableSetterType" : "FaceMatch"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "FaceMatch",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "FaceMatch",
          "templateImplType" : "java.util.ArrayList<FaceMatch>",
          "templateType" : "java.util.List<FaceMatch>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "FaceMatches",
        "setterDocumentation" : "/**<p>An array of faces that matched the input face, along with the confidence in the match.</p>\n@param faceMatches An array of faces that matched the input face, along with the confidence in the match.*/",
        "setterMethodName" : "setFaceMatches",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<FaceMatch>",
          "variableName" : "faceMatches",
          "variableType" : "java.util.List<FaceMatch>",
          "documentation" : "",
          "simpleType" : "List<FaceMatch>",
          "variableSetterType" : "java.util.Collection<FaceMatch>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An array of faces that matched the input face, along with the confidence in the match.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFaceMatches(java.util.Collection)} or {@link #withFaceMatches(java.util.Collection)} if you want to override the existing values.</p>\n@param faceMatches An array of faces that matched the input face, along with the confidence in the match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<FaceMatch>",
          "variableName" : "faceMatches",
          "variableType" : "java.util.List<FaceMatch>",
          "documentation" : "<p>An array of faces that matched the input face, along with the confidence in the match.</p>",
          "simpleType" : "List<FaceMatch>",
          "variableSetterType" : "java.util.Collection<FaceMatch>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "FaceMatches" : {
          "c2jName" : "FaceMatches",
          "c2jShape" : "FaceMatchList",
          "deprecated" : false,
          "documentation" : "<p>An array of faces that matched the input face, along with the confidence in the match.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An array of faces that matched the input face, along with the confidence in the match.</p>\n@param faceMatches An array of faces that matched the input face, along with the confidence in the match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFaceMatches",
          "getterDocumentation" : "/**<p>An array of faces that matched the input face, along with the confidence in the match.</p>\n@return An array of faces that matched the input face, along with the confidence in the match.*/",
          "getterMethodName" : "getFaceMatches",
          "getterModel" : {
            "returnType" : "java.util.List<FaceMatch>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "FaceMatches",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "FaceMatches",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "FaceMatch",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "FaceMatch",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "variableDeclarationType" : "FaceMatch",
                "variableName" : "member",
                "variableType" : "FaceMatch",
                "documentation" : "",
                "simpleType" : "FaceMatch",
                "variableSetterType" : "FaceMatch"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "FaceMatch",
                "variableName" : "member",
                "variableType" : "FaceMatch",
                "documentation" : "",
                "simpleType" : "FaceMatch",
                "variableSetterType" : "FaceMatch"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "FaceMatch",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "FaceMatch",
            "templateImplType" : "java.util.ArrayList<FaceMatch>",
            "templateType" : "java.util.List<FaceMatch>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "FaceMatches",
          "setterDocumentation" : "/**<p>An array of faces that matched the input face, along with the confidence in the match.</p>\n@param faceMatches An array of faces that matched the input face, along with the confidence in the match.*/",
          "setterMethodName" : "setFaceMatches",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<FaceMatch>",
            "variableName" : "faceMatches",
            "variableType" : "java.util.List<FaceMatch>",
            "documentation" : "",
            "simpleType" : "List<FaceMatch>",
            "variableSetterType" : "java.util.Collection<FaceMatch>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An array of faces that matched the input face, along with the confidence in the match.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFaceMatches(java.util.Collection)} or {@link #withFaceMatches(java.util.Collection)} if you want to override the existing values.</p>\n@param faceMatches An array of faces that matched the input face, along with the confidence in the match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<FaceMatch>",
            "variableName" : "faceMatches",
            "variableType" : "java.util.List<FaceMatch>",
            "documentation" : "<p>An array of faces that matched the input face, along with the confidence in the match.</p>",
            "simpleType" : "List<FaceMatch>",
            "variableSetterType" : "java.util.Collection<FaceMatch>"
          },
          "xmlNameSpaceUri" : null
        },
        "SearchedFaceId" : {
          "c2jName" : "SearchedFaceId",
          "c2jShape" : "FaceId",
          "deprecated" : false,
          "documentation" : "<p>ID of the face that was searched for matches in a collection.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>ID of the face that was searched for matches in a collection.</p>\n@param searchedFaceId ID of the face that was searched for matches in a collection.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSearchedFaceId",
          "getterDocumentation" : "/**<p>ID of the face that was searched for matches in a collection.</p>\n@return ID of the face that was searched for matches in a collection.*/",
          "getterMethodName" : "getSearchedFaceId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "SearchedFaceId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SearchedFaceId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SearchedFaceId",
          "setterDocumentation" : "/**<p>ID of the face that was searched for matches in a collection.</p>\n@param searchedFaceId ID of the face that was searched for matches in a collection.*/",
          "setterMethodName" : "setSearchedFaceId",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "searchedFaceId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>ID of the face that was searched for matches in a collection.</p>\n@param searchedFaceId ID of the face that was searched for matches in a collection.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "searchedFaceId",
            "variableType" : "String",
            "documentation" : "<p>ID of the face that was searched for matches in a collection.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "SearchFacesResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "SearchFacesResult",
        "variableName" : "searchFacesResult",
        "variableType" : "SearchFacesResult",
        "documentation" : null,
        "simpleType" : "SearchFacesResult",
        "variableSetterType" : "SearchFacesResult"
      },
      "wrapper" : false
    },
    "Smile" : {
      "c2jName" : "Smile",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Indicates whether or not the face is smiling, and the confidence level in the determination.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Value",
        "c2jShape" : "Boolean",
        "deprecated" : false,
        "documentation" : "<p>Boolean value that indicates whether the face is smiling or not.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Boolean value that indicates whether the face is smiling or not.</p>\n@param value Boolean value that indicates whether the face is smiling or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withValue",
        "getterDocumentation" : "/**<p>Boolean value that indicates whether the face is smiling or not.</p>\n@return Boolean value that indicates whether the face is smiling or not.*/",
        "getterMethodName" : "getValue",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Value",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Value",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "Value",
        "setterDocumentation" : "/**<p>Boolean value that indicates whether the face is smiling or not.</p>\n@param value Boolean value that indicates whether the face is smiling or not.*/",
        "setterMethodName" : "setValue",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "value",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Boolean value that indicates whether the face is smiling or not.</p>\n@param value Boolean value that indicates whether the face is smiling or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "value",
          "variableType" : "Boolean",
          "documentation" : "<p>Boolean value that indicates whether the face is smiling or not.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Confidence",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>Level of confidence in the determination.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withConfidence",
        "getterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@return Level of confidence in the determination.*/",
        "getterMethodName" : "getConfidence",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Confidence",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Confidence",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Float",
        "marshallingType" : "FLOAT",
        "name" : "Confidence",
        "setterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.*/",
        "setterMethodName" : "setConfidence",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "<p>Level of confidence in the determination.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Confidence" : {
          "c2jName" : "Confidence",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>Level of confidence in the determination.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withConfidence",
          "getterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@return Level of confidence in the determination.*/",
          "getterMethodName" : "getConfidence",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Confidence",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Confidence",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Float",
          "marshallingType" : "FLOAT",
          "name" : "Confidence",
          "setterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.*/",
          "setterMethodName" : "setConfidence",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "<p>Level of confidence in the determination.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "Value" : {
          "c2jName" : "Value",
          "c2jShape" : "Boolean",
          "deprecated" : false,
          "documentation" : "<p>Boolean value that indicates whether the face is smiling or not.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Boolean value that indicates whether the face is smiling or not.</p>\n@param value Boolean value that indicates whether the face is smiling or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withValue",
          "getterDocumentation" : "/**<p>Boolean value that indicates whether the face is smiling or not.</p>\n@return Boolean value that indicates whether the face is smiling or not.*/",
          "getterMethodName" : "getValue",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Value",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Value",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "Value",
          "setterDocumentation" : "/**<p>Boolean value that indicates whether the face is smiling or not.</p>\n@param value Boolean value that indicates whether the face is smiling or not.*/",
          "setterMethodName" : "setValue",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "value",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Boolean value that indicates whether the face is smiling or not.</p>\n@param value Boolean value that indicates whether the face is smiling or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "value",
            "variableType" : "Boolean",
            "documentation" : "<p>Boolean value that indicates whether the face is smiling or not.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Smile",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "Smile",
        "variableName" : "smile",
        "variableType" : "Smile",
        "documentation" : null,
        "simpleType" : "Smile",
        "variableSetterType" : "Smile"
      },
      "wrapper" : false
    },
    "Sunglasses" : {
      "c2jName" : "Sunglasses",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Indicates whether or not the face is wearing sunglasses, and the confidence level in the determination.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Value",
        "c2jShape" : "Boolean",
        "deprecated" : false,
        "documentation" : "<p>Boolean value that indicates whether the face is wearing sunglasses or not.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Boolean value that indicates whether the face is wearing sunglasses or not.</p>\n@param value Boolean value that indicates whether the face is wearing sunglasses or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withValue",
        "getterDocumentation" : "/**<p>Boolean value that indicates whether the face is wearing sunglasses or not.</p>\n@return Boolean value that indicates whether the face is wearing sunglasses or not.*/",
        "getterMethodName" : "getValue",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Value",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Value",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "Value",
        "setterDocumentation" : "/**<p>Boolean value that indicates whether the face is wearing sunglasses or not.</p>\n@param value Boolean value that indicates whether the face is wearing sunglasses or not.*/",
        "setterMethodName" : "setValue",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "value",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Boolean value that indicates whether the face is wearing sunglasses or not.</p>\n@param value Boolean value that indicates whether the face is wearing sunglasses or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "value",
          "variableType" : "Boolean",
          "documentation" : "<p>Boolean value that indicates whether the face is wearing sunglasses or not.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Confidence",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>Level of confidence in the determination.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withConfidence",
        "getterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@return Level of confidence in the determination.*/",
        "getterMethodName" : "getConfidence",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Confidence",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Confidence",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Float",
        "marshallingType" : "FLOAT",
        "name" : "Confidence",
        "setterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.*/",
        "setterMethodName" : "setConfidence",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "<p>Level of confidence in the determination.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Confidence" : {
          "c2jName" : "Confidence",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>Level of confidence in the determination.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withConfidence",
          "getterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@return Level of confidence in the determination.*/",
          "getterMethodName" : "getConfidence",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Confidence",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Confidence",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Float",
          "marshallingType" : "FLOAT",
          "name" : "Confidence",
          "setterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.*/",
          "setterMethodName" : "setConfidence",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "<p>Level of confidence in the determination.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "Value" : {
          "c2jName" : "Value",
          "c2jShape" : "Boolean",
          "deprecated" : false,
          "documentation" : "<p>Boolean value that indicates whether the face is wearing sunglasses or not.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Boolean value that indicates whether the face is wearing sunglasses or not.</p>\n@param value Boolean value that indicates whether the face is wearing sunglasses or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withValue",
          "getterDocumentation" : "/**<p>Boolean value that indicates whether the face is wearing sunglasses or not.</p>\n@return Boolean value that indicates whether the face is wearing sunglasses or not.*/",
          "getterMethodName" : "getValue",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Value",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Value",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "Value",
          "setterDocumentation" : "/**<p>Boolean value that indicates whether the face is wearing sunglasses or not.</p>\n@param value Boolean value that indicates whether the face is wearing sunglasses or not.*/",
          "setterMethodName" : "setValue",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "value",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Boolean value that indicates whether the face is wearing sunglasses or not.</p>\n@param value Boolean value that indicates whether the face is wearing sunglasses or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "value",
            "variableType" : "Boolean",
            "documentation" : "<p>Boolean value that indicates whether the face is wearing sunglasses or not.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Sunglasses",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "Sunglasses",
        "variableName" : "sunglasses",
        "variableType" : "Sunglasses",
        "documentation" : null,
        "simpleType" : "Sunglasses",
        "variableSetterType" : "Sunglasses"
      },
      "wrapper" : false
    },
    "ThrottlingException" : {
      "c2jName" : "ThrottlingException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Amazon Rekognition is temporarily unable to process the request. Try your call again.</p>",
      "enums" : null,
      "errorCode" : "ThrottlingException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ThrottlingException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ThrottlingException",
        "variableName" : "throttlingException",
        "variableType" : "ThrottlingException",
        "documentation" : null,
        "simpleType" : "ThrottlingException",
        "variableSetterType" : "ThrottlingException"
      },
      "wrapper" : false
    }
  },
  "clientConfigFactory" : "ClientConfigurationFactory",
  "customAuthorizers" : { },
  "examples" : {
    "examples" : {
      "CompareFaces" : [ {
        "comments" : {
          "input" : { },
          "output" : { }
        },
        "description" : "This operation compares the largest face detected in the source image with each face detected in the target image.",
        "id" : "to-compare-two-images-1482181985581",
        "input" : {
          "SourceImage" : {
            "S3Object" : {
              "Bucket" : "mybucket",
              "Name" : "mysourceimage"
            }
          },
          "TargetImage" : {
            "S3Object" : {
              "Bucket" : "mybucket",
              "Name" : "mytargetimage"
            }
          },
          "SimilarityThreshold" : 90
        },
        "output" : {
          "SourceImageFace" : {
            "BoundingBox" : {
              "Width" : 0.25,
              "Height" : 0.33481481671333313,
              "Left" : 0.31888890266418457,
              "Top" : 0.4933333396911621
            },
            "Confidence" : 99.9991226196289
          },
          "FaceMatches" : [ {
            "Similarity" : 100,
            "Face" : {
              "BoundingBox" : {
                "Width" : 0.25,
                "Height" : 0.33481481671333313,
                "Left" : 0.31888890266418457,
                "Top" : 0.4933333396911621
              },
              "Confidence" : 99.9991226196289
            }
          } ]
        },
        "title" : "To compare two images"
      } ],
      "CreateCollection" : [ {
        "comments" : {
          "input" : { },
          "output" : { }
        },
        "description" : "This operation creates a Rekognition collection for storing image data.",
        "id" : "to-create-a-collection-1481833313674",
        "input" : {
          "CollectionId" : "myphotos"
        },
        "output" : {
          "StatusCode" : 200,
          "CollectionArn" : "aws:rekognition:us-west-2:123456789012:collection/myphotos"
        },
        "title" : "To create a collection"
      } ],
      "DeleteCollection" : [ {
        "comments" : {
          "input" : { },
          "output" : { }
        },
        "description" : "This operation deletes a Rekognition collection.",
        "id" : "to-delete-a-collection-1481838179973",
        "input" : {
          "CollectionId" : "myphotos"
        },
        "output" : {
          "StatusCode" : 200
        },
        "title" : "To delete a collection"
      } ],
      "DeleteFaces" : [ {
        "comments" : {
          "input" : { },
          "output" : { }
        },
        "description" : "This operation deletes one or more faces from a Rekognition collection.",
        "id" : "to-delete-a-face-1482182799377",
        "input" : {
          "CollectionId" : "myphotos",
          "FaceIds" : [ "ff43d742-0c13-5d16-a3e8-03d3f58e980b" ]
        },
        "output" : {
          "DeletedFaces" : [ "ff43d742-0c13-5d16-a3e8-03d3f58e980b" ]
        },
        "title" : "To delete a face"
      } ],
      "DetectFaces" : [ {
        "comments" : {
          "input" : { },
          "output" : { }
        },
        "description" : "This operation detects faces in an image stored in an AWS S3 bucket.",
        "id" : "to-detect-faces-in-an-image-1481841782793",
        "input" : {
          "Image" : {
            "S3Object" : {
              "Bucket" : "mybucket",
              "Name" : "myphoto"
            }
          }
        },
        "output" : {
          "FaceDetails" : [ {
            "BoundingBox" : {
              "Width" : 0.23999999463558197,
              "Height" : 0.18000000715255737,
              "Left" : 0.5555555820465088,
              "Top" : 0.33666667342185974
            },
            "Landmarks" : [ {
              "Type" : "eyeLeft",
              "X" : 0.6394737362861633,
              "Y" : 0.40819624066352844
            }, {
              "Type" : "eyeRight",
              "X" : 0.7266660928726196,
              "Y" : 0.41039225459098816
            }, {
              "Type" : "eyeRight",
              "X" : 0.6912462115287781,
              "Y" : 0.44240960478782654
            }, {
              "Type" : "mouthDown",
              "X" : 0.6306198239326477,
              "Y" : 0.46700039505958557
            }, {
              "Type" : "mouthUp",
              "X" : 0.7215608954429626,
              "Y" : 0.47114261984825134
            } ],
            "Pose" : {
              "Roll" : 0.9950747489929199,
              "Yaw" : 13.693790435791016,
              "Pitch" : 4.050806522369385
            },
            "Quality" : {
              "Brightness" : 37.60169982910156,
              "Sharpness" : 80
            },
            "Confidence" : 100
          } ],
          "OrientationCorrection" : "ROTATE_0"
        },
        "title" : "To detect faces in an image"
      } ],
      "DetectLabels" : [ {
        "comments" : {
          "input" : { },
          "output" : { }
        },
        "description" : "This operation detects labels in the supplied image",
        "id" : "to-detect-labels-1481834255770",
        "input" : {
          "Image" : {
            "S3Object" : {
              "Bucket" : "mybucket",
              "Name" : "myphoto"
            }
          },
          "MaxLabels" : 123,
          "MinConfidence" : 70
        },
        "output" : {
          "Labels" : [ {
            "Name" : "People",
            "Confidence" : 99.25072479248047
          }, {
            "Name" : "Person",
            "Confidence" : 99.25074005126953
          } ]
        },
        "title" : "To detect labels"
      } ],
      "IndexFaces" : [ {
        "comments" : {
          "input" : { },
          "output" : { }
        },
        "description" : "This operation detects faces in an image and adds them to the specified Rekognition collection.",
        "id" : "to-add-a-face-to-a-collection-1482179542923",
        "input" : {
          "CollectionId" : "myphotos",
          "Image" : {
            "S3Object" : {
              "Bucket" : "mybucket",
              "Name" : "myphoto"
            }
          },
          "ExternalImageId" : "myphotoid",
          "DetectionAttributes" : [ ]
        },
        "output" : {
          "FaceRecords" : [ {
            "Face" : {
              "FaceId" : "ff43d742-0c13-5d16-a3e8-03d3f58e980b",
              "BoundingBox" : {
                "Width" : 0.25,
                "Height" : 0.33481481671333313,
                "Left" : 0.31888890266418457,
                "Top" : 0.4933333396911621
              },
              "ImageId" : "465f4e93-763e-51d0-b030-b9667a2d94b1",
              "Confidence" : 99.9991226196289
            },
            "FaceDetail" : {
              "BoundingBox" : {
                "Width" : 0.25,
                "Height" : 0.33481481671333313,
                "Left" : 0.31888890266418457,
                "Top" : 0.4933333396911621
              },
              "Landmarks" : [ {
                "Type" : "eyeLeft",
                "X" : 0.3976764678955078,
                "Y" : 0.6248345971107483
              }, {
                "Type" : "eyeRight",
                "X" : 0.4810936450958252,
                "Y" : 0.6317117214202881
              }, {
                "Type" : "noseLeft",
                "X" : 0.41986238956451416,
                "Y" : 0.7111940383911133
              }, {
                "Type" : "mouthDown",
                "X" : 0.40525302290916443,
                "Y" : 0.7497701048851013
              }, {
                "Type" : "mouthUp",
                "X" : 0.4753248989582062,
                "Y" : 0.7558549642562866
              } ],
              "Pose" : {
                "Roll" : 4.707281112670898,
                "Yaw" : -24.438663482666016,
                "Pitch" : -9.713645935058594
              },
              "Quality" : {
                "Brightness" : 29.23358917236328,
                "Sharpness" : 80
              },
              "Confidence" : 99.9991226196289
            }
          }, {
            "Face" : {
              "FaceId" : "8be04dba-4e58-520d-850e-9eae4af70eb2",
              "BoundingBox" : {
                "Width" : 0.24444444477558136,
                "Height" : 0.32592591643333435,
                "Left" : 0.5144444704055786,
                "Top" : 0.15111111104488373
              },
              "ImageId" : "465f4e93-763e-51d0-b030-b9667a2d94b1",
              "Confidence" : 99.99950408935547
            },
            "FaceDetail" : {
              "BoundingBox" : {
                "Width" : 0.24444444477558136,
                "Height" : 0.32592591643333435,
                "Left" : 0.5144444704055786,
                "Top" : 0.15111111104488373
              },
              "Landmarks" : [ {
                "Type" : "eyeLeft",
                "X" : 0.6006892323493958,
                "Y" : 0.290842205286026
              }, {
                "Type" : "eyeRight",
                "X" : 0.6808141469955444,
                "Y" : 0.29609042406082153
              }, {
                "Type" : "noseLeft",
                "X" : 0.6395332217216492,
                "Y" : 0.3522595763206482
              }, {
                "Type" : "mouthDown",
                "X" : 0.5892083048820496,
                "Y" : 0.38689887523651123
              }, {
                "Type" : "mouthUp",
                "X" : 0.674560010433197,
                "Y" : 0.394125759601593
              } ],
              "Pose" : {
                "Roll" : 2.1029529571533203,
                "Yaw" : 6.716655254364014,
                "Pitch" : -4.683138370513916
              },
              "Quality" : {
                "Brightness" : 34.951698303222656,
                "Sharpness" : 160
              },
              "Confidence" : 99.99950408935547
            }
          } ],
          "OrientationCorrection" : "ROTATE_0"
        },
        "title" : "To add a face to a collection"
      } ],
      "ListCollections" : [ {
        "comments" : {
          "input" : { },
          "output" : { }
        },
        "description" : "This operation returns a list of Rekognition collections.",
        "id" : "to-list-the-collections-1482179199088",
        "input" : { },
        "output" : {
          "CollectionIds" : [ "myphotos" ]
        },
        "title" : "To list the collections"
      } ],
      "ListFaces" : [ {
        "comments" : {
          "input" : { },
          "output" : { }
        },
        "description" : "This operation lists the faces in a Rekognition collection.",
        "id" : "to-list-the-faces-in-a-collection-1482181416530",
        "input" : {
          "CollectionId" : "myphotos",
          "MaxResults" : 20
        },
        "output" : {
          "Faces" : [ {
            "FaceId" : "1c62e8b5-69a7-5b7d-b3cd-db4338a8a7e7",
            "BoundingBox" : {
              "Width" : 0.23999999463558197,
              "Height" : 0.18000000715255737,
              "Left" : 0.5555559992790222,
              "Top" : 0.336667001247406
            },
            "ImageId" : "147fdf82-7a71-52cf-819b-e786c7b9746e",
            "Confidence" : 100
          }, {
            "FaceId" : "29a75abe-397b-5101-ba4f-706783b2246c",
            "BoundingBox" : {
              "Width" : 0.22074100375175476,
              "Height" : 0.16555599868297577,
              "Left" : 0.30963000655174255,
              "Top" : 0.7066670060157776
            },
            "ImageId" : "147fdf82-7a71-52cf-819b-e786c7b9746e",
            "Confidence" : 100
          }, {
            "FaceId" : "38271d79-7bc2-5efb-b752-398a8d575b85",
            "BoundingBox" : {
              "Width" : 0.24222199618816376,
              "Height" : 0.3234420120716095,
              "Left" : 0.3233329951763153,
              "Top" : 0.5
            },
            "ImageId" : "d5631190-d039-54e4-b267-abd22c8647c5",
            "Confidence" : 99.99829864501953
          }, {
            "FaceId" : "3b01bef0-c883-5654-ba42-d5ad28b720b3",
            "BoundingBox" : {
              "Width" : 0.04747769981622696,
              "Height" : 0.03555560111999512,
              "Left" : 0.37388700246810913,
              "Top" : 0.2477779984474182
            },
            "ImageId" : "812d9f04-86f9-54fc-9275-8d0dcbcb6784",
            "Confidence" : 99.99210357666016
          }, {
            "FaceId" : "4839a608-49d0-566c-8301-509d71b534d1",
            "BoundingBox" : {
              "Width" : 0.07121659815311432,
              "Height" : 0.05333330109715462,
              "Left" : 0.2937690019607544,
              "Top" : 0.35666701197624207
            },
            "ImageId" : "812d9f04-86f9-54fc-9275-8d0dcbcb6784",
            "Confidence" : 99.99919891357422
          }, {
            "FaceId" : "70008e50-75e4-55d0-8e80-363fb73b3a14",
            "BoundingBox" : {
              "Width" : 0.24333299696445465,
              "Height" : 0.3249259889125824,
              "Left" : 0.5155559778213501,
              "Top" : 0.1513350009918213
            },
            "ImageId" : "d5631190-d039-54e4-b267-abd22c8647c5",
            "Confidence" : 99.99949645996094
          }, {
            "FaceId" : "7f5f88ed-d684-5a88-b0df-01e4a521552b",
            "BoundingBox" : {
              "Width" : 0.05044509842991829,
              "Height" : 0.03777780011296272,
              "Left" : 0.7002969980239868,
              "Top" : 0.18777799606323242
            },
            "ImageId" : "812d9f04-86f9-54fc-9275-8d0dcbcb6784",
            "Confidence" : 99.92639923095703
          }, {
            "FaceId" : "895b4e2c-81de-5902-a4bd-d1792bda00b2",
            "BoundingBox" : {
              "Width" : 0.07270029932260513,
              "Height" : 0.05555560067296028,
              "Left" : 0.13946600258350372,
              "Top" : 0.46333301067352295
            },
            "ImageId" : "812d9f04-86f9-54fc-9275-8d0dcbcb6784",
            "Confidence" : 99.99469757080078
          }, {
            "FaceId" : "8be04dba-4e58-520d-850e-9eae4af70eb2",
            "BoundingBox" : {
              "Width" : 0.24444399774074554,
              "Height" : 0.3259260058403015,
              "Left" : 0.5144439935684204,
              "Top" : 0.15111100673675537
            },
            "ImageId" : "465f4e93-763e-51d0-b030-b9667a2d94b1",
            "Confidence" : 99.99949645996094
          }, {
            "FaceId" : "908544ad-edc3-59df-8faf-6a87cc256cf5",
            "BoundingBox" : {
              "Width" : 0.25222599506378174,
              "Height" : 0.18888899683952332,
              "Left" : 0.3783380091190338,
              "Top" : 0.2355560064315796
            },
            "ImageId" : "3c731605-d772-541a-a5e7-0375dbc68a07",
            "Confidence" : 99.9999008178711
          }, {
            "FaceId" : "ff43d742-0c13-5d16-a3e8-03d3f58e980b",
            "BoundingBox" : {
              "Width" : 0.25,
              "Height" : 0.33481499552726746,
              "Left" : 0.31888899207115173,
              "Top" : 0.49333301186561584
            },
            "ImageId" : "465f4e93-763e-51d0-b030-b9667a2d94b1",
            "Confidence" : 99.99909973144531
          } ]
        },
        "title" : "To list the faces in a collection"
      } ],
      "SearchFaces" : [ {
        "comments" : {
          "input" : { },
          "output" : { }
        },
        "description" : "This operation searches for matching faces in the collection the supplied face belongs to.",
        "id" : "to-delete-a-face-1482182799377",
        "input" : {
          "CollectionId" : "myphotos",
          "FaceId" : "70008e50-75e4-55d0-8e80-363fb73b3a14",
          "MaxFaces" : 10,
          "FaceMatchThreshold" : 90
        },
        "output" : {
          "SearchedFaceId" : "70008e50-75e4-55d0-8e80-363fb73b3a14",
          "FaceMatches" : [ {
            "Similarity" : 99.97222137451172,
            "Face" : {
              "FaceId" : "8be04dba-4e58-520d-850e-9eae4af70eb2",
              "BoundingBox" : {
                "Width" : 0.24444399774074554,
                "Height" : 0.3259260058403015,
                "Left" : 0.5144439935684204,
                "Top" : 0.15111100673675537
              },
              "ImageId" : "465f4e93-763e-51d0-b030-b9667a2d94b1",
              "Confidence" : 99.99949645996094
            }
          }, {
            "Similarity" : 97.04154968261719,
            "Face" : {
              "FaceId" : "29a75abe-397b-5101-ba4f-706783b2246c",
              "BoundingBox" : {
                "Width" : 0.22074100375175476,
                "Height" : 0.16555599868297577,
                "Left" : 0.30963000655174255,
                "Top" : 0.7066670060157776
              },
              "ImageId" : "147fdf82-7a71-52cf-819b-e786c7b9746e",
              "Confidence" : 100
            }
          }, {
            "Similarity" : 95.94520568847656,
            "Face" : {
              "FaceId" : "908544ad-edc3-59df-8faf-6a87cc256cf5",
              "BoundingBox" : {
                "Width" : 0.25222599506378174,
                "Height" : 0.18888899683952332,
                "Left" : 0.3783380091190338,
                "Top" : 0.2355560064315796
              },
              "ImageId" : "3c731605-d772-541a-a5e7-0375dbc68a07",
              "Confidence" : 99.9999008178711
            }
          } ]
        },
        "title" : "To delete a face"
      } ],
      "SearchFacesByImage" : [ {
        "comments" : {
          "input" : { },
          "output" : { }
        },
        "description" : "This operation searches for faces in a Rekognition collection that match the largest face in an S3 bucket stored image.",
        "id" : "to-search-for-faces-matching-a-supplied-image-1482175994491",
        "input" : {
          "CollectionId" : "myphotos",
          "Image" : {
            "S3Object" : {
              "Bucket" : "mybucket",
              "Name" : "myphoto"
            }
          },
          "MaxFaces" : 5,
          "FaceMatchThreshold" : 95
        },
        "output" : {
          "SearchedFaceBoundingBox" : {
            "Width" : 0.25,
            "Height" : 0.33481481671333313,
            "Left" : 0.31888890266418457,
            "Top" : 0.4933333396911621
          },
          "SearchedFaceConfidence" : 99.9991226196289,
          "FaceMatches" : [ {
            "Similarity" : 99.97036743164062,
            "Face" : {
              "FaceId" : "38271d79-7bc2-5efb-b752-398a8d575b85",
              "BoundingBox" : {
                "Width" : 0.24222199618816376,
                "Height" : 0.3234420120716095,
                "Left" : 0.3233329951763153,
                "Top" : 0.5
              },
              "ImageId" : "d5631190-d039-54e4-b267-abd22c8647c5",
              "Confidence" : 99.99829864501953
            }
          } ]
        },
        "title" : "To search for faces matching a supplied image"
      } ]
    },
    "version" : "1.0"
  },
  "exceptionUnmarshallerImpl" : null,
  "fileHeader" : "/*\n * Copyright 2012-2017 Amazon.com, Inc. or its affiliates. All Rights\n * Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */",
  "hasWaiters" : false,
  "sdkBaseResponseFqcn" : "com.amazonaws.AmazonWebServiceResult<com.amazonaws.ResponseMetadata>",
  "sdkModeledExceptionBaseClassName" : "AmazonRekognitionException",
  "sdkModeledExceptionBaseFqcn" : "com.amazonaws.services.rekognition.model.AmazonRekognitionException",
  "serviceBaseExceptionFqcn" : "com.amazonaws.AmazonServiceException",
  "transformPackage" : "com.amazonaws.services.rekognition.model.transform"
}